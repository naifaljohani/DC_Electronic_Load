

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Feb 27 19:28:48 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1779
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	idataBANK2,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    30                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    31                           	psect	text1,local,class=CODE,merge=1,delta=2
    32                           	psect	text2,local,class=CODE,merge=1,delta=2
    33                           	psect	text3,local,class=CODE,merge=1,delta=2
    34                           	psect	text4,local,class=CODE,merge=1,delta=2
    35                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text6,local,class=CODE,merge=1,delta=2
    37                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text23,local,class=CODE,merge=1,delta=2
    54                           	psect	text24,local,class=CODE,merge=1,delta=2
    55                           	psect	text25,local,class=CODE,merge=1,delta=2
    56                           	psect	text26,local,class=CODE,merge=1,delta=2
    57                           	psect	text27,local,class=CODE,merge=1,delta=2
    58                           	psect	text28,local,class=CODE,merge=1,delta=2
    59                           	psect	text29,local,class=CODE,merge=1,delta=2
    60                           	psect	text30,local,class=CODE,merge=1,delta=2
    61                           	psect	text31,local,class=CODE,merge=1,delta=2
    62                           	psect	text32,local,class=CODE,merge=1,delta=2
    63                           	psect	text33,local,class=CODE,merge=1,delta=2
    64                           	psect	text34,local,class=CODE,merge=1,delta=2
    65                           	psect	text35,local,class=CODE,merge=1,delta=2
    66                           	psect	text36,local,class=CODE,merge=1,delta=2
    67                           	psect	text37,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	dabs	1,0x7E,2
    70  0000                     
    71                           ; Version 1.45
    72                           ; Generated 16/11/2017 GMT
    73                           ; 
    74                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F1779 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0110                     	;# 
   164  0111                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0115                     	;# 
   169  0116                     	;# 
   170  0117                     	;# 
   171  0118                     	;# 
   172  0119                     	;# 
   173  011A                     	;# 
   174  011B                     	;# 
   175  011C                     	;# 
   176  011D                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  018E                     	;# 
   180  018F                     	;# 
   181  0190                     	;# 
   182  0191                     	;# 
   183  0191                     	;# 
   184  0192                     	;# 
   185  0193                     	;# 
   186  0193                     	;# 
   187  0194                     	;# 
   188  0195                     	;# 
   189  0196                     	;# 
   190  0197                     	;# 
   191  0199                     	;# 
   192  0199                     	;# 
   193  0199                     	;# 
   194  019A                     	;# 
   195  019A                     	;# 
   196  019A                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  019C                     	;# 
   204  019C                     	;# 
   205  019D                     	;# 
   206  019D                     	;# 
   207  019D                     	;# 
   208  019E                     	;# 
   209  019E                     	;# 
   210  019E                     	;# 
   211  019F                     	;# 
   212  019F                     	;# 
   213  019F                     	;# 
   214  019F                     	;# 
   215  019F                     	;# 
   216  020C                     	;# 
   217  020D                     	;# 
   218  020E                     	;# 
   219  020F                     	;# 
   220  0210                     	;# 
   221  0211                     	;# 
   222  0211                     	;# 
   223  0212                     	;# 
   224  0212                     	;# 
   225  0213                     	;# 
   226  0213                     	;# 
   227  0214                     	;# 
   228  0214                     	;# 
   229  0215                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  021B                     	;# 
   238  021C                     	;# 
   239  021D                     	;# 
   240  021E                     	;# 
   241  021F                     	;# 
   242  028C                     	;# 
   243  028D                     	;# 
   244  028E                     	;# 
   245  028F                     	;# 
   246  0290                     	;# 
   247  0291                     	;# 
   248  0291                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0294                     	;# 
   252  0295                     	;# 
   253  0295                     	;# 
   254  0296                     	;# 
   255  0297                     	;# 
   256  0298                     	;# 
   257  0299                     	;# 
   258  0299                     	;# 
   259  029A                     	;# 
   260  029B                     	;# 
   261  029C                     	;# 
   262  029E                     	;# 
   263  029F                     	;# 
   264  030C                     	;# 
   265  030D                     	;# 
   266  030E                     	;# 
   267  030F                     	;# 
   268  0310                     	;# 
   269  0311                     	;# 
   270  0311                     	;# 
   271  0312                     	;# 
   272  0313                     	;# 
   273  0314                     	;# 
   274  0315                     	;# 
   275  0316                     	;# 
   276  0317                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031B                     	;# 
   280  031C                     	;# 
   281  031D                     	;# 
   282  031E                     	;# 
   283  031F                     	;# 
   284  038C                     	;# 
   285  038D                     	;# 
   286  038E                     	;# 
   287  038F                     	;# 
   288  0390                     	;# 
   289  0391                     	;# 
   290  0392                     	;# 
   291  0393                     	;# 
   292  0394                     	;# 
   293  0395                     	;# 
   294  0396                     	;# 
   295  0397                     	;# 
   296  0398                     	;# 
   297  0399                     	;# 
   298  039D                     	;# 
   299  039E                     	;# 
   300  039F                     	;# 
   301  040D                     	;# 
   302  040F                     	;# 
   303  040F                     	;# 
   304  0410                     	;# 
   305  0411                     	;# 
   306  0412                     	;# 
   307  0413                     	;# 
   308  0413                     	;# 
   309  0414                     	;# 
   310  0414                     	;# 
   311  0415                     	;# 
   312  0416                     	;# 
   313  0417                     	;# 
   314  0418                     	;# 
   315  041A                     	;# 
   316  041A                     	;# 
   317  041B                     	;# 
   318  041B                     	;# 
   319  041C                     	;# 
   320  041D                     	;# 
   321  041E                     	;# 
   322  041F                     	;# 
   323  048E                     	;# 
   324  048E                     	;# 
   325  048F                     	;# 
   326  0490                     	;# 
   327  0491                     	;# 
   328  0492                     	;# 
   329  0493                     	;# 
   330  0493                     	;# 
   331  0494                     	;# 
   332  0494                     	;# 
   333  0495                     	;# 
   334  0496                     	;# 
   335  0497                     	;# 
   336  0498                     	;# 
   337  049A                     	;# 
   338  049A                     	;# 
   339  049B                     	;# 
   340  049B                     	;# 
   341  049C                     	;# 
   342  049D                     	;# 
   343  049E                     	;# 
   344  049F                     	;# 
   345  050F                     	;# 
   346  0510                     	;# 
   347  0511                     	;# 
   348  0512                     	;# 
   349  0513                     	;# 
   350  0514                     	;# 
   351  0515                     	;# 
   352  0516                     	;# 
   353  0517                     	;# 
   354  0518                     	;# 
   355  0519                     	;# 
   356  051A                     	;# 
   357  051B                     	;# 
   358  051C                     	;# 
   359  051D                     	;# 
   360  051E                     	;# 
   361  058D                     	;# 
   362  058E                     	;# 
   363  058F                     	;# 
   364  058F                     	;# 
   365  058F                     	;# 
   366  0590                     	;# 
   367  0590                     	;# 
   368  0591                     	;# 
   369  0592                     	;# 
   370  0592                     	;# 
   371  0592                     	;# 
   372  0593                     	;# 
   373  0593                     	;# 
   374  0594                     	;# 
   375  0595                     	;# 
   376  0595                     	;# 
   377  0596                     	;# 
   378  0597                     	;# 
   379  0597                     	;# 
   380  0598                     	;# 
   381  0599                     	;# 
   382  0599                     	;# 
   383  0599                     	;# 
   384  059A                     	;# 
   385  059A                     	;# 
   386  059B                     	;# 
   387  059C                     	;# 
   388  059C                     	;# 
   389  059C                     	;# 
   390  059D                     	;# 
   391  059D                     	;# 
   392  059E                     	;# 
   393  059F                     	;# 
   394  059F                     	;# 
   395  060C                     	;# 
   396  060D                     	;# 
   397  060D                     	;# 
   398  060E                     	;# 
   399  060F                     	;# 
   400  0610                     	;# 
   401  0611                     	;# 
   402  0612                     	;# 
   403  0613                     	;# 
   404  0614                     	;# 
   405  0615                     	;# 
   406  0616                     	;# 
   407  0617                     	;# 
   408  0618                     	;# 
   409  0619                     	;# 
   410  061A                     	;# 
   411  061B                     	;# 
   412  061C                     	;# 
   413  061D                     	;# 
   414  061E                     	;# 
   415  061F                     	;# 
   416  068D                     	;# 
   417  068E                     	;# 
   418  068F                     	;# 
   419  0690                     	;# 
   420  0691                     	;# 
   421  0692                     	;# 
   422  0693                     	;# 
   423  0694                     	;# 
   424  0695                     	;# 
   425  0696                     	;# 
   426  0697                     	;# 
   427  0698                     	;# 
   428  0699                     	;# 
   429  069A                     	;# 
   430  069B                     	;# 
   431  069C                     	;# 
   432  069D                     	;# 
   433  069E                     	;# 
   434  069F                     	;# 
   435  070D                     	;# 
   436  070E                     	;# 
   437  070F                     	;# 
   438  0710                     	;# 
   439  0711                     	;# 
   440  0712                     	;# 
   441  0713                     	;# 
   442  0714                     	;# 
   443  0715                     	;# 
   444  0716                     	;# 
   445  0717                     	;# 
   446  0718                     	;# 
   447  0719                     	;# 
   448  071A                     	;# 
   449  071B                     	;# 
   450  071C                     	;# 
   451  071D                     	;# 
   452  071E                     	;# 
   453  071F                     	;# 
   454  078E                     	;# 
   455  078F                     	;# 
   456  0790                     	;# 
   457  0791                     	;# 
   458  0792                     	;# 
   459  0793                     	;# 
   460  0794                     	;# 
   461  0795                     	;# 
   462  0796                     	;# 
   463  0797                     	;# 
   464  0798                     	;# 
   465  0799                     	;# 
   466  079A                     	;# 
   467  079B                     	;# 
   468  079C                     	;# 
   469  079D                     	;# 
   470  079E                     	;# 
   471  079F                     	;# 
   472  080D                     	;# 
   473  080E                     	;# 
   474  080F                     	;# 
   475  0810                     	;# 
   476  0811                     	;# 
   477  0812                     	;# 
   478  0813                     	;# 
   479  0814                     	;# 
   480  0815                     	;# 
   481  0816                     	;# 
   482  0817                     	;# 
   483  0818                     	;# 
   484  0819                     	;# 
   485  081A                     	;# 
   486  081B                     	;# 
   487  081C                     	;# 
   488  081D                     	;# 
   489  081E                     	;# 
   490  081F                     	;# 
   491  088D                     	;# 
   492  088E                     	;# 
   493  088F                     	;# 
   494  0890                     	;# 
   495  0891                     	;# 
   496  0892                     	;# 
   497  0893                     	;# 
   498  0894                     	;# 
   499  0895                     	;# 
   500  0896                     	;# 
   501  0897                     	;# 
   502  0898                     	;# 
   503  0899                     	;# 
   504  089A                     	;# 
   505  089B                     	;# 
   506  089C                     	;# 
   507  089D                     	;# 
   508  089E                     	;# 
   509  089F                     	;# 
   510  090C                     	;# 
   511  090D                     	;# 
   512  090E                     	;# 
   513  090F                     	;# 
   514  0910                     	;# 
   515  0911                     	;# 
   516  0912                     	;# 
   517  0913                     	;# 
   518  0914                     	;# 
   519  0915                     	;# 
   520  0916                     	;# 
   521  0917                     	;# 
   522  0918                     	;# 
   523  0919                     	;# 
   524  091A                     	;# 
   525  091B                     	;# 
   526  091C                     	;# 
   527  091D                     	;# 
   528  091E                     	;# 
   529  091F                     	;# 
   530  0D1B                     	;# 
   531  0D1C                     	;# 
   532  0D1D                     	;# 
   533  0D1E                     	;# 
   534  0D1F                     	;# 
   535  0D8E                     	;# 
   536  0D8F                     	;# 
   537  0D90                     	;# 
   538  0D91                     	;# 
   539  0D91                     	;# 
   540  0D92                     	;# 
   541  0D93                     	;# 
   542  0D93                     	;# 
   543  0D94                     	;# 
   544  0D95                     	;# 
   545  0D95                     	;# 
   546  0D96                     	;# 
   547  0D97                     	;# 
   548  0D97                     	;# 
   549  0D98                     	;# 
   550  0D99                     	;# 
   551  0D99                     	;# 
   552  0D9A                     	;# 
   553  0D9B                     	;# 
   554  0D9C                     	;# 
   555  0D9C                     	;# 
   556  0D9D                     	;# 
   557  0D9D                     	;# 
   558  0D9E                     	;# 
   559  0D9F                     	;# 
   560  0DA0                     	;# 
   561  0DA1                     	;# 
   562  0DA1                     	;# 
   563  0DA2                     	;# 
   564  0DA3                     	;# 
   565  0DA3                     	;# 
   566  0DA4                     	;# 
   567  0DA5                     	;# 
   568  0DA5                     	;# 
   569  0DA6                     	;# 
   570  0DA7                     	;# 
   571  0DA7                     	;# 
   572  0DA8                     	;# 
   573  0DA9                     	;# 
   574  0DA9                     	;# 
   575  0DAA                     	;# 
   576  0DAB                     	;# 
   577  0DAC                     	;# 
   578  0DAC                     	;# 
   579  0DAD                     	;# 
   580  0DAD                     	;# 
   581  0DAE                     	;# 
   582  0DAF                     	;# 
   583  0DB0                     	;# 
   584  0DB1                     	;# 
   585  0DB1                     	;# 
   586  0DB2                     	;# 
   587  0DB3                     	;# 
   588  0DB3                     	;# 
   589  0DB4                     	;# 
   590  0DB5                     	;# 
   591  0DB5                     	;# 
   592  0DB6                     	;# 
   593  0DB7                     	;# 
   594  0DB7                     	;# 
   595  0DB8                     	;# 
   596  0DB9                     	;# 
   597  0DB9                     	;# 
   598  0DBA                     	;# 
   599  0DBB                     	;# 
   600  0DBC                     	;# 
   601  0DBC                     	;# 
   602  0DBD                     	;# 
   603  0DBD                     	;# 
   604  0DBE                     	;# 
   605  0DBF                     	;# 
   606  0DC0                     	;# 
   607  0DC1                     	;# 
   608  0DC1                     	;# 
   609  0DC2                     	;# 
   610  0DC3                     	;# 
   611  0DC3                     	;# 
   612  0DC4                     	;# 
   613  0DC5                     	;# 
   614  0DC5                     	;# 
   615  0DC6                     	;# 
   616  0DC7                     	;# 
   617  0DC7                     	;# 
   618  0DC8                     	;# 
   619  0DC9                     	;# 
   620  0DC9                     	;# 
   621  0DCA                     	;# 
   622  0DCB                     	;# 
   623  0DCC                     	;# 
   624  0DCC                     	;# 
   625  0DCD                     	;# 
   626  0DCD                     	;# 
   627  0DCE                     	;# 
   628  0DCF                     	;# 
   629  0DD0                     	;# 
   630  0E0C                     	;# 
   631  0E0D                     	;# 
   632  0E0E                     	;# 
   633  0E0F                     	;# 
   634  0E10                     	;# 
   635  0E11                     	;# 
   636  0E12                     	;# 
   637  0E13                     	;# 
   638  0E14                     	;# 
   639  0E15                     	;# 
   640  0E15                     	;# 
   641  0E15                     	;# 
   642  0E16                     	;# 
   643  0E16                     	;# 
   644  0E16                     	;# 
   645  0E17                     	;# 
   646  0E17                     	;# 
   647  0E17                     	;# 
   648  0E18                     	;# 
   649  0E18                     	;# 
   650  0E18                     	;# 
   651  0E19                     	;# 
   652  0E1A                     	;# 
   653  0E1B                     	;# 
   654  0E1C                     	;# 
   655  0E1D                     	;# 
   656  0E1E                     	;# 
   657  0E1F                     	;# 
   658  0E20                     	;# 
   659  0E21                     	;# 
   660  0E22                     	;# 
   661  0E23                     	;# 
   662  0E24                     	;# 
   663  0E25                     	;# 
   664  0E26                     	;# 
   665  0E27                     	;# 
   666  0E28                     	;# 
   667  0E29                     	;# 
   668  0E2A                     	;# 
   669  0E2B                     	;# 
   670  0E2C                     	;# 
   671  0E2D                     	;# 
   672  0E2E                     	;# 
   673  0E2F                     	;# 
   674  0E30                     	;# 
   675  0E31                     	;# 
   676  0E32                     	;# 
   677  0E33                     	;# 
   678  0E34                     	;# 
   679  0E35                     	;# 
   680  0E36                     	;# 
   681  0E37                     	;# 
   682  0E38                     	;# 
   683  0E39                     	;# 
   684  0E3A                     	;# 
   685  0E3B                     	;# 
   686  0E3C                     	;# 
   687  0E3D                     	;# 
   688  0E3E                     	;# 
   689  0E90                     	;# 
   690  0E91                     	;# 
   691  0E92                     	;# 
   692  0E93                     	;# 
   693  0E94                     	;# 
   694  0E95                     	;# 
   695  0E96                     	;# 
   696  0E97                     	;# 
   697  0E98                     	;# 
   698  0E99                     	;# 
   699  0E9A                     	;# 
   700  0E9B                     	;# 
   701  0E9C                     	;# 
   702  0E9D                     	;# 
   703  0E9E                     	;# 
   704  0E9F                     	;# 
   705  0EA0                     	;# 
   706  0EA1                     	;# 
   707  0EA2                     	;# 
   708  0EA3                     	;# 
   709  0EA4                     	;# 
   710  0EA5                     	;# 
   711  0EA6                     	;# 
   712  0EA7                     	;# 
   713  0EA8                     	;# 
   714  0EA9                     	;# 
   715  0EAA                     	;# 
   716  0EAB                     	;# 
   717  0EAC                     	;# 
   718  0EAD                     	;# 
   719  0EAE                     	;# 
   720  0EAF                     	;# 
   721  0EB0                     	;# 
   722  0EB1                     	;# 
   723  0EB2                     	;# 
   724  0F0F                     	;# 
   725  0F10                     	;# 
   726  0F11                     	;# 
   727  0F12                     	;# 
   728  0F13                     	;# 
   729  0F14                     	;# 
   730  0F15                     	;# 
   731  0F16                     	;# 
   732  0F17                     	;# 
   733  0F18                     	;# 
   734  0F19                     	;# 
   735  0F1A                     	;# 
   736  0F1B                     	;# 
   737  0F1C                     	;# 
   738  0F1D                     	;# 
   739  0F1E                     	;# 
   740  0F1F                     	;# 
   741  0F20                     	;# 
   742  0F21                     	;# 
   743  0F22                     	;# 
   744  0F23                     	;# 
   745  0F24                     	;# 
   746  0F25                     	;# 
   747  0F26                     	;# 
   748  0F27                     	;# 
   749  0F28                     	;# 
   750  0F29                     	;# 
   751  0F2A                     	;# 
   752  0F2B                     	;# 
   753  0F2C                     	;# 
   754  0F2D                     	;# 
   755  0F2E                     	;# 
   756  0F2F                     	;# 
   757  0F30                     	;# 
   758  0F31                     	;# 
   759  0F32                     	;# 
   760  0F33                     	;# 
   761  0F34                     	;# 
   762  0F35                     	;# 
   763  0F36                     	;# 
   764  0F37                     	;# 
   765  0FE4                     	;# 
   766  0FE5                     	;# 
   767  0FE6                     	;# 
   768  0FE7                     	;# 
   769  0FE8                     	;# 
   770  0FE9                     	;# 
   771  0FEA                     	;# 
   772  0FEB                     	;# 
   773  0FED                     	;# 
   774  0FEE                     	;# 
   775  0FEF                     	;# 
   776  0000                     	;# 
   777  0001                     	;# 
   778  0002                     	;# 
   779  0003                     	;# 
   780  0004                     	;# 
   781  0005                     	;# 
   782  0006                     	;# 
   783  0007                     	;# 
   784  0008                     	;# 
   785  0009                     	;# 
   786  000A                     	;# 
   787  000B                     	;# 
   788  000C                     	;# 
   789  000D                     	;# 
   790  000E                     	;# 
   791  000F                     	;# 
   792  0010                     	;# 
   793  0011                     	;# 
   794  0012                     	;# 
   795  0013                     	;# 
   796  0014                     	;# 
   797  0015                     	;# 
   798  0016                     	;# 
   799  0017                     	;# 
   800  0018                     	;# 
   801  0018                     	;# 
   802  0019                     	;# 
   803  001A                     	;# 
   804  001B                     	;# 
   805  001C                     	;# 
   806  001C                     	;# 
   807  001D                     	;# 
   808  001E                     	;# 
   809  001F                     	;# 
   810  008C                     	;# 
   811  008D                     	;# 
   812  008E                     	;# 
   813  008F                     	;# 
   814  0090                     	;# 
   815  0091                     	;# 
   816  0092                     	;# 
   817  0093                     	;# 
   818  0094                     	;# 
   819  0095                     	;# 
   820  0096                     	;# 
   821  0097                     	;# 
   822  0098                     	;# 
   823  0099                     	;# 
   824  009A                     	;# 
   825  009B                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009E                     	;# 
   829  009F                     	;# 
   830  010C                     	;# 
   831  010D                     	;# 
   832  010E                     	;# 
   833  010F                     	;# 
   834  0110                     	;# 
   835  0111                     	;# 
   836  0112                     	;# 
   837  0113                     	;# 
   838  0114                     	;# 
   839  0115                     	;# 
   840  0116                     	;# 
   841  0117                     	;# 
   842  0118                     	;# 
   843  0119                     	;# 
   844  011A                     	;# 
   845  011B                     	;# 
   846  011C                     	;# 
   847  011D                     	;# 
   848  018C                     	;# 
   849  018D                     	;# 
   850  018E                     	;# 
   851  018F                     	;# 
   852  0190                     	;# 
   853  0191                     	;# 
   854  0191                     	;# 
   855  0192                     	;# 
   856  0193                     	;# 
   857  0193                     	;# 
   858  0194                     	;# 
   859  0195                     	;# 
   860  0196                     	;# 
   861  0197                     	;# 
   862  0199                     	;# 
   863  0199                     	;# 
   864  0199                     	;# 
   865  019A                     	;# 
   866  019A                     	;# 
   867  019A                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019C                     	;# 
   874  019C                     	;# 
   875  019C                     	;# 
   876  019D                     	;# 
   877  019D                     	;# 
   878  019D                     	;# 
   879  019E                     	;# 
   880  019E                     	;# 
   881  019E                     	;# 
   882  019F                     	;# 
   883  019F                     	;# 
   884  019F                     	;# 
   885  019F                     	;# 
   886  019F                     	;# 
   887  020C                     	;# 
   888  020D                     	;# 
   889  020E                     	;# 
   890  020F                     	;# 
   891  0210                     	;# 
   892  0211                     	;# 
   893  0211                     	;# 
   894  0212                     	;# 
   895  0212                     	;# 
   896  0213                     	;# 
   897  0213                     	;# 
   898  0214                     	;# 
   899  0214                     	;# 
   900  0215                     	;# 
   901  0215                     	;# 
   902  0215                     	;# 
   903  0215                     	;# 
   904  0216                     	;# 
   905  0216                     	;# 
   906  0217                     	;# 
   907  0217                     	;# 
   908  021B                     	;# 
   909  021C                     	;# 
   910  021D                     	;# 
   911  021E                     	;# 
   912  021F                     	;# 
   913  028C                     	;# 
   914  028D                     	;# 
   915  028E                     	;# 
   916  028F                     	;# 
   917  0290                     	;# 
   918  0291                     	;# 
   919  0291                     	;# 
   920  0292                     	;# 
   921  0293                     	;# 
   922  0294                     	;# 
   923  0295                     	;# 
   924  0295                     	;# 
   925  0296                     	;# 
   926  0297                     	;# 
   927  0298                     	;# 
   928  0299                     	;# 
   929  0299                     	;# 
   930  029A                     	;# 
   931  029B                     	;# 
   932  029C                     	;# 
   933  029E                     	;# 
   934  029F                     	;# 
   935  030C                     	;# 
   936  030D                     	;# 
   937  030E                     	;# 
   938  030F                     	;# 
   939  0310                     	;# 
   940  0311                     	;# 
   941  0311                     	;# 
   942  0312                     	;# 
   943  0313                     	;# 
   944  0314                     	;# 
   945  0315                     	;# 
   946  0316                     	;# 
   947  0317                     	;# 
   948  0318                     	;# 
   949  0319                     	;# 
   950  031B                     	;# 
   951  031C                     	;# 
   952  031D                     	;# 
   953  031E                     	;# 
   954  031F                     	;# 
   955  038C                     	;# 
   956  038D                     	;# 
   957  038E                     	;# 
   958  038F                     	;# 
   959  0390                     	;# 
   960  0391                     	;# 
   961  0392                     	;# 
   962  0393                     	;# 
   963  0394                     	;# 
   964  0395                     	;# 
   965  0396                     	;# 
   966  0397                     	;# 
   967  0398                     	;# 
   968  0399                     	;# 
   969  039D                     	;# 
   970  039E                     	;# 
   971  039F                     	;# 
   972  040D                     	;# 
   973  040F                     	;# 
   974  040F                     	;# 
   975  0410                     	;# 
   976  0411                     	;# 
   977  0412                     	;# 
   978  0413                     	;# 
   979  0413                     	;# 
   980  0414                     	;# 
   981  0414                     	;# 
   982  0415                     	;# 
   983  0416                     	;# 
   984  0417                     	;# 
   985  0418                     	;# 
   986  041A                     	;# 
   987  041A                     	;# 
   988  041B                     	;# 
   989  041B                     	;# 
   990  041C                     	;# 
   991  041D                     	;# 
   992  041E                     	;# 
   993  041F                     	;# 
   994  048E                     	;# 
   995  048E                     	;# 
   996  048F                     	;# 
   997  0490                     	;# 
   998  0491                     	;# 
   999  0492                     	;# 
  1000  0493                     	;# 
  1001  0493                     	;# 
  1002  0494                     	;# 
  1003  0494                     	;# 
  1004  0495                     	;# 
  1005  0496                     	;# 
  1006  0497                     	;# 
  1007  0498                     	;# 
  1008  049A                     	;# 
  1009  049A                     	;# 
  1010  049B                     	;# 
  1011  049B                     	;# 
  1012  049C                     	;# 
  1013  049D                     	;# 
  1014  049E                     	;# 
  1015  049F                     	;# 
  1016  050F                     	;# 
  1017  0510                     	;# 
  1018  0511                     	;# 
  1019  0512                     	;# 
  1020  0513                     	;# 
  1021  0514                     	;# 
  1022  0515                     	;# 
  1023  0516                     	;# 
  1024  0517                     	;# 
  1025  0518                     	;# 
  1026  0519                     	;# 
  1027  051A                     	;# 
  1028  051B                     	;# 
  1029  051C                     	;# 
  1030  051D                     	;# 
  1031  051E                     	;# 
  1032  058D                     	;# 
  1033  058E                     	;# 
  1034  058F                     	;# 
  1035  058F                     	;# 
  1036  058F                     	;# 
  1037  0590                     	;# 
  1038  0590                     	;# 
  1039  0591                     	;# 
  1040  0592                     	;# 
  1041  0592                     	;# 
  1042  0592                     	;# 
  1043  0593                     	;# 
  1044  0593                     	;# 
  1045  0594                     	;# 
  1046  0595                     	;# 
  1047  0595                     	;# 
  1048  0596                     	;# 
  1049  0597                     	;# 
  1050  0597                     	;# 
  1051  0598                     	;# 
  1052  0599                     	;# 
  1053  0599                     	;# 
  1054  0599                     	;# 
  1055  059A                     	;# 
  1056  059A                     	;# 
  1057  059B                     	;# 
  1058  059C                     	;# 
  1059  059C                     	;# 
  1060  059C                     	;# 
  1061  059D                     	;# 
  1062  059D                     	;# 
  1063  059E                     	;# 
  1064  059F                     	;# 
  1065  059F                     	;# 
  1066  060C                     	;# 
  1067  060D                     	;# 
  1068  060D                     	;# 
  1069  060E                     	;# 
  1070  060F                     	;# 
  1071  0610                     	;# 
  1072  0611                     	;# 
  1073  0612                     	;# 
  1074  0613                     	;# 
  1075  0614                     	;# 
  1076  0615                     	;# 
  1077  0616                     	;# 
  1078  0617                     	;# 
  1079  0618                     	;# 
  1080  0619                     	;# 
  1081  061A                     	;# 
  1082  061B                     	;# 
  1083  061C                     	;# 
  1084  061D                     	;# 
  1085  061E                     	;# 
  1086  061F                     	;# 
  1087  068D                     	;# 
  1088  068E                     	;# 
  1089  068F                     	;# 
  1090  0690                     	;# 
  1091  0691                     	;# 
  1092  0692                     	;# 
  1093  0693                     	;# 
  1094  0694                     	;# 
  1095  0695                     	;# 
  1096  0696                     	;# 
  1097  0697                     	;# 
  1098  0698                     	;# 
  1099  0699                     	;# 
  1100  069A                     	;# 
  1101  069B                     	;# 
  1102  069C                     	;# 
  1103  069D                     	;# 
  1104  069E                     	;# 
  1105  069F                     	;# 
  1106  070D                     	;# 
  1107  070E                     	;# 
  1108  070F                     	;# 
  1109  0710                     	;# 
  1110  0711                     	;# 
  1111  0712                     	;# 
  1112  0713                     	;# 
  1113  0714                     	;# 
  1114  0715                     	;# 
  1115  0716                     	;# 
  1116  0717                     	;# 
  1117  0718                     	;# 
  1118  0719                     	;# 
  1119  071A                     	;# 
  1120  071B                     	;# 
  1121  071C                     	;# 
  1122  071D                     	;# 
  1123  071E                     	;# 
  1124  071F                     	;# 
  1125  078E                     	;# 
  1126  078F                     	;# 
  1127  0790                     	;# 
  1128  0791                     	;# 
  1129  0792                     	;# 
  1130  0793                     	;# 
  1131  0794                     	;# 
  1132  0795                     	;# 
  1133  0796                     	;# 
  1134  0797                     	;# 
  1135  0798                     	;# 
  1136  0799                     	;# 
  1137  079A                     	;# 
  1138  079B                     	;# 
  1139  079C                     	;# 
  1140  079D                     	;# 
  1141  079E                     	;# 
  1142  079F                     	;# 
  1143  080D                     	;# 
  1144  080E                     	;# 
  1145  080F                     	;# 
  1146  0810                     	;# 
  1147  0811                     	;# 
  1148  0812                     	;# 
  1149  0813                     	;# 
  1150  0814                     	;# 
  1151  0815                     	;# 
  1152  0816                     	;# 
  1153  0817                     	;# 
  1154  0818                     	;# 
  1155  0819                     	;# 
  1156  081A                     	;# 
  1157  081B                     	;# 
  1158  081C                     	;# 
  1159  081D                     	;# 
  1160  081E                     	;# 
  1161  081F                     	;# 
  1162  088D                     	;# 
  1163  088E                     	;# 
  1164  088F                     	;# 
  1165  0890                     	;# 
  1166  0891                     	;# 
  1167  0892                     	;# 
  1168  0893                     	;# 
  1169  0894                     	;# 
  1170  0895                     	;# 
  1171  0896                     	;# 
  1172  0897                     	;# 
  1173  0898                     	;# 
  1174  0899                     	;# 
  1175  089A                     	;# 
  1176  089B                     	;# 
  1177  089C                     	;# 
  1178  089D                     	;# 
  1179  089E                     	;# 
  1180  089F                     	;# 
  1181  090C                     	;# 
  1182  090D                     	;# 
  1183  090E                     	;# 
  1184  090F                     	;# 
  1185  0910                     	;# 
  1186  0911                     	;# 
  1187  0912                     	;# 
  1188  0913                     	;# 
  1189  0914                     	;# 
  1190  0915                     	;# 
  1191  0916                     	;# 
  1192  0917                     	;# 
  1193  0918                     	;# 
  1194  0919                     	;# 
  1195  091A                     	;# 
  1196  091B                     	;# 
  1197  091C                     	;# 
  1198  091D                     	;# 
  1199  091E                     	;# 
  1200  091F                     	;# 
  1201  0D1B                     	;# 
  1202  0D1C                     	;# 
  1203  0D1D                     	;# 
  1204  0D1E                     	;# 
  1205  0D1F                     	;# 
  1206  0D8E                     	;# 
  1207  0D8F                     	;# 
  1208  0D90                     	;# 
  1209  0D91                     	;# 
  1210  0D91                     	;# 
  1211  0D92                     	;# 
  1212  0D93                     	;# 
  1213  0D93                     	;# 
  1214  0D94                     	;# 
  1215  0D95                     	;# 
  1216  0D95                     	;# 
  1217  0D96                     	;# 
  1218  0D97                     	;# 
  1219  0D97                     	;# 
  1220  0D98                     	;# 
  1221  0D99                     	;# 
  1222  0D99                     	;# 
  1223  0D9A                     	;# 
  1224  0D9B                     	;# 
  1225  0D9C                     	;# 
  1226  0D9C                     	;# 
  1227  0D9D                     	;# 
  1228  0D9D                     	;# 
  1229  0D9E                     	;# 
  1230  0D9F                     	;# 
  1231  0DA0                     	;# 
  1232  0DA1                     	;# 
  1233  0DA1                     	;# 
  1234  0DA2                     	;# 
  1235  0DA3                     	;# 
  1236  0DA3                     	;# 
  1237  0DA4                     	;# 
  1238  0DA5                     	;# 
  1239  0DA5                     	;# 
  1240  0DA6                     	;# 
  1241  0DA7                     	;# 
  1242  0DA7                     	;# 
  1243  0DA8                     	;# 
  1244  0DA9                     	;# 
  1245  0DA9                     	;# 
  1246  0DAA                     	;# 
  1247  0DAB                     	;# 
  1248  0DAC                     	;# 
  1249  0DAC                     	;# 
  1250  0DAD                     	;# 
  1251  0DAD                     	;# 
  1252  0DAE                     	;# 
  1253  0DAF                     	;# 
  1254  0DB0                     	;# 
  1255  0DB1                     	;# 
  1256  0DB1                     	;# 
  1257  0DB2                     	;# 
  1258  0DB3                     	;# 
  1259  0DB3                     	;# 
  1260  0DB4                     	;# 
  1261  0DB5                     	;# 
  1262  0DB5                     	;# 
  1263  0DB6                     	;# 
  1264  0DB7                     	;# 
  1265  0DB7                     	;# 
  1266  0DB8                     	;# 
  1267  0DB9                     	;# 
  1268  0DB9                     	;# 
  1269  0DBA                     	;# 
  1270  0DBB                     	;# 
  1271  0DBC                     	;# 
  1272  0DBC                     	;# 
  1273  0DBD                     	;# 
  1274  0DBD                     	;# 
  1275  0DBE                     	;# 
  1276  0DBF                     	;# 
  1277  0DC0                     	;# 
  1278  0DC1                     	;# 
  1279  0DC1                     	;# 
  1280  0DC2                     	;# 
  1281  0DC3                     	;# 
  1282  0DC3                     	;# 
  1283  0DC4                     	;# 
  1284  0DC5                     	;# 
  1285  0DC5                     	;# 
  1286  0DC6                     	;# 
  1287  0DC7                     	;# 
  1288  0DC7                     	;# 
  1289  0DC8                     	;# 
  1290  0DC9                     	;# 
  1291  0DC9                     	;# 
  1292  0DCA                     	;# 
  1293  0DCB                     	;# 
  1294  0DCC                     	;# 
  1295  0DCC                     	;# 
  1296  0DCD                     	;# 
  1297  0DCD                     	;# 
  1298  0DCE                     	;# 
  1299  0DCF                     	;# 
  1300  0DD0                     	;# 
  1301  0E0C                     	;# 
  1302  0E0D                     	;# 
  1303  0E0E                     	;# 
  1304  0E0F                     	;# 
  1305  0E10                     	;# 
  1306  0E11                     	;# 
  1307  0E12                     	;# 
  1308  0E13                     	;# 
  1309  0E14                     	;# 
  1310  0E15                     	;# 
  1311  0E15                     	;# 
  1312  0E15                     	;# 
  1313  0E16                     	;# 
  1314  0E16                     	;# 
  1315  0E16                     	;# 
  1316  0E17                     	;# 
  1317  0E17                     	;# 
  1318  0E17                     	;# 
  1319  0E18                     	;# 
  1320  0E18                     	;# 
  1321  0E18                     	;# 
  1322  0E19                     	;# 
  1323  0E1A                     	;# 
  1324  0E1B                     	;# 
  1325  0E1C                     	;# 
  1326  0E1D                     	;# 
  1327  0E1E                     	;# 
  1328  0E1F                     	;# 
  1329  0E20                     	;# 
  1330  0E21                     	;# 
  1331  0E22                     	;# 
  1332  0E23                     	;# 
  1333  0E24                     	;# 
  1334  0E25                     	;# 
  1335  0E26                     	;# 
  1336  0E27                     	;# 
  1337  0E28                     	;# 
  1338  0E29                     	;# 
  1339  0E2A                     	;# 
  1340  0E2B                     	;# 
  1341  0E2C                     	;# 
  1342  0E2D                     	;# 
  1343  0E2E                     	;# 
  1344  0E2F                     	;# 
  1345  0E30                     	;# 
  1346  0E31                     	;# 
  1347  0E32                     	;# 
  1348  0E33                     	;# 
  1349  0E34                     	;# 
  1350  0E35                     	;# 
  1351  0E36                     	;# 
  1352  0E37                     	;# 
  1353  0E38                     	;# 
  1354  0E39                     	;# 
  1355  0E3A                     	;# 
  1356  0E3B                     	;# 
  1357  0E3C                     	;# 
  1358  0E3D                     	;# 
  1359  0E3E                     	;# 
  1360  0E90                     	;# 
  1361  0E91                     	;# 
  1362  0E92                     	;# 
  1363  0E93                     	;# 
  1364  0E94                     	;# 
  1365  0E95                     	;# 
  1366  0E96                     	;# 
  1367  0E97                     	;# 
  1368  0E98                     	;# 
  1369  0E99                     	;# 
  1370  0E9A                     	;# 
  1371  0E9B                     	;# 
  1372  0E9C                     	;# 
  1373  0E9D                     	;# 
  1374  0E9E                     	;# 
  1375  0E9F                     	;# 
  1376  0EA0                     	;# 
  1377  0EA1                     	;# 
  1378  0EA2                     	;# 
  1379  0EA3                     	;# 
  1380  0EA4                     	;# 
  1381  0EA5                     	;# 
  1382  0EA6                     	;# 
  1383  0EA7                     	;# 
  1384  0EA8                     	;# 
  1385  0EA9                     	;# 
  1386  0EAA                     	;# 
  1387  0EAB                     	;# 
  1388  0EAC                     	;# 
  1389  0EAD                     	;# 
  1390  0EAE                     	;# 
  1391  0EAF                     	;# 
  1392  0EB0                     	;# 
  1393  0EB1                     	;# 
  1394  0EB2                     	;# 
  1395  0F0F                     	;# 
  1396  0F10                     	;# 
  1397  0F11                     	;# 
  1398  0F12                     	;# 
  1399  0F13                     	;# 
  1400  0F14                     	;# 
  1401  0F15                     	;# 
  1402  0F16                     	;# 
  1403  0F17                     	;# 
  1404  0F18                     	;# 
  1405  0F19                     	;# 
  1406  0F1A                     	;# 
  1407  0F1B                     	;# 
  1408  0F1C                     	;# 
  1409  0F1D                     	;# 
  1410  0F1E                     	;# 
  1411  0F1F                     	;# 
  1412  0F20                     	;# 
  1413  0F21                     	;# 
  1414  0F22                     	;# 
  1415  0F23                     	;# 
  1416  0F24                     	;# 
  1417  0F25                     	;# 
  1418  0F26                     	;# 
  1419  0F27                     	;# 
  1420  0F28                     	;# 
  1421  0F29                     	;# 
  1422  0F2A                     	;# 
  1423  0F2B                     	;# 
  1424  0F2C                     	;# 
  1425  0F2D                     	;# 
  1426  0F2E                     	;# 
  1427  0F2F                     	;# 
  1428  0F30                     	;# 
  1429  0F31                     	;# 
  1430  0F32                     	;# 
  1431  0F33                     	;# 
  1432  0F34                     	;# 
  1433  0F35                     	;# 
  1434  0F36                     	;# 
  1435  0F37                     	;# 
  1436  0FE4                     	;# 
  1437  0FE5                     	;# 
  1438  0FE6                     	;# 
  1439  0FE7                     	;# 
  1440  0FE8                     	;# 
  1441  0FE9                     	;# 
  1442  0FEA                     	;# 
  1443  0FEB                     	;# 
  1444  0FED                     	;# 
  1445  0FEE                     	;# 
  1446  0FEF                     	;# 
  1447                           
  1448                           	psect	idataCOMMON
  1449  0003                     __pidataCOMMON:	
  1450                           
  1451                           ;initializer for _Key
  1452  0003  346E               	retlw	110
  1453                           
  1454                           	psect	idataBANK0
  1455  1A0F                     __pidataBANK0:	
  1456                           
  1457                           ;initializer for _count
  1458  1A0F  3408               	retlw	8
  1459  1A10  3402               	retlw	2
  1460                           
  1461                           ;initializer for _print_line
  1462  1A11  3403               	retlw	3
  1463                           
  1464                           	psect	idataBANK1
  1465  1AF9                     __pidataBANK1:	
  1466                           
  1467                           ;initializer for _UPDOWN
  1468  1AF9  3420               	retlw	32
  1469  1AFA  3420               	retlw	32
  1470  1AFB  3420               	retlw	32
  1471  1AFC  3420               	retlw	32
  1472  1AFD  3420               	retlw	32
  1473  1AFE  3420               	retlw	32
  1474  1AFF  3420               	retlw	32
  1475  1B00  3420               	retlw	32
  1476  1B01  3420               	retlw	32
  1477  1B02  3420               	retlw	32
  1478  1B03  3420               	retlw	32
  1479  1B04  3420               	retlw	32
  1480  1B05  3420               	retlw	32
  1481  1B06  3420               	retlw	32
  1482  1B07  3420               	retlw	32
  1483  1B08  3420               	retlw	32
  1484  1B09  3400               	retlw	0
  1485                           
  1486                           ;initializer for _naif
  1487  1B0A  3420               	retlw	32
  1488  1B0B  3420               	retlw	32
  1489  1B0C  3420               	retlw	32
  1490  1B0D  3420               	retlw	32
  1491  1B0E  3420               	retlw	32
  1492  1B0F  3420               	retlw	32
  1493  1B10  3420               	retlw	32
  1494  1B11  3420               	retlw	32
  1495  1B12  3420               	retlw	32
  1496  1B13  3420               	retlw	32
  1497  1B14  3420               	retlw	32
  1498  1B15  3420               	retlw	32
  1499  1B16  3420               	retlw	32
  1500  1B17  3420               	retlw	32
  1501  1B18  3420               	retlw	32
  1502  1B19  3420               	retlw	32
  1503  1B1A  3400               	retlw	0
  1504                           
  1505                           	psect	idataBANK2
  1506  1AA6                     __pidataBANK2:	
  1507                           
  1508                           ;initializer for _hello
  1509  1AA6  346E               	retlw	110
  1510  1AA7  3461               	retlw	97
  1511  1AA8  3469               	retlw	105
  1512  1AA9  3466               	retlw	102
  1513  1AAA  3420               	retlw	32
  1514  1AAB  3468               	retlw	104
  1515  1AAC  3461               	retlw	97
  1516  1AAD  346D               	retlw	109
  1517  1AAE  3464               	retlw	100
  1518  1AAF  3469               	retlw	105
  1519  1AB0  3420               	retlw	32
  1520  1AB1  3461               	retlw	97
  1521  1AB2  346C               	retlw	108
  1522  1AB3  346A               	retlw	106
  1523  1AB4  346F               	retlw	111
  1524  1AB5  3468               	retlw	104
  1525  1AB6  3461               	retlw	97
  1526  1AB7  346E               	retlw	110
  1527  1AB8  3469               	retlw	105
  1528  1AB9  3420               	retlw	32
  1529  1ABA  3420               	retlw	32
  1530  1ABB  3420               	retlw	32
  1531  1ABC  3400               	retlw	0
  1532  1ABD  3400               	retlw	0
  1533  1ABE  3400               	retlw	0
  1534                           
  1535                           	psect	stringtext1
  1536  0A42                     __pstringtext1:	
  1537  0A42                     _black:	
  1538  0A42  34FF               	retlw	255
  1539  0A43  34FF               	retlw	255
  1540  0A44  34FF               	retlw	255
  1541  0A45  34FF               	retlw	255
  1542  0A46  34FF               	retlw	255
  1543  0A47  34FF               	retlw	255
  1544  0A48  34FF               	retlw	255
  1545  0A49  34FF               	retlw	255
  1546  0A4A  34FF               	retlw	255
  1547  0A4B  34FF               	retlw	255
  1548  0A4C  34FF               	retlw	255
  1549  0A4D  34FF               	retlw	255
  1550  0A4E  34FF               	retlw	255
  1551  0A4F  34FF               	retlw	255
  1552  0A50  34FF               	retlw	255
  1553  0A51  34FF               	retlw	255
  1554  0A52  34FF               	retlw	255
  1555  0A53  34FF               	retlw	255
  1556  0A54  34FF               	retlw	255
  1557  0A55  34FF               	retlw	255
  1558  0A56  34FF               	retlw	255
  1559  0A57  34FF               	retlw	255
  1560  0A58  34FF               	retlw	255
  1561  0A59  34FF               	retlw	255
  1562  0A5A  34FF               	retlw	255
  1563  0A5B  34FF               	retlw	255
  1564  0A5C  34FF               	retlw	255
  1565  0A5D  34FF               	retlw	255
  1566  0A5E  34FF               	retlw	255
  1567  0A5F  34FF               	retlw	255
  1568  0A60  34FF               	retlw	255
  1569  0A61  34FF               	retlw	255
  1570  0A62  34FF               	retlw	255
  1571  0A63  34FF               	retlw	255
  1572  0A64  34FF               	retlw	255
  1573  0A65  34FF               	retlw	255
  1574  0A66  34FF               	retlw	255
  1575  0A67  34FF               	retlw	255
  1576  0A68  34FF               	retlw	255
  1577  0A69  34FF               	retlw	255
  1578  0A6A  34FF               	retlw	255
  1579  0A6B  34FF               	retlw	255
  1580  0A6C  34FF               	retlw	255
  1581  0A6D  34FF               	retlw	255
  1582  0A6E  34FF               	retlw	255
  1583  0A6F  34FF               	retlw	255
  1584  0A70  34FF               	retlw	255
  1585  0A71  34FF               	retlw	255
  1586  0A72  34FF               	retlw	255
  1587  0A73  34FF               	retlw	255
  1588  0A74  34FF               	retlw	255
  1589  0A75  34FF               	retlw	255
  1590  0A76  34FF               	retlw	255
  1591  0A77  34FF               	retlw	255
  1592  0A78  34FF               	retlw	255
  1593  0A79  34FF               	retlw	255
  1594  0A7A  34FF               	retlw	255
  1595  0A7B  34FF               	retlw	255
  1596  0A7C  34FF               	retlw	255
  1597  0A7D  34FF               	retlw	255
  1598  0A7E  34FF               	retlw	255
  1599  0A7F  34FF               	retlw	255
  1600  0A80  34FF               	retlw	255
  1601  0A81  34FF               	retlw	255
  1602  0A82  34FF               	retlw	255
  1603  0A83  34FF               	retlw	255
  1604  0A84  34FF               	retlw	255
  1605  0A85  34FF               	retlw	255
  1606  0A86  34FF               	retlw	255
  1607  0A87  34FF               	retlw	255
  1608  0A88  34FF               	retlw	255
  1609  0A89  34FF               	retlw	255
  1610  0A8A  34FF               	retlw	255
  1611  0A8B  34FF               	retlw	255
  1612  0A8C  34FF               	retlw	255
  1613  0A8D  34FF               	retlw	255
  1614  0A8E  34FF               	retlw	255
  1615  0A8F  34FF               	retlw	255
  1616  0A90  34FF               	retlw	255
  1617  0A91  34FF               	retlw	255
  1618  0A92  34FF               	retlw	255
  1619  0A93  34FF               	retlw	255
  1620  0A94  34FF               	retlw	255
  1621  0A95  34FF               	retlw	255
  1622  0A96  34FF               	retlw	255
  1623  0A97  34FF               	retlw	255
  1624  0A98  34FF               	retlw	255
  1625  0A99  34FF               	retlw	255
  1626  0A9A  34FF               	retlw	255
  1627  0A9B  34FF               	retlw	255
  1628  0A9C  34FF               	retlw	255
  1629  0A9D  34FF               	retlw	255
  1630  0A9E  34FF               	retlw	255
  1631  0A9F  34FF               	retlw	255
  1632  0AA0  34FF               	retlw	255
  1633  0AA1  34FF               	retlw	255
  1634  0AA2  34FF               	retlw	255
  1635  0AA3  34FF               	retlw	255
  1636  0AA4  34FF               	retlw	255
  1637  0AA5  34FF               	retlw	255
  1638  0AA6  34FF               	retlw	255
  1639  0AA7  34FF               	retlw	255
  1640  0AA8  34FF               	retlw	255
  1641  0AA9  34FF               	retlw	255
  1642  0AAA  34FF               	retlw	255
  1643  0AAB  34F9               	retlw	249
  1644  0AAC  3400               	retlw	0
  1645  0AAD  345F               	retlw	95
  1646  0AAE  34FF               	retlw	255
  1647  0AAF  34FF               	retlw	255
  1648  0AB0  34FF               	retlw	255
  1649  0AB1  34FF               	retlw	255
  1650  0AB2  34FF               	retlw	255
  1651  0AB3  34FF               	retlw	255
  1652  0AB4  34FF               	retlw	255
  1653  0AB5  34FF               	retlw	255
  1654  0AB6  34FF               	retlw	255
  1655  0AB7  34FF               	retlw	255
  1656  0AB8  34FF               	retlw	255
  1657  0AB9  34FF               	retlw	255
  1658  0ABA  34FE               	retlw	254
  1659  0ABB  3400               	retlw	0
  1660  0ABC  3400               	retlw	0
  1661  0ABD  3400               	retlw	0
  1662  0ABE  347F               	retlw	127
  1663  0ABF  34FF               	retlw	255
  1664  0AC0  34FF               	retlw	255
  1665  0AC1  34FF               	retlw	255
  1666  0AC2  34FF               	retlw	255
  1667  0AC3  34FF               	retlw	255
  1668  0AC4  34FF               	retlw	255
  1669  0AC5  34FF               	retlw	255
  1670  0AC6  34FF               	retlw	255
  1671  0AC7  34FF               	retlw	255
  1672  0AC8  34FF               	retlw	255
  1673  0AC9  34FF               	retlw	255
  1674  0ACA  34F0               	retlw	240
  1675  0ACB  3400               	retlw	0
  1676  0ACC  3400               	retlw	0
  1677  0ACD  3400               	retlw	0
  1678  0ACE  340F               	retlw	15
  1679  0ACF  34FF               	retlw	255
  1680  0AD0  34FF               	retlw	255
  1681  0AD1  34FF               	retlw	255
  1682  0AD2  34FF               	retlw	255
  1683  0AD3  34FF               	retlw	255
  1684  0AD4  34FF               	retlw	255
  1685  0AD5  34FF               	retlw	255
  1686  0AD6  34FF               	retlw	255
  1687  0AD7  34FF               	retlw	255
  1688  0AD8  34FF               	retlw	255
  1689  0AD9  34FF               	retlw	255
  1690  0ADA  3480               	retlw	128
  1691  0ADB  3400               	retlw	0
  1692  0ADC  3400               	retlw	0
  1693  0ADD  3400               	retlw	0
  1694  0ADE  3401               	retlw	1
  1695  0ADF  34FF               	retlw	255
  1696  0AE0  34FF               	retlw	255
  1697  0AE1  34FF               	retlw	255
  1698  0AE2  34FF               	retlw	255
  1699  0AE3  34FF               	retlw	255
  1700  0AE4  34FF               	retlw	255
  1701  0AE5  34FF               	retlw	255
  1702  0AE6  34FF               	retlw	255
  1703  0AE7  34FF               	retlw	255
  1704  0AE8  34FF               	retlw	255
  1705  0AE9  34FE               	retlw	254
  1706  0AEA  3400               	retlw	0
  1707  0AEB  3400               	retlw	0
  1708  0AEC  3400               	retlw	0
  1709  0AED  3400               	retlw	0
  1710  0AEE  3400               	retlw	0
  1711  0AEF  347F               	retlw	127
  1712  0AF0  34FF               	retlw	255
  1713  0AF1  34FF               	retlw	255
  1714  0AF2  34FF               	retlw	255
  1715  0AF3  34FF               	retlw	255
  1716  0AF4  34FF               	retlw	255
  1717  0AF5  34FF               	retlw	255
  1718  0AF6  34FF               	retlw	255
  1719  0AF7  34FF               	retlw	255
  1720  0AF8  34FF               	retlw	255
  1721  0AF9  34F8               	retlw	248
  1722  0AFA  3400               	retlw	0
  1723  0AFB  3401               	retlw	1
  1724  0AFC  34B5               	retlw	181
  1725  0AFD  3400               	retlw	0
  1726  0AFE  3400               	retlw	0
  1727  0AFF  341F               	retlw	31
  1728  0B00  34FF               	retlw	255
  1729  0B01  34FF               	retlw	255
  1730  0B02  34FF               	retlw	255
  1731  0B03  34FF               	retlw	255
  1732  0B04  34FF               	retlw	255
  1733  0B05  34FF               	retlw	255
  1734  0B06  34FF               	retlw	255
  1735  0B07  34FF               	retlw	255
  1736  0B08  34FF               	retlw	255
  1737  0B09  34E0               	retlw	224
  1738  0B0A  3400               	retlw	0
  1739  0B0B  345F               	retlw	95
  1740  0B0C  34FF               	retlw	255
  1741  0B0D  34F8               	retlw	248
  1742  0B0E  3400               	retlw	0
  1743  0B0F  340F               	retlw	15
  1744  0B10  34FF               	retlw	255
  1745  0B11  34FF               	retlw	255
  1746  0B12  34FF               	retlw	255
  1747  0B13  34FF               	retlw	255
  1748  0B14  34FF               	retlw	255
  1749  0B15  34FF               	retlw	255
  1750  0B16  34FF               	retlw	255
  1751  0B17  34FF               	retlw	255
  1752  0B18  34FF               	retlw	255
  1753  0B19  34E0               	retlw	224
  1754  0B1A  3401               	retlw	1
  1755  0B1B  34FF               	retlw	255
  1756  0B1C  34FF               	retlw	255
  1757  0B1D  34FF               	retlw	255
  1758  0B1E  3400               	retlw	0
  1759  0B1F  3403               	retlw	3
  1760  0B20  34FF               	retlw	255
  1761  0B21  34FF               	retlw	255
  1762  0B22  34FF               	retlw	255
  1763  0B23  34FF               	retlw	255
  1764  0B24  34FF               	retlw	255
  1765  0B25  34FF               	retlw	255
  1766  0B26  34FF               	retlw	255
  1767  0B27  34FF               	retlw	255
  1768  0B28  34FF               	retlw	255
  1769  0B29  34F0               	retlw	240
  1770  0B2A  340F               	retlw	15
  1771  0B2B  34FF               	retlw	255
  1772  0B2C  34A7               	retlw	167
  1773  0B2D  34FF               	retlw	255
  1774  0B2E  34E0               	retlw	224
  1775  0B2F  3401               	retlw	1
  1776  0B30  34FF               	retlw	255
  1777  0B31  34FF               	retlw	255
  1778  0B32  34FF               	retlw	255
  1779  0B33  34FF               	retlw	255
  1780  0B34  34FF               	retlw	255
  1781  0B35  34FF               	retlw	255
  1782  0B36  34FF               	retlw	255
  1783  0B37  34FF               	retlw	255
  1784  0B38  34F9               	retlw	249
  1785  0B39  34FE               	retlw	254
  1786  0B3A  343F               	retlw	63
  1787  0B3B  34F8               	retlw	248
  1788  0B3C  3400               	retlw	0
  1789  0B3D  345F               	retlw	95
  1790  0B3E  34F0               	retlw	240
  1791  0B3F  3401               	retlw	1
  1792  0B40  34FF               	retlw	255
  1793  0B41  34FF               	retlw	255
  1794  0B42  34FF               	retlw	255
  1795  0B43  34FF               	retlw	255
  1796  0B44  34FF               	retlw	255
  1797  0B45  34FF               	retlw	255
  1798  0B46  34FF               	retlw	255
  1799  0B47  34FF               	retlw	255
  1800  0B48  34E0               	retlw	224
  1801  0B49  347F               	retlw	127
  1802  0B4A  34FF               	retlw	255
  1803  0B4B  34C0               	retlw	192
  1804  0B4C  3400               	retlw	0
  1805  0B4D  3407               	retlw	7
  1806  0B4E  34F8               	retlw	248
  1807  0B4F  3400               	retlw	0
  1808  0B50  34FF               	retlw	255
  1809  0B51  34FF               	retlw	255
  1810  0B52  34FF               	retlw	255
  1811  0B53  34FF               	retlw	255
  1812  0B54  34FF               	retlw	255
  1813  0B55  34FF               	retlw	255
  1814  0B56  34FF               	retlw	255
  1815  0B57  34FF               	retlw	255
  1816  0B58  3480               	retlw	128
  1817  0B59  341F               	retlw	31
  1818  0B5A  34FF               	retlw	255
  1819  0B5B  3400               	retlw	0
  1820  0B5C  3400               	retlw	0
  1821  0B5D  3403               	retlw	3
  1822  0B5E  34FC               	retlw	252
  1823  0B5F  3400               	retlw	0
  1824  0B60  347F               	retlw	127
  1825  0B61  34FF               	retlw	255
  1826  0B62  34FF               	retlw	255
  1827  0B63  34FF               	retlw	255
  1828  0B64  34FF               	retlw	255
  1829  0B65  34FF               	retlw	255
  1830  0B66  34FF               	retlw	255
  1831  0B67  34FF               	retlw	255
  1832  0B68  3400               	retlw	0
  1833  0B69  3407               	retlw	7
  1834  0B6A  34FC               	retlw	252
  1835  0B6B  3400               	retlw	0
  1836  0B6C  3400               	retlw	0
  1837  0B6D  3400               	retlw	0
  1838  0B6E  34FE               	retlw	254
  1839  0B6F  3400               	retlw	0
  1840  0B70  347F               	retlw	127
  1841  0B71  34FF               	retlw	255
  1842  0B72  34FF               	retlw	255
  1843  0B73  34FF               	retlw	255
  1844  0B74  34FF               	retlw	255
  1845  0B75  34FF               	retlw	255
  1846  0B76  34FF               	retlw	255
  1847  0B77  34FF               	retlw	255
  1848  0B78  34C0               	retlw	192
  1849  0B79  3401               	retlw	1
  1850  0B7A  34F0               	retlw	240
  1851  0B7B  3400               	retlw	0
  1852  0B7C  3478               	retlw	120
  1853  0B7D  3400               	retlw	0
  1854  0B7E  34FE               	retlw	254
  1855  0B7F  3400               	retlw	0
  1856  0B80  347F               	retlw	127
  1857  0B81  34FF               	retlw	255
  1858  0B82  34FF               	retlw	255
  1859  0B83  34FF               	retlw	255
  1860  0B84  34FF               	retlw	255
  1861  0B85  34FF               	retlw	255
  1862  0B86  34FF               	retlw	255
  1863  0B87  34CF               	retlw	207
  1864  0B88  34E0               	retlw	224
  1865  0B89  3400               	retlw	0
  1866  0B8A  3440               	retlw	64
  1867  0B8B  3401               	retlw	1
  1868  0B8C  34FE               	retlw	254
  1869  0B8D  3400               	retlw	0
  1870  0B8E  34FF               	retlw	255
  1871  0B8F  3400               	retlw	0
  1872  0B90  347F               	retlw	127
  1873  0B91  34FF               	retlw	255
  1874  0B92  34FF               	retlw	255
  1875  0B93  34FF               	retlw	255
  1876  0B94  34FF               	retlw	255
  1877  0B95  34FF               	retlw	255
  1878  0B96  34FF               	retlw	255
  1879  0B97  3481               	retlw	129
  1880  0B98  34FC               	retlw	252
  1881  0B99  3400               	retlw	0
  1882  0B9A  3400               	retlw	0
  1883  0B9B  3407               	retlw	7
  1884  0B9C  34FE               	retlw	254
  1885  0B9D  3400               	retlw	0
  1886  0B9E  34FE               	retlw	254
  1887  0B9F  3400               	retlw	0
  1888  0BA0  347F               	retlw	127
  1889  0BA1  34FF               	retlw	255
  1890  0BA2  34FF               	retlw	255
  1891  0BA3  34FF               	retlw	255
  1892  0BA4  34FF               	retlw	255
  1893  0BA5  34FF               	retlw	255
  1894  0BA6  34FC               	retlw	252
  1895  0BA7  3400               	retlw	0
  1896  0BA8  347F               	retlw	127
  1897  0BA9  3400               	retlw	0
  1898  0BAA  3400               	retlw	0
  1899  0BAB  341F               	retlw	31
  1900  0BAC  34FC               	retlw	252
  1901  0BAD  3400               	retlw	0
  1902  0BAE  34FE               	retlw	254
  1903  0BAF  3400               	retlw	0
  1904  0BB0  347F               	retlw	127
  1905  0BB1  34FF               	retlw	255
  1906  0BB2  34FF               	retlw	255
  1907  0BB3  34FF               	retlw	255
  1908  0BB4  34FF               	retlw	255
  1909  0BB5  34FF               	retlw	255
  1910  0BB6  34F8               	retlw	248
  1911  0BB7  3400               	retlw	0
  1912  0BB8  343F               	retlw	63
  1913  0BB9  34C0               	retlw	192
  1914  0BBA  3400               	retlw	0
  1915  0BBB  347F               	retlw	127
  1916  0BBC  34F0               	retlw	240
  1917  0BBD  3400               	retlw	0
  1918  0BBE  34FE               	retlw	254
  1919  0BBF  3400               	retlw	0
  1920  0BC0  347F               	retlw	127
  1921  0BC1  34FF               	retlw	255
  1922  0BC2  34FF               	retlw	255
  1923  0BC3  34FF               	retlw	255
  1924  0BC4  34FF               	retlw	255
  1925  0BC5  34FF               	retlw	255
  1926  0BC6  34E0               	retlw	224
  1927  0BC7  3400               	retlw	0
  1928  0BC8  34FF               	retlw	255
  1929  0BC9  34E0               	retlw	224
  1930  0BCA  3401               	retlw	1
  1931  0BCB  34FF               	retlw	255
  1932  0BCC  34C0               	retlw	192
  1933  0BCD  3403               	retlw	3
  1934  0BCE  34FC               	retlw	252
  1935  0BCF  3400               	retlw	0
  1936  0BD0  34FF               	retlw	255
  1937  0BD1  34FF               	retlw	255
  1938  0BD2  34FF               	retlw	255
  1939  0BD3  34FF               	retlw	255
  1940  0BD4  34FF               	retlw	255
  1941  0BD5  34FF               	retlw	255
  1942  0BD6  3400               	retlw	0
  1943  0BD7  3403               	retlw	3
  1944  0BD8  34FF               	retlw	255
  1945  0BD9  34FC               	retlw	252
  1946  0BDA  3407               	retlw	7
  1947  0BDB  34DE               	retlw	222
  1948  0BDC  3400               	retlw	0
  1949  0BDD  3407               	retlw	7
  1950  0BDE  34F8               	retlw	248
  1951  0BDF  3400               	retlw	0
  1952  0BE0  34FF               	retlw	255
  1953  0BE1  34FF               	retlw	255
  1954  0BE2  34FF               	retlw	255
  1955  0BE3  34FF               	retlw	255
  1956  0BE4  34FF               	retlw	255
  1957  0BE5  34FC               	retlw	252
  1958  0BE6  3400               	retlw	0
  1959  0BE7  340F               	retlw	15
  1960  0BE8  34FC               	retlw	252
  1961  0BE9  347F               	retlw	127
  1962  0BEA  349F               	retlw	159
  1963  0BEB  3404               	retlw	4
  1964  0BEC  3400               	retlw	0
  1965  0BED  341F               	retlw	31
  1966  0BEE  34F0               	retlw	240
  1967  0BEF  3401               	retlw	1
  1968  0BF0  34FF               	retlw	255
  1969  0BF1  34FF               	retlw	255
  1970  0BF2  34FF               	retlw	255
  1971  0BF3  34FF               	retlw	255
  1972  0BF4  34FF               	retlw	255
  1973  0BF5  34F8               	retlw	248
  1974  0BF6  3400               	retlw	0
  1975  0BF7  343F               	retlw	63
  1976  0BF8  34F0               	retlw	240
  1977  0BF9  341F               	retlw	31
  1978  0BFA  34FC               	retlw	252
  1979  0BFB  3400               	retlw	0
  1980  0BFC  3400               	retlw	0
  1981  0BFD  347F               	retlw	127
  1982  0BFE  34C0               	retlw	192
  1983  0BFF  3403               	retlw	3
  1984  0C00  34FF               	retlw	255
  1985  0C01  34FF               	retlw	255
  1986  0C02  34FF               	retlw	255
  1987  0C03  34FF               	retlw	255
  1988  0C04  34FF               	retlw	255
  1989  0C05  34C0               	retlw	192
  1990  0C06  3400               	retlw	0
  1991  0C07  34FF               	retlw	255
  1992  0C08  34C0               	retlw	192
  1993  0C09  3407               	retlw	7
  1994  0C0A  34F8               	retlw	248
  1995  0C0B  3400               	retlw	0
  1996  0C0C  3401               	retlw	1
  1997  0C0D  34FF               	retlw	255
  1998  0C0E  3480               	retlw	128
  1999  0C0F  3407               	retlw	7
  2000  0C10  34FF               	retlw	255
  2001  0C11  34FF               	retlw	255
  2002  0C12  34FF               	retlw	255
  2003  0C13  34FF               	retlw	255
  2004  0C14  34FF               	retlw	255
  2005  0C15  3400               	retlw	0
  2006  0C16  3407               	retlw	7
  2007  0C17  34FE               	retlw	254
  2008  0C18  3400               	retlw	0
  2009  0C19  3407               	retlw	7
  2010  0C1A  34FC               	retlw	252
  2011  0C1B  3400               	retlw	0
  2012  0C1C  3407               	retlw	7
  2013  0C1D  34FE               	retlw	254
  2014  0C1E  3400               	retlw	0
  2015  0C1F  340F               	retlw	15
  2016  0C20  34FF               	retlw	255
  2017  0C21  34FF               	retlw	255
  2018  0C22  34FF               	retlw	255
  2019  0C23  34FF               	retlw	255
  2020  0C24  34FE               	retlw	254
  2021  0C25  3400               	retlw	0
  2022  0C26  340F               	retlw	15
  2023  0C27  34FC               	retlw	252
  2024  0C28  3400               	retlw	0
  2025  0C29  341F               	retlw	31
  2026  0C2A  34FF               	retlw	255
  2027  0C2B  3400               	retlw	0
  2028  0C2C  343F               	retlw	63
  2029  0C2D  34F0               	retlw	240
  2030  0C2E  3400               	retlw	0
  2031  0C2F  343F               	retlw	63
  2032  0C30  34FF               	retlw	255
  2033  0C31  34FF               	retlw	255
  2034  0C32  34FF               	retlw	255
  2035  0C33  34FF               	retlw	255
  2036  0C34  34F8               	retlw	248
  2037  0C35  3400               	retlw	0
  2038  0C36  343F               	retlw	63
  2039  0C37  34F8               	retlw	248
  2040  0C38  3400               	retlw	0
  2041  0C39  347F               	retlw	127
  2042  0C3A  34FF               	retlw	255
  2043  0C3B  34C0               	retlw	192
  2044  0C3C  347F               	retlw	127
  2045  0C3D  34C0               	retlw	192
  2046  0C3E  3400               	retlw	0
  2047  0C3F  34FF               	retlw	255
  2048  0C40  34FF               	retlw	255
  2049  0C41  34FF               	retlw	255
  2050  0C42  34FF               	retlw	255
  2051  0C43  34FF               	retlw	255
  2052  0C44  34FC               	retlw	252
  2053  0C45  3400               	retlw	0
  2054  0C46  340F               	retlw	15
  2055  0C47  34FC               	retlw	252
  2056  0C48  3400               	retlw	0
  2057  0C49  343F               	retlw	63
  2058  0C4A  34C7               	retlw	199
  2059  0C4B  34F9               	retlw	249
  2060  0C4C  34FF               	retlw	255
  2061  0C4D  3400               	retlw	0
  2062  0C4E  3403               	retlw	3
  2063  0C4F  34FF               	retlw	255
  2064  0C50  34FF               	retlw	255
  2065  0C51  34FF               	retlw	255
  2066  0C52  34FF               	retlw	255
  2067  0C53  34FF               	retlw	255
  2068  0C54  34FF               	retlw	255
  2069  0C55  3480               	retlw	128
  2070  0C56  3403               	retlw	3
  2071  0C57  34FF               	retlw	255
  2072  0C58  3400               	retlw	0
  2073  0C59  340E               	retlw	14
  2074  0C5A  3400               	retlw	0
  2075  0C5B  34FF               	retlw	255
  2076  0C5C  34FC               	retlw	252
  2077  0C5D  3400               	retlw	0
  2078  0C5E  340F               	retlw	15
  2079  0C5F  34FF               	retlw	255
  2080  0C60  34FF               	retlw	255
  2081  0C61  34FF               	retlw	255
  2082  0C62  34FF               	retlw	255
  2083  0C63  34FF               	retlw	255
  2084  0C64  34FF               	retlw	255
  2085  0C65  34C0               	retlw	192
  2086  0C66  3403               	retlw	3
  2087  0C67  34FF               	retlw	255
  2088  0C68  34E0               	retlw	224
  2089  0C69  3400               	retlw	0
  2090  0C6A  3400               	retlw	0
  2091  0C6B  347F               	retlw	127
  2092  0C6C  34F0               	retlw	240
  2093  0C6D  3400               	retlw	0
  2094  0C6E  343F               	retlw	63
  2095  0C6F  34FF               	retlw	255
  2096  0C70  34FF               	retlw	255
  2097  0C71  34FF               	retlw	255
  2098  0C72  34FF               	retlw	255
  2099  0C73  34FF               	retlw	255
  2100  0C74  34FF               	retlw	255
  2101  0C75  34F0               	retlw	240
  2102  0C76  3407               	retlw	7
  2103  0C77  34FF               	retlw	255
  2104  0C78  34F0               	retlw	240
  2105  0C79  3400               	retlw	0
  2106  0C7A  3400               	retlw	0
  2107  0C7B  347F               	retlw	127
  2108  0C7C  34F0               	retlw	240
  2109  0C7D  3400               	retlw	0
  2110  0C7E  34FF               	retlw	255
  2111  0C7F  34FF               	retlw	255
  2112  0C80  34FF               	retlw	255
  2113  0C81  34FF               	retlw	255
  2114  0C82  34FF               	retlw	255
  2115  0C83  34FF               	retlw	255
  2116  0C84  34FF               	retlw	255
  2117  0C85  34E0               	retlw	224
  2118  0C86  341F               	retlw	31
  2119  0C87  34FF               	retlw	255
  2120  0C88  34FE               	retlw	254
  2121  0C89  3400               	retlw	0
  2122  0C8A  3403               	retlw	3
  2123  0C8B  34FF               	retlw	255
  2124  0C8C  34F0               	retlw	240
  2125  0C8D  3403               	retlw	3
  2126  0C8E  34FF               	retlw	255
  2127  0C8F  34FF               	retlw	255
  2128  0C90  34FF               	retlw	255
  2129  0C91  34FF               	retlw	255
  2130  0C92  34FF               	retlw	255
  2131  0C93  34FF               	retlw	255
  2132  0C94  34FF               	retlw	255
  2133  0C95  3480               	retlw	128
  2134  0C96  347F               	retlw	127
  2135  0C97  34C1               	retlw	193
  2136  0C98  34FF               	retlw	255
  2137  0C99  3480               	retlw	128
  2138  0C9A  3407               	retlw	7
  2139  0C9B  34FE               	retlw	254
  2140  0C9C  34FE               	retlw	254
  2141  0C9D  340F               	retlw	15
  2142  0C9E  34FF               	retlw	255
  2143  0C9F  34FF               	retlw	255
  2144  0CA0  34FF               	retlw	255
  2145  0CA1  34FF               	retlw	255
  2146  0CA2  34FF               	retlw	255
  2147  0CA3  34FF               	retlw	255
  2148  0CA4  34FE               	retlw	254
  2149  0CA5  3403               	retlw	3
  2150  0CA6  34FF               	retlw	255
  2151  0CA7  3400               	retlw	0
  2152  0CA8  347F               	retlw	127
  2153  0CA9  34C0               	retlw	192
  2154  0CAA  343F               	retlw	63
  2155  0CAB  34F0               	retlw	240
  2156  0CAC  347F               	retlw	127
  2157  0CAD  34BF               	retlw	191
  2158  0CAE  34FF               	retlw	255
  2159  0CAF  34FF               	retlw	255
  2160  0CB0  34FF               	retlw	255
  2161  0CB1  34FF               	retlw	255
  2162  0CB2  34FF               	retlw	255
  2163  0CB3  34FF               	retlw	255
  2164  0CB4  34F0               	retlw	240
  2165  0CB5  3407               	retlw	7
  2166  0CB6  34FC               	retlw	252
  2167  0CB7  3400               	retlw	0
  2168  0CB8  341F               	retlw	31
  2169  0CB9  34F1               	retlw	241
  2170  0CBA  34FF               	retlw	255
  2171  0CBB  34C0               	retlw	192
  2172  0CBC  341F               	retlw	31
  2173  0CBD  34FF               	retlw	255
  2174  0CBE  34FF               	retlw	255
  2175  0CBF  34FF               	retlw	255
  2176  0CC0  34FF               	retlw	255
  2177  0CC1  34FF               	retlw	255
  2178  0CC2  34FF               	retlw	255
  2179  0CC3  34FF               	retlw	255
  2180  0CC4  34E0               	retlw	224
  2181  0CC5  341F               	retlw	31
  2182  0CC6  34FC               	retlw	252
  2183  0CC7  3400               	retlw	0
  2184  0CC8  341F               	retlw	31
  2185  0CC9  34FF               	retlw	255
  2186  0CCA  34FF               	retlw	255
  2187  0CCB  3400               	retlw	0
  2188  0CCC  340F               	retlw	15
  2189  0CCD  34FF               	retlw	255
  2190  0CCE  34FF               	retlw	255
  2191  0CCF  34FF               	retlw	255
  2192  0CD0  34FF               	retlw	255
  2193  0CD1  34FF               	retlw	255
  2194  0CD2  34FF               	retlw	255
  2195  0CD3  34FF               	retlw	255
  2196  0CD4  3400               	retlw	0
  2197  0CD5  347F               	retlw	127
  2198  0CD6  34FF               	retlw	255
  2199  0CD7  3480               	retlw	128
  2200  0CD8  347F               	retlw	127
  2201  0CD9  34FF               	retlw	255
  2202  0CDA  34FC               	retlw	252
  2203  0CDB  3400               	retlw	0
  2204  0CDC  340F               	retlw	15
  2205  0CDD  34FF               	retlw	255
  2206  0CDE  34FF               	retlw	255
  2207  0CDF  34FF               	retlw	255
  2208  0CE0  34FF               	retlw	255
  2209  0CE1  34FF               	retlw	255
  2210  0CE2  34FF               	retlw	255
  2211  0CE3  34FC               	retlw	252
  2212  0CE4  3403               	retlw	3
  2213  0CE5  34FF               	retlw	255
  2214  0CE6  34FF               	retlw	255
  2215  0CE7  34C1               	retlw	193
  2216  0CE8  34FF               	retlw	255
  2217  0CE9  34FF               	retlw	255
  2218  0CEA  34F0               	retlw	240
  2219  0CEB  3400               	retlw	0
  2220  0CEC  343F               	retlw	63
  2221  0CED  34FF               	retlw	255
  2222  0CEE  34FF               	retlw	255
  2223  0CEF  34FF               	retlw	255
  2224  0CF0  34FF               	retlw	255
  2225  0CF1  34FF               	retlw	255
  2226  0CF2  34FF               	retlw	255
  2227  0CF3  34F8               	retlw	248
  2228  0CF4  3407               	retlw	7
  2229  0CF5  34FF               	retlw	255
  2230  0CF6  34FF               	retlw	255
  2231  0CF7  34FF               	retlw	255
  2232  0CF8  34FC               	retlw	252
  2233  0CF9  343F               	retlw	63
  2234  0CFA  34C0               	retlw	192
  2235  0CFB  3400               	retlw	0
  2236  0CFC  34FF               	retlw	255
  2237  0CFD  34FF               	retlw	255
  2238  0CFE  34FF               	retlw	255
  2239  0CFF  34FF               	retlw	255
  2240  0D00  34FF               	retlw	255
  2241  0D01  34FF               	retlw	255
  2242  0D02  34FF               	retlw	255
  2243  0D03  34E0               	retlw	224
  2244  0D04  341F               	retlw	31
  2245  0D05  34FF               	retlw	255
  2246  0D06  34FF               	retlw	255
  2247  0D07  34FF               	retlw	255
  2248  0D08  34F0               	retlw	240
  2249  0D09  340F               	retlw	15
  2250  0D0A  3400               	retlw	0
  2251  0D0B  3407               	retlw	7
  2252  0D0C  34FF               	retlw	255
  2253  0D0D  34FF               	retlw	255
  2254  0D0E  34FF               	retlw	255
  2255  0D0F  34FF               	retlw	255
  2256  0D10  34FF               	retlw	255
  2257  0D11  34FF               	retlw	255
  2258  0D12  34FF               	retlw	255
  2259  0D13  34E0               	retlw	224
  2260  0D14  34FF               	retlw	255
  2261  0D15  34FF               	retlw	255
  2262  0D16  34FF               	retlw	255
  2263  0D17  34FF               	retlw	255
  2264  0D18  34C0               	retlw	192
  2265  0D19  3400               	retlw	0
  2266  0D1A  3400               	retlw	0
  2267  0D1B  341F               	retlw	31
  2268  0D1C  34FF               	retlw	255
  2269  0D1D  34FF               	retlw	255
  2270  0D1E  34FF               	retlw	255
  2271  0D1F  34FF               	retlw	255
  2272  0D20  34FF               	retlw	255
  2273  0D21  34FF               	retlw	255
  2274  0D22  34FF               	retlw	255
  2275  0D23  34FB               	retlw	251
  2276  0D24  34FF               	retlw	255
  2277  0D25  34FF               	retlw	255
  2278  0D26  34FF               	retlw	255
  2279  0D27  34FF               	retlw	255
  2280  0D28  3400               	retlw	0
  2281  0D29  3400               	retlw	0
  2282  0D2A  3400               	retlw	0
  2283  0D2B  347F               	retlw	127
  2284  0D2C  34FF               	retlw	255
  2285  0D2D  34FF               	retlw	255
  2286  0D2E  34FF               	retlw	255
  2287  0D2F  34FF               	retlw	255
  2288  0D30  34FF               	retlw	255
  2289  0D31  34FF               	retlw	255
  2290  0D32  34FF               	retlw	255
  2291  0D33  34FF               	retlw	255
  2292  0D34  34FF               	retlw	255
  2293  0D35  34FF               	retlw	255
  2294  0D36  34FF               	retlw	255
  2295  0D37  34FC               	retlw	252
  2296  0D38  3400               	retlw	0
  2297  0D39  3400               	retlw	0
  2298  0D3A  3401               	retlw	1
  2299  0D3B  34FF               	retlw	255
  2300  0D3C  34FF               	retlw	255
  2301  0D3D  34FF               	retlw	255
  2302  0D3E  34FF               	retlw	255
  2303  0D3F  34FF               	retlw	255
  2304  0D40  34FF               	retlw	255
  2305  0D41  34FF               	retlw	255
  2306  0D42  34FF               	retlw	255
  2307  0D43  34FF               	retlw	255
  2308  0D44  34FF               	retlw	255
  2309  0D45  34FF               	retlw	255
  2310  0D46  34FF               	retlw	255
  2311  0D47  34F0               	retlw	240
  2312  0D48  340E               	retlw	14
  2313  0D49  3400               	retlw	0
  2314  0D4A  3407               	retlw	7
  2315  0D4B  34FF               	retlw	255
  2316  0D4C  34FF               	retlw	255
  2317  0D4D  34FF               	retlw	255
  2318  0D4E  34FF               	retlw	255
  2319  0D4F  34FF               	retlw	255
  2320  0D50  34FF               	retlw	255
  2321  0D51  34FF               	retlw	255
  2322  0D52  34FF               	retlw	255
  2323  0D53  34FF               	retlw	255
  2324  0D54  34FF               	retlw	255
  2325  0D55  34FF               	retlw	255
  2326  0D56  34FF               	retlw	255
  2327  0D57  34C0               	retlw	192
  2328  0D58  343F               	retlw	63
  2329  0D59  3480               	retlw	128
  2330  0D5A  341F               	retlw	31
  2331  0D5B  34FF               	retlw	255
  2332  0D5C  34FF               	retlw	255
  2333  0D5D  34FF               	retlw	255
  2334  0D5E  34FF               	retlw	255
  2335  0D5F  34FF               	retlw	255
  2336  0D60  34FF               	retlw	255
  2337  0D61  34FF               	retlw	255
  2338  0D62  34FF               	retlw	255
  2339  0D63  34FF               	retlw	255
  2340  0D64  34FF               	retlw	255
  2341  0D65  34FF               	retlw	255
  2342  0D66  34FF               	retlw	255
  2343  0D67  3400               	retlw	0
  2344  0D68  34FF               	retlw	255
  2345  0D69  34E0               	retlw	224
  2346  0D6A  347F               	retlw	127
  2347  0D6B  34FF               	retlw	255
  2348  0D6C  34FF               	retlw	255
  2349  0D6D  34FF               	retlw	255
  2350  0D6E  34FF               	retlw	255
  2351  0D6F  34FF               	retlw	255
  2352  0D70  34FF               	retlw	255
  2353  0D71  34FF               	retlw	255
  2354  0D72  34FF               	retlw	255
  2355  0D73  34FF               	retlw	255
  2356  0D74  34FF               	retlw	255
  2357  0D75  34FF               	retlw	255
  2358  0D76  34FC               	retlw	252
  2359  0D77  3403               	retlw	3
  2360  0D78  34FF               	retlw	255
  2361  0D79  34F9               	retlw	249
  2362  0D7A  34FF               	retlw	255
  2363  0D7B  34FF               	retlw	255
  2364  0D7C  34FF               	retlw	255
  2365  0D7D  34FF               	retlw	255
  2366  0D7E  34FF               	retlw	255
  2367  0D7F  34FF               	retlw	255
  2368  0D80  34FF               	retlw	255
  2369  0D81  34FF               	retlw	255
  2370  0D82  34FF               	retlw	255
  2371  0D83  34FF               	retlw	255
  2372  0D84  34FF               	retlw	255
  2373  0D85  34FF               	retlw	255
  2374  0D86  34F0               	retlw	240
  2375  0D87  340F               	retlw	15
  2376  0D88  34FF               	retlw	255
  2377  0D89  34FF               	retlw	255
  2378  0D8A  34FF               	retlw	255
  2379  0D8B  34FF               	retlw	255
  2380  0D8C  34FF               	retlw	255
  2381  0D8D  34FF               	retlw	255
  2382  0D8E  34FF               	retlw	255
  2383  0D8F  34FF               	retlw	255
  2384  0D90  34FF               	retlw	255
  2385  0D91  34FF               	retlw	255
  2386  0D92  34FF               	retlw	255
  2387  0D93  34FF               	retlw	255
  2388  0D94  34FF               	retlw	255
  2389  0D95  34FF               	retlw	255
  2390  0D96  34C0               	retlw	192
  2391  0D97  343F               	retlw	63
  2392  0D98  34FF               	retlw	255
  2393  0D99  34FF               	retlw	255
  2394  0D9A  34FF               	retlw	255
  2395  0D9B  34FF               	retlw	255
  2396  0D9C  34FF               	retlw	255
  2397  0D9D  34FF               	retlw	255
  2398  0D9E  34FF               	retlw	255
  2399  0D9F  34FF               	retlw	255
  2400  0DA0  34FF               	retlw	255
  2401  0DA1  34FF               	retlw	255
  2402  0DA2  34FF               	retlw	255
  2403  0DA3  34FF               	retlw	255
  2404  0DA4  34FF               	retlw	255
  2405  0DA5  34FF               	retlw	255
  2406  0DA6  3400               	retlw	0
  2407  0DA7  34FF               	retlw	255
  2408  0DA8  34FF               	retlw	255
  2409  0DA9  34FF               	retlw	255
  2410  0DAA  34FF               	retlw	255
  2411  0DAB  34FF               	retlw	255
  2412  0DAC  34FF               	retlw	255
  2413  0DAD  34FF               	retlw	255
  2414  0DAE  34FF               	retlw	255
  2415  0DAF  34FF               	retlw	255
  2416  0DB0  34FF               	retlw	255
  2417  0DB1  34FF               	retlw	255
  2418  0DB2  34FF               	retlw	255
  2419  0DB3  34FF               	retlw	255
  2420  0DB4  34FF               	retlw	255
  2421  0DB5  34FF               	retlw	255
  2422  0DB6  3403               	retlw	3
  2423  0DB7  34FF               	retlw	255
  2424  0DB8  34FF               	retlw	255
  2425  0DB9  34FF               	retlw	255
  2426  0DBA  34FF               	retlw	255
  2427  0DBB  34FF               	retlw	255
  2428  0DBC  34FF               	retlw	255
  2429  0DBD  34FF               	retlw	255
  2430  0DBE  34FF               	retlw	255
  2431  0DBF  34FF               	retlw	255
  2432  0DC0  34FF               	retlw	255
  2433  0DC1  34FF               	retlw	255
  2434  0DC2  34FF               	retlw	255
  2435  0DC3  34FF               	retlw	255
  2436  0DC4  34FF               	retlw	255
  2437  0DC5  34FF               	retlw	255
  2438  0DC6  349F               	retlw	159
  2439  0DC7  34FF               	retlw	255
  2440  0DC8  34FF               	retlw	255
  2441  0DC9  34FF               	retlw	255
  2442  0DCA  34FF               	retlw	255
  2443  0DCB  34FF               	retlw	255
  2444  0DCC  34FF               	retlw	255
  2445  0DCD  34FF               	retlw	255
  2446  0DCE  34FF               	retlw	255
  2447  0DCF  34FF               	retlw	255
  2448  0DD0  34FF               	retlw	255
  2449  0DD1  34FF               	retlw	255
  2450  0DD2  34FF               	retlw	255
  2451  0DD3  34FF               	retlw	255
  2452  0DD4  34FF               	retlw	255
  2453  0DD5  34FF               	retlw	255
  2454  0DD6  34FF               	retlw	255
  2455  0DD7  34FF               	retlw	255
  2456  0DD8  34FF               	retlw	255
  2457  0DD9  34FF               	retlw	255
  2458  0DDA  34FF               	retlw	255
  2459  0DDB  34FF               	retlw	255
  2460  0DDC  34FF               	retlw	255
  2461  0DDD  34FF               	retlw	255
  2462  0DDE  34FF               	retlw	255
  2463  0DDF  34FF               	retlw	255
  2464  0DE0  34FF               	retlw	255
  2465  0DE1  34FF               	retlw	255
  2466  0DE2  34FF               	retlw	255
  2467  0DE3  34FF               	retlw	255
  2468  0DE4  34FF               	retlw	255
  2469  0DE5  34FF               	retlw	255
  2470  0DE6  34FF               	retlw	255
  2471  0DE7  34FF               	retlw	255
  2472  0DE8  34FF               	retlw	255
  2473  0DE9  34FF               	retlw	255
  2474  0DEA  34FF               	retlw	255
  2475  0DEB  34FF               	retlw	255
  2476  0DEC  34FF               	retlw	255
  2477  0DED  34FF               	retlw	255
  2478  0DEE  34FF               	retlw	255
  2479  0DEF  34FF               	retlw	255
  2480  0DF0  34FF               	retlw	255
  2481  0DF1  34FF               	retlw	255
  2482  0DF2  34FF               	retlw	255
  2483  0DF3  34FF               	retlw	255
  2484  0DF4  34FF               	retlw	255
  2485  0DF5  34FF               	retlw	255
  2486  0DF6  34FF               	retlw	255
  2487  0DF7  34FF               	retlw	255
  2488  0DF8  34FF               	retlw	255
  2489  0DF9  34FF               	retlw	255
  2490  0DFA  34FF               	retlw	255
  2491  0DFB  34FF               	retlw	255
  2492  0DFC  34FF               	retlw	255
  2493  0DFD  34FF               	retlw	255
  2494  0DFE  34FF               	retlw	255
  2495  0DFF  34FF               	retlw	255
  2496  0E00  34FF               	retlw	255
  2497  0E01  34FF               	retlw	255
  2498  0E02  34FF               	retlw	255
  2499  0E03  34FF               	retlw	255
  2500  0E04  34FF               	retlw	255
  2501  0E05  34FF               	retlw	255
  2502  0E06  34FF               	retlw	255
  2503  0E07  34FF               	retlw	255
  2504  0E08  34FF               	retlw	255
  2505  0E09  34FF               	retlw	255
  2506  0E0A  34FF               	retlw	255
  2507  0E0B  34FF               	retlw	255
  2508  0E0C  34FF               	retlw	255
  2509  0E0D  34FF               	retlw	255
  2510  0E0E  34FF               	retlw	255
  2511  0E0F  34FF               	retlw	255
  2512  0E10  34FF               	retlw	255
  2513  0E11  34FF               	retlw	255
  2514  0E12  34FF               	retlw	255
  2515  0E13  34FF               	retlw	255
  2516  0E14  34FF               	retlw	255
  2517  0E15  34FF               	retlw	255
  2518  0E16  34FF               	retlw	255
  2519  0E17  34FF               	retlw	255
  2520  0E18  34FF               	retlw	255
  2521  0E19  34FF               	retlw	255
  2522  0E1A  34FF               	retlw	255
  2523  0E1B  34FF               	retlw	255
  2524  0E1C  34FF               	retlw	255
  2525  0E1D  34FF               	retlw	255
  2526  0E1E  34FF               	retlw	255
  2527  0E1F  34FF               	retlw	255
  2528  0E20  34FF               	retlw	255
  2529  0E21  34FF               	retlw	255
  2530  0E22  34FF               	retlw	255
  2531  0E23  34FF               	retlw	255
  2532  0E24  34FF               	retlw	255
  2533  0E25  34FF               	retlw	255
  2534  0E26  34FF               	retlw	255
  2535  0E27  34FF               	retlw	255
  2536  0E28  34FF               	retlw	255
  2537  0E29  34FF               	retlw	255
  2538  0E2A  34FF               	retlw	255
  2539  0E2B  34FF               	retlw	255
  2540  0E2C  34FF               	retlw	255
  2541  0E2D  34FF               	retlw	255
  2542  0E2E  34FF               	retlw	255
  2543  0E2F  34FF               	retlw	255
  2544  0E30  34FF               	retlw	255
  2545  0E31  34FF               	retlw	255
  2546  0E32  34FF               	retlw	255
  2547  0E33  34FF               	retlw	255
  2548  0E34  34FF               	retlw	255
  2549  0E35  34FF               	retlw	255
  2550  0E36  34FF               	retlw	255
  2551  0E37  34FF               	retlw	255
  2552  0E38  34FF               	retlw	255
  2553  0E39  34FF               	retlw	255
  2554  0E3A  34FF               	retlw	255
  2555  0E3B  34FF               	retlw	255
  2556  0E3C  34FF               	retlw	255
  2557  0E3D  34FF               	retlw	255
  2558  0E3E  34FF               	retlw	255
  2559  0E3F  34FF               	retlw	255
  2560  0E40  34FF               	retlw	255
  2561  0E41  34FF               	retlw	255
  2562  0E42                     __end_of_black:	
  2563                           
  2564                           	psect	stringtext2
  2565  1800                     __pstringtext2:	
  2566  1800                     _Alpha1:	
  2567  1800  3400               	retlw	0
  2568  1801  3400               	retlw	0
  2569  1802  3400               	retlw	0
  2570  1803  3400               	retlw	0
  2571  1804  3400               	retlw	0
  2572  1805  3400               	retlw	0
  2573  1806  3400               	retlw	0
  2574  1807  345F               	retlw	95
  2575  1808  3400               	retlw	0
  2576  1809  3400               	retlw	0
  2577  180A  3400               	retlw	0
  2578  180B  3407               	retlw	7
  2579  180C  3400               	retlw	0
  2580  180D  3407               	retlw	7
  2581  180E  3400               	retlw	0
  2582  180F  3414               	retlw	20
  2583  1810  347F               	retlw	127
  2584  1811  3414               	retlw	20
  2585  1812  347F               	retlw	127
  2586  1813  3414               	retlw	20
  2587  1814  3424               	retlw	36
  2588  1815  342A               	retlw	42
  2589  1816  347F               	retlw	127
  2590  1817  342A               	retlw	42
  2591  1818  3412               	retlw	18
  2592  1819  3423               	retlw	35
  2593  181A  3413               	retlw	19
  2594  181B  3408               	retlw	8
  2595  181C  3464               	retlw	100
  2596  181D  3462               	retlw	98
  2597  181E  3436               	retlw	54
  2598  181F  3449               	retlw	73
  2599  1820  3455               	retlw	85
  2600  1821  3422               	retlw	34
  2601  1822  3450               	retlw	80
  2602  1823  3400               	retlw	0
  2603  1824  3405               	retlw	5
  2604  1825  3403               	retlw	3
  2605  1826  3400               	retlw	0
  2606  1827  3400               	retlw	0
  2607  1828  3400               	retlw	0
  2608  1829  341C               	retlw	28
  2609  182A  3422               	retlw	34
  2610  182B  3441               	retlw	65
  2611  182C  3400               	retlw	0
  2612  182D  3400               	retlw	0
  2613  182E  3441               	retlw	65
  2614  182F  3422               	retlw	34
  2615  1830  341C               	retlw	28
  2616  1831  3400               	retlw	0
  2617  1832  3414               	retlw	20
  2618  1833  3408               	retlw	8
  2619  1834  343E               	retlw	62
  2620  1835  3408               	retlw	8
  2621  1836  3414               	retlw	20
  2622  1837  3408               	retlw	8
  2623  1838  3408               	retlw	8
  2624  1839  343E               	retlw	62
  2625  183A  3408               	retlw	8
  2626  183B  3408               	retlw	8
  2627  183C  3400               	retlw	0
  2628  183D  3450               	retlw	80
  2629  183E  3430               	retlw	48
  2630  183F  3400               	retlw	0
  2631  1840  3400               	retlw	0
  2632  1841  3408               	retlw	8
  2633  1842  3408               	retlw	8
  2634  1843  3408               	retlw	8
  2635  1844  3408               	retlw	8
  2636  1845  3408               	retlw	8
  2637  1846  3400               	retlw	0
  2638  1847  3460               	retlw	96
  2639  1848  3460               	retlw	96
  2640  1849  3400               	retlw	0
  2641  184A  3400               	retlw	0
  2642  184B  3420               	retlw	32
  2643  184C  3410               	retlw	16
  2644  184D  3408               	retlw	8
  2645  184E  3404               	retlw	4
  2646  184F  3402               	retlw	2
  2647  1850  343E               	retlw	62
  2648  1851  3451               	retlw	81
  2649  1852  3449               	retlw	73
  2650  1853  3445               	retlw	69
  2651  1854  343E               	retlw	62
  2652  1855  3400               	retlw	0
  2653  1856  3442               	retlw	66
  2654  1857  347F               	retlw	127
  2655  1858  3440               	retlw	64
  2656  1859  3400               	retlw	0
  2657  185A  3442               	retlw	66
  2658  185B  3461               	retlw	97
  2659  185C  3451               	retlw	81
  2660  185D  3449               	retlw	73
  2661  185E  3446               	retlw	70
  2662  185F  3421               	retlw	33
  2663  1860  3441               	retlw	65
  2664  1861  3445               	retlw	69
  2665  1862  344B               	retlw	75
  2666  1863  3431               	retlw	49
  2667  1864  3418               	retlw	24
  2668  1865  3414               	retlw	20
  2669  1866  3412               	retlw	18
  2670  1867  347F               	retlw	127
  2671  1868  3410               	retlw	16
  2672  1869  3427               	retlw	39
  2673  186A  3445               	retlw	69
  2674  186B  3445               	retlw	69
  2675  186C  3445               	retlw	69
  2676  186D  3439               	retlw	57
  2677  186E  343C               	retlw	60
  2678  186F  344A               	retlw	74
  2679  1870  3449               	retlw	73
  2680  1871  3449               	retlw	73
  2681  1872  3430               	retlw	48
  2682  1873  3401               	retlw	1
  2683  1874  3471               	retlw	113
  2684  1875  3409               	retlw	9
  2685  1876  3405               	retlw	5
  2686  1877  3403               	retlw	3
  2687  1878  3436               	retlw	54
  2688  1879  3449               	retlw	73
  2689  187A  3449               	retlw	73
  2690  187B  3449               	retlw	73
  2691  187C  3436               	retlw	54
  2692  187D  3406               	retlw	6
  2693  187E  3449               	retlw	73
  2694  187F  3449               	retlw	73
  2695  1880  3429               	retlw	41
  2696  1881  341E               	retlw	30
  2697  1882  3400               	retlw	0
  2698  1883  3436               	retlw	54
  2699  1884  3436               	retlw	54
  2700  1885  3400               	retlw	0
  2701  1886  3400               	retlw	0
  2702  1887  3400               	retlw	0
  2703  1888  3456               	retlw	86
  2704  1889  3436               	retlw	54
  2705  188A  3400               	retlw	0
  2706  188B  3400               	retlw	0
  2707  188C  3408               	retlw	8
  2708  188D  3414               	retlw	20
  2709  188E  3422               	retlw	34
  2710  188F  3441               	retlw	65
  2711  1890  3400               	retlw	0
  2712  1891  3414               	retlw	20
  2713  1892  3414               	retlw	20
  2714  1893  3414               	retlw	20
  2715  1894  3414               	retlw	20
  2716  1895  3414               	retlw	20
  2717  1896  3400               	retlw	0
  2718  1897  3441               	retlw	65
  2719  1898  3422               	retlw	34
  2720  1899  3414               	retlw	20
  2721  189A  3408               	retlw	8
  2722  189B  3402               	retlw	2
  2723  189C  3401               	retlw	1
  2724  189D  3451               	retlw	81
  2725  189E  3409               	retlw	9
  2726  189F  3406               	retlw	6
  2727  18A0  3432               	retlw	50
  2728  18A1  3449               	retlw	73
  2729  18A2  3479               	retlw	121
  2730  18A3  3441               	retlw	65
  2731  18A4  343E               	retlw	62
  2732  18A5  347E               	retlw	126
  2733  18A6  3411               	retlw	17
  2734  18A7  3411               	retlw	17
  2735  18A8  3411               	retlw	17
  2736  18A9  347E               	retlw	126
  2737  18AA  347F               	retlw	127
  2738  18AB  3449               	retlw	73
  2739  18AC  3449               	retlw	73
  2740  18AD  3449               	retlw	73
  2741  18AE  3436               	retlw	54
  2742  18AF  343E               	retlw	62
  2743  18B0  3441               	retlw	65
  2744  18B1  3441               	retlw	65
  2745  18B2  3441               	retlw	65
  2746  18B3  3422               	retlw	34
  2747  18B4  347F               	retlw	127
  2748  18B5  3441               	retlw	65
  2749  18B6  3441               	retlw	65
  2750  18B7  3422               	retlw	34
  2751  18B8  341C               	retlw	28
  2752  18B9  347F               	retlw	127
  2753  18BA  3449               	retlw	73
  2754  18BB  3449               	retlw	73
  2755  18BC  3449               	retlw	73
  2756  18BD  3441               	retlw	65
  2757  18BE  347F               	retlw	127
  2758  18BF  3409               	retlw	9
  2759  18C0  3409               	retlw	9
  2760  18C1  3409               	retlw	9
  2761  18C2  3401               	retlw	1
  2762  18C3  343E               	retlw	62
  2763  18C4  3441               	retlw	65
  2764  18C5  3449               	retlw	73
  2765  18C6  3449               	retlw	73
  2766  18C7  347A               	retlw	122
  2767  18C8  347F               	retlw	127
  2768  18C9  3408               	retlw	8
  2769  18CA  3408               	retlw	8
  2770  18CB  3408               	retlw	8
  2771  18CC  347F               	retlw	127
  2772  18CD  3400               	retlw	0
  2773  18CE  3441               	retlw	65
  2774  18CF  347F               	retlw	127
  2775  18D0  3441               	retlw	65
  2776  18D1  3400               	retlw	0
  2777  18D2  3420               	retlw	32
  2778  18D3  3440               	retlw	64
  2779  18D4  3441               	retlw	65
  2780  18D5  343F               	retlw	63
  2781  18D6  3401               	retlw	1
  2782  18D7  347F               	retlw	127
  2783  18D8  3408               	retlw	8
  2784  18D9  3414               	retlw	20
  2785  18DA  3422               	retlw	34
  2786  18DB  3441               	retlw	65
  2787  18DC  347F               	retlw	127
  2788  18DD  3440               	retlw	64
  2789  18DE  3440               	retlw	64
  2790  18DF  3440               	retlw	64
  2791  18E0  3440               	retlw	64
  2792  18E1  347F               	retlw	127
  2793  18E2  3402               	retlw	2
  2794  18E3  340C               	retlw	12
  2795  18E4  3402               	retlw	2
  2796  18E5  347F               	retlw	127
  2797  18E6  347F               	retlw	127
  2798  18E7  3404               	retlw	4
  2799  18E8  3408               	retlw	8
  2800  18E9  3410               	retlw	16
  2801  18EA  347F               	retlw	127
  2802  18EB  343E               	retlw	62
  2803  18EC  3441               	retlw	65
  2804  18ED  3441               	retlw	65
  2805  18EE  3441               	retlw	65
  2806  18EF  343E               	retlw	62
  2807  18F0  347F               	retlw	127
  2808  18F1  3409               	retlw	9
  2809  18F2  3409               	retlw	9
  2810  18F3  3409               	retlw	9
  2811  18F4  3406               	retlw	6
  2812  18F5  343E               	retlw	62
  2813  18F6  3441               	retlw	65
  2814  18F7  3451               	retlw	81
  2815  18F8  3421               	retlw	33
  2816  18F9  345E               	retlw	94
  2817  18FA                     __end_of_Alpha1:	
  2818                           
  2819                           	psect	stringtext3
  2820  18FA                     __pstringtext3:	
  2821  18FA                     _Alpha2:	
  2822  18FA  347F               	retlw	127
  2823  18FB  3409               	retlw	9
  2824  18FC  3419               	retlw	25
  2825  18FD  3429               	retlw	41
  2826  18FE  3446               	retlw	70
  2827  18FF  3446               	retlw	70
  2828  1900  3449               	retlw	73
  2829  1901  3449               	retlw	73
  2830  1902  3449               	retlw	73
  2831  1903  3431               	retlw	49
  2832  1904  3401               	retlw	1
  2833  1905  3401               	retlw	1
  2834  1906  347F               	retlw	127
  2835  1907  3401               	retlw	1
  2836  1908  3401               	retlw	1
  2837  1909  343F               	retlw	63
  2838  190A  3440               	retlw	64
  2839  190B  3440               	retlw	64
  2840  190C  3440               	retlw	64
  2841  190D  343F               	retlw	63
  2842  190E  341F               	retlw	31
  2843  190F  3420               	retlw	32
  2844  1910  3440               	retlw	64
  2845  1911  3420               	retlw	32
  2846  1912  341F               	retlw	31
  2847  1913  343F               	retlw	63
  2848  1914  3440               	retlw	64
  2849  1915  3438               	retlw	56
  2850  1916  3440               	retlw	64
  2851  1917  343F               	retlw	63
  2852  1918  3463               	retlw	99
  2853  1919  3414               	retlw	20
  2854  191A  3408               	retlw	8
  2855  191B  3414               	retlw	20
  2856  191C  3463               	retlw	99
  2857  191D  3407               	retlw	7
  2858  191E  3408               	retlw	8
  2859  191F  3470               	retlw	112
  2860  1920  3408               	retlw	8
  2861  1921  3407               	retlw	7
  2862  1922  3461               	retlw	97
  2863  1923  3451               	retlw	81
  2864  1924  3449               	retlw	73
  2865  1925  3445               	retlw	69
  2866  1926  3443               	retlw	67
  2867  1927  3400               	retlw	0
  2868  1928  347F               	retlw	127
  2869  1929  3441               	retlw	65
  2870  192A  3441               	retlw	65
  2871  192B  3400               	retlw	0
  2872  192C  3402               	retlw	2
  2873  192D  3404               	retlw	4
  2874  192E  3408               	retlw	8
  2875  192F  3410               	retlw	16
  2876  1930  3420               	retlw	32
  2877  1931  3400               	retlw	0
  2878  1932  3441               	retlw	65
  2879  1933  3441               	retlw	65
  2880  1934  347F               	retlw	127
  2881  1935  3400               	retlw	0
  2882  1936  3404               	retlw	4
  2883  1937  3402               	retlw	2
  2884  1938  3401               	retlw	1
  2885  1939  3402               	retlw	2
  2886  193A  3404               	retlw	4
  2887  193B  3440               	retlw	64
  2888  193C  3440               	retlw	64
  2889  193D  3440               	retlw	64
  2890  193E  3440               	retlw	64
  2891  193F  3440               	retlw	64
  2892  1940  3400               	retlw	0
  2893  1941  3401               	retlw	1
  2894  1942  3402               	retlw	2
  2895  1943  3404               	retlw	4
  2896  1944  3400               	retlw	0
  2897  1945  3420               	retlw	32
  2898  1946  3454               	retlw	84
  2899  1947  3454               	retlw	84
  2900  1948  3454               	retlw	84
  2901  1949  3478               	retlw	120
  2902  194A  347F               	retlw	127
  2903  194B  3448               	retlw	72
  2904  194C  3444               	retlw	68
  2905  194D  3444               	retlw	68
  2906  194E  3438               	retlw	56
  2907  194F  3438               	retlw	56
  2908  1950  3444               	retlw	68
  2909  1951  3444               	retlw	68
  2910  1952  3444               	retlw	68
  2911  1953  3420               	retlw	32
  2912  1954  3438               	retlw	56
  2913  1955  3444               	retlw	68
  2914  1956  3444               	retlw	68
  2915  1957  3448               	retlw	72
  2916  1958  347F               	retlw	127
  2917  1959  3438               	retlw	56
  2918  195A  3454               	retlw	84
  2919  195B  3454               	retlw	84
  2920  195C  3454               	retlw	84
  2921  195D  3418               	retlw	24
  2922  195E  3408               	retlw	8
  2923  195F  347E               	retlw	126
  2924  1960  3409               	retlw	9
  2925  1961  3401               	retlw	1
  2926  1962  3402               	retlw	2
  2927  1963  340C               	retlw	12
  2928  1964  3452               	retlw	82
  2929  1965  3452               	retlw	82
  2930  1966  3452               	retlw	82
  2931  1967  343E               	retlw	62
  2932  1968  347F               	retlw	127
  2933  1969  3408               	retlw	8
  2934  196A  3404               	retlw	4
  2935  196B  3404               	retlw	4
  2936  196C  3478               	retlw	120
  2937  196D  3400               	retlw	0
  2938  196E  3444               	retlw	68
  2939  196F  347D               	retlw	125
  2940  1970  3440               	retlw	64
  2941  1971  3400               	retlw	0
  2942  1972  3420               	retlw	32
  2943  1973  3440               	retlw	64
  2944  1974  3444               	retlw	68
  2945  1975  343D               	retlw	61
  2946  1976  3400               	retlw	0
  2947  1977  347F               	retlw	127
  2948  1978  3410               	retlw	16
  2949  1979  3428               	retlw	40
  2950  197A  3444               	retlw	68
  2951  197B  3400               	retlw	0
  2952  197C  3400               	retlw	0
  2953  197D  3441               	retlw	65
  2954  197E  347F               	retlw	127
  2955  197F  3440               	retlw	64
  2956  1980  3400               	retlw	0
  2957  1981  347C               	retlw	124
  2958  1982  3404               	retlw	4
  2959  1983  3418               	retlw	24
  2960  1984  3404               	retlw	4
  2961  1985  3478               	retlw	120
  2962  1986  347C               	retlw	124
  2963  1987  3408               	retlw	8
  2964  1988  3404               	retlw	4
  2965  1989  3404               	retlw	4
  2966  198A  3478               	retlw	120
  2967  198B  3438               	retlw	56
  2968  198C  3444               	retlw	68
  2969  198D  3444               	retlw	68
  2970  198E  3444               	retlw	68
  2971  198F  3438               	retlw	56
  2972  1990  347C               	retlw	124
  2973  1991  3414               	retlw	20
  2974  1992  3414               	retlw	20
  2975  1993  3414               	retlw	20
  2976  1994  3408               	retlw	8
  2977  1995  3408               	retlw	8
  2978  1996  3414               	retlw	20
  2979  1997  3414               	retlw	20
  2980  1998  3418               	retlw	24
  2981  1999  347C               	retlw	124
  2982  199A  347C               	retlw	124
  2983  199B  3408               	retlw	8
  2984  199C  3404               	retlw	4
  2985  199D  3404               	retlw	4
  2986  199E  3408               	retlw	8
  2987  199F  3448               	retlw	72
  2988  19A0  3454               	retlw	84
  2989  19A1  3454               	retlw	84
  2990  19A2  3454               	retlw	84
  2991  19A3  3420               	retlw	32
  2992  19A4  3404               	retlw	4
  2993  19A5  343F               	retlw	63
  2994  19A6  3444               	retlw	68
  2995  19A7  3440               	retlw	64
  2996  19A8  3420               	retlw	32
  2997  19A9  343C               	retlw	60
  2998  19AA  3440               	retlw	64
  2999  19AB  3440               	retlw	64
  3000  19AC  3420               	retlw	32
  3001  19AD  347C               	retlw	124
  3002  19AE  341C               	retlw	28
  3003  19AF  3420               	retlw	32
  3004  19B0  3440               	retlw	64
  3005  19B1  3420               	retlw	32
  3006  19B2  341C               	retlw	28
  3007  19B3  343C               	retlw	60
  3008  19B4  3440               	retlw	64
  3009  19B5  3430               	retlw	48
  3010  19B6  3440               	retlw	64
  3011  19B7  343C               	retlw	60
  3012  19B8  3444               	retlw	68
  3013  19B9  3428               	retlw	40
  3014  19BA  3410               	retlw	16
  3015  19BB  3428               	retlw	40
  3016  19BC  3444               	retlw	68
  3017  19BD  340C               	retlw	12
  3018  19BE  3450               	retlw	80
  3019  19BF  3450               	retlw	80
  3020  19C0  3450               	retlw	80
  3021  19C1  343C               	retlw	60
  3022  19C2  3444               	retlw	68
  3023  19C3  3464               	retlw	100
  3024  19C4  3454               	retlw	84
  3025  19C5  344C               	retlw	76
  3026  19C6  3444               	retlw	68
  3027  19C7  3400               	retlw	0
  3028  19C8  3408               	retlw	8
  3029  19C9  3436               	retlw	54
  3030  19CA  3441               	retlw	65
  3031  19CB  3400               	retlw	0
  3032  19CC  3400               	retlw	0
  3033  19CD  3400               	retlw	0
  3034  19CE  347F               	retlw	127
  3035  19CF  3400               	retlw	0
  3036  19D0  3400               	retlw	0
  3037  19D1  3400               	retlw	0
  3038  19D2  3441               	retlw	65
  3039  19D3  3436               	retlw	54
  3040  19D4  3408               	retlw	8
  3041  19D5  3400               	retlw	0
  3042  19D6  3410               	retlw	16
  3043  19D7  3408               	retlw	8
  3044  19D8  3408               	retlw	8
  3045  19D9  3410               	retlw	16
  3046  19DA  3408               	retlw	8
  3047  19DB  3478               	retlw	120
  3048  19DC  3446               	retlw	70
  3049  19DD  3441               	retlw	65
  3050  19DE  3446               	retlw	70
  3051  19DF  3478               	retlw	120
  3052  19E0                     __end_of_Alpha2:	
  3053                           
  3054                           	psect	stringtext4
  3055  2000                     __pstringtext4:	
  3056  2000                     _dpowers:	
  3057  2000  3401               	retlw	1
  3058  2001  3400               	retlw	0
  3059  2002  3400               	retlw	0
  3060  2003  3400               	retlw	0
  3061  2004  340A               	retlw	10
  3062  2005  3400               	retlw	0
  3063  2006  3400               	retlw	0
  3064  2007  3400               	retlw	0
  3065  2008  3464               	retlw	100
  3066  2009  3400               	retlw	0
  3067  200A  3400               	retlw	0
  3068  200B  3400               	retlw	0
  3069  200C  34E8               	retlw	232
  3070  200D  3403               	retlw	3
  3071  200E  3400               	retlw	0
  3072  200F  3400               	retlw	0
  3073  2010  3410               	retlw	16
  3074  2011  3427               	retlw	39
  3075  2012  3400               	retlw	0
  3076  2013  3400               	retlw	0
  3077  2014  34A0               	retlw	160
  3078  2015  3486               	retlw	134
  3079  2016  3401               	retlw	1
  3080  2017  3400               	retlw	0
  3081  2018  3440               	retlw	64
  3082  2019  3442               	retlw	66
  3083  201A  340F               	retlw	15
  3084  201B  3400               	retlw	0
  3085  201C  3480               	retlw	128
  3086  201D  3496               	retlw	150
  3087  201E  3498               	retlw	152
  3088  201F  3400               	retlw	0
  3089  2020  3400               	retlw	0
  3090  2021  34E1               	retlw	225
  3091  2022  34F5               	retlw	245
  3092  2023  3405               	retlw	5
  3093  2024  3400               	retlw	0
  3094  2025  34CA               	retlw	202
  3095  2026  349A               	retlw	154
  3096  2027  343B               	retlw	59
  3097  2028                     __end_of_dpowers:	
  3098                           
  3099                           	psect	stringtext5
  3100  2028                     __pstringtext5:	
  3101  2028                     __powers_:	
  3102  2028  3400               	retlw	0
  3103  2029  3480               	retlw	128
  3104  202A  343F               	retlw	63
  3105  202B  3400               	retlw	0
  3106  202C  3420               	retlw	32
  3107  202D  3441               	retlw	65
  3108  202E  3400               	retlw	0
  3109  202F  34C8               	retlw	200
  3110  2030  3442               	retlw	66
  3111  2031  3400               	retlw	0
  3112  2032  347A               	retlw	122
  3113  2033  3444               	retlw	68
  3114  2034  3440               	retlw	64
  3115  2035  341C               	retlw	28
  3116  2036  3446               	retlw	70
  3117  2037  3450               	retlw	80
  3118  2038  34C3               	retlw	195
  3119  2039  3447               	retlw	71
  3120  203A  3424               	retlw	36
  3121  203B  3474               	retlw	116
  3122  203C  3449               	retlw	73
  3123  203D  3497               	retlw	151
  3124  203E  3418               	retlw	24
  3125  203F  344B               	retlw	75
  3126  2040  34BC               	retlw	188
  3127  2041  34BE               	retlw	190
  3128  2042  344C               	retlw	76
  3129  2043  346B               	retlw	107
  3130  2044  346E               	retlw	110
  3131  2045  344E               	retlw	78
  3132  2046  3403               	retlw	3
  3133  2047  3415               	retlw	21
  3134  2048  3450               	retlw	80
  3135  2049  3479               	retlw	121
  3136  204A  34AD               	retlw	173
  3137  204B  3460               	retlw	96
  3138  204C  34F3               	retlw	243
  3139  204D  3449               	retlw	73
  3140  204E  3471               	retlw	113
  3141  204F                     __end_of__powers_:	
  3142                           
  3143                           	psect	stringtext6
  3144  204F                     __pstringtext6:	
  3145  204F                     __npowers_:	
  3146  204F  3400               	retlw	0
  3147  2050  3480               	retlw	128
  3148  2051  343F               	retlw	63
  3149  2052  34CD               	retlw	205
  3150  2053  34CC               	retlw	204
  3151  2054  343D               	retlw	61
  3152  2055  34D7               	retlw	215
  3153  2056  3423               	retlw	35
  3154  2057  343C               	retlw	60
  3155  2058  3412               	retlw	18
  3156  2059  3483               	retlw	131
  3157  205A  343A               	retlw	58
  3158  205B  34B7               	retlw	183
  3159  205C  34D1               	retlw	209
  3160  205D  3438               	retlw	56
  3161  205E  34C6               	retlw	198
  3162  205F  3427               	retlw	39
  3163  2060  3437               	retlw	55
  3164  2061  3438               	retlw	56
  3165  2062  3486               	retlw	134
  3166  2063  3435               	retlw	53
  3167  2064  34C0               	retlw	192
  3168  2065  34D6               	retlw	214
  3169  2066  3433               	retlw	51
  3170  2067  34CC               	retlw	204
  3171  2068  342B               	retlw	43
  3172  2069  3432               	retlw	50
  3173  206A  3470               	retlw	112
  3174  206B  3489               	retlw	137
  3175  206C  3430               	retlw	48
  3176  206D  34E7               	retlw	231
  3177  206E  34DB               	retlw	219
  3178  206F  342E               	retlw	46
  3179  2070  34E5               	retlw	229
  3180  2071  343C               	retlw	60
  3181  2072  341E               	retlw	30
  3182  2073  3442               	retlw	66
  3183  2074  34A2               	retlw	162
  3184  2075  340D               	retlw	13
  3185  2076                     __end_of__npowers_:	
  3186                           
  3187                           	psect	stringtext7
  3188  0631                     __pstringtext7:	
  3189  0631                     _des:	
  3190  0631  34FF               	retlw	255
  3191  0632  34F1               	retlw	241
  3192  0633  34FF               	retlw	255
  3193  0634  34FF               	retlw	255
  3194  0635  34FF               	retlw	255
  3195  0636  34FF               	retlw	255
  3196  0637  34FF               	retlw	255
  3197  0638  34FF               	retlw	255
  3198  0639  34FF               	retlw	255
  3199  063A  34FF               	retlw	255
  3200  063B  34FF               	retlw	255
  3201  063C  34FF               	retlw	255
  3202  063D  34FF               	retlw	255
  3203  063E  34FF               	retlw	255
  3204  063F  34FF               	retlw	255
  3205  0640  34FF               	retlw	255
  3206  0641  34FF               	retlw	255
  3207  0642  34E0               	retlw	224
  3208  0643  34FF               	retlw	255
  3209  0644  34FF               	retlw	255
  3210  0645  34FF               	retlw	255
  3211  0646  34FF               	retlw	255
  3212  0647  34FF               	retlw	255
  3213  0648  34FF               	retlw	255
  3214  0649  34FF               	retlw	255
  3215  064A  34FF               	retlw	255
  3216  064B  34FF               	retlw	255
  3217  064C  34FF               	retlw	255
  3218  064D  34FF               	retlw	255
  3219  064E  34FF               	retlw	255
  3220  064F  34FF               	retlw	255
  3221  0650  34FF               	retlw	255
  3222  0651  34FF               	retlw	255
  3223  0652  34F0               	retlw	240
  3224  0653  34FF               	retlw	255
  3225  0654  34FF               	retlw	255
  3226  0655  34FF               	retlw	255
  3227  0656  34FF               	retlw	255
  3228  0657  34FF               	retlw	255
  3229  0658  34FF               	retlw	255
  3230  0659  34FF               	retlw	255
  3231  065A  34FF               	retlw	255
  3232  065B  34FF               	retlw	255
  3233  065C  34FF               	retlw	255
  3234  065D  34FF               	retlw	255
  3235  065E  34FF               	retlw	255
  3236  065F  348F               	retlw	143
  3237  0660  34FF               	retlw	255
  3238  0661  34FF               	retlw	255
  3239  0662  34FF               	retlw	255
  3240  0663  34FF               	retlw	255
  3241  0664  34FF               	retlw	255
  3242  0665  34FF               	retlw	255
  3243  0666  34FF               	retlw	255
  3244  0667  34FF               	retlw	255
  3245  0668  34FF               	retlw	255
  3246  0669  34FF               	retlw	255
  3247  066A  34FF               	retlw	255
  3248  066B  34FF               	retlw	255
  3249  066C  34FF               	retlw	255
  3250  066D  34FF               	retlw	255
  3251  066E  34FF               	retlw	255
  3252  066F  3407               	retlw	7
  3253  0670  34FF               	retlw	255
  3254  0671  34FF               	retlw	255
  3255  0672  34FD               	retlw	253
  3256  0673  34FF               	retlw	255
  3257  0674  34FF               	retlw	255
  3258  0675  34FF               	retlw	255
  3259  0676  34FF               	retlw	255
  3260  0677  34FF               	retlw	255
  3261  0678  34FF               	retlw	255
  3262  0679  34FF               	retlw	255
  3263  067A  34FF               	retlw	255
  3264  067B  34FF               	retlw	255
  3265  067C  34FF               	retlw	255
  3266  067D  34FF               	retlw	255
  3267  067E  34FF               	retlw	255
  3268  067F  3487               	retlw	135
  3269  0680  34FF               	retlw	255
  3270  0681  34FF               	retlw	255
  3271  0682  34F9               	retlw	249
  3272  0683  34FF               	retlw	255
  3273  0684  34FF               	retlw	255
  3274  0685  34F9               	retlw	249
  3275  0686  34FF               	retlw	255
  3276  0687  34FF               	retlw	255
  3277  0688  34FF               	retlw	255
  3278  0689  34FF               	retlw	255
  3279  068A  34FF               	retlw	255
  3280  068B  34FF               	retlw	255
  3281  068C  34FF               	retlw	255
  3282  068D  34FF               	retlw	255
  3283  068E  34CF               	retlw	207
  3284  068F  34FF               	retlw	255
  3285  0690  34FF               	retlw	255
  3286  0691  34FF               	retlw	255
  3287  0692  34F0               	retlw	240
  3288  0693  34F8               	retlw	248
  3289  0694  347F               	retlw	127
  3290  0695  34F0               	retlw	240
  3291  0696  34FF               	retlw	255
  3292  0697  34CF               	retlw	207
  3293  0698  34C3               	retlw	195
  3294  0699  34FE               	retlw	254
  3295  069A  340F               	retlw	15
  3296  069B  34FF               	retlw	255
  3297  069C  3483               	retlw	131
  3298  069D  34FF               	retlw	255
  3299  069E  3403               	retlw	3
  3300  069F  34E7               	retlw	231
  3301  06A0  34FF               	retlw	255
  3302  06A1  34FF               	retlw	255
  3303  06A2  34C0               	retlw	192
  3304  06A3  34F0               	retlw	240
  3305  06A4  341F               	retlw	31
  3306  06A5  34E0               	retlw	224
  3307  06A6  3467               	retlw	103
  3308  06A7  348F               	retlw	143
  3309  06A8  3483               	retlw	131
  3310  06A9  34F8               	retlw	248
  3311  06AA  3407               	retlw	7
  3312  06AB  349F               	retlw	159
  3313  06AC  3403               	retlw	3
  3314  06AD  34CE               	retlw	206
  3315  06AE  3403               	retlw	3
  3316  06AF  34C7               	retlw	199
  3317  06B0  34FF               	retlw	255
  3318  06B1  34FF               	retlw	255
  3319  06B2  3480               	retlw	128
  3320  06B3  34F8               	retlw	248
  3321  06B4  3403               	retlw	3
  3322  06B5  34C4               	retlw	196
  3323  06B6  3447               	retlw	71
  3324  06B7  3487               	retlw	135
  3325  06B8  3483               	retlw	131
  3326  06B9  34F0               	retlw	240
  3327  06BA  3407               	retlw	7
  3328  06BB  341F               	retlw	31
  3329  06BC  3403               	retlw	3
  3330  06BD  34C8               	retlw	200
  3331  06BE  3461               	retlw	97
  3332  06BF  34C3               	retlw	195
  3333  06C0  34FF               	retlw	255
  3334  06C1  34FF               	retlw	255
  3335  06C2  3480               	retlw	128
  3336  06C3  3400               	retlw	0
  3337  06C4  3400               	retlw	0
  3338  06C5  3400               	retlw	0
  3339  06C6  3440               	retlw	64
  3340  06C7  340F               	retlw	15
  3341  06C8  3481               	retlw	129
  3342  06C9  34E0               	retlw	224
  3343  06CA  3400               	retlw	0
  3344  06CB  3400               	retlw	0
  3345  06CC  3400               	retlw	0
  3346  06CD  3400               	retlw	0
  3347  06CE  3400               	retlw	0
  3348  06CF  3407               	retlw	7
  3349  06D0  34FF               	retlw	255
  3350  06D1  34FF               	retlw	255
  3351  06D2  3480               	retlw	128
  3352  06D3  3400               	retlw	0
  3353  06D4  3400               	retlw	0
  3354  06D5  3400               	retlw	0
  3355  06D6  3460               	retlw	96
  3356  06D7  340F               	retlw	15
  3357  06D8  3481               	retlw	129
  3358  06D9  34E4               	retlw	228
  3359  06DA  3400               	retlw	0
  3360  06DB  3400               	retlw	0
  3361  06DC  3400               	retlw	0
  3362  06DD  3400               	retlw	0
  3363  06DE  3400               	retlw	0
  3364  06DF  3407               	retlw	7
  3365  06E0  34FF               	retlw	255
  3366  06E1  34FF               	retlw	255
  3367  06E2  3480               	retlw	128
  3368  06E3  3400               	retlw	0
  3369  06E4  3460               	retlw	96
  3370  06E5  3400               	retlw	0
  3371  06E6  3460               	retlw	96
  3372  06E7  340F               	retlw	15
  3373  06E8  3481               	retlw	129
  3374  06E9  34E4               	retlw	228
  3375  06EA  3400               	retlw	0
  3376  06EB  3400               	retlw	0
  3377  06EC  3400               	retlw	0
  3378  06ED  3400               	retlw	0
  3379  06EE  3400               	retlw	0
  3380  06EF  3407               	retlw	7
  3381  06F0  34FF               	retlw	255
  3382  06F1  34FF               	retlw	255
  3383  06F2  34FC               	retlw	252
  3384  06F3  3401               	retlw	1
  3385  06F4  34F8               	retlw	248
  3386  06F5  3438               	retlw	56
  3387  06F6  34C0               	retlw	192
  3388  06F7  341F               	retlw	31
  3389  06F8  34E1               	retlw	225
  3390  06F9  34E7               	retlw	231
  3391  06FA  3400               	retlw	0
  3392  06FB  3441               	retlw	65
  3393  06FC  3481               	retlw	129
  3394  06FD  3420               	retlw	32
  3395  06FE  3400               	retlw	0
  3396  06FF  340F               	retlw	15
  3397  0700  34FF               	retlw	255
  3398  0701  34FF               	retlw	255
  3399  0702  34FF               	retlw	255
  3400  0703  34FE               	retlw	254
  3401  0704  343F               	retlw	63
  3402  0705  34FE               	retlw	254
  3403  0706  3407               	retlw	7
  3404  0707  349F               	retlw	159
  3405  0708  3403               	retlw	3
  3406  0709  34E3               	retlw	227
  3407  070A  34DF               	retlw	223
  3408  070B  341F               	retlw	31
  3409  070C  34E7               	retlw	231
  3410  070D  34FF               	retlw	255
  3411  070E  34FF               	retlw	255
  3412  070F  34FF               	retlw	255
  3413  0710  34FF               	retlw	255
  3414  0711  34FF               	retlw	255
  3415  0712  34FF               	retlw	255
  3416  0713  34FE               	retlw	254
  3417  0714  341F               	retlw	31
  3418  0715  34FF               	retlw	255
  3419  0716  340F               	retlw	15
  3420  0717  348F               	retlw	143
  3421  0718  3483               	retlw	131
  3422  0719  34E7               	retlw	231
  3423  071A  34FE               	retlw	254
  3424  071B  340F               	retlw	15
  3425  071C  34FF               	retlw	255
  3426  071D  34FF               	retlw	255
  3427  071E  34FF               	retlw	255
  3428  071F  34FF               	retlw	255
  3429  0720  34FF               	retlw	255
  3430  0721  34FF               	retlw	255
  3431  0722  34FF               	retlw	255
  3432  0723  34FF               	retlw	255
  3433  0724  343F               	retlw	63
  3434  0725  34FF               	retlw	255
  3435  0726  340F               	retlw	15
  3436  0727  348F               	retlw	143
  3437  0728  34C7               	retlw	199
  3438  0729  34E7               	retlw	231
  3439  072A  34FF               	retlw	255
  3440  072B  340F               	retlw	15
  3441  072C  34FF               	retlw	255
  3442  072D  34FF               	retlw	255
  3443  072E  34FF               	retlw	255
  3444  072F  34FF               	retlw	255
  3445  0730  34FF               	retlw	255
  3446  0731  34FF               	retlw	255
  3447  0732  34FF               	retlw	255
  3448  0733  34FF               	retlw	255
  3449  0734  34FF               	retlw	255
  3450  0735  34FF               	retlw	255
  3451  0736  34FF               	retlw	255
  3452  0737  34FF               	retlw	255
  3453  0738  34FF               	retlw	255
  3454  0739  34E7               	retlw	231
  3455  073A  34FF               	retlw	255
  3456  073B  34FF               	retlw	255
  3457  073C  34FF               	retlw	255
  3458  073D  34FF               	retlw	255
  3459  073E  34FF               	retlw	255
  3460  073F  34FF               	retlw	255
  3461  0740  34FF               	retlw	255
  3462  0741  34FF               	retlw	255
  3463  0742  34FF               	retlw	255
  3464  0743  34FF               	retlw	255
  3465  0744  34FF               	retlw	255
  3466  0745  34FF               	retlw	255
  3467  0746  34FF               	retlw	255
  3468  0747  34FF               	retlw	255
  3469  0748  34FF               	retlw	255
  3470  0749  34FF               	retlw	255
  3471  074A  34FF               	retlw	255
  3472  074B  34FF               	retlw	255
  3473  074C  34FF               	retlw	255
  3474  074D  34FF               	retlw	255
  3475  074E  34FF               	retlw	255
  3476  074F  34FF               	retlw	255
  3477  0750  34FF               	retlw	255
  3478  0751  34FF               	retlw	255
  3479  0752  34FF               	retlw	255
  3480  0753  34FF               	retlw	255
  3481  0754  34FF               	retlw	255
  3482  0755  34FF               	retlw	255
  3483  0756  34FF               	retlw	255
  3484  0757  34FF               	retlw	255
  3485  0758  34FF               	retlw	255
  3486  0759  34FF               	retlw	255
  3487  075A  34FF               	retlw	255
  3488  075B  34FF               	retlw	255
  3489  075C  34FF               	retlw	255
  3490  075D  34FF               	retlw	255
  3491  075E  34FF               	retlw	255
  3492  075F  34FF               	retlw	255
  3493  0760  34FF               	retlw	255
  3494  0761  34FF               	retlw	255
  3495  0762  34FF               	retlw	255
  3496  0763  34FF               	retlw	255
  3497  0764  34FF               	retlw	255
  3498  0765  34FF               	retlw	255
  3499  0766  34FF               	retlw	255
  3500  0767  34FF               	retlw	255
  3501  0768  34FF               	retlw	255
  3502  0769  34FF               	retlw	255
  3503  076A  34FF               	retlw	255
  3504  076B  34FF               	retlw	255
  3505  076C  34FF               	retlw	255
  3506  076D  34FF               	retlw	255
  3507  076E  34FF               	retlw	255
  3508  076F  34FF               	retlw	255
  3509  0770  34FF               	retlw	255
  3510  0771  34FF               	retlw	255
  3511  0772  34FF               	retlw	255
  3512  0773  34FF               	retlw	255
  3513  0774  34FF               	retlw	255
  3514  0775  34FF               	retlw	255
  3515  0776  34FF               	retlw	255
  3516  0777  34FF               	retlw	255
  3517  0778  34FF               	retlw	255
  3518  0779  34FF               	retlw	255
  3519  077A  34FF               	retlw	255
  3520  077B  34FF               	retlw	255
  3521  077C  34FF               	retlw	255
  3522  077D  34FF               	retlw	255
  3523  077E  34FF               	retlw	255
  3524  077F  34FF               	retlw	255
  3525  0780  34FF               	retlw	255
  3526  0781  34FF               	retlw	255
  3527  0782  34FF               	retlw	255
  3528  0783  34FF               	retlw	255
  3529  0784  34FF               	retlw	255
  3530  0785  34FF               	retlw	255
  3531  0786  34FF               	retlw	255
  3532  0787  34FF               	retlw	255
  3533  0788  34FF               	retlw	255
  3534  0789  34FF               	retlw	255
  3535  078A  34FF               	retlw	255
  3536  078B  34FF               	retlw	255
  3537  078C  34FF               	retlw	255
  3538  078D  34FF               	retlw	255
  3539  078E  34FF               	retlw	255
  3540  078F  34FF               	retlw	255
  3541  0790  34FF               	retlw	255
  3542  0791  34FF               	retlw	255
  3543  0792  34FF               	retlw	255
  3544  0793  34FF               	retlw	255
  3545  0794  34FF               	retlw	255
  3546  0795  34FF               	retlw	255
  3547  0796  34FF               	retlw	255
  3548  0797  34FF               	retlw	255
  3549  0798  34FF               	retlw	255
  3550  0799  34FF               	retlw	255
  3551  079A  34FF               	retlw	255
  3552  079B  34FF               	retlw	255
  3553  079C  34FF               	retlw	255
  3554  079D  34FF               	retlw	255
  3555  079E  34FF               	retlw	255
  3556  079F  34FF               	retlw	255
  3557  07A0  34FF               	retlw	255
  3558  07A1  34FF               	retlw	255
  3559  07A2  34FF               	retlw	255
  3560  07A3  34FF               	retlw	255
  3561  07A4  34FF               	retlw	255
  3562  07A5  34FF               	retlw	255
  3563  07A6  34FF               	retlw	255
  3564  07A7  34FF               	retlw	255
  3565  07A8  34FF               	retlw	255
  3566  07A9  34FF               	retlw	255
  3567  07AA  34FF               	retlw	255
  3568  07AB  34FF               	retlw	255
  3569  07AC  34FF               	retlw	255
  3570  07AD  34FF               	retlw	255
  3571  07AE  34FF               	retlw	255
  3572  07AF  34FF               	retlw	255
  3573  07B0  34FF               	retlw	255
  3574  07B1  34FF               	retlw	255
  3575  07B2  34FF               	retlw	255
  3576  07B3  34FF               	retlw	255
  3577  07B4  34FF               	retlw	255
  3578  07B5  34FF               	retlw	255
  3579  07B6  34FF               	retlw	255
  3580  07B7  34EF               	retlw	239
  3581  07B8  34FF               	retlw	255
  3582  07B9  34FF               	retlw	255
  3583  07BA  34FF               	retlw	255
  3584  07BB  34FF               	retlw	255
  3585  07BC  34FF               	retlw	255
  3586  07BD  34FF               	retlw	255
  3587  07BE  34FF               	retlw	255
  3588  07BF  34FF               	retlw	255
  3589  07C0  34FF               	retlw	255
  3590  07C1  34FF               	retlw	255
  3591  07C2  34FF               	retlw	255
  3592  07C3  34FF               	retlw	255
  3593  07C4  34FF               	retlw	255
  3594  07C5  34FF               	retlw	255
  3595  07C6  34FF               	retlw	255
  3596  07C7  34C7               	retlw	199
  3597  07C8  34F7               	retlw	247
  3598  07C9  34FF               	retlw	255
  3599  07CA  34F3               	retlw	243
  3600  07CB  34FF               	retlw	255
  3601  07CC  34DF               	retlw	223
  3602  07CD  34FF               	retlw	255
  3603  07CE  34FF               	retlw	255
  3604  07CF  34FF               	retlw	255
  3605  07D0  34FF               	retlw	255
  3606  07D1  34FF               	retlw	255
  3607  07D2  34FF               	retlw	255
  3608  07D3  34FF               	retlw	255
  3609  07D4  34FF               	retlw	255
  3610  07D5  34FF               	retlw	255
  3611  07D6  34FF               	retlw	255
  3612  07D7  34C3               	retlw	195
  3613  07D8  34E7               	retlw	231
  3614  07D9  34FF               	retlw	255
  3615  07DA  34F1               	retlw	241
  3616  07DB  34FF               	retlw	255
  3617  07DC  349C               	retlw	156
  3618  07DD  347F               	retlw	127
  3619  07DE  34FF               	retlw	255
  3620  07DF  34FF               	retlw	255
  3621  07E0  34FF               	retlw	255
  3622  07E1  34FF               	retlw	255
  3623  07E2  34FF               	retlw	255
  3624  07E3  34FF               	retlw	255
  3625  07E4  34F9               	retlw	249
  3626  07E5  34FF               	retlw	255
  3627  07E6  34FF               	retlw	255
  3628  07E7  34C3               	retlw	195
  3629  07E8  34C7               	retlw	199
  3630  07E9  34FF               	retlw	255
  3631  07EA  34F1               	retlw	241
  3632  07EB  34FF               	retlw	255
  3633  07EC  341C               	retlw	28
  3634  07ED  343F               	retlw	63
  3635  07EE  34FF               	retlw	255
  3636  07EF  34FF               	retlw	255
  3637  07F0  34FF               	retlw	255
  3638  07F1  34FF               	retlw	255
  3639  07F2  34FF               	retlw	255
  3640  07F3  34FF               	retlw	255
  3641  07F4  34F8               	retlw	248
  3642  07F5  34FF               	retlw	255
  3643  07F6  343F               	retlw	63
  3644  07F7  34C7               	retlw	199
  3645  07F8  34C7               	retlw	199
  3646  07F9  34FF               	retlw	255
  3647  07FA  34FF               	retlw	255
  3648  07FB  34FF               	retlw	255
  3649  07FC  341E               	retlw	30
  3650  07FD  347F               	retlw	127
  3651  07FE  34FF               	retlw	255
  3652  07FF  34FF               	retlw	255
  3653  0800  34FF               	retlw	255
  3654  0801  34FF               	retlw	255
  3655  0802  34FF               	retlw	255
  3656  0803  34FF               	retlw	255
  3657  0804  34FD               	retlw	253
  3658  0805  34FE               	retlw	254
  3659  0806  343F               	retlw	63
  3660  0807  3487               	retlw	135
  3661  0808  34C7               	retlw	199
  3662  0809  34FF               	retlw	255
  3663  080A  34F9               	retlw	249
  3664  080B  34FF               	retlw	255
  3665  080C  341F               	retlw	31
  3666  080D  34FF               	retlw	255
  3667  080E  34CF               	retlw	207
  3668  080F  34FF               	retlw	255
  3669  0810  34FF               	retlw	255
  3670  0811  34FF               	retlw	255
  3671  0812  34FF               	retlw	255
  3672  0813  34FF               	retlw	255
  3673  0814  34FF               	retlw	255
  3674  0815  34FC               	retlw	252
  3675  0816  341F               	retlw	31
  3676  0817  3407               	retlw	7
  3677  0818  34C7               	retlw	199
  3678  0819  34EF               	retlw	239
  3679  081A  34F0               	retlw	240
  3680  081B  34F9               	retlw	249
  3681  081C  341E               	retlw	30
  3682  081D  347F               	retlw	127
  3683  081E  3487               	retlw	135
  3684  081F  34FF               	retlw	255
  3685  0820  34FF               	retlw	255
  3686  0821  34FF               	retlw	255
  3687  0822  34FF               	retlw	255
  3688  0823  34FF               	retlw	255
  3689  0824  34FC               	retlw	252
  3690  0825  34F8               	retlw	248
  3691  0826  341E               	retlw	30
  3692  0827  3403               	retlw	3
  3693  0828  34C7               	retlw	199
  3694  0829  34EF               	retlw	239
  3695  082A  34E0               	retlw	224
  3696  082B  34F1               	retlw	241
  3697  082C  341E               	retlw	30
  3698  082D  343F               	retlw	63
  3699  082E  3483               	retlw	131
  3700  082F  34FF               	retlw	255
  3701  0830  34FF               	retlw	255
  3702  0831  34FF               	retlw	255
  3703  0832  34FF               	retlw	255
  3704  0833  34FF               	retlw	255
  3705  0834  34F8               	retlw	248
  3706  0835  34F8               	retlw	248
  3707  0836  341E               	retlw	30
  3708  0837  3400               	retlw	0
  3709  0838  3447               	retlw	71
  3710  0839  34CF               	retlw	207
  3711  083A  34C0               	retlw	192
  3712  083B  34F1               	retlw	241
  3713  083C  341E               	retlw	30
  3714  083D  343F               	retlw	63
  3715  083E  3401               	retlw	1
  3716  083F  34FF               	retlw	255
  3717  0840  34FF               	retlw	255
  3718  0841  34FF               	retlw	255
  3719  0842  34FF               	retlw	255
  3720  0843  3470               	retlw	112
  3721  0844  3400               	retlw	0
  3722  0845  3400               	retlw	0
  3723  0846  3400               	retlw	0
  3724  0847  3400               	retlw	0
  3725  0848  3447               	retlw	71
  3726  0849  34C0               	retlw	192
  3727  084A  3400               	retlw	0
  3728  084B  3401               	retlw	1
  3729  084C  3400               	retlw	0
  3730  084D  343E               	retlw	62
  3731  084E  3401               	retlw	1
  3732  084F  34FF               	retlw	255
  3733  0850  34FF               	retlw	255
  3734  0851  34FF               	retlw	255
  3735  0852  34FF               	retlw	255
  3736  0853  3470               	retlw	112
  3737  0854  3400               	retlw	0
  3738  0855  3400               	retlw	0
  3739  0856  3400               	retlw	0
  3740  0857  3400               	retlw	0
  3741  0858  34C7               	retlw	199
  3742  0859  34C0               	retlw	192
  3743  085A  3400               	retlw	0
  3744  085B  3401               	retlw	1
  3745  085C  3400               	retlw	0
  3746  085D  343E               	retlw	62
  3747  085E  3401               	retlw	1
  3748  085F  34FF               	retlw	255
  3749  0860  34FF               	retlw	255
  3750  0861  34FF               	retlw	255
  3751  0862  34FE               	retlw	254
  3752  0863  3460               	retlw	96
  3753  0864  3400               	retlw	0
  3754  0865  3400               	retlw	0
  3755  0866  3400               	retlw	0
  3756  0867  340F               	retlw	15
  3757  0868  34CF               	retlw	207
  3758  0869  34C0               	retlw	192
  3759  086A  3400               	retlw	0
  3760  086B  3403               	retlw	3
  3761  086C  3400               	retlw	0
  3762  086D  347E               	retlw	126
  3763  086E  3403               	retlw	3
  3764  086F  34FF               	retlw	255
  3765  0870  34FF               	retlw	255
  3766  0871  34FF               	retlw	255
  3767  0872  34FE               	retlw	254
  3768  0873  3470               	retlw	112
  3769  0874  3426               	retlw	38
  3770  0875  3400               	retlw	0
  3771  0876  3400               	retlw	0
  3772  0877  343F               	retlw	63
  3773  0878  34CF               	retlw	207
  3774  0879  34F0               	retlw	240
  3775  087A  340C               	retlw	12
  3776  087B  3407               	retlw	7
  3777  087C  3488               	retlw	136
  3778  087D  34FC               	retlw	252
  3779  087E  3407               	retlw	7
  3780  087F  34FF               	retlw	255
  3781  0880  34FF               	retlw	255
  3782  0881  34FF               	retlw	255
  3783  0882  34FE               	retlw	254
  3784  0883  3400               	retlw	0
  3785  0884  34FF               	retlw	255
  3786  0885  34E0               	retlw	224
  3787  0886  341F               	retlw	31
  3788  0887  34C7               	retlw	199
  3789  0888  34FF               	retlw	255
  3790  0889  34FF               	retlw	255
  3791  088A  34FF               	retlw	255
  3792  088B  34C3               	retlw	195
  3793  088C  34FF               	retlw	255
  3794  088D  34FC               	retlw	252
  3795  088E  347F               	retlw	127
  3796  088F  34FF               	retlw	255
  3797  0890  34FF               	retlw	255
  3798  0891  34FF               	retlw	255
  3799  0892  34FE               	retlw	254
  3800  0893  3400               	retlw	0
  3801  0894  34FF               	retlw	255
  3802  0895  34E0               	retlw	224
  3803  0896  343F               	retlw	63
  3804  0897  34C3               	retlw	195
  3805  0898  34FF               	retlw	255
  3806  0899  34FF               	retlw	255
  3807  089A  34FF               	retlw	255
  3808  089B  34C1               	retlw	193
  3809  089C  34FF               	retlw	255
  3810  089D  34FC               	retlw	252
  3811  089E  347F               	retlw	127
  3812  089F  34FF               	retlw	255
  3813  08A0  34FF               	retlw	255
  3814  08A1  34FF               	retlw	255
  3815  08A2  34FF               	retlw	255
  3816  08A3  3401               	retlw	1
  3817  08A4  34FF               	retlw	255
  3818  08A5  34F0               	retlw	240
  3819  08A6  347F               	retlw	127
  3820  08A7  34E7               	retlw	231
  3821  08A8  34FF               	retlw	255
  3822  08A9  34FF               	retlw	255
  3823  08AA  34FF               	retlw	255
  3824  08AB  34C1               	retlw	193
  3825  08AC  34FF               	retlw	255
  3826  08AD  34FC               	retlw	252
  3827  08AE  347F               	retlw	127
  3828  08AF  34FF               	retlw	255
  3829  08B0  34FF               	retlw	255
  3830  08B1  34FF               	retlw	255
  3831  08B2  34FF               	retlw	255
  3832  08B3  3487               	retlw	135
  3833  08B4  34FF               	retlw	255
  3834  08B5  34FD               	retlw	253
  3835  08B6  34FF               	retlw	255
  3836  08B7  34FF               	retlw	255
  3837  08B8  34FF               	retlw	255
  3838  08B9  34FF               	retlw	255
  3839  08BA  34FF               	retlw	255
  3840  08BB  34FF               	retlw	255
  3841  08BC  34FF               	retlw	255
  3842  08BD  34FC               	retlw	252
  3843  08BE  34FF               	retlw	255
  3844  08BF  34FF               	retlw	255
  3845  08C0  34FF               	retlw	255
  3846  08C1  34FF               	retlw	255
  3847  08C2  34FF               	retlw	255
  3848  08C3  3487               	retlw	135
  3849  08C4  34FF               	retlw	255
  3850  08C5  34FF               	retlw	255
  3851  08C6  34FF               	retlw	255
  3852  08C7  34FF               	retlw	255
  3853  08C8  34FF               	retlw	255
  3854  08C9  34FF               	retlw	255
  3855  08CA  34FF               	retlw	255
  3856  08CB  34FF               	retlw	255
  3857  08CC  34FF               	retlw	255
  3858  08CD  34FE               	retlw	254
  3859  08CE  34FF               	retlw	255
  3860  08CF  34FF               	retlw	255
  3861  08D0  34FF               	retlw	255
  3862  08D1  34FF               	retlw	255
  3863  08D2  34FF               	retlw	255
  3864  08D3  3483               	retlw	131
  3865  08D4  34FF               	retlw	255
  3866  08D5  34FF               	retlw	255
  3867  08D6  34FF               	retlw	255
  3868  08D7  34FF               	retlw	255
  3869  08D8  34FF               	retlw	255
  3870  08D9  34FF               	retlw	255
  3871  08DA  34FF               	retlw	255
  3872  08DB  34FF               	retlw	255
  3873  08DC  34FF               	retlw	255
  3874  08DD  34FF               	retlw	255
  3875  08DE  34FF               	retlw	255
  3876  08DF  34FF               	retlw	255
  3877  08E0  34FF               	retlw	255
  3878  08E1  34FF               	retlw	255
  3879  08E2  34FF               	retlw	255
  3880  08E3  3483               	retlw	131
  3881  08E4  34FF               	retlw	255
  3882  08E5  34FF               	retlw	255
  3883  08E6  34FF               	retlw	255
  3884  08E7  34FF               	retlw	255
  3885  08E8  34FF               	retlw	255
  3886  08E9  34FF               	retlw	255
  3887  08EA  34FF               	retlw	255
  3888  08EB  34FF               	retlw	255
  3889  08EC  34FF               	retlw	255
  3890  08ED  34FF               	retlw	255
  3891  08EE  34FF               	retlw	255
  3892  08EF  34FF               	retlw	255
  3893  08F0  34FF               	retlw	255
  3894  08F1  34FF               	retlw	255
  3895  08F2  34FF               	retlw	255
  3896  08F3  34FF               	retlw	255
  3897  08F4  34FF               	retlw	255
  3898  08F5  34FF               	retlw	255
  3899  08F6  34FF               	retlw	255
  3900  08F7  34FF               	retlw	255
  3901  08F8  34FF               	retlw	255
  3902  08F9  34FF               	retlw	255
  3903  08FA  34FF               	retlw	255
  3904  08FB  34FF               	retlw	255
  3905  08FC  34FF               	retlw	255
  3906  08FD  34FF               	retlw	255
  3907  08FE  34FF               	retlw	255
  3908  08FF  34FF               	retlw	255
  3909  0900  34FF               	retlw	255
  3910  0901  34FF               	retlw	255
  3911  0902  34FF               	retlw	255
  3912  0903  34FF               	retlw	255
  3913  0904  34FF               	retlw	255
  3914  0905  34FF               	retlw	255
  3915  0906  34FF               	retlw	255
  3916  0907  34FF               	retlw	255
  3917  0908  34FF               	retlw	255
  3918  0909  34FF               	retlw	255
  3919  090A  34FF               	retlw	255
  3920  090B  34FF               	retlw	255
  3921  090C  34FF               	retlw	255
  3922  090D  34FF               	retlw	255
  3923  090E  34FF               	retlw	255
  3924  090F  34FF               	retlw	255
  3925  0910  34FF               	retlw	255
  3926  0911  34FF               	retlw	255
  3927  0912  34FF               	retlw	255
  3928  0913  34FF               	retlw	255
  3929  0914  34FF               	retlw	255
  3930  0915  34FF               	retlw	255
  3931  0916  34FF               	retlw	255
  3932  0917  34FF               	retlw	255
  3933  0918  34FF               	retlw	255
  3934  0919  34FF               	retlw	255
  3935  091A  34FF               	retlw	255
  3936  091B  34FF               	retlw	255
  3937  091C  34FF               	retlw	255
  3938  091D  34FF               	retlw	255
  3939  091E  34FF               	retlw	255
  3940  091F  34FF               	retlw	255
  3941  0920  34FF               	retlw	255
  3942  0921  34FF               	retlw	255
  3943  0922  34FF               	retlw	255
  3944  0923  34FF               	retlw	255
  3945  0924  34FF               	retlw	255
  3946  0925  34FF               	retlw	255
  3947  0926  34FF               	retlw	255
  3948  0927  34FF               	retlw	255
  3949  0928  34FF               	retlw	255
  3950  0929  34FF               	retlw	255
  3951  092A  34FF               	retlw	255
  3952  092B  34FF               	retlw	255
  3953  092C  34FF               	retlw	255
  3954  092D  34FF               	retlw	255
  3955  092E  34FF               	retlw	255
  3956  092F  34FF               	retlw	255
  3957  0930  34FF               	retlw	255
  3958  0931  34FF               	retlw	255
  3959  0932  34FF               	retlw	255
  3960  0933  34FF               	retlw	255
  3961  0934  34FF               	retlw	255
  3962  0935  34FF               	retlw	255
  3963  0936  34FF               	retlw	255
  3964  0937  34FF               	retlw	255
  3965  0938  34FF               	retlw	255
  3966  0939  34FF               	retlw	255
  3967  093A  34FF               	retlw	255
  3968  093B  34FF               	retlw	255
  3969  093C  34FF               	retlw	255
  3970  093D  34FF               	retlw	255
  3971  093E  34FF               	retlw	255
  3972  093F  34FF               	retlw	255
  3973  0940  34FF               	retlw	255
  3974  0941  34FF               	retlw	255
  3975  0942  34FF               	retlw	255
  3976  0943  34FF               	retlw	255
  3977  0944  34FF               	retlw	255
  3978  0945  34FF               	retlw	255
  3979  0946  34F8               	retlw	248
  3980  0947  34E3               	retlw	227
  3981  0948  34FF               	retlw	255
  3982  0949  34FF               	retlw	255
  3983  094A  34FF               	retlw	255
  3984  094B  34FF               	retlw	255
  3985  094C  34FF               	retlw	255
  3986  094D  34FF               	retlw	255
  3987  094E  34FF               	retlw	255
  3988  094F  34FF               	retlw	255
  3989  0950  34FF               	retlw	255
  3990  0951  34FF               	retlw	255
  3991  0952  34FF               	retlw	255
  3992  0953  34FF               	retlw	255
  3993  0954  34FF               	retlw	255
  3994  0955  34FF               	retlw	255
  3995  0956  34F8               	retlw	248
  3996  0957  34E3               	retlw	227
  3997  0958  34E1               	retlw	225
  3998  0959  34FC               	retlw	252
  3999  095A  34FF               	retlw	255
  4000  095B  34FF               	retlw	255
  4001  095C  34FF               	retlw	255
  4002  095D  34FF               	retlw	255
  4003  095E  34FF               	retlw	255
  4004  095F  34FF               	retlw	255
  4005  0960  34FF               	retlw	255
  4006  0961  34FF               	retlw	255
  4007  0962  34FF               	retlw	255
  4008  0963  34FF               	retlw	255
  4009  0964  34FF               	retlw	255
  4010  0965  34FF               	retlw	255
  4011  0966  34FC               	retlw	252
  4012  0967  3467               	retlw	103
  4013  0968  34C0               	retlw	192
  4014  0969  34F0               	retlw	240
  4015  096A  34FF               	retlw	255
  4016  096B  34FF               	retlw	255
  4017  096C  34FF               	retlw	255
  4018  096D  34FF               	retlw	255
  4019  096E  34FF               	retlw	255
  4020  096F  34FF               	retlw	255
  4021  0970  34FF               	retlw	255
  4022  0971  34FF               	retlw	255
  4023  0972  34FF               	retlw	255
  4024  0973  34FF               	retlw	255
  4025  0974  34FF               	retlw	255
  4026  0975  34FF               	retlw	255
  4027  0976  34FC               	retlw	252
  4028  0977  3447               	retlw	71
  4029  0978  34C0               	retlw	192
  4030  0979  34E0               	retlw	224
  4031  097A  34FF               	retlw	255
  4032  097B  34FF               	retlw	255
  4033  097C  34FF               	retlw	255
  4034  097D  34FF               	retlw	255
  4035  097E  34FF               	retlw	255
  4036  097F  34FF               	retlw	255
  4037  0980  34FF               	retlw	255
  4038  0981  34FF               	retlw	255
  4039  0982  34FF               	retlw	255
  4040  0983  34FF               	retlw	255
  4041  0984  34FF               	retlw	255
  4042  0985  34FF               	retlw	255
  4043  0986  34FC               	retlw	252
  4044  0987  3447               	retlw	71
  4045  0988  34C4               	retlw	196
  4046  0989  3470               	retlw	112
  4047  098A  34FF               	retlw	255
  4048  098B  34FF               	retlw	255
  4049  098C  34FF               	retlw	255
  4050  098D  34FF               	retlw	255
  4051  098E  34FF               	retlw	255
  4052  098F  34FF               	retlw	255
  4053  0990  34FF               	retlw	255
  4054  0991  34FF               	retlw	255
  4055  0992  34FF               	retlw	255
  4056  0993  34FF               	retlw	255
  4057  0994  34FF               	retlw	255
  4058  0995  34FF               	retlw	255
  4059  0996  34FE               	retlw	254
  4060  0997  344F               	retlw	79
  4061  0998  3484               	retlw	132
  4062  0999  3478               	retlw	120
  4063  099A  34FF               	retlw	255
  4064  099B  34FF               	retlw	255
  4065  099C  34FF               	retlw	255
  4066  099D  34FF               	retlw	255
  4067  099E  34FF               	retlw	255
  4068  099F  34FF               	retlw	255
  4069  09A0  34FF               	retlw	255
  4070  09A1  34FF               	retlw	255
  4071  09A2  34FF               	retlw	255
  4072  09A3  34FF               	retlw	255
  4073  09A4  34FF               	retlw	255
  4074  09A5  34FF               	retlw	255
  4075  09A6  34FE               	retlw	254
  4076  09A7  340F               	retlw	15
  4077  09A8  34C4               	retlw	196
  4078  09A9  3478               	retlw	120
  4079  09AA  34FF               	retlw	255
  4080  09AB  34FF               	retlw	255
  4081  09AC  34FF               	retlw	255
  4082  09AD  34FF               	retlw	255
  4083  09AE  34FF               	retlw	255
  4084  09AF  34FF               	retlw	255
  4085  09B0  34FF               	retlw	255
  4086  09B1  34FF               	retlw	255
  4087  09B2  34FF               	retlw	255
  4088  09B3  34FF               	retlw	255
  4089  09B4  34FF               	retlw	255
  4090  09B5  34FF               	retlw	255
  4091  09B6  34FE               	retlw	254
  4092  09B7  340F               	retlw	15
  4093  09B8  34C0               	retlw	192
  4094  09B9  34F8               	retlw	248
  4095  09BA  34FF               	retlw	255
  4096  09BB  34FF               	retlw	255
  4097  09BC  34FF               	retlw	255
  4098  09BD  34FF               	retlw	255
  4099  09BE  34FF               	retlw	255
  4100  09BF  34FF               	retlw	255
  4101  09C0  34FF               	retlw	255
  4102  09C1  34FF               	retlw	255
  4103  09C2  34FF               	retlw	255
  4104  09C3  34FF               	retlw	255
  4105  09C4  34FF               	retlw	255
  4106  09C5  34FF               	retlw	255
  4107  09C6  34FF               	retlw	255
  4108  09C7  341F               	retlw	31
  4109  09C8  34C0               	retlw	192
  4110  09C9  3498               	retlw	152
  4111  09CA  34FF               	retlw	255
  4112  09CB  34FF               	retlw	255
  4113  09CC  34FF               	retlw	255
  4114  09CD  34FF               	retlw	255
  4115  09CE  34FF               	retlw	255
  4116  09CF  34FF               	retlw	255
  4117  09D0  34FF               	retlw	255
  4118  09D1  34FF               	retlw	255
  4119  09D2  34FF               	retlw	255
  4120  09D3  34FF               	retlw	255
  4121  09D4  34FF               	retlw	255
  4122  09D5  34FF               	retlw	255
  4123  09D6  34FF               	retlw	255
  4124  09D7  341F               	retlw	31
  4125  09D8  34E0               	retlw	224
  4126  09D9  3498               	retlw	152
  4127  09DA  34FF               	retlw	255
  4128  09DB  34FF               	retlw	255
  4129  09DC  34FF               	retlw	255
  4130  09DD  34FF               	retlw	255
  4131  09DE  34FF               	retlw	255
  4132  09DF  34FF               	retlw	255
  4133  09E0  34FF               	retlw	255
  4134  09E1  34FF               	retlw	255
  4135  09E2  34FF               	retlw	255
  4136  09E3  34FF               	retlw	255
  4137  09E4  34FF               	retlw	255
  4138  09E5  34FF               	retlw	255
  4139  09E6  34FF               	retlw	255
  4140  09E7  34BF               	retlw	191
  4141  09E8  34F3               	retlw	243
  4142  09E9  34FD               	retlw	253
  4143  09EA  34FF               	retlw	255
  4144  09EB  34FF               	retlw	255
  4145  09EC  34FF               	retlw	255
  4146  09ED  34FF               	retlw	255
  4147  09EE  34FF               	retlw	255
  4148  09EF  34FF               	retlw	255
  4149  09F0  34FF               	retlw	255
  4150  09F1  34FF               	retlw	255
  4151  09F2  34FF               	retlw	255
  4152  09F3  34FF               	retlw	255
  4153  09F4  34FF               	retlw	255
  4154  09F5  34FF               	retlw	255
  4155  09F6  34FF               	retlw	255
  4156  09F7  34FF               	retlw	255
  4157  09F8  34FF               	retlw	255
  4158  09F9  34FF               	retlw	255
  4159  09FA  34FF               	retlw	255
  4160  09FB  34FF               	retlw	255
  4161  09FC  34FF               	retlw	255
  4162  09FD  34FF               	retlw	255
  4163  09FE  34FF               	retlw	255
  4164  09FF  34FF               	retlw	255
  4165  0A00  34FF               	retlw	255
  4166  0A01  34FF               	retlw	255
  4167  0A02  34FF               	retlw	255
  4168  0A03  34FF               	retlw	255
  4169  0A04  34FF               	retlw	255
  4170  0A05  34FF               	retlw	255
  4171  0A06  34FF               	retlw	255
  4172  0A07  34FF               	retlw	255
  4173  0A08  34FF               	retlw	255
  4174  0A09  34FF               	retlw	255
  4175  0A0A  34FF               	retlw	255
  4176  0A0B  34FF               	retlw	255
  4177  0A0C  34FF               	retlw	255
  4178  0A0D  34FF               	retlw	255
  4179  0A0E  34FF               	retlw	255
  4180  0A0F  34FF               	retlw	255
  4181  0A10  34FF               	retlw	255
  4182  0A11  34FF               	retlw	255
  4183  0A12  34FF               	retlw	255
  4184  0A13  34FF               	retlw	255
  4185  0A14  34FF               	retlw	255
  4186  0A15  34FF               	retlw	255
  4187  0A16  34FF               	retlw	255
  4188  0A17  34FF               	retlw	255
  4189  0A18  34FF               	retlw	255
  4190  0A19  34FF               	retlw	255
  4191  0A1A  34FF               	retlw	255
  4192  0A1B  34FF               	retlw	255
  4193  0A1C  34FF               	retlw	255
  4194  0A1D  34FF               	retlw	255
  4195  0A1E  34FF               	retlw	255
  4196  0A1F  34FF               	retlw	255
  4197  0A20  34FF               	retlw	255
  4198  0A21  34FF               	retlw	255
  4199  0A22  34FF               	retlw	255
  4200  0A23  34FF               	retlw	255
  4201  0A24  34FF               	retlw	255
  4202  0A25  34FF               	retlw	255
  4203  0A26  34FF               	retlw	255
  4204  0A27  34FF               	retlw	255
  4205  0A28  34FF               	retlw	255
  4206  0A29  34FF               	retlw	255
  4207  0A2A  34FF               	retlw	255
  4208  0A2B  34FF               	retlw	255
  4209  0A2C  34FF               	retlw	255
  4210  0A2D  34FF               	retlw	255
  4211  0A2E  34FF               	retlw	255
  4212  0A2F  34FF               	retlw	255
  4213  0A30  34FF               	retlw	255
  4214  0A31                     __end_of_des:	
  4215  000C                     _PORTAbits	set	12
  4216  000E                     _PORTCbits	set	14
  4217  005B                     _IOCIE	set	91
  4218  005F                     _GIE	set	95
  4219  008D                     _TRISB	set	141
  4220  008F                     _TRISD	set	143
  4221  008C                     _TRISA	set	140
  4222  008E                     _TRISC	set	142
  4223  0097                     _OPTION_REGbits	set	151
  4224  009D                     _BORCON	set	157
  4225  009A                     _OSCTUNE	set	154
  4226  009C                     _OSCSTAT	set	156
  4227  009B                     _OSCCON	set	155
  4228  010F                     _LATDbits	set	271
  4229  010E                     _LATCbits	set	270
  4230  010D                     _LATBbits	set	269
  4231  018D                     _ANSELB	set	397
  4232  018F                     _ANSELD	set	399
  4233  018C                     _ANSELA	set	396
  4234  018E                     _ANSELC	set	398
  4235  020E                     _WPUC	set	526
  4236  028D                     _ODCONB	set	653
  4237  030D                     _SLRCONB	set	781
  4238  038C                     _INLVLA	set	908
  4239  1C9B                     _IOCAF3	set	7323
  4240  1C8B                     _IOCAP3	set	7307
  4241  0490                     _ADCON0bits	set	1168
  4242  0490                     _ADCON0	set	1168
  4243  048F                     _ADRESH	set	1167
  4244  048E                     _ADRESL	set	1166
  4245  0492                     _ADCON2	set	1170
  4246  0491                     _ADCON1	set	1169
  4247  058D                     _DACLDbits	set	1421
  4248  0590                     _DAC1REFH	set	1424
  4249  058F                     _DAC1REFL	set	1423
  4250  058E                     _DAC1CON0bits	set	1422
  4251  058D                     _DACLD	set	1421
  4252  058E                     _DAC1CON0	set	1422
  4253  0A31                     STR_2:	
  4254  0A31  3443               	retlw	67	;'C'
  4255  0A32  3475               	retlw	117	;'u'
  4256  0A33  3472               	retlw	114	;'r'
  4257  0A34  3472               	retlw	114	;'r'
  4258  0A35  3465               	retlw	101	;'e'
  4259  0A36  346E               	retlw	110	;'n'
  4260  0A37  3474               	retlw	116	;'t'
  4261  0A38  3420               	retlw	32	;' '
  4262  0A39  3420               	retlw	32	;' '
  4263  0A3A  3420               	retlw	32	;' '
  4264  0A3B  3469               	retlw	105	;'i'
  4265  0A3C  346E               	retlw	110	;'n'
  4266  0A3D  3420               	retlw	32	;' '
  4267  0A3E  346D               	retlw	109	;'m'
  4268  0A3F  3441               	retlw	65	;'A'
  4269  0A40  343A               	retlw	58	;':'
  4270  0A41  3400               	retlw	0
  4271                           
  4272                           	psect	stringtext8
  4273  2076                     __pstringtext8:	
  4274  2076                     STR_4:	
  4275  2076  3444               	retlw	68	;'D'
  4276  2077  3441               	retlw	65	;'A'
  4277  2078  3443               	retlw	67	;'C'
  4278  2079  3420               	retlw	32	;' '
  4279  207A  346F               	retlw	111	;'o'
  4280  207B  3475               	retlw	117	;'u'
  4281  207C  3474               	retlw	116	;'t'
  4282  207D  3420               	retlw	32	;' '
  4283  207E  3420               	retlw	32	;' '
  4284  207F  3420               	retlw	32	;' '
  4285  2080  3469               	retlw	105	;'i'
  4286  2081  346E               	retlw	110	;'n'
  4287  2082  3420               	retlw	32	;' '
  4288  2083  346D               	retlw	109	;'m'
  4289  2084  3476               	retlw	118	;'v'
  4290  2085  343A               	retlw	58	;':'
  4291  2086  3400               	retlw	0
  4292                           
  4293                           	psect	stringtext9
  4294  2087                     __pstringtext9:	
  4295  2087                     STR_1:	
  4296  2087  3425               	retlw	37	;'%'
  4297  2088  342E               	retlw	46	;'.'
  4298  2089  3435               	retlw	53	;'5'
  4299  208A  3466               	retlw	102	;'f'
  4300  208B  3400               	retlw	0
  4301                           
  4302                           	psect	stringtext10
  4303  208C                     __pstringtext10:	
  4304  208C                     STR_3:	
  4305  208C  3425               	retlw	37	;'%'
  4306  208D  3464               	retlw	100	;'d'
  4307  208E  3400               	retlw	0
  4308                           
  4309                           	psect	stringtext11
  4310  0000                     __pstringtext11:	
  4311                           
  4312                           ; #config settings
  4313  0000                     
  4314                           	psect	cinit
  4315  0017                     start_initialization:	
  4316  0017                     __initialization:	
  4317                           
  4318                           ; Initialize objects allocated to COMMON
  4319  0017  3180  2003  3180   	fcall	__pidataCOMMON	;fetch initializer
  4320  001A  00FC               	movwf	__pdataCOMMON& (0+127)
  4321                           
  4322                           ; Initialize objects allocated to BANK0
  4323  001B  300F               	movlw	low __pidataBANK0
  4324  001C  0084               	movwf	4
  4325  001D  309A               	movlw	(high __pidataBANK0)| (0+128)
  4326  001E  0085               	movwf	5
  4327  001F  306B               	movlw	low __pdataBANK0
  4328  0020  0086               	movwf	6
  4329  0021  3000               	movlw	high __pdataBANK0
  4330  0022  0087               	movwf	7
  4331  0023  3003               	movlw	3
  4332  0024  318E  2642  3180   	fcall	init_ram
  4333                           
  4334                           ; Initialize objects allocated to BANK1
  4335  0027  30F9               	movlw	low __pidataBANK1
  4336  0028  0084               	movwf	4
  4337  0029  309A               	movlw	(high __pidataBANK1)| (0+128)
  4338  002A  0085               	movwf	5
  4339  002B  30A0               	movlw	low __pdataBANK1
  4340  002C  0086               	movwf	6
  4341  002D  3000               	movlw	high __pdataBANK1
  4342  002E  0087               	movwf	7
  4343  002F  3022               	movlw	34
  4344  0030  318E  2642  3180   	fcall	init_ram
  4345                           
  4346                           ; Initialize objects allocated to BANK2
  4347  0033  30A6               	movlw	low __pidataBANK2
  4348  0034  0084               	movwf	4
  4349  0035  309A               	movlw	(high __pidataBANK2)| (0+128)
  4350  0036  0085               	movwf	5
  4351  0037  3020               	movlw	low __pdataBANK2
  4352  0038  0086               	movwf	6
  4353  0039  3001               	movlw	high __pdataBANK2
  4354  003A  0087               	movwf	7
  4355  003B  3019               	movlw	25
  4356  003C  318E  2642         	fcall	init_ram
  4357                           
  4358                           ; Clear objects allocated to BANK0
  4359  003E  01EE               	clrf	__pbssBANK0& (0+127)
  4360  003F  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  4361                           
  4362                           ; Clear objects allocated to BANK1
  4363  0040  0021               	movlb	1	; select bank1
  4364  0041  01D9               	clrf	__pbssBANK1& (0+127)
  4365  0042  01DA               	clrf	(__pbssBANK1+1)& (0+127)
  4366  0043  01DB               	clrf	(__pbssBANK1+2)& (0+127)
  4367  0044  01DC               	clrf	(__pbssBANK1+3)& (0+127)
  4368  0045  01DD               	clrf	(__pbssBANK1+4)& (0+127)
  4369  0046  01DE               	clrf	(__pbssBANK1+5)& (0+127)
  4370  0047  01DF               	clrf	(__pbssBANK1+6)& (0+127)
  4371  0048  01E0               	clrf	(__pbssBANK1+7)& (0+127)
  4372  0049  01E1               	clrf	(__pbssBANK1+8)& (0+127)
  4373  004A                     end_of_initialization:	
  4374                           ;End of C runtime variable initialization code
  4375                           
  4376  004A                     __end_of__initialization:	
  4377  004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4378  004B  0020               	movlb	0
  4379  004C  3194  2C61         	ljmp	_main	;jump to C main() function
  4380                           
  4381                           	psect	dataCOMMON
  4382  007C                     __pdataCOMMON:	
  4383  007C                     _Key:	
  4384  007C                     	ds	1
  4385                           
  4386                           	psect	bssBANK0
  4387  006E                     __pbssBANK0:	
  4388  006E                     _currentStateCLK:	
  4389  006E                     	ds	2
  4390                           
  4391                           	psect	dataBANK0
  4392  006B                     __pdataBANK0:	
  4393  006B                     _count:	
  4394  006B                     	ds	2
  4395  006D                     _print_line:	
  4396  006D                     	ds	1
  4397                           
  4398                           	psect	bssBANK1
  4399  00D9                     __pbssBANK1:	
  4400  00D9                     _current:	
  4401  00D9                     	ds	3
  4402  00DC                     _ADC_InterruptHandler:	
  4403  00DC                     	ds	2
  4404  00DE                     _previousStateCLK:	
  4405  00DE                     	ds	2
  4406  00E0                     _dac_out:	
  4407  00E0                     	ds	2
  4408                           
  4409                           	psect	dataBANK1
  4410  00A0                     __pdataBANK1:	
  4411  00A0                     _UPDOWN:	
  4412  00A0                     	ds	17
  4413  00B1                     _naif:	
  4414  00B1                     	ds	17
  4415                           
  4416                           	psect	dataBANK2
  4417  0120                     __pdataBANK2:	
  4418  0120                     _hello:	
  4419  0120                     	ds	25
  4420                           
  4421                           	psect	inittext
  4422  0E42                     init_ram:	
  4423  0E42  00FE               	movwf	126
  4424  0E43                     initloop:	
  4425  0E43  0012               	moviw fsr0++
  4426  0E44  001E               	movwi fsr1++
  4427  0E45  0BFE               	decfsz	126,f
  4428  0E46  2E43               	goto	initloop
  4429  0E47  3400               	retlw	0
  4430                           
  4431                           	psect	cstackBANK1
  4432  00C2                     __pcstackBANK1:	
  4433  00C2                     _sprintf$938:	
  4434                           
  4435                           ; 3 bytes @ 0x0
  4436  00C2                     	ds	3
  4437  00C5                     sprintf@ap:	
  4438                           
  4439                           ; 1 bytes @ 0x3
  4440  00C5                     	ds	1
  4441  00C6                     sprintf@flag:	
  4442                           
  4443                           ; 2 bytes @ 0x4
  4444  00C6                     	ds	2
  4445  00C8                     sprintf@exp:	
  4446                           
  4447                           ; 2 bytes @ 0x6
  4448  00C8                     	ds	2
  4449  00CA                     sprintf@tmpval:	
  4450                           
  4451                           ; 4 bytes @ 0x8
  4452  00CA                     	ds	4
  4453  00CE                     sprintf@val:	
  4454                           
  4455                           ; 4 bytes @ 0xC
  4456  00CE                     	ds	4
  4457  00D2                     sprintf@sp:	
  4458                           
  4459                           ; 1 bytes @ 0x10
  4460  00D2                     	ds	1
  4461  00D3                     sprintf@prec:	
  4462                           
  4463                           ; 2 bytes @ 0x11
  4464  00D3                     	ds	2
  4465  00D5                     sprintf@fval:	
  4466                           
  4467                           ; 3 bytes @ 0x13
  4468  00D5                     	ds	3
  4469  00D8                     sprintf@c:	
  4470                           
  4471                           ; 1 bytes @ 0x16
  4472  00D8                     	ds	1
  4473                           
  4474                           	psect	cstackCOMMON
  4475  0070                     __pcstackCOMMON:	
  4476  0070                     ?_isdigit:	
  4477  0070                     ?_LCD_WriteCommand:	
  4478                           ; 1 bit 
  4479                           
  4480  0070                     ?_ADC_Initialize:	
  4481                           ; 1 bytes @ 0x0
  4482                           
  4483  0070                     ?_switch_press_scan:	
  4484                           ; 1 bytes @ 0x0
  4485                           
  4486  0070                     ?_DAC_CONFIG:	
  4487                           ; 1 bytes @ 0x0
  4488                           
  4489  0070                     ?_OSCILLATOR_Initialize:	
  4490                           ; 1 bytes @ 0x0
  4491                           
  4492  0070                     ?_LCD_Init:	
  4493                           ; 1 bytes @ 0x0
  4494                           
  4495  0070                     ?_LCD_WriteByte:	
  4496                           ; 1 bytes @ 0x0
  4497                           
  4498  0070                     ?_LCD_WriteData:	
  4499                           ; 1 bytes @ 0x0
  4500                           
  4501  0070                     ?_LCD_EnableGraphics:	
  4502                           ; 1 bytes @ 0x0
  4503                           
  4504  0070                     ?_LCD_DisableGraphics:	
  4505                           ; 1 bytes @ 0x0
  4506                           
  4507  0070                     ?_LCD_ClearGraphics:	
  4508                           ; 1 bytes @ 0x0
  4509                           
  4510  0070                     ?_isr:	
  4511                           ; 1 bytes @ 0x0
  4512                           
  4513  0070                     ??_isr:	
  4514                           ; 1 bytes @ 0x0
  4515                           
  4516  0070                     ?_keypad_scanner:	
  4517                           ; 1 bytes @ 0x0
  4518                           
  4519  0070                     ?_InitKeypad:	
  4520                           ; 1 bytes @ 0x0
  4521                           
  4522  0070                     ?_main:	
  4523                           ; 1 bytes @ 0x0
  4524                           
  4525                           
  4526                           ; 1 bytes @ 0x0
  4527  0070                     	ds	1
  4528  0071                     ?___ftge:	
  4529  0071                     ??_ADC_Initialize:	
  4530                           ; 1 bit 
  4531                           
  4532  0071                     ??_isdigit:	
  4533                           ; 1 bytes @ 0x1
  4534                           
  4535  0071                     ??_DAC_CONFIG:	
  4536                           ; 1 bytes @ 0x1
  4537                           
  4538  0071                     ?_DAC1_Load10bitInputData:	
  4539                           ; 1 bytes @ 0x1
  4540                           
  4541  0071                     ??_OSCILLATOR_Initialize:	
  4542                           ; 1 bytes @ 0x1
  4543                           
  4544  0071                     ??_LCD_WriteByte:	
  4545                           ; 1 bytes @ 0x1
  4546                           
  4547  0071                     ??_keypad_scanner:	
  4548                           ; 1 bytes @ 0x1
  4549                           
  4550  0071                     ??_InitKeypad:	
  4551                           ; 1 bytes @ 0x1
  4552                           
  4553  0071                     ?_ADC_GetConversion:	
  4554                           ; 1 bytes @ 0x1
  4555                           
  4556  0071                     ?___awmod:	
  4557                           ; 2 bytes @ 0x1
  4558                           
  4559  0071                     ?___ftpack:	
  4560                           ; 2 bytes @ 0x1
  4561                           
  4562  0071                     ?___ftneg:	
  4563                           ; 3 bytes @ 0x1
  4564                           
  4565  0071                     ?__tdiv_to_l_:	
  4566                           ; 3 bytes @ 0x1
  4567                           
  4568  0071                     ?__div_to_l_:	
  4569                           ; 4 bytes @ 0x1
  4570                           
  4571  0071                     ?___lldiv:	
  4572                           ; 4 bytes @ 0x1
  4573                           
  4574  0071                     _isdigit$716:	
  4575                           ; 4 bytes @ 0x1
  4576                           
  4577  0071                     DAC1_Load10bitInputData@input16BitData:	
  4578                           ; 1 bytes @ 0x1
  4579                           
  4580  0071                     ___awmod@divisor:	
  4581                           ; 2 bytes @ 0x1
  4582                           
  4583  0071                     __div_to_l_@f1:	
  4584                           ; 2 bytes @ 0x1
  4585                           
  4586  0071                     ___ftpack@arg:	
  4587                           ; 3 bytes @ 0x1
  4588                           
  4589  0071                     __tdiv_to_l_@f1:	
  4590                           ; 3 bytes @ 0x1
  4591                           
  4592  0071                     ___ftge@ff1:	
  4593                           ; 3 bytes @ 0x1
  4594                           
  4595  0071                     ___ftneg@f1:	
  4596                           ; 3 bytes @ 0x1
  4597                           
  4598  0071                     ___lldiv@divisor:	
  4599                           ; 3 bytes @ 0x1
  4600                           
  4601                           
  4602                           ; 4 bytes @ 0x1
  4603  0071                     	ds	1
  4604  0072                     isdigit@c:	
  4605                           
  4606                           ; 1 bytes @ 0x2
  4607  0072                     	ds	1
  4608  0073                     ??_ADC_GetConversion:	
  4609  0073                     ??_switch_press_scan:	
  4610                           ; 1 bytes @ 0x3
  4611                           
  4612  0073                     ??_DAC1_Load10bitInputData:	
  4613                           ; 1 bytes @ 0x3
  4614                           
  4615  0073                     LCD_WriteByte@command:	
  4616                           ; 1 bytes @ 0x3
  4617                           
  4618  0073                     ___awmod@dividend:	
  4619                           ; 1 bytes @ 0x3
  4620                           
  4621                           
  4622                           ; 2 bytes @ 0x3
  4623  0073                     	ds	1
  4624  0074                     ??_LCD_WriteCommand:	
  4625  0074                     ??_LCD_WriteData:	
  4626                           ; 1 bytes @ 0x4
  4627                           
  4628  0074                     ??___ftneg:	
  4629                           ; 1 bytes @ 0x4
  4630                           
  4631  0074                     LCD_WriteData@data:	
  4632                           ; 1 bytes @ 0x4
  4633                           
  4634  0074                     LCD_WriteCommand@command:	
  4635                           ; 1 bytes @ 0x4
  4636                           
  4637  0074                     switch_press_scan@key:	
  4638                           ; 1 bytes @ 0x4
  4639                           
  4640  0074                     ADC_GetConversion@channel:	
  4641                           ; 1 bytes @ 0x4
  4642                           
  4643  0074                     ___ftpack@exp:	
  4644                           ; 1 bytes @ 0x4
  4645                           
  4646  0074                     __div_to_l_@f2:	
  4647                           ; 1 bytes @ 0x4
  4648                           
  4649  0074                     __tdiv_to_l_@f2:	
  4650                           ; 3 bytes @ 0x4
  4651                           
  4652  0074                     ___ftge@ff2:	
  4653                           ; 3 bytes @ 0x4
  4654                           
  4655                           
  4656                           ; 3 bytes @ 0x4
  4657  0074                     	ds	1
  4658  0075                     ??_LCD_Init:	
  4659  0075                     ?_LCD_TextDisplayString:	
  4660                           ; 1 bytes @ 0x5
  4661                           
  4662  0075                     ??_LCD_EnableGraphics:	
  4663                           ; 1 bytes @ 0x5
  4664                           
  4665  0075                     ??_LCD_DisableGraphics:	
  4666                           ; 1 bytes @ 0x5
  4667                           
  4668  0075                     ?_LCD_FillScreenGraphics:	
  4669                           ; 1 bytes @ 0x5
  4670                           
  4671  0075                     ??_LCD_ClearGraphics:	
  4672                           ; 1 bytes @ 0x5
  4673                           
  4674  0075                     ??___awmod:	
  4675                           ; 1 bytes @ 0x5
  4676                           
  4677  0075                     ___ftpack@sign:	
  4678                           ; 1 bytes @ 0x5
  4679                           
  4680  0075                     LCD_TextDisplayString@string:	
  4681                           ; 1 bytes @ 0x5
  4682                           
  4683  0075                     LCD_FillScreenGraphics@graphic:	
  4684                           ; 2 bytes @ 0x5
  4685                           
  4686  0075                     ___lldiv@dividend:	
  4687                           ; 2 bytes @ 0x5
  4688                           
  4689                           
  4690                           ; 4 bytes @ 0x5
  4691  0075                     	ds	1
  4692  0076                     ??___ftpack:	
  4693  0076                     LCD_ClearGraphics@x:	
  4694                           ; 1 bytes @ 0x6
  4695                           
  4696  0076                     ___awmod@counter:	
  4697                           ; 1 bytes @ 0x6
  4698                           
  4699                           
  4700                           ; 1 bytes @ 0x6
  4701  0076                     	ds	1
  4702  0077                     ??__tdiv_to_l_:	
  4703  0077                     ??_LCD_TextDisplayString:	
  4704                           ; 1 bytes @ 0x7
  4705                           
  4706  0077                     ??___ftge:	
  4707                           ; 1 bytes @ 0x7
  4708                           
  4709  0077                     LCD_FillScreenGraphics@y:	
  4710                           ; 1 bytes @ 0x7
  4711                           
  4712  0077                     LCD_ClearGraphics@y:	
  4713                           ; 1 bytes @ 0x7
  4714                           
  4715  0077                     ___awmod@sign:	
  4716                           ; 1 bytes @ 0x7
  4717                           
  4718                           
  4719                           ; 1 bytes @ 0x7
  4720  0077                     	ds	1
  4721  0078                     ?___awdiv:	
  4722  0078                     LCD_TextDisplayString@addr:	
  4723                           ; 2 bytes @ 0x8
  4724                           
  4725  0078                     LCD_FillScreenGraphics@x:	
  4726                           ; 1 bytes @ 0x8
  4727                           
  4728  0078                     ___awdiv@divisor:	
  4729                           ; 1 bytes @ 0x8
  4730                           
  4731                           
  4732                           ; 2 bytes @ 0x8
  4733  0078                     	ds	1
  4734  0079                     ??___lldiv:	
  4735  0079                     ??___lltoft:	
  4736                           ; 1 bytes @ 0x9
  4737                           
  4738  0079                     ?___lwtoft:	
  4739                           ; 1 bytes @ 0x9
  4740                           
  4741  0079                     LCD_TextDisplayString@i:	
  4742                           ; 3 bytes @ 0x9
  4743                           
  4744  0079                     ___lwtoft@c:	
  4745                           ; 1 bytes @ 0x9
  4746                           
  4747                           
  4748                           ; 2 bytes @ 0x9
  4749  0079                     	ds	1
  4750  007A                     ??___llmod:	
  4751  007A                     LCD_TextDisplayString@line:	
  4752                           ; 1 bytes @ 0xA
  4753                           
  4754  007A                     ___lltoft@exp:	
  4755                           ; 1 bytes @ 0xA
  4756                           
  4757  007A                     ___awdiv@dividend:	
  4758                           ; 1 bytes @ 0xA
  4759                           
  4760                           
  4761                           ; 2 bytes @ 0xA
  4762  007A                     	ds	1
  4763  007B                     ___llmod@counter:	
  4764                           
  4765                           ; 1 bytes @ 0xB
  4766  007B                     	ds	1
  4767  007C                     ??___wmul:	
  4768  007C                     ??___ftsub:	
  4769                           ; 1 bytes @ 0xC
  4770                           
  4771                           
  4772                           	psect	cstackBANK0
  4773  0020                     __pcstackBANK0:	
  4774                           ; 1 bytes @ 0xC
  4775                           
  4776  0020                     ??__div_to_l_:	
  4777  0020                     ??_LCD_FillScreenGraphics:	
  4778                           ; 1 bytes @ 0x0
  4779                           
  4780  0020                     ??___awdiv:	
  4781                           ; 1 bytes @ 0x0
  4782                           
  4783  0020                     ??___lwtoft:	
  4784                           ; 1 bytes @ 0x0
  4785                           
  4786  0020                     ?___lltoft:	
  4787                           ; 1 bytes @ 0x0
  4788                           
  4789  0020                     __tdiv_to_l_@quot:	
  4790                           ; 3 bytes @ 0x0
  4791                           
  4792  0020                     ___lldiv@quotient:	
  4793                           ; 4 bytes @ 0x0
  4794                           
  4795  0020                     ___lltoft@c:	
  4796                           ; 4 bytes @ 0x0
  4797                           
  4798                           
  4799                           ; 4 bytes @ 0x0
  4800  0020                     	ds	1
  4801  0021                     ___awdiv@counter:	
  4802                           
  4803                           ; 1 bytes @ 0x1
  4804  0021                     	ds	1
  4805  0022                     ___awdiv@sign:	
  4806                           
  4807                           ; 1 bytes @ 0x2
  4808  0022                     	ds	1
  4809  0023                     ___awdiv@quotient:	
  4810                           
  4811                           ; 2 bytes @ 0x3
  4812  0023                     	ds	1
  4813  0024                     __tdiv_to_l_@cntr:	
  4814  0024                     ___lldiv@counter:	
  4815                           ; 1 bytes @ 0x4
  4816                           
  4817                           
  4818                           ; 1 bytes @ 0x4
  4819  0024                     	ds	1
  4820  0025                     ?___wmul:	
  4821  0025                     ?___llmod:	
  4822                           ; 2 bytes @ 0x5
  4823                           
  4824  0025                     __tdiv_to_l_@exp1:	
  4825                           ; 4 bytes @ 0x5
  4826                           
  4827  0025                     ___wmul@multiplier:	
  4828                           ; 1 bytes @ 0x5
  4829                           
  4830  0025                     ___llmod@divisor:	
  4831                           ; 2 bytes @ 0x5
  4832                           
  4833                           
  4834                           ; 4 bytes @ 0x5
  4835  0025                     	ds	2
  4836  0027                     ___wmul@multiplicand:	
  4837                           
  4838                           ; 2 bytes @ 0x7
  4839  0027                     	ds	1
  4840  0028                     __div_to_l_@quot:	
  4841                           
  4842                           ; 4 bytes @ 0x8
  4843  0028                     	ds	1
  4844  0029                     ___wmul@product:	
  4845  0029                     ___llmod@dividend:	
  4846                           ; 2 bytes @ 0x9
  4847                           
  4848                           
  4849                           ; 4 bytes @ 0x9
  4850  0029                     	ds	2
  4851  002B                     ?___ftmul:	
  4852  002B                     ___ftmul@f1:	
  4853                           ; 3 bytes @ 0xB
  4854                           
  4855                           
  4856                           ; 3 bytes @ 0xB
  4857  002B                     	ds	1
  4858  002C                     __div_to_l_@cntr:	
  4859                           
  4860                           ; 1 bytes @ 0xC
  4861  002C                     	ds	1
  4862  002D                     __div_to_l_@exp1:	
  4863                           
  4864                           ; 1 bytes @ 0xD
  4865  002D                     	ds	1
  4866  002E                     ___ftmul@f2:	
  4867                           
  4868                           ; 3 bytes @ 0xE
  4869  002E                     	ds	3
  4870  0031                     ??___ftmul:	
  4871                           
  4872                           ; 1 bytes @ 0x11
  4873  0031                     	ds	4
  4874  0035                     ___ftmul@exp:	
  4875                           
  4876                           ; 1 bytes @ 0x15
  4877  0035                     	ds	1
  4878  0036                     ___ftmul@f3_as_product:	
  4879                           
  4880                           ; 3 bytes @ 0x16
  4881  0036                     	ds	3
  4882  0039                     ___ftmul@cntr:	
  4883                           
  4884                           ; 1 bytes @ 0x19
  4885  0039                     	ds	1
  4886  003A                     ___ftmul@sign:	
  4887                           
  4888                           ; 1 bytes @ 0x1A
  4889  003A                     	ds	1
  4890  003B                     ?_fround:	
  4891  003B                     ?_scale:	
  4892                           ; 3 bytes @ 0x1B
  4893                           
  4894                           
  4895                           ; 3 bytes @ 0x1B
  4896  003B                     	ds	3
  4897  003E                     ??_fround:	
  4898  003E                     ??_scale:	
  4899                           ; 1 bytes @ 0x1E
  4900                           
  4901                           
  4902                           ; 1 bytes @ 0x1E
  4903  003E                     	ds	2
  4904  0040                     _scale$937:	
  4905                           
  4906                           ; 3 bytes @ 0x20
  4907  0040                     	ds	2
  4908  0042                     _fround$936:	
  4909                           
  4910                           ; 3 bytes @ 0x22
  4911  0042                     	ds	1
  4912  0043                     scale@scl:	
  4913                           
  4914                           ; 1 bytes @ 0x23
  4915  0043                     	ds	1
  4916  0044                     ?___fttol:	
  4917  0044                     ___fttol@f1:	
  4918                           ; 4 bytes @ 0x24
  4919                           
  4920                           
  4921                           ; 3 bytes @ 0x24
  4922  0044                     	ds	1
  4923  0045                     _fround$935:	
  4924                           
  4925                           ; 3 bytes @ 0x25
  4926  0045                     	ds	3
  4927  0048                     ??___fttol:	
  4928  0048                     fround@prec:	
  4929                           ; 1 bytes @ 0x28
  4930                           
  4931                           
  4932                           ; 1 bytes @ 0x28
  4933  0048                     	ds	1
  4934  0049                     ?___ftadd:	
  4935  0049                     ___ftadd@f1:	
  4936                           ; 3 bytes @ 0x29
  4937                           
  4938                           
  4939                           ; 3 bytes @ 0x29
  4940  0049                     	ds	3
  4941  004C                     ___fttol@sign1:	
  4942  004C                     ___ftadd@f2:	
  4943                           ; 1 bytes @ 0x2C
  4944                           
  4945                           
  4946                           ; 3 bytes @ 0x2C
  4947  004C                     	ds	1
  4948  004D                     ___fttol@lval:	
  4949                           
  4950                           ; 4 bytes @ 0x2D
  4951  004D                     	ds	2
  4952  004F                     ??___ftadd:	
  4953                           
  4954                           ; 1 bytes @ 0x2F
  4955  004F                     	ds	2
  4956  0051                     ___fttol@exp1:	
  4957                           
  4958                           ; 1 bytes @ 0x31
  4959  0051                     	ds	2
  4960  0053                     ___ftadd@sign:	
  4961                           
  4962                           ; 1 bytes @ 0x33
  4963  0053                     	ds	1
  4964  0054                     ___ftadd@exp2:	
  4965                           
  4966                           ; 1 bytes @ 0x34
  4967  0054                     	ds	1
  4968  0055                     ___ftadd@exp1:	
  4969                           
  4970                           ; 1 bytes @ 0x35
  4971  0055                     	ds	1
  4972  0056                     ?___ftsub:	
  4973  0056                     ___ftsub@f2:	
  4974                           ; 3 bytes @ 0x36
  4975                           
  4976                           
  4977                           ; 3 bytes @ 0x36
  4978  0056                     	ds	3
  4979  0059                     ___ftsub@f1:	
  4980                           
  4981                           ; 3 bytes @ 0x39
  4982  0059                     	ds	3
  4983  005C                     ?_sprintf:	
  4984  005C                     sprintf@f:	
  4985                           ; 2 bytes @ 0x3C
  4986                           
  4987                           
  4988                           ; 2 bytes @ 0x3C
  4989  005C                     	ds	5
  4990  0061                     ??_sprintf:	
  4991                           
  4992                           ; 1 bytes @ 0x41
  4993  0061                     	ds	6
  4994  0067                     ??_main:	
  4995                           
  4996                           ; 1 bytes @ 0x47
  4997  0067                     	ds	2
  4998  0069                     _main$934:	
  4999                           
  5000                           ; 2 bytes @ 0x49
  5001  0069                     	ds	2
  5002                           
  5003                           	psect	maintext
  5004  1461                     __pmaintext:	
  5005 ;;
  5006 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5007 ;;
  5008 ;; *************** function _main *****************
  5009 ;; Defined at:
  5010 ;;		line 108 in file "LOAD20210.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : B1F/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5025 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5026 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5027 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5028 ;;Total ram usage:        4 bytes
  5029 ;; Hardware stack levels required when called:    5
  5030 ;; This function calls:
  5031 ;;		_ADC_GetConversion
  5032 ;;		_ADC_Initialize
  5033 ;;		_DAC1_Load10bitInputData
  5034 ;;		_DAC_CONFIG
  5035 ;;		_InitKeypad
  5036 ;;		_LCD_ClearGraphics
  5037 ;;		_LCD_DisableGraphics
  5038 ;;		_LCD_EnableGraphics
  5039 ;;		_LCD_FillScreenGraphics
  5040 ;;		_LCD_Init
  5041 ;;		_LCD_TextDisplayString
  5042 ;;		_OSCILLATOR_Initialize
  5043 ;;		___ftmul
  5044 ;;		___lwtoft
  5045 ;;		___wmul
  5046 ;;		_sprintf
  5047 ;;		_switch_press_scan
  5048 ;; This function is called by:
  5049 ;;		Startup code after reset
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function _main
  5055  1461                     _main:	
  5056                           
  5057                           ;LOAD20210.c: 111: OSCILLATOR_Initialize();
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5061  1461  319A  2226  3194   	fcall	_OSCILLATOR_Initialize
  5062                           
  5063                           ;LOAD20210.c: 113: DAC_CONFIG();
  5064  1464  319A  2212  3194   	fcall	_DAC_CONFIG
  5065                           
  5066                           ;LOAD20210.c: 118: TRISA=0b00001011;
  5067  1467  300B               	movlw	11
  5068  1468  0021               	movlb	1	; select bank1
  5069  1469  008C               	movwf	12	;volatile
  5070                           
  5071                           ;LOAD20210.c: 119: ANSELA=0;
  5072  146A  0023               	movlb	3	; select bank3
  5073  146B  018C               	clrf	12	;volatile
  5074                           
  5075                           ;LOAD20210.c: 120: INLVLA=0;
  5076  146C  0027               	movlb	7	; select bank7
  5077  146D  018C               	clrf	12	;volatile
  5078                           
  5079                           ;LOAD20210.c: 122: ADC_Initialize();
  5080  146E  319A  223D  3194   	fcall	_ADC_Initialize
  5081                           
  5082                           ;LOAD20210.c: 124: TRISD=0;
  5083  1471  0021               	movlb	1	; select bank1
  5084  1472  018F               	clrf	15	;volatile
  5085                           
  5086                           ;LOAD20210.c: 125: ANSELD=0;
  5087  1473  0023               	movlb	3	; select bank3
  5088  1474  018F               	clrf	15	;volatile
  5089                           
  5090                           ;LOAD20210.c: 128: TRISB=0;
  5091  1475  0021               	movlb	1	; select bank1
  5092  1476  018D               	clrf	13	;volatile
  5093                           
  5094                           ;LOAD20210.c: 129: ANSELB=0;
  5095  1477  0023               	movlb	3	; select bank3
  5096  1478  018D               	clrf	13	;volatile
  5097                           
  5098                           ;LOAD20210.c: 130: ODCONB=0;
  5099  1479  0025               	movlb	5	; select bank5
  5100  147A  018D               	clrf	13	;volatile
  5101                           
  5102                           ;LOAD20210.c: 131: SLRCONB=0;
  5103  147B  0026               	movlb	6	; select bank6
  5104  147C  018D               	clrf	13	;volatile
  5105                           
  5106                           ;LOAD20210.c: 134: InitKeypad();
  5107  147D  319A  2246  3194   	fcall	_InitKeypad
  5108                           
  5109                           ;LOAD20210.c: 136: LCD_Init( );
  5110  1480  319C  24B4  3194   	fcall	_LCD_Init
  5111                           
  5112                           ;LOAD20210.c: 137: LCD_EnableGraphics();
  5113  1483  319B  231B  3194   	fcall	_LCD_EnableGraphics
  5114                           
  5115                           ;LOAD20210.c: 138: LCD_ClearGraphics();
  5116  1486  319B  236B  3194   	fcall	_LCD_ClearGraphics
  5117                           
  5118                           ;LOAD20210.c: 139: LCD_FillScreenGraphics(des);
  5119  1489  3031               	movlw	low (_des| (0+32768))
  5120  148A  00F5               	movwf	LCD_FillScreenGraphics@graphic
  5121  148B  3086               	movlw	high (_des| (0+32768))
  5122  148C  00F6               	movwf	LCD_FillScreenGraphics@graphic+1
  5123  148D  3190  2035  3194   	fcall	_LCD_FillScreenGraphics
  5124                           
  5125                           ;LOAD20210.c: 140: _delay((unsigned long)((1000)*(16000000/4000.0)));
  5126  1490  3015               	movlw	21
  5127  1491  0020               	movlb	0	; select bank0
  5128  1492  00E8               	movwf	??_main+1
  5129  1493  304B               	movlw	75
  5130  1494  00E7               	movwf	??_main
  5131  1495  30BE               	movlw	190
  5132  1496                     u6477:	
  5133  1496  0B89               	decfsz	9,f
  5134  1497  2C96               	goto	u6477
  5135  1498  0BE7               	decfsz	??_main,f
  5136  1499  2C96               	goto	u6477
  5137  149A  0BE8               	decfsz	??_main+1,f
  5138  149B  2C96               	goto	u6477
  5139  149C  0000               	nop
  5140                           
  5141                           ;LOAD20210.c: 141: LCD_ClearGraphics();
  5142  149D  319B  236B  3194   	fcall	_LCD_ClearGraphics
  5143                           
  5144                           ;LOAD20210.c: 142: LCD_DisableGraphics();
  5145  14A0  319A  2250  3194   	fcall	_LCD_DisableGraphics
  5146                           
  5147                           ;LOAD20210.c: 145: previousStateCLK = PORTAbits.RA1;
  5148  14A3  0020               	movlb	0	; select bank0
  5149  14A4  0C0C               	rrf	12,w	;volatile
  5150  14A5  3901               	andlw	1
  5151  14A6  00E7               	movwf	??_main
  5152  14A7  01E8               	clrf	??_main+1
  5153  14A8  0867               	movf	??_main,w
  5154  14A9  0021               	movlb	1	; select bank1
  5155  14AA  00DE               	movwf	_previousStateCLK^(0+128)
  5156  14AB  0020               	movlb	0	; select bank0
  5157  14AC  0868               	movf	??_main+1,w
  5158  14AD  0021               	movlb	1	; select bank1
  5159  14AE  00DF               	movwf	(_previousStateCLK+1)^(0+128)
  5160  14AF                     l4138:	
  5161                           ;LOAD20210.c: 149: while(1)
  5162                           
  5163                           
  5164                           ;LOAD20210.c: 150: {
  5165                           ;LOAD20210.c: 151: current= (ADC_GetConversion(channel_AN5)* 0.004882812);
  5166  14AF  3000               	movlw	0
  5167  14B0  0020               	movlb	0	; select bank0
  5168  14B1  00AB               	movwf	___ftmul@f1
  5169  14B2  30A0               	movlw	160
  5170  14B3  00AC               	movwf	___ftmul@f1+1
  5171  14B4  303B               	movlw	59
  5172  14B5  00AD               	movwf	___ftmul@f1+2
  5173  14B6  3005               	movlw	5
  5174  14B7  319A  228D  3194   	fcall	_ADC_GetConversion
  5175  14BA  0872               	movf	?_ADC_GetConversion+1,w
  5176  14BB  00FA               	movwf	___lwtoft@c+1
  5177  14BC  0871               	movf	?_ADC_GetConversion,w
  5178  14BD  00F9               	movwf	___lwtoft@c
  5179  14BE  319A  2279  3194   	fcall	___lwtoft
  5180  14C1  0879               	movf	?___lwtoft,w
  5181  14C2  0020               	movlb	0	; select bank0
  5182  14C3  00AE               	movwf	___ftmul@f2
  5183  14C4  087A               	movf	?___lwtoft+1,w
  5184  14C5  00AF               	movwf	___ftmul@f2+1
  5185  14C6  087B               	movf	?___lwtoft+2,w
  5186  14C7  00B0               	movwf	___ftmul@f2+2
  5187  14C8  319E  2696  3194   	fcall	___ftmul
  5188  14CB  0020               	movlb	0	; select bank0
  5189  14CC  082B               	movf	?___ftmul,w
  5190  14CD  0021               	movlb	1	; select bank1
  5191  14CE  00D9               	movwf	_current^(0+128)
  5192  14CF  0020               	movlb	0	; select bank0
  5193  14D0  082C               	movf	?___ftmul+1,w
  5194  14D1  0021               	movlb	1	; select bank1
  5195  14D2  00DA               	movwf	(_current+1)^(0+128)
  5196  14D3  0020               	movlb	0	; select bank0
  5197  14D4  082D               	movf	?___ftmul+2,w
  5198  14D5  0021               	movlb	1	; select bank1
  5199  14D6  00DB               	movwf	(_current+2)^(0+128)
  5200                           
  5201                           ;LOAD20210.c: 155: naif[3]=' ';
  5202  14D7  3020               	movlw	32
  5203  14D8  0020               	movlb	0	; select bank0
  5204  14D9  00E7               	movwf	??_main
  5205  14DA  0867               	movf	??_main,w
  5206  14DB  0021               	movlb	1	; select bank1
  5207  14DC  00B4               	movwf	(_naif^(0+128)+3)
  5208                           
  5209                           ;LOAD20210.c: 158: sprintf(naif,"%.5f", current);
  5210  14DD  3087               	movlw	low (STR_1| (0+32768))
  5211  14DE  0020               	movlb	0	; select bank0
  5212  14DF  00DC               	movwf	sprintf@f
  5213  14E0  30A0               	movlw	high (STR_1| (0+32768))
  5214  14E1  00DD               	movwf	sprintf@f+1
  5215  14E2  0021               	movlb	1	; select bank1
  5216  14E3  0859               	movf	_current^(0+128),w
  5217  14E4  0020               	movlb	0	; select bank0
  5218  14E5  00DE               	movwf	?_sprintf+2
  5219  14E6  0021               	movlb	1	; select bank1
  5220  14E7  085A               	movf	(_current+1)^(0+128),w
  5221  14E8  0020               	movlb	0	; select bank0
  5222  14E9  00DF               	movwf	?_sprintf+3
  5223  14EA  0021               	movlb	1	; select bank1
  5224  14EB  085B               	movf	(_current+2)^(0+128),w
  5225  14EC  0020               	movlb	0	; select bank0
  5226  14ED  00E0               	movwf	?_sprintf+4
  5227  14EE  30B1               	movlw	(low (_naif| 0))& (0+255)
  5228  14EF  3180  204E  3194   	fcall	_sprintf
  5229                           
  5230                           ;LOAD20210.c: 160: LCD_TextDisplayString( 3, "Current   in mA:");
  5231  14F2  3031               	movlw	low (STR_2| (0+32768))
  5232  14F3  00F5               	movwf	LCD_TextDisplayString@string
  5233  14F4  308A               	movlw	high (STR_2| (0+32768))
  5234  14F5  00F6               	movwf	LCD_TextDisplayString@string+1
  5235  14F6  3003               	movlw	3
  5236  14F7  3190  2001  3194   	fcall	_LCD_TextDisplayString
  5237                           
  5238                           ;LOAD20210.c: 161: LCD_TextDisplayString( 4, naif);
  5239  14FA  30B1               	movlw	low _naif
  5240  14FB  00F5               	movwf	LCD_TextDisplayString@string
  5241  14FC  3000               	movlw	high _naif
  5242  14FD  00F6               	movwf	LCD_TextDisplayString@string+1
  5243  14FE  3004               	movlw	4
  5244  14FF  3190  2001  3194   	fcall	_LCD_TextDisplayString
  5245                           
  5246                           ;LOAD20210.c: 165: if(PORTAbits.RA3==0)
  5247  1502  0020               	movlb	0	; select bank0
  5248  1503  198C               	btfsc	12,3	;volatile
  5249  1504  2D09               	goto	l4152
  5250                           
  5251                           ;LOAD20210.c: 166: {
  5252                           ;LOAD20210.c: 167: count =520;
  5253  1505  3008               	movlw	8
  5254  1506  00EB               	movwf	_count
  5255  1507  3002               	movlw	2
  5256  1508  00EC               	movwf	_count+1
  5257  1509                     l4152:	
  5258                           
  5259                           ;LOAD20210.c: 170: }
  5260                           ;LOAD20210.c: 172: if (PORTAbits.RA1 == 0)
  5261  1509  188C               	btfsc	12,1	;volatile
  5262  150A  2D50               	goto	l281
  5263                           
  5264                           ;LOAD20210.c: 173: {
  5265                           ;LOAD20210.c: 174: _delay((unsigned long)((10)*(16000000/4000.0)));
  5266  150B  3034               	movlw	52
  5267  150C  0020               	movlb	0	; select bank0
  5268  150D  00E7               	movwf	??_main
  5269  150E  30F1               	movlw	241
  5270  150F                     u6487:	
  5271  150F  0B89               	decfsz	9,f
  5272  1510  2D0F               	goto	u6487
  5273  1511  0BE7               	decfsz	??_main,f
  5274  1512  2D0F               	goto	u6487
  5275  1513  3200               	nop2
  5276                           
  5277                           ;LOAD20210.c: 175: currentStateCLK = PORTAbits.RA1;
  5278  1514  0020               	movlb	0	; select bank0
  5279  1515  0C0C               	rrf	12,w	;volatile
  5280  1516  3901               	andlw	1
  5281  1517  00E7               	movwf	??_main
  5282  1518  01E8               	clrf	??_main+1
  5283  1519  0867               	movf	??_main,w
  5284  151A  00EE               	movwf	_currentStateCLK
  5285  151B  0868               	movf	??_main+1,w
  5286  151C  00EF               	movwf	_currentStateCLK+1
  5287                           
  5288                           ;LOAD20210.c: 180: if (PORTAbits.RA0 != currentStateCLK) {
  5289  151D  080C               	movf	12,w	;volatile
  5290  151E  3901               	andlw	1
  5291  151F  00E7               	movwf	??_main
  5292  1520  01E8               	clrf	??_main+1
  5293  1521  086F               	movf	_currentStateCLK+1,w
  5294  1522  0668               	xorwf	??_main+1,w
  5295  1523  1D03               	skipz
  5296  1524  2D27               	goto	u6425
  5297  1525  086E               	movf	_currentStateCLK,w
  5298  1526  0667               	xorwf	??_main,w
  5299  1527                     u6425:	
  5300  1527  1903               	skipnz
  5301  1528  2D40               	goto	l4168
  5302                           
  5303                           ;LOAD20210.c: 181: count --;
  5304  1529  30FF               	movlw	255
  5305  152A  07EB               	addwf	_count,f
  5306  152B  30FF               	movlw	255
  5307  152C  3DEC               	addwfc	_count+1,f
  5308                           
  5309                           ;LOAD20210.c: 182: if (count <520)
  5310  152D  086C               	movf	_count+1,w
  5311  152E  3A80               	xorlw	128
  5312  152F  00E7               	movwf	??_main
  5313  1530  3082               	movlw	130
  5314  1531  0267               	subwf	??_main,w
  5315  1532  3008               	movlw	8
  5316  1533  1903               	btfsc	3,2
  5317  1534  026B               	subwf	_count,w
  5318  1535  1803               	skipnc
  5319  1536  2D3C               	goto	l4164
  5320                           
  5321                           ;LOAD20210.c: 183: {
  5322                           ;LOAD20210.c: 184: count =520;
  5323  1537  3008               	movlw	8
  5324  1538  0020               	movlb	0	; select bank0
  5325  1539  00EB               	movwf	_count
  5326  153A  3002               	movlw	2
  5327  153B  00EC               	movwf	_count+1
  5328  153C                     l4164:	
  5329                           
  5330                           ;LOAD20210.c: 185: }
  5331                           ;LOAD20210.c: 186: LATDbits.LATD0= 0;
  5332  153C  0022               	movlb	2	; select bank2
  5333  153D  100F               	bcf	15,0	;volatile
  5334                           
  5335                           ;LOAD20210.c: 187: LATDbits.LATD1= 1;
  5336  153E  148F               	bsf	15,1	;volatile
  5337                           
  5338                           ;LOAD20210.c: 189: } else {
  5339  153F  2D48               	goto	l284
  5340  1540                     l4168:	
  5341                           
  5342                           ;LOAD20210.c: 191: count ++;
  5343  1540  3001               	movlw	1
  5344  1541  0020               	movlb	0	; select bank0
  5345  1542  07EB               	addwf	_count,f
  5346  1543  3000               	movlw	0
  5347  1544  3DEC               	addwfc	_count+1,f
  5348                           
  5349                           ;LOAD20210.c: 193: LATDbits.LATD0= 1;
  5350  1545  0022               	movlb	2	; select bank2
  5351  1546  140F               	bsf	15,0	;volatile
  5352                           
  5353                           ;LOAD20210.c: 194: LATDbits.LATD1= 0;
  5354  1547  108F               	bcf	15,1	;volatile
  5355  1548                     l284:	
  5356                           
  5357                           ;LOAD20210.c: 196: }
  5358                           ;LOAD20210.c: 197: previousStateCLK = currentStateCLK;
  5359  1548  0020               	movlb	0	; select bank0
  5360  1549  086F               	movf	_currentStateCLK+1,w
  5361  154A  0021               	movlb	1	; select bank1
  5362  154B  00DF               	movwf	(_previousStateCLK+1)^(0+128)
  5363  154C  0020               	movlb	0	; select bank0
  5364  154D  086E               	movf	_currentStateCLK,w
  5365  154E  0021               	movlb	1	; select bank1
  5366  154F  00DE               	movwf	_previousStateCLK^(0+128)
  5367  1550                     l281:	
  5368                           
  5369                           ;LOAD20210.c: 199: }
  5370                           ;LOAD20210.c: 202: naif[3]=' ';
  5371  1550  3020               	movlw	32
  5372  1551  0020               	movlb	0	; select bank0
  5373  1552  00E7               	movwf	??_main
  5374  1553  0867               	movf	??_main,w
  5375  1554  0021               	movlb	1	; select bank1
  5376  1555  00B4               	movwf	(_naif^(0+128)+3)
  5377                           
  5378                           ;LOAD20210.c: 203: sprintf(naif,"%d", (count *5)+1);
  5379  1556  0020               	movlb	0	; select bank0
  5380  1557  086C               	movf	_count+1,w
  5381  1558  00A6               	movwf	___wmul@multiplier+1
  5382  1559  086B               	movf	_count,w
  5383  155A  00A5               	movwf	___wmul@multiplier
  5384  155B  3005               	movlw	5
  5385  155C  00A7               	movwf	___wmul@multiplicand
  5386  155D  3000               	movlw	0
  5387  155E  00A8               	movwf	___wmul@multiplicand+1
  5388  155F  319A  22BF  3194   	fcall	___wmul
  5389  1562  0020               	movlb	0	; select bank0
  5390  1563  0825               	movf	?___wmul,w
  5391  1564  3E01               	addlw	1
  5392  1565  00E9               	movwf	_main$934
  5393  1566  3000               	movlw	0
  5394  1567  3D26               	addwfc	?___wmul+1,w
  5395  1568  00EA               	movwf	_main$934+1
  5396                           
  5397                           ;LOAD20210.c: 203: sprintf(naif,"%d", (count *5)+1);
  5398  1569  308C               	movlw	low (STR_3| (0+32768))
  5399  156A  00DC               	movwf	sprintf@f
  5400  156B  30A0               	movlw	high (STR_3| (0+32768))
  5401  156C  00DD               	movwf	sprintf@f+1
  5402  156D  086A               	movf	_main$934+1,w
  5403  156E  00DF               	movwf	?_sprintf+3
  5404  156F  0869               	movf	_main$934,w
  5405  1570  00DE               	movwf	?_sprintf+2
  5406  1571  30B1               	movlw	(low (_naif| 0))& (0+255)
  5407  1572  3180  204E  3194   	fcall	_sprintf
  5408                           
  5409                           ;LOAD20210.c: 204: LCD_TextDisplayString( 1, "DAC out   in mv:");
  5410  1575  3076               	movlw	low (STR_4| (0+32768))
  5411  1576  00F5               	movwf	LCD_TextDisplayString@string
  5412  1577  30A0               	movlw	high (STR_4| (0+32768))
  5413  1578  00F6               	movwf	LCD_TextDisplayString@string+1
  5414  1579  3001               	movlw	1
  5415  157A  3190  2001  3194   	fcall	_LCD_TextDisplayString
  5416                           
  5417                           ;LOAD20210.c: 205: LCD_TextDisplayString( 2, naif);
  5418  157D  30B1               	movlw	low _naif
  5419  157E  00F5               	movwf	LCD_TextDisplayString@string
  5420  157F  3000               	movlw	high _naif
  5421  1580  00F6               	movwf	LCD_TextDisplayString@string+1
  5422  1581  3002               	movlw	2
  5423  1582  3190  2001  3194   	fcall	_LCD_TextDisplayString
  5424                           
  5425                           ;LOAD20210.c: 209: UPDOWN[1]=switch_press_scan();
  5426  1585  319A  226B  3194   	fcall	_switch_press_scan
  5427  1588  0020               	movlb	0	; select bank0
  5428  1589  00E7               	movwf	??_main
  5429  158A  0867               	movf	??_main,w
  5430  158B  0021               	movlb	1	; select bank1
  5431  158C  00A1               	movwf	(_UPDOWN^(0+128)+1)
  5432                           
  5433                           ;LOAD20210.c: 214: DAC1_Load10bitInputData(count*64);
  5434  158D  0020               	movlb	0	; select bank0
  5435  158E  086C               	movf	_count+1,w
  5436  158F  00E8               	movwf	??_main+1
  5437  1590  086B               	movf	_count,w
  5438  1591  00E7               	movwf	??_main
  5439  1592  3006               	movlw	6
  5440  1593                     u6445:	
  5441  1593  35E7               	lslf	??_main,f
  5442  1594  0DE8               	rlf	??_main+1,f
  5443  1595  0B89               	decfsz	9,f
  5444  1596  2D93               	goto	u6445
  5445  1597  0867               	movf	??_main,w
  5446  1598  00F1               	movwf	DAC1_Load10bitInputData@input16BitData
  5447  1599  0868               	movf	??_main+1,w
  5448  159A  00F2               	movwf	DAC1_Load10bitInputData@input16BitData+1
  5449  159B  319A  222D  3194   	fcall	_DAC1_Load10bitInputData
  5450                           
  5451                           ;LOAD20210.c: 219: if ( UPDOWN[1] == 'A')
  5452  159E  3041               	movlw	65
  5453  159F  0021               	movlb	1	; select bank1
  5454  15A0  0621               	xorwf	(_UPDOWN^(0+128)+1),w
  5455  15A1  1D03               	btfss	3,2
  5456  15A2  2DAD               	goto	l4190
  5457                           
  5458                           ;LOAD20210.c: 220: {
  5459                           ;LOAD20210.c: 221: count++;
  5460  15A3  3001               	movlw	1
  5461  15A4  0020               	movlb	0	; select bank0
  5462  15A5  07EB               	addwf	_count,f
  5463  15A6  3000               	movlw	0
  5464  15A7  3DEC               	addwfc	_count+1,f
  5465                           
  5466                           ;LOAD20210.c: 222: UPDOWN[1]=' ';
  5467  15A8  3020               	movlw	32
  5468  15A9  00E7               	movwf	??_main
  5469  15AA  0867               	movf	??_main,w
  5470  15AB  0021               	movlb	1	; select bank1
  5471  15AC  00A1               	movwf	(_UPDOWN^(0+128)+1)
  5472  15AD                     l4190:	
  5473                           
  5474                           ;LOAD20210.c: 223: }
  5475                           ;LOAD20210.c: 224: if (UPDOWN[1] == 'B')
  5476  15AD  3042               	movlw	66
  5477  15AE  0621               	xorwf	(_UPDOWN^(0+128)+1),w
  5478  15AF  1D03               	btfss	3,2
  5479  15B0  2CAF               	goto	l4138
  5480                           
  5481                           ;LOAD20210.c: 225: {
  5482                           ;LOAD20210.c: 226: count--;
  5483  15B1  30FF               	movlw	255
  5484  15B2  0020               	movlb	0	; select bank0
  5485  15B3  07EB               	addwf	_count,f
  5486  15B4  30FF               	movlw	255
  5487  15B5  3DEC               	addwfc	_count+1,f
  5488                           
  5489                           ;LOAD20210.c: 227: UPDOWN[1]=' ';
  5490  15B6  3020               	movlw	32
  5491  15B7  00E7               	movwf	??_main
  5492  15B8  0867               	movf	??_main,w
  5493  15B9  0021               	movlb	1	; select bank1
  5494  15BA  00A1               	movwf	(_UPDOWN^(0+128)+1)
  5495  15BB  2CAF               	goto	l4138
  5496  15BC                     __end_of_main:	
  5497                           
  5498                           	psect	text1
  5499  1A6B                     __ptext1:	
  5500 ;; *************** function _switch_press_scan *****************
  5501 ;; Defined at:
  5502 ;;		line 246 in file "LOAD20210.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;		None
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  key             1    4[COMMON] unsigned char 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      unsigned char 
  5509 ;; Registers used:
  5510 ;;		wreg, status,2, status,0, pclath, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5520 ;;Total ram usage:        2 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    2
  5523 ;; This function calls:
  5524 ;;		_keypad_scanner
  5525 ;; This function is called by:
  5526 ;;		_main
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           
  5531                           ;psect for function _switch_press_scan
  5532  1A6B                     _switch_press_scan:	
  5533                           
  5534                           ;LOAD20210.c: 248: char key = 'n';
  5535                           
  5536                           ;incstack = 0
  5537                           ; Regs used in _switch_press_scan: [wreg+status,2+status,0+pclath+cstack]
  5538  1A6B  306E               	movlw	110
  5539  1A6C                     L1:	
  5540  1A6C  00F3               	movwf	??_switch_press_scan
  5541  1A6D  0873               	movf	??_switch_press_scan,w
  5542  1A6E  00F4               	movwf	switch_press_scan@key
  5543  1A6F  306E               	movlw	110
  5544  1A70  0674               	xorwf	switch_press_scan@key,w
  5545  1A71  1D03               	btfss	3,2
  5546  1A72  2A77               	goto	l3330
  5547                           
  5548                           ;LOAD20210.c: 250: key = keypad_scanner();
  5549                           
  5550                           ;LOAD20210.c: 249: while(key=='n')
  5551  1A73  3193  2319  319A   	fcall	_keypad_scanner
  5552  1A76  2A6C               	goto	L1
  5553  1A77                     l3330:	
  5554                           
  5555                           ;LOAD20210.c: 251: return key;
  5556  1A77  0874               	movf	switch_press_scan@key,w
  5557  1A78  0008               	return
  5558  1A79                     __end_of_switch_press_scan:	
  5559                           
  5560                           	psect	text2
  5561  1319                     __ptext2:	
  5562 ;; *************** function _keypad_scanner *****************
  5563 ;; Defined at:
  5564 ;;		line 72 in file "LOAD20210.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;		None
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;		None
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      unsigned char 
  5571 ;; Registers used:
  5572 ;;		wreg
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5582 ;;Total ram usage:        2 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:    1
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_switch_press_scan
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           
  5593                           ;psect for function _keypad_scanner
  5594  1319                     _keypad_scanner:	
  5595                           
  5596                           ;LOAD20210.c: 74: LATCbits.LATC0 = 0; LATCbits.LATC1 = 1; LATCbits.LATC2 = 1; LATCbits.L
      +                          ATC3 = 1;
  5597                           
  5598                           ;incstack = 0
  5599                           ; Regs used in _keypad_scanner: [wreg]
  5600  1319  0022               	movlb	2	; select bank2
  5601  131A  100E               	bcf	14,0	;volatile
  5602  131B  148E               	bsf	14,1	;volatile
  5603  131C  150E               	bsf	14,2	;volatile
  5604  131D  158E               	bsf	14,3	;volatile
  5605                           
  5606                           ;LOAD20210.c: 75: if (PORTCbits.RC4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC4==0); return '1'; }
  5607  131E  0020               	movlb	0	; select bank0
  5608  131F  1A0E               	btfsc	14,4	;volatile
  5609  1320  2B32               	goto	l207
  5610  1321  3003               	movlw	3
  5611  1322  00F2               	movwf	??_keypad_scanner+1
  5612  1323  3008               	movlw	8
  5613  1324  00F1               	movwf	??_keypad_scanner
  5614  1325  3077               	movlw	119
  5615  1326                     u6497:	
  5616  1326  0B89               	decfsz	9,f
  5617  1327  2B26               	goto	u6497
  5618  1328  0BF1               	decfsz	??_keypad_scanner,f
  5619  1329  2B26               	goto	u6497
  5620  132A  0BF2               	decfsz	??_keypad_scanner+1,f
  5621  132B  2B26               	goto	u6497
  5622  132C  0000               	nop
  5623  132D                     l208:	
  5624  132D  0020               	movlb	0	; select bank0
  5625  132E  1E0E               	btfss	14,4	;volatile
  5626  132F  2B2D               	goto	l208
  5627  1330  3031               	movlw	49
  5628  1331  0008               	return
  5629  1332                     l207:	
  5630                           
  5631                           ;LOAD20210.c: 76: if (PORTCbits.RC5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC5==0); return '2'; }
  5632  1332  1A8E               	btfsc	14,5	;volatile
  5633  1333  2B45               	goto	l212
  5634  1334  3003               	movlw	3
  5635  1335  00F2               	movwf	??_keypad_scanner+1
  5636  1336  3008               	movlw	8
  5637  1337  00F1               	movwf	??_keypad_scanner
  5638  1338  3077               	movlw	119
  5639  1339                     u6507:	
  5640  1339  0B89               	decfsz	9,f
  5641  133A  2B39               	goto	u6507
  5642  133B  0BF1               	decfsz	??_keypad_scanner,f
  5643  133C  2B39               	goto	u6507
  5644  133D  0BF2               	decfsz	??_keypad_scanner+1,f
  5645  133E  2B39               	goto	u6507
  5646  133F  0000               	nop
  5647  1340                     l213:	
  5648  1340  0020               	movlb	0	; select bank0
  5649  1341  1E8E               	btfss	14,5	;volatile
  5650  1342  2B40               	goto	l213
  5651  1343  3032               	movlw	50
  5652  1344  0008               	return
  5653  1345                     l212:	
  5654                           
  5655                           ;LOAD20210.c: 77: if (PORTCbits.RC6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC6==0); return '3'; }
  5656  1345  1B0E               	btfsc	14,6	;volatile
  5657  1346  2B58               	goto	l216
  5658  1347  3003               	movlw	3
  5659  1348  00F2               	movwf	??_keypad_scanner+1
  5660  1349  3008               	movlw	8
  5661  134A  00F1               	movwf	??_keypad_scanner
  5662  134B  3077               	movlw	119
  5663  134C                     u6517:	
  5664  134C  0B89               	decfsz	9,f
  5665  134D  2B4C               	goto	u6517
  5666  134E  0BF1               	decfsz	??_keypad_scanner,f
  5667  134F  2B4C               	goto	u6517
  5668  1350  0BF2               	decfsz	??_keypad_scanner+1,f
  5669  1351  2B4C               	goto	u6517
  5670  1352  0000               	nop
  5671  1353                     l217:	
  5672  1353  0020               	movlb	0	; select bank0
  5673  1354  1F0E               	btfss	14,6	;volatile
  5674  1355  2B53               	goto	l217
  5675  1356  3033               	movlw	51
  5676  1357  0008               	return
  5677  1358                     l216:	
  5678                           
  5679                           ;LOAD20210.c: 78: if (PORTCbits.RC7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC7==0); return 'A'; }
  5680  1358  1B8E               	btfsc	14,7	;volatile
  5681  1359  2B6B               	goto	l220
  5682  135A  3003               	movlw	3
  5683  135B  00F2               	movwf	??_keypad_scanner+1
  5684  135C  3008               	movlw	8
  5685  135D  00F1               	movwf	??_keypad_scanner
  5686  135E  3077               	movlw	119
  5687  135F                     u6527:	
  5688  135F  0B89               	decfsz	9,f
  5689  1360  2B5F               	goto	u6527
  5690  1361  0BF1               	decfsz	??_keypad_scanner,f
  5691  1362  2B5F               	goto	u6527
  5692  1363  0BF2               	decfsz	??_keypad_scanner+1,f
  5693  1364  2B5F               	goto	u6527
  5694  1365  0000               	nop
  5695  1366                     l221:	
  5696  1366  0020               	movlb	0	; select bank0
  5697  1367  1F8E               	btfss	14,7	;volatile
  5698  1368  2B66               	goto	l221
  5699  1369  3041               	movlw	65
  5700  136A  0008               	return
  5701  136B                     l220:	
  5702                           
  5703                           ;LOAD20210.c: 80: LATCbits.LATC0 = 1; LATCbits.LATC1 = 0; LATCbits.LATC2 = 1; LATCbits.L
      +                          ATC3 = 1;
  5704  136B  0022               	movlb	2	; select bank2
  5705  136C  140E               	bsf	14,0	;volatile
  5706  136D  108E               	bcf	14,1	;volatile
  5707  136E  150E               	bsf	14,2	;volatile
  5708  136F  158E               	bsf	14,3	;volatile
  5709                           
  5710                           ;LOAD20210.c: 81: if (PORTCbits.RC4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC4==0); return '4'; }
  5711  1370  0020               	movlb	0	; select bank0
  5712  1371  1A0E               	btfsc	14,4	;volatile
  5713  1372  2B84               	goto	l224
  5714  1373  3003               	movlw	3
  5715  1374  00F2               	movwf	??_keypad_scanner+1
  5716  1375  3008               	movlw	8
  5717  1376  00F1               	movwf	??_keypad_scanner
  5718  1377  3077               	movlw	119
  5719  1378                     u6537:	
  5720  1378  0B89               	decfsz	9,f
  5721  1379  2B78               	goto	u6537
  5722  137A  0BF1               	decfsz	??_keypad_scanner,f
  5723  137B  2B78               	goto	u6537
  5724  137C  0BF2               	decfsz	??_keypad_scanner+1,f
  5725  137D  2B78               	goto	u6537
  5726  137E  0000               	nop
  5727  137F                     l225:	
  5728  137F  0020               	movlb	0	; select bank0
  5729  1380  1E0E               	btfss	14,4	;volatile
  5730  1381  2B7F               	goto	l225
  5731  1382  3034               	movlw	52
  5732  1383  0008               	return
  5733  1384                     l224:	
  5734                           
  5735                           ;LOAD20210.c: 82: if (PORTCbits.RC5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC5==0); return '5'; }
  5736  1384  1A8E               	btfsc	14,5	;volatile
  5737  1385  2B97               	goto	l228
  5738  1386  3003               	movlw	3
  5739  1387  00F2               	movwf	??_keypad_scanner+1
  5740  1388  3008               	movlw	8
  5741  1389  00F1               	movwf	??_keypad_scanner
  5742  138A  3077               	movlw	119
  5743  138B                     u6547:	
  5744  138B  0B89               	decfsz	9,f
  5745  138C  2B8B               	goto	u6547
  5746  138D  0BF1               	decfsz	??_keypad_scanner,f
  5747  138E  2B8B               	goto	u6547
  5748  138F  0BF2               	decfsz	??_keypad_scanner+1,f
  5749  1390  2B8B               	goto	u6547
  5750  1391  0000               	nop
  5751  1392                     l229:	
  5752  1392  0020               	movlb	0	; select bank0
  5753  1393  1E8E               	btfss	14,5	;volatile
  5754  1394  2B92               	goto	l229
  5755  1395  3035               	movlw	53
  5756  1396  0008               	return
  5757  1397                     l228:	
  5758                           
  5759                           ;LOAD20210.c: 83: if (PORTCbits.RC6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC6==0); return '6'; }
  5760  1397  1B0E               	btfsc	14,6	;volatile
  5761  1398  2BAA               	goto	l232
  5762  1399  3003               	movlw	3
  5763  139A  00F2               	movwf	??_keypad_scanner+1
  5764  139B  3008               	movlw	8
  5765  139C  00F1               	movwf	??_keypad_scanner
  5766  139D  3077               	movlw	119
  5767  139E                     u6557:	
  5768  139E  0B89               	decfsz	9,f
  5769  139F  2B9E               	goto	u6557
  5770  13A0  0BF1               	decfsz	??_keypad_scanner,f
  5771  13A1  2B9E               	goto	u6557
  5772  13A2  0BF2               	decfsz	??_keypad_scanner+1,f
  5773  13A3  2B9E               	goto	u6557
  5774  13A4  0000               	nop
  5775  13A5                     l233:	
  5776  13A5  0020               	movlb	0	; select bank0
  5777  13A6  1F0E               	btfss	14,6	;volatile
  5778  13A7  2BA5               	goto	l233
  5779  13A8  3036               	movlw	54
  5780  13A9  0008               	return
  5781  13AA                     l232:	
  5782                           
  5783                           ;LOAD20210.c: 84: if (PORTCbits.RC7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC7==0); return 'B'; }
  5784  13AA  1B8E               	btfsc	14,7	;volatile
  5785  13AB  2BBD               	goto	l236
  5786  13AC  3003               	movlw	3
  5787  13AD  00F2               	movwf	??_keypad_scanner+1
  5788  13AE  3008               	movlw	8
  5789  13AF  00F1               	movwf	??_keypad_scanner
  5790  13B0  3077               	movlw	119
  5791  13B1                     u6567:	
  5792  13B1  0B89               	decfsz	9,f
  5793  13B2  2BB1               	goto	u6567
  5794  13B3  0BF1               	decfsz	??_keypad_scanner,f
  5795  13B4  2BB1               	goto	u6567
  5796  13B5  0BF2               	decfsz	??_keypad_scanner+1,f
  5797  13B6  2BB1               	goto	u6567
  5798  13B7  0000               	nop
  5799  13B8                     l237:	
  5800  13B8  0020               	movlb	0	; select bank0
  5801  13B9  1F8E               	btfss	14,7	;volatile
  5802  13BA  2BB8               	goto	l237
  5803  13BB  3042               	movlw	66
  5804  13BC  0008               	return
  5805  13BD                     l236:	
  5806                           
  5807                           ;LOAD20210.c: 86: LATCbits.LATC0 = 1; LATCbits.LATC1 = 1; LATCbits.LATC2 = 0; LATCbits.L
      +                          ATC3 = 1;
  5808  13BD  0022               	movlb	2	; select bank2
  5809  13BE  140E               	bsf	14,0	;volatile
  5810  13BF  148E               	bsf	14,1	;volatile
  5811  13C0  110E               	bcf	14,2	;volatile
  5812  13C1  158E               	bsf	14,3	;volatile
  5813                           
  5814                           ;LOAD20210.c: 87: if (PORTCbits.RC4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC4==0); return '7'; }
  5815  13C2  0020               	movlb	0	; select bank0
  5816  13C3  1A0E               	btfsc	14,4	;volatile
  5817  13C4  2BD6               	goto	l240
  5818  13C5  3003               	movlw	3
  5819  13C6  00F2               	movwf	??_keypad_scanner+1
  5820  13C7  3008               	movlw	8
  5821  13C8  00F1               	movwf	??_keypad_scanner
  5822  13C9  3077               	movlw	119
  5823  13CA                     u6577:	
  5824  13CA  0B89               	decfsz	9,f
  5825  13CB  2BCA               	goto	u6577
  5826  13CC  0BF1               	decfsz	??_keypad_scanner,f
  5827  13CD  2BCA               	goto	u6577
  5828  13CE  0BF2               	decfsz	??_keypad_scanner+1,f
  5829  13CF  2BCA               	goto	u6577
  5830  13D0  0000               	nop
  5831  13D1                     l241:	
  5832  13D1  0020               	movlb	0	; select bank0
  5833  13D2  1E0E               	btfss	14,4	;volatile
  5834  13D3  2BD1               	goto	l241
  5835  13D4  3037               	movlw	55
  5836  13D5  0008               	return
  5837  13D6                     l240:	
  5838                           
  5839                           ;LOAD20210.c: 88: if (PORTCbits.RC5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC5==0); return '8'; }
  5840  13D6  1A8E               	btfsc	14,5	;volatile
  5841  13D7  2BE9               	goto	l244
  5842  13D8  3003               	movlw	3
  5843  13D9  00F2               	movwf	??_keypad_scanner+1
  5844  13DA  3008               	movlw	8
  5845  13DB  00F1               	movwf	??_keypad_scanner
  5846  13DC  3077               	movlw	119
  5847  13DD                     u6587:	
  5848  13DD  0B89               	decfsz	9,f
  5849  13DE  2BDD               	goto	u6587
  5850  13DF  0BF1               	decfsz	??_keypad_scanner,f
  5851  13E0  2BDD               	goto	u6587
  5852  13E1  0BF2               	decfsz	??_keypad_scanner+1,f
  5853  13E2  2BDD               	goto	u6587
  5854  13E3  0000               	nop
  5855  13E4                     l245:	
  5856  13E4  0020               	movlb	0	; select bank0
  5857  13E5  1E8E               	btfss	14,5	;volatile
  5858  13E6  2BE4               	goto	l245
  5859  13E7  3038               	movlw	56
  5860  13E8  0008               	return
  5861  13E9                     l244:	
  5862                           
  5863                           ;LOAD20210.c: 89: if (PORTCbits.RC6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC6==0); return '9'; }
  5864  13E9  1B0E               	btfsc	14,6	;volatile
  5865  13EA  2BFC               	goto	l248
  5866  13EB  3003               	movlw	3
  5867  13EC  00F2               	movwf	??_keypad_scanner+1
  5868  13ED  3008               	movlw	8
  5869  13EE  00F1               	movwf	??_keypad_scanner
  5870  13EF  3077               	movlw	119
  5871  13F0                     u6597:	
  5872  13F0  0B89               	decfsz	9,f
  5873  13F1  2BF0               	goto	u6597
  5874  13F2  0BF1               	decfsz	??_keypad_scanner,f
  5875  13F3  2BF0               	goto	u6597
  5876  13F4  0BF2               	decfsz	??_keypad_scanner+1,f
  5877  13F5  2BF0               	goto	u6597
  5878  13F6  0000               	nop
  5879  13F7                     l249:	
  5880  13F7  0020               	movlb	0	; select bank0
  5881  13F8  1F0E               	btfss	14,6	;volatile
  5882  13F9  2BF7               	goto	l249
  5883  13FA  3039               	movlw	57
  5884  13FB  0008               	return
  5885  13FC                     l248:	
  5886                           
  5887                           ;LOAD20210.c: 90: if (PORTCbits.RC7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC7==0); return 'C'; }
  5888  13FC  1B8E               	btfsc	14,7	;volatile
  5889  13FD  2C0F               	goto	l252
  5890  13FE  3003               	movlw	3
  5891  13FF  00F2               	movwf	??_keypad_scanner+1
  5892  1400  3008               	movlw	8
  5893  1401  00F1               	movwf	??_keypad_scanner
  5894  1402  3077               	movlw	119
  5895  1403                     u6607:	
  5896  1403  0B89               	decfsz	9,f
  5897  1404  2C03               	goto	u6607
  5898  1405  0BF1               	decfsz	??_keypad_scanner,f
  5899  1406  2C03               	goto	u6607
  5900  1407  0BF2               	decfsz	??_keypad_scanner+1,f
  5901  1408  2C03               	goto	u6607
  5902  1409  0000               	nop
  5903  140A                     l253:	
  5904  140A  0020               	movlb	0	; select bank0
  5905  140B  1F8E               	btfss	14,7	;volatile
  5906  140C  2C0A               	goto	l253
  5907  140D  3043               	movlw	67
  5908  140E  0008               	return
  5909  140F                     l252:	
  5910                           
  5911                           ;LOAD20210.c: 92: LATCbits.LATC0 = 1; LATCbits.LATC1 = 1; LATCbits.LATC2 = 1; LATCbits.L
      +                          ATC3 = 0;
  5912  140F  0022               	movlb	2	; select bank2
  5913  1410  140E               	bsf	14,0	;volatile
  5914  1411  148E               	bsf	14,1	;volatile
  5915  1412  150E               	bsf	14,2	;volatile
  5916  1413  118E               	bcf	14,3	;volatile
  5917                           
  5918                           ;LOAD20210.c: 93: if (PORTCbits.RC4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC4==0); return '*'; }
  5919  1414  0020               	movlb	0	; select bank0
  5920  1415  1A0E               	btfsc	14,4	;volatile
  5921  1416  2C28               	goto	l256
  5922  1417  3003               	movlw	3
  5923  1418  00F2               	movwf	??_keypad_scanner+1
  5924  1419  3008               	movlw	8
  5925  141A  00F1               	movwf	??_keypad_scanner
  5926  141B  3077               	movlw	119
  5927  141C                     u6617:	
  5928  141C  0B89               	decfsz	9,f
  5929  141D  2C1C               	goto	u6617
  5930  141E  0BF1               	decfsz	??_keypad_scanner,f
  5931  141F  2C1C               	goto	u6617
  5932  1420  0BF2               	decfsz	??_keypad_scanner+1,f
  5933  1421  2C1C               	goto	u6617
  5934  1422  0000               	nop
  5935  1423                     l257:	
  5936  1423  0020               	movlb	0	; select bank0
  5937  1424  1E0E               	btfss	14,4	;volatile
  5938  1425  2C23               	goto	l257
  5939  1426  302A               	movlw	42
  5940  1427  0008               	return
  5941  1428                     l256:	
  5942                           
  5943                           ;LOAD20210.c: 94: if (PORTCbits.RC5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC5==0); return '0'; }
  5944  1428  1A8E               	btfsc	14,5	;volatile
  5945  1429  2C3B               	goto	l260
  5946  142A  3003               	movlw	3
  5947  142B  00F2               	movwf	??_keypad_scanner+1
  5948  142C  3008               	movlw	8
  5949  142D  00F1               	movwf	??_keypad_scanner
  5950  142E  3077               	movlw	119
  5951  142F                     u6627:	
  5952  142F  0B89               	decfsz	9,f
  5953  1430  2C2F               	goto	u6627
  5954  1431  0BF1               	decfsz	??_keypad_scanner,f
  5955  1432  2C2F               	goto	u6627
  5956  1433  0BF2               	decfsz	??_keypad_scanner+1,f
  5957  1434  2C2F               	goto	u6627
  5958  1435  0000               	nop
  5959  1436                     l261:	
  5960  1436  0020               	movlb	0	; select bank0
  5961  1437  1E8E               	btfss	14,5	;volatile
  5962  1438  2C36               	goto	l261
  5963  1439  3030               	movlw	48
  5964  143A  0008               	return
  5965  143B                     l260:	
  5966                           
  5967                           ;LOAD20210.c: 95: if (PORTCbits.RC6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC6==0); return '#'; }
  5968  143B  1B0E               	btfsc	14,6	;volatile
  5969  143C  2C4E               	goto	l264
  5970  143D  3003               	movlw	3
  5971  143E  00F2               	movwf	??_keypad_scanner+1
  5972  143F  3008               	movlw	8
  5973  1440  00F1               	movwf	??_keypad_scanner
  5974  1441  3077               	movlw	119
  5975  1442                     u6637:	
  5976  1442  0B89               	decfsz	9,f
  5977  1443  2C42               	goto	u6637
  5978  1444  0BF1               	decfsz	??_keypad_scanner,f
  5979  1445  2C42               	goto	u6637
  5980  1446  0BF2               	decfsz	??_keypad_scanner+1,f
  5981  1447  2C42               	goto	u6637
  5982  1448  0000               	nop
  5983  1449                     l265:	
  5984  1449  0020               	movlb	0	; select bank0
  5985  144A  1F0E               	btfss	14,6	;volatile
  5986  144B  2C49               	goto	l265
  5987  144C  3023               	movlw	35
  5988  144D  0008               	return
  5989  144E                     l264:	
  5990                           
  5991                           ;LOAD20210.c: 96: if (PORTCbits.RC7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTCbits.RC7==0); return 'D'; }
  5992  144E  1B8E               	btfsc	14,7	;volatile
  5993  144F  0008               	return
  5994  1450  3003               	movlw	3
  5995  1451  00F2               	movwf	??_keypad_scanner+1
  5996  1452  3008               	movlw	8
  5997  1453  00F1               	movwf	??_keypad_scanner
  5998  1454  3077               	movlw	119
  5999  1455                     u6647:	
  6000  1455  0B89               	decfsz	9,f
  6001  1456  2C55               	goto	u6647
  6002  1457  0BF1               	decfsz	??_keypad_scanner,f
  6003  1458  2C55               	goto	u6647
  6004  1459  0BF2               	decfsz	??_keypad_scanner+1,f
  6005  145A  2C55               	goto	u6647
  6006  145B  0000               	nop
  6007  145C                     l269:	
  6008  145C  0020               	movlb	0	; select bank0
  6009  145D  1F8E               	btfss	14,7	;volatile
  6010  145E  2C5C               	goto	l269
  6011  145F  3044               	movlw	68
  6012  1460  0008               	return
  6013  1461                     __end_of_keypad_scanner:	
  6014                           ;LOAD20210.c: 98: return ;
  6015                           
  6016                           
  6017                           	psect	text3
  6018  004E                     __ptext3:	
  6019 ;; *************** function _sprintf *****************
  6020 ;; Defined at:
  6021 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;  sp              1    wreg     PTR unsigned char 
  6024 ;;		 -> naif(17), 
  6025 ;;  f               2   60[BANK0 ] PTR const unsigned char 
  6026 ;;		 -> STR_3(3), STR_1(5), 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  sp              1   16[BANK1 ] PTR unsigned char 
  6029 ;;		 -> naif(17), 
  6030 ;;  val             4   12[BANK1 ] unsigned long 
  6031 ;;  tmpval          4    8[BANK1 ] struct .
  6032 ;;  fval            3   19[BANK1 ] struct .
  6033 ;;  prec            2   17[BANK1 ] int 
  6034 ;;  exp             2    6[BANK1 ] int 
  6035 ;;  flag            2    4[BANK1 ] unsigned short 
  6036 ;;  cp              2    0        PTR const unsigned char 
  6037 ;;  len             2    0        unsigned int 
  6038 ;;  width           2    0        int 
  6039 ;;  c               1   22[BANK1 ] char 
  6040 ;;  ap              1    3[BANK1 ] PTR void [1]
  6041 ;;		 -> ?_sprintf(2), 
  6042 ;;  d               1    0        unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  2   60[BANK0 ] int 
  6045 ;; Registers used:
  6046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6052 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6053 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6054 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6055 ;;      Totals:         0      11      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6056 ;;Total ram usage:       34 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    4
  6059 ;; This function calls:
  6060 ;;		___awdiv
  6061 ;;		___ftadd
  6062 ;;		___ftge
  6063 ;;		___ftmul
  6064 ;;		___ftneg
  6065 ;;		___ftsub
  6066 ;;		___fttol
  6067 ;;		___lldiv
  6068 ;;		___llmod
  6069 ;;		___lltoft
  6070 ;;		___wmul
  6071 ;;		__div_to_l_
  6072 ;;		__tdiv_to_l_
  6073 ;;		_fround
  6074 ;;		_isdigit
  6075 ;;		_scale
  6076 ;; This function is called by:
  6077 ;;		_main
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           
  6082                           ;psect for function _sprintf
  6083  004E                     _sprintf:	
  6084                           
  6085                           ;incstack = 0
  6086                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6087                           ;sprintf@sp stored from wreg
  6088  004E  0021               	movlb	1	; select bank1
  6089  004F  00D2               	movwf	sprintf@sp^(0+128)
  6090                           
  6091                           ;doprnt.c: 494: va_list ap;
  6092                           ;doprnt.c: 499: signed char c;
  6093                           ;doprnt.c: 501: int width;
  6094                           ;doprnt.c: 504: int prec;
  6095                           ;doprnt.c: 508: unsigned short flag;
  6096                           ;doprnt.c: 515: char d;
  6097                           ;doprnt.c: 516: double fval;
  6098                           ;doprnt.c: 517: int exp;
  6099                           ;doprnt.c: 523: union {
  6100                           ;doprnt.c: 524: unsigned long vd;
  6101                           ;doprnt.c: 525: double integ;
  6102                           ;doprnt.c: 526: } tmpval;
  6103                           ;doprnt.c: 528: unsigned long val;
  6104                           ;doprnt.c: 529: unsigned len;
  6105                           ;doprnt.c: 530: const char * cp;
  6106                           ;doprnt.c: 533: *ap = __va_start();
  6107  0050  305E               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6108  0051  0020               	movlb	0	; select bank0
  6109  0052  00E1               	movwf	??_sprintf
  6110  0053  0861               	movf	??_sprintf,w
  6111  0054  0021               	movlb	1	; select bank1
  6112  0055  00C5               	movwf	sprintf@ap^(0+128)
  6113  0056                     l4088:	
  6114                           ;doprnt.c: 536: while(c = *f++) {
  6115                           
  6116  0056  0020               	movlb	0	; select bank0
  6117  0057  085D               	movf	sprintf@f+1,w
  6118  0058  00E2               	movwf	??_sprintf+1
  6119  0059  085C               	movf	sprintf@f,w
  6120  005A  00E1               	movwf	??_sprintf
  6121  005B  0ADC               	incf	sprintf@f,f
  6122  005C  1903               	skipnz
  6123  005D  0ADD               	incf	sprintf@f+1,f
  6124  005E  0861               	movf	??_sprintf,w
  6125  005F  0084               	movwf	4
  6126  0060  0862               	movf	??_sprintf+1,w
  6127  0061  0085               	movwf	5
  6128  0062  0800               	movf	0,w	;code access
  6129  0063  00E3               	movwf	??_sprintf+2
  6130  0064  0863               	movf	??_sprintf+2,w
  6131  0065  0021               	movlb	1	; select bank1
  6132  0066  00D8               	movwf	sprintf@c^(0+128)
  6133  0067  0858               	movf	sprintf@c^(0+128),w
  6134  0068  1903               	btfsc	3,2
  6135  0069  2E2C               	goto	l4090
  6136                           
  6137                           ;doprnt.c: 538: if(c != '%')
  6138  006A  3025               	movlw	37
  6139  006B  0658               	xorwf	sprintf@c^(0+128),w
  6140  006C  1903               	btfsc	3,2
  6141  006D  287E               	goto	l3872
  6142                           
  6143                           ;doprnt.c: 540: {
  6144                           ;doprnt.c: 541: ((*sp++ = (c)));
  6145  006E  0858               	movf	sprintf@c^(0+128),w
  6146  006F  0020               	movlb	0	; select bank0
  6147  0070  00E1               	movwf	??_sprintf
  6148  0071  0021               	movlb	1	; select bank1
  6149  0072  0852               	movf	sprintf@sp^(0+128),w
  6150  0073  0086               	movwf	6
  6151  0074  0187               	clrf	7
  6152  0075  0020               	movlb	0	; select bank0
  6153  0076  0861               	movf	??_sprintf,w
  6154  0077  0081               	movwf	1
  6155  0078  3001               	movlw	1
  6156  0079  00E1               	movwf	??_sprintf
  6157  007A  0861               	movf	??_sprintf,w
  6158  007B  0021               	movlb	1	; select bank1
  6159  007C  07D2               	addwf	sprintf@sp^(0+128),f
  6160                           
  6161                           ;doprnt.c: 542: continue;
  6162  007D  2856               	goto	l4088
  6163  007E                     l3872:	
  6164                           
  6165                           ;doprnt.c: 543: }
  6166                           ;doprnt.c: 548: flag = 0;
  6167  007E  01C6               	clrf	sprintf@flag^(0+128)
  6168  007F  01C7               	clrf	(sprintf@flag+1)^(0+128)
  6169                           
  6170                           ;doprnt.c: 611: if(*f == '.') {
  6171  0080  0020               	movlb	0	; select bank0
  6172  0081  085C               	movf	sprintf@f,w
  6173  0082  0084               	movwf	4
  6174  0083  085D               	movf	sprintf@f+1,w
  6175  0084  0085               	movwf	5
  6176  0085  0012               	moviw fsr0++
  6177  0086  3A2E               	xorlw	46
  6178  0087  1D03               	btfss	3,2
  6179  0088  28CB               	goto	l3888
  6180                           
  6181                           ;doprnt.c: 612: flag |= 0x4000;
  6182  0089  0021               	movlb	1	; select bank1
  6183  008A  1747               	bsf	(sprintf@flag^(0+128)+1),6
  6184                           
  6185                           ;doprnt.c: 613: f++;
  6186  008B  3001               	movlw	1
  6187  008C  0020               	movlb	0	; select bank0
  6188  008D  07DC               	addwf	sprintf@f,f
  6189  008E  3000               	movlw	0
  6190  008F  3DDD               	addwfc	sprintf@f+1,f
  6191                           
  6192                           ;doprnt.c: 620: {
  6193                           ;doprnt.c: 621: prec = 0;
  6194  0090  0021               	movlb	1	; select bank1
  6195  0091  01D3               	clrf	sprintf@prec^(0+128)
  6196  0092  01D4               	clrf	(sprintf@prec+1)^(0+128)
  6197  0093                     l3886:	
  6198                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6199                           
  6200  0093  0020               	movlb	0	; select bank0
  6201  0094  085C               	movf	sprintf@f,w
  6202  0095  0084               	movwf	4
  6203  0096  085D               	movf	sprintf@f+1,w
  6204  0097  0085               	movwf	5
  6205  0098  0800               	movf	0,w	;code access
  6206  0099  319A  225D  3180   	fcall	_isdigit
  6207  009C  1C03               	btfss	3,0
  6208  009D  28D2               	goto	l3894
  6209                           
  6210                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6211  009E  0020               	movlb	0	; select bank0
  6212  009F  085C               	movf	sprintf@f,w
  6213  00A0  0084               	movwf	4
  6214  00A1  085D               	movf	sprintf@f+1,w
  6215  00A2  0085               	movwf	5
  6216  00A3  0800               	movf	0,w	;code access
  6217  00A4  00E1               	movwf	??_sprintf
  6218  00A5  01E2               	clrf	??_sprintf+1
  6219  00A6  0021               	movlb	1	; select bank1
  6220  00A7  0854               	movf	(sprintf@prec+1)^(0+128),w
  6221  00A8  0020               	movlb	0	; select bank0
  6222  00A9  00A6               	movwf	___wmul@multiplier+1
  6223  00AA  0021               	movlb	1	; select bank1
  6224  00AB  0853               	movf	sprintf@prec^(0+128),w
  6225  00AC  0020               	movlb	0	; select bank0
  6226  00AD  00A5               	movwf	___wmul@multiplier
  6227  00AE  300A               	movlw	10
  6228  00AF  00A7               	movwf	___wmul@multiplicand
  6229  00B0  3000               	movlw	0
  6230  00B1  00A8               	movwf	___wmul@multiplicand+1
  6231  00B2  319A  22BF  3180   	fcall	___wmul
  6232  00B5  0020               	movlb	0	; select bank0
  6233  00B6  0861               	movf	??_sprintf,w
  6234  00B7  0725               	addwf	?___wmul,w
  6235  00B8  00E3               	movwf	??_sprintf+2
  6236  00B9  0862               	movf	??_sprintf+1,w
  6237  00BA  3D26               	addwfc	?___wmul+1,w
  6238  00BB  00E4               	movwf	??_sprintf+3
  6239  00BC  0863               	movf	??_sprintf+2,w
  6240  00BD  3ED0               	addlw	208
  6241  00BE  0021               	movlb	1	; select bank1
  6242  00BF  00D3               	movwf	sprintf@prec^(0+128)
  6243  00C0  30FF               	movlw	255
  6244  00C1  0020               	movlb	0	; select bank0
  6245  00C2  3D64               	addwfc	??_sprintf+3,w
  6246  00C3  0021               	movlb	1	; select bank1
  6247  00C4  00D4               	movwf	(sprintf@prec+1)^(0+128)
  6248  00C5  3001               	movlw	1
  6249  00C6  0020               	movlb	0	; select bank0
  6250  00C7  07DC               	addwf	sprintf@f,f
  6251  00C8  3000               	movlw	0
  6252  00C9  3DDD               	addwfc	sprintf@f+1,f
  6253  00CA  2893               	goto	l3886
  6254  00CB                     l3888:	
  6255                           ;doprnt.c: 624: }
  6256                           ;doprnt.c: 625: } else {
  6257                           
  6258                           
  6259                           ;doprnt.c: 626: prec = 0;
  6260  00CB  0021               	movlb	1	; select bank1
  6261  00CC  01D3               	clrf	sprintf@prec^(0+128)
  6262  00CD  01D4               	clrf	(sprintf@prec+1)^(0+128)
  6263                           
  6264                           ;doprnt.c: 628: flag |= 0x1000;
  6265  00CE  1647               	bsf	(sprintf@flag^(0+128)+1),4
  6266                           
  6267                           ;doprnt.c: 630: }
  6268                           ;doprnt.c: 635: switch(c = *f++) {
  6269  00CF  28D2               	goto	l3894
  6270  00D0                     l381:	
  6271                           ;doprnt.c: 662: case 'f':
  6272                           
  6273                           ;doprnt.c: 638: goto alldone;
  6274                           
  6275                           ;doprnt.c: 637: case 0:
  6276                           
  6277                           
  6278                           ;doprnt.c: 663: flag |= 0x400;
  6279  00D0  1547               	bsf	(sprintf@flag^(0+128)+1),2
  6280                           
  6281                           ;doprnt.c: 698: case 'i':
  6282                           ;doprnt.c: 699: break;
  6283                           
  6284                           ;doprnt.c: 697: case 'd':
  6285                           
  6286                           ;doprnt.c: 664: break;
  6287  00D1  28EE               	goto	l3896
  6288  00D2                     l3894:	
  6289                           ;doprnt.c: 822: }
  6290                           
  6291                           ;doprnt.c: 813: continue;
  6292                           
  6293                           ;doprnt.c: 802: default:
  6294                           
  6295  00D2  0020               	movlb	0	; select bank0
  6296  00D3  085D               	movf	sprintf@f+1,w
  6297  00D4  00E2               	movwf	??_sprintf+1
  6298  00D5  085C               	movf	sprintf@f,w
  6299  00D6  00E1               	movwf	??_sprintf
  6300  00D7  0ADC               	incf	sprintf@f,f
  6301  00D8  1903               	skipnz
  6302  00D9  0ADD               	incf	sprintf@f+1,f
  6303  00DA  0861               	movf	??_sprintf,w
  6304  00DB  0084               	movwf	4
  6305  00DC  0862               	movf	??_sprintf+1,w
  6306  00DD  0085               	movwf	5
  6307  00DE  0800               	movf	0,w	;code access
  6308  00DF  0021               	movlb	1	; select bank1
  6309  00E0  00D8               	movwf	sprintf@c^(0+128)
  6310                           
  6311                           ; Switch size 1, requested type "space"
  6312                           ; Number of cases is 4, Range of values is 0 to 105
  6313                           ; switch strategies available:
  6314                           ; Name         Instructions Cycles
  6315                           ; simple_byte           13     7 (average)
  6316                           ; direct_byte          218     6 (fixed)
  6317                           ; jumptable            260     6 (fixed)
  6318                           ;	Chosen strategy is simple_byte
  6319  00E1  3A00               	xorlw	0	; case 0
  6320  00E2  1903               	skipnz
  6321  00E3  2E2C               	goto	l4090
  6322  00E4  3A64               	xorlw	100	; case 100
  6323  00E5  1903               	skipnz
  6324  00E6  28EE               	goto	l3896
  6325  00E7  3A02               	xorlw	2	; case 102
  6326  00E8  1903               	skipnz
  6327  00E9  28D0               	goto	l381
  6328  00EA  3A0F               	xorlw	15	; case 105
  6329  00EB  1903               	skipnz
  6330  00EC  28EE               	goto	l3896
  6331  00ED  2856               	goto	l4088
  6332  00EE                     l3896:	
  6333                           
  6334                           ;doprnt.c: 825: if(flag & (0x700)) {
  6335  00EE  3000               	movlw	0
  6336  00EF  0546               	andwf	sprintf@flag^(0+128),w
  6337  00F0  0020               	movlb	0	; select bank0
  6338  00F1  00E1               	movwf	??_sprintf
  6339  00F2  3007               	movlw	7
  6340  00F3  0021               	movlb	1	; select bank1
  6341  00F4  0547               	andwf	(sprintf@flag+1)^(0+128),w
  6342  00F5  0020               	movlb	0	; select bank0
  6343  00F6  00E2               	movwf	??_sprintf+1
  6344  00F7  0861               	movf	??_sprintf,w
  6345  00F8  0462               	iorwf	??_sprintf+1,w
  6346  00F9  1903               	btfsc	3,2
  6347  00FA  2D16               	goto	l4040
  6348                           
  6349                           ;doprnt.c: 827: if(flag & 0x1000)
  6350  00FB  0021               	movlb	1	; select bank1
  6351  00FC  1E47               	btfss	(sprintf@flag+1)^(0+128),4
  6352  00FD  2902               	goto	l3902
  6353                           
  6354                           ;doprnt.c: 829: prec = 6;
  6355  00FE  3006               	movlw	6
  6356  00FF  00D3               	movwf	sprintf@prec^(0+128)
  6357  0100  3000               	movlw	0
  6358  0101  00D4               	movwf	(sprintf@prec^(0+128)+1)
  6359  0102                     l3902:	
  6360                           
  6361                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6362  0102  0845               	movf	sprintf@ap^(0+128),w
  6363  0103  0086               	movwf	6
  6364  0104  0187               	clrf	7
  6365  0105  3F40               	moviw [0]fsr1
  6366  0106  00D5               	movwf	sprintf@fval^(0+128)
  6367  0107  3F41               	moviw [1]fsr1
  6368  0108  00D6               	movwf	(sprintf@fval+1)^(0+128)
  6369  0109  3F42               	moviw [2]fsr1
  6370  010A  00D7               	movwf	(sprintf@fval+2)^(0+128)
  6371  010B  3003               	movlw	3
  6372  010C  0020               	movlb	0	; select bank0
  6373  010D  00E1               	movwf	??_sprintf
  6374  010E  0861               	movf	??_sprintf,w
  6375  010F  0021               	movlb	1	; select bank1
  6376  0110  07C5               	addwf	sprintf@ap^(0+128),f
  6377                           
  6378                           ;doprnt.c: 831: if(fval < 0.0) {
  6379  0111  0855               	movf	sprintf@fval^(0+128),w
  6380  0112  00F1               	movwf	___ftge@ff1
  6381  0113  0856               	movf	(sprintf@fval+1)^(0+128),w
  6382  0114  00F2               	movwf	___ftge@ff1+1
  6383  0115  0857               	movf	(sprintf@fval+2)^(0+128),w
  6384  0116  00F3               	movwf	___ftge@ff1+2
  6385  0117  3000               	movlw	0
  6386  0118  00F4               	movwf	___ftge@ff2
  6387  0119  3000               	movlw	0
  6388  011A  00F5               	movwf	___ftge@ff2+1
  6389  011B  3000               	movlw	0
  6390  011C  00F6               	movwf	___ftge@ff2+2
  6391  011D  319B  239F  3180   	fcall	___ftge
  6392  0120  1803               	btfsc	3,0
  6393  0121  2937               	goto	l3912
  6394                           
  6395                           ;doprnt.c: 832: fval = -fval;
  6396  0122  0021               	movlb	1	; select bank1
  6397  0123  0855               	movf	sprintf@fval^(0+128),w
  6398  0124  00F1               	movwf	___ftneg@f1
  6399  0125  0856               	movf	(sprintf@fval+1)^(0+128),w
  6400  0126  00F2               	movwf	___ftneg@f1+1
  6401  0127  0857               	movf	(sprintf@fval+2)^(0+128),w
  6402  0128  00F3               	movwf	___ftneg@f1+2
  6403  0129  319A  2235  3180   	fcall	___ftneg
  6404  012C  0871               	movf	?___ftneg,w
  6405  012D  0021               	movlb	1	; select bank1
  6406  012E  00D5               	movwf	sprintf@fval^(0+128)
  6407  012F  0872               	movf	?___ftneg+1,w
  6408  0130  00D6               	movwf	(sprintf@fval+1)^(0+128)
  6409  0131  0873               	movf	?___ftneg+2,w
  6410  0132  00D7               	movwf	(sprintf@fval+2)^(0+128)
  6411                           
  6412                           ;doprnt.c: 833: flag |= 0x03;
  6413  0133  3003               	movlw	3
  6414  0134  04C6               	iorwf	sprintf@flag^(0+128),f
  6415  0135  3000               	movlw	0
  6416  0136  04C7               	iorwf	(sprintf@flag+1)^(0+128),f
  6417  0137                     l3912:	
  6418                           
  6419                           ;doprnt.c: 834: }
  6420                           ;doprnt.c: 835: exp = 0;
  6421  0137  0021               	movlb	1	; select bank1
  6422  0138  01C8               	clrf	sprintf@exp^(0+128)
  6423  0139  01C9               	clrf	(sprintf@exp+1)^(0+128)
  6424                           
  6425                           ;doprnt.c: 836: if( fval!=0) {
  6426  013A  0857               	movf	(sprintf@fval+2)^(0+128),w
  6427  013B  0456               	iorwf	(sprintf@fval+1)^(0+128),w
  6428  013C  0455               	iorwf	sprintf@fval^(0+128),w
  6429  013D  1903               	skipnz
  6430  013E  29F7               	goto	l389
  6431                           
  6432                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6433  013F  30D5               	movlw	low (sprintf@fval| 0)
  6434  0140  0086               	movwf	6
  6435  0141  0187               	clrf	7
  6436  0142  3F40               	moviw [0]fsr1
  6437  0143  0020               	movlb	0	; select bank0
  6438  0144  00E1               	movwf	??_sprintf
  6439  0145  3F41               	moviw [1]fsr1
  6440  0146  00E2               	movwf	??_sprintf+1
  6441  0147  3F42               	moviw [2]fsr1
  6442  0148  00E3               	movwf	??_sprintf+2
  6443  0149  3F43               	moviw [3]fsr1
  6444  014A  00E4               	movwf	??_sprintf+3
  6445  014B  300F               	movlw	15
  6446  014C                     u6095:	
  6447  014C  36E4               	lsrf	??_sprintf+3,f
  6448  014D  0CE3               	rrf	??_sprintf+2,f
  6449  014E  0CE2               	rrf	??_sprintf+1,f
  6450  014F  0CE1               	rrf	??_sprintf,f
  6451  0150  0B89               	decfsz	9,f
  6452  0151  294C               	goto	u6095
  6453  0152  30FF               	movlw	255
  6454  0153  0561               	andwf	??_sprintf,w
  6455  0154  00E5               	movwf	??_sprintf+4
  6456  0155  3000               	movlw	0
  6457  0156  0562               	andwf	??_sprintf+1,w
  6458  0157  00E6               	movwf	??_sprintf+5
  6459  0158  0865               	movf	??_sprintf+4,w
  6460  0159  3E82               	addlw	130
  6461  015A  0021               	movlb	1	; select bank1
  6462  015B  00C8               	movwf	sprintf@exp^(0+128)
  6463  015C  30FF               	movlw	255
  6464  015D  0020               	movlb	0	; select bank0
  6465  015E  3D66               	addwfc	??_sprintf+5,w
  6466  015F  0021               	movlb	1	; select bank1
  6467  0160  00C9               	movwf	(sprintf@exp+1)^(0+128)
  6468                           
  6469                           ;doprnt.c: 838: exp--;
  6470  0161  30FF               	movlw	255
  6471  0162  07C8               	addwf	sprintf@exp^(0+128),f
  6472  0163  30FF               	movlw	255
  6473  0164  3DC9               	addwfc	(sprintf@exp+1)^(0+128),f
  6474                           
  6475                           ;doprnt.c: 839: exp *= 3;
  6476  0165  3003               	movlw	3
  6477  0166  0020               	movlb	0	; select bank0
  6478  0167  00A5               	movwf	___wmul@multiplier
  6479  0168  3000               	movlw	0
  6480  0169  00A6               	movwf	___wmul@multiplier+1
  6481  016A  0021               	movlb	1	; select bank1
  6482  016B  0849               	movf	(sprintf@exp+1)^(0+128),w
  6483  016C  0020               	movlb	0	; select bank0
  6484  016D  00A8               	movwf	___wmul@multiplicand+1
  6485  016E  0021               	movlb	1	; select bank1
  6486  016F  0848               	movf	sprintf@exp^(0+128),w
  6487  0170  0020               	movlb	0	; select bank0
  6488  0171  00A7               	movwf	___wmul@multiplicand
  6489  0172  319A  22BF  3180   	fcall	___wmul
  6490  0175  0020               	movlb	0	; select bank0
  6491  0176  0826               	movf	?___wmul+1,w
  6492  0177  0021               	movlb	1	; select bank1
  6493  0178  00C9               	movwf	(sprintf@exp+1)^(0+128)
  6494  0179  0020               	movlb	0	; select bank0
  6495  017A  0825               	movf	?___wmul,w
  6496  017B  0021               	movlb	1	; select bank1
  6497  017C  00C8               	movwf	sprintf@exp^(0+128)
  6498                           
  6499                           ;doprnt.c: 840: exp /= 10;
  6500  017D  300A               	movlw	10
  6501  017E  00F8               	movwf	___awdiv@divisor
  6502  017F  3000               	movlw	0
  6503  0180  00F9               	movwf	___awdiv@divisor+1
  6504  0181  0849               	movf	(sprintf@exp+1)^(0+128),w
  6505  0182  00FB               	movwf	___awdiv@dividend+1
  6506  0183  0848               	movf	sprintf@exp^(0+128),w
  6507  0184  00FA               	movwf	___awdiv@dividend
  6508  0185  319C  2462  3180   	fcall	___awdiv
  6509  0188  0879               	movf	?___awdiv+1,w
  6510  0189  0021               	movlb	1	; select bank1
  6511  018A  00C9               	movwf	(sprintf@exp+1)^(0+128)
  6512  018B  0878               	movf	?___awdiv,w
  6513  018C  00C8               	movwf	sprintf@exp^(0+128)
  6514                           
  6515                           ;doprnt.c: 841: if(exp < 0)
  6516  018D  1FC9               	btfss	(sprintf@exp+1)^(0+128),7
  6517  018E  2993               	goto	l3928
  6518                           
  6519                           ;doprnt.c: 842: exp--;
  6520  018F  30FF               	movlw	255
  6521  0190  07C8               	addwf	sprintf@exp^(0+128),f
  6522  0191  30FF               	movlw	255
  6523  0192  3DC9               	addwfc	(sprintf@exp+1)^(0+128),f
  6524  0193                     l3928:	
  6525                           
  6526                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6527  0193  0348               	decf	sprintf@exp^(0+128),w
  6528  0194  3AFF               	xorlw	255
  6529  0195  3195  25BC  3180   	fcall	_scale
  6530  0198  0020               	movlb	0	; select bank0
  6531  0199  083B               	movf	?_scale,w
  6532  019A  0021               	movlb	1	; select bank1
  6533  019B  00CA               	movwf	sprintf@tmpval^(0+128)
  6534  019C  0020               	movlb	0	; select bank0
  6535  019D  083C               	movf	?_scale+1,w
  6536  019E  0021               	movlb	1	; select bank1
  6537  019F  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  6538  01A0  0020               	movlb	0	; select bank0
  6539  01A1  083D               	movf	?_scale+2,w
  6540  01A2  0021               	movlb	1	; select bank1
  6541  01A3  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  6542                           
  6543                           ;doprnt.c: 847: tmpval.integ *= fval;
  6544  01A4  0855               	movf	sprintf@fval^(0+128),w
  6545  01A5  0020               	movlb	0	; select bank0
  6546  01A6  00AB               	movwf	___ftmul@f1
  6547  01A7  0021               	movlb	1	; select bank1
  6548  01A8  0856               	movf	(sprintf@fval+1)^(0+128),w
  6549  01A9  0020               	movlb	0	; select bank0
  6550  01AA  00AC               	movwf	___ftmul@f1+1
  6551  01AB  0021               	movlb	1	; select bank1
  6552  01AC  0857               	movf	(sprintf@fval+2)^(0+128),w
  6553  01AD  0020               	movlb	0	; select bank0
  6554  01AE  00AD               	movwf	___ftmul@f1+2
  6555  01AF  0021               	movlb	1	; select bank1
  6556  01B0  084A               	movf	sprintf@tmpval^(0+128),w
  6557  01B1  0020               	movlb	0	; select bank0
  6558  01B2  00AE               	movwf	___ftmul@f2
  6559  01B3  0021               	movlb	1	; select bank1
  6560  01B4  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  6561  01B5  0020               	movlb	0	; select bank0
  6562  01B6  00AF               	movwf	___ftmul@f2+1
  6563  01B7  0021               	movlb	1	; select bank1
  6564  01B8  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  6565  01B9  0020               	movlb	0	; select bank0
  6566  01BA  00B0               	movwf	___ftmul@f2+2
  6567  01BB  319E  2696  3180   	fcall	___ftmul
  6568  01BE  0020               	movlb	0	; select bank0
  6569  01BF  082B               	movf	?___ftmul,w
  6570  01C0  0021               	movlb	1	; select bank1
  6571  01C1  00CA               	movwf	sprintf@tmpval^(0+128)
  6572  01C2  0020               	movlb	0	; select bank0
  6573  01C3  082C               	movf	?___ftmul+1,w
  6574  01C4  0021               	movlb	1	; select bank1
  6575  01C5  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  6576  01C6  0020               	movlb	0	; select bank0
  6577  01C7  082D               	movf	?___ftmul+2,w
  6578  01C8  0021               	movlb	1	; select bank1
  6579  01C9  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  6580                           
  6581                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6582  01CA  084A               	movf	sprintf@tmpval^(0+128),w
  6583  01CB  00F1               	movwf	___ftge@ff1
  6584  01CC  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  6585  01CD  00F2               	movwf	___ftge@ff1+1
  6586  01CE  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  6587  01CF  00F3               	movwf	___ftge@ff1+2
  6588  01D0  3000               	movlw	0
  6589  01D1  00F4               	movwf	___ftge@ff2
  6590  01D2  3080               	movlw	128
  6591  01D3  00F5               	movwf	___ftge@ff2+1
  6592  01D4  303F               	movlw	63
  6593  01D5  00F6               	movwf	___ftge@ff2+2
  6594  01D6  319B  239F  3180   	fcall	___ftge
  6595  01D9  1803               	btfsc	3,0
  6596  01DA  29E0               	goto	l3936
  6597                           
  6598                           ;doprnt.c: 849: exp--;
  6599  01DB  30FF               	movlw	255
  6600  01DC  0021               	movlb	1	; select bank1
  6601  01DD  07C8               	addwf	sprintf@exp^(0+128),f
  6602  01DE  30FF               	movlw	255
  6603  01DF  29F6               	goto	L2
  6604  01E0                     l3936:	
  6605                           
  6606                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6607  01E0  0021               	movlb	1	; select bank1
  6608  01E1  084A               	movf	sprintf@tmpval^(0+128),w
  6609  01E2  00F1               	movwf	___ftge@ff1
  6610  01E3  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  6611  01E4  00F2               	movwf	___ftge@ff1+1
  6612  01E5  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  6613  01E6  00F3               	movwf	___ftge@ff1+2
  6614  01E7  3000               	movlw	0
  6615  01E8  00F4               	movwf	___ftge@ff2
  6616  01E9  3020               	movlw	32
  6617  01EA  00F5               	movwf	___ftge@ff2+1
  6618  01EB  3041               	movlw	65
  6619  01EC  00F6               	movwf	___ftge@ff2+2
  6620  01ED  319B  239F  3180   	fcall	___ftge
  6621  01F0  1C03               	btfss	3,0
  6622  01F1  29F7               	goto	l389
  6623                           
  6624                           ;doprnt.c: 851: exp++;
  6625  01F2  3001               	movlw	1
  6626  01F3  0021               	movlb	1	; select bank1
  6627  01F4  07C8               	addwf	sprintf@exp^(0+128),f
  6628  01F5  3000               	movlw	0
  6629  01F6                     L2:	
  6630  01F6  3DC9               	addwfc	(sprintf@exp+1)^(0+128),f
  6631  01F7                     l389:	
  6632                           
  6633                           ;doprnt.c: 852: }
  6634                           ;doprnt.c: 1112: if(prec <= 12)
  6635  01F7  0021               	movlb	1	; select bank1
  6636  01F8  0854               	movf	(sprintf@prec+1)^(0+128),w
  6637  01F9  3A80               	xorlw	128
  6638  01FA  0020               	movlb	0	; select bank0
  6639  01FB  00E1               	movwf	??_sprintf
  6640  01FC  3080               	movlw	128
  6641  01FD  0261               	subwf	??_sprintf,w
  6642  01FE  1D03               	skipz
  6643  01FF  2A03               	goto	u6135
  6644  0200  300D               	movlw	13
  6645  0201  0021               	movlb	1	; select bank1
  6646  0202  0253               	subwf	sprintf@prec^(0+128),w
  6647  0203                     u6135:	
  6648  0203  1803               	skipnc
  6649  0204  2A2C               	goto	l3942
  6650                           
  6651                           ;doprnt.c: 1113: fval += fround(prec);
  6652  0205  0021               	movlb	1	; select bank1
  6653  0206  0853               	movf	sprintf@prec^(0+128),w
  6654  0207  318E  269B  3180   	fcall	_fround
  6655  020A  0020               	movlb	0	; select bank0
  6656  020B  083B               	movf	?_fround,w
  6657  020C  00C9               	movwf	___ftadd@f1
  6658  020D  083C               	movf	?_fround+1,w
  6659  020E  00CA               	movwf	___ftadd@f1+1
  6660  020F  083D               	movf	?_fround+2,w
  6661  0210  00CB               	movwf	___ftadd@f1+2
  6662  0211  0021               	movlb	1	; select bank1
  6663  0212  0855               	movf	sprintf@fval^(0+128),w
  6664  0213  0020               	movlb	0	; select bank0
  6665  0214  00CC               	movwf	___ftadd@f2
  6666  0215  0021               	movlb	1	; select bank1
  6667  0216  0856               	movf	(sprintf@fval+1)^(0+128),w
  6668  0217  0020               	movlb	0	; select bank0
  6669  0218  00CD               	movwf	___ftadd@f2+1
  6670  0219  0021               	movlb	1	; select bank1
  6671  021A  0857               	movf	(sprintf@fval+2)^(0+128),w
  6672  021B  0020               	movlb	0	; select bank0
  6673  021C  00CE               	movwf	___ftadd@f2+2
  6674  021D  3191  2106  3180   	fcall	___ftadd
  6675  0220  0020               	movlb	0	; select bank0
  6676  0221  0849               	movf	?___ftadd,w
  6677  0222  0021               	movlb	1	; select bank1
  6678  0223  00D5               	movwf	sprintf@fval^(0+128)
  6679  0224  0020               	movlb	0	; select bank0
  6680  0225  084A               	movf	?___ftadd+1,w
  6681  0226  0021               	movlb	1	; select bank1
  6682  0227  00D6               	movwf	(sprintf@fval+1)^(0+128)
  6683  0228  0020               	movlb	0	; select bank0
  6684  0229  084B               	movf	?___ftadd+2,w
  6685  022A  0021               	movlb	1	; select bank1
  6686  022B  00D7               	movwf	(sprintf@fval+2)^(0+128)
  6687  022C                     l3942:	
  6688                           
  6689                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6690  022C  0021               	movlb	1	; select bank1
  6691  022D  0849               	movf	(sprintf@exp+1)^(0+128),w
  6692  022E  3A80               	xorlw	128
  6693  022F  0020               	movlb	0	; select bank0
  6694  0230  00E1               	movwf	??_sprintf
  6695  0231  3080               	movlw	128
  6696  0232  0261               	subwf	??_sprintf,w
  6697  0233  1D03               	skipz
  6698  0234  2A38               	goto	u6145
  6699  0235  300A               	movlw	10
  6700  0236  0021               	movlb	1	; select bank1
  6701  0237  0248               	subwf	sprintf@exp^(0+128),w
  6702  0238                     u6145:	
  6703  0238  1803               	skipnc
  6704  0239  2A63               	goto	l3950
  6705  023A  0021               	movlb	1	; select bank1
  6706  023B  0857               	movf	(sprintf@fval+2)^(0+128),w
  6707  023C  0456               	iorwf	(sprintf@fval+1)^(0+128),w
  6708  023D  0455               	iorwf	sprintf@fval^(0+128),w
  6709  023E  1903               	skipnz
  6710  023F  2AAB               	goto	l3964
  6711  0240  0855               	movf	sprintf@fval^(0+128),w
  6712  0241  0020               	movlb	0	; select bank0
  6713  0242  00C4               	movwf	___fttol@f1
  6714  0243  0021               	movlb	1	; select bank1
  6715  0244  0856               	movf	(sprintf@fval+1)^(0+128),w
  6716  0245  0020               	movlb	0	; select bank0
  6717  0246  00C5               	movwf	___fttol@f1+1
  6718  0247  0021               	movlb	1	; select bank1
  6719  0248  0857               	movf	(sprintf@fval+2)^(0+128),w
  6720  0249  0020               	movlb	0	; select bank0
  6721  024A  00C6               	movwf	___fttol@f1+2
  6722  024B  319D  257A  3180   	fcall	___fttol
  6723  024E  0020               	movlb	0	; select bank0
  6724  024F  0847               	movf	?___fttol+3,w
  6725  0250  0446               	iorwf	?___fttol+2,w
  6726  0251  0445               	iorwf	?___fttol+1,w
  6727  0252  0444               	iorwf	?___fttol,w
  6728  0253  1D03               	skipz
  6729  0254  2AAB               	goto	l3964
  6730  0255  0021               	movlb	1	; select bank1
  6731  0256  0849               	movf	(sprintf@exp+1)^(0+128),w
  6732  0257  3A80               	xorlw	128
  6733  0258  0020               	movlb	0	; select bank0
  6734  0259  00E1               	movwf	??_sprintf
  6735  025A  3080               	movlw	128
  6736  025B  0261               	subwf	??_sprintf,w
  6737  025C  1D03               	skipz
  6738  025D  2A61               	goto	u6175
  6739  025E  3002               	movlw	2
  6740  025F  0021               	movlb	1	; select bank1
  6741  0260  0248               	subwf	sprintf@exp^(0+128),w
  6742  0261                     u6175:	
  6743  0261  1C03               	skipc
  6744  0262  2AAB               	goto	l3964
  6745  0263                     l3950:	
  6746                           
  6747                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6748  0263  0021               	movlb	1	; select bank1
  6749  0264  084A               	movf	sprintf@tmpval^(0+128),w
  6750  0265  00F1               	movwf	___ftge@ff1
  6751  0266  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  6752  0267  00F2               	movwf	___ftge@ff1+1
  6753  0268  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  6754  0269  00F3               	movwf	___ftge@ff1+2
  6755  026A  3070               	movlw	112
  6756  026B  00F4               	movwf	___ftge@ff2
  6757  026C  3089               	movlw	137
  6758  026D  00F5               	movwf	___ftge@ff2+1
  6759  026E  3040               	movlw	64
  6760  026F  00F6               	movwf	___ftge@ff2+2
  6761  0270  319B  239F  3180   	fcall	___ftge
  6762  0273  1803               	btfsc	3,0
  6763  0274  2A77               	goto	l3954
  6764                           
  6765                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6766  0275  30F7               	movlw	247
  6767  0276  2A78               	goto	L3
  6768  0277                     l3954:	
  6769                           ;doprnt.c: 1122: }else{
  6770                           
  6771                           
  6772                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6773  0277  30F8               	movlw	248
  6774  0278                     L3:	
  6775  0278  0021               	movlb	1	; select bank1
  6776  0279  07C8               	addwf	sprintf@exp^(0+128),f
  6777  027A  30FF               	movlw	255
  6778  027B  3DC9               	addwfc	(sprintf@exp+1)^(0+128),f
  6779                           
  6780                           ;doprnt.c: 1124: }
  6781                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  6782  027C  0848               	movf	sprintf@exp^(0+128),w
  6783  027D  3195  25BC  3180   	fcall	_scale
  6784  0280  0020               	movlb	0	; select bank0
  6785  0281  083B               	movf	?_scale,w
  6786  0282  0021               	movlb	1	; select bank1
  6787  0283  00CA               	movwf	sprintf@tmpval^(0+128)
  6788  0284  0020               	movlb	0	; select bank0
  6789  0285  083C               	movf	?_scale+1,w
  6790  0286  0021               	movlb	1	; select bank1
  6791  0287  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  6792  0288  0020               	movlb	0	; select bank0
  6793  0289  083D               	movf	?_scale+2,w
  6794  028A  0021               	movlb	1	; select bank1
  6795  028B  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  6796                           
  6797                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6798  028C  0855               	movf	sprintf@fval^(0+128),w
  6799  028D  00F1               	movwf	__tdiv_to_l_@f1
  6800  028E  0856               	movf	(sprintf@fval+1)^(0+128),w
  6801  028F  00F2               	movwf	__tdiv_to_l_@f1+1
  6802  0290  0857               	movf	(sprintf@fval+2)^(0+128),w
  6803  0291  00F3               	movwf	__tdiv_to_l_@f1+2
  6804  0292  084A               	movf	sprintf@tmpval^(0+128),w
  6805  0293  00F4               	movwf	__tdiv_to_l_@f2
  6806  0294  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  6807  0295  00F5               	movwf	__tdiv_to_l_@f2+1
  6808  0296  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  6809  0297  00F6               	movwf	__tdiv_to_l_@f2+2
  6810  0298  319F  274A  3180   	fcall	__tdiv_to_l_
  6811  029B  0874               	movf	?__tdiv_to_l_+3,w
  6812  029C  0021               	movlb	1	; select bank1
  6813  029D  00D1               	movwf	(sprintf@val+3)^(0+128)
  6814  029E  0873               	movf	?__tdiv_to_l_+2,w
  6815  029F  00D0               	movwf	(sprintf@val+2)^(0+128)
  6816  02A0  0872               	movf	?__tdiv_to_l_+1,w
  6817  02A1  00CF               	movwf	(sprintf@val+1)^(0+128)
  6818  02A2  0871               	movf	?__tdiv_to_l_,w
  6819  02A3  00CE               	movwf	sprintf@val^(0+128)
  6820                           
  6821                           ;doprnt.c: 1129: fval = 0.0;
  6822  02A4  3000               	movlw	0
  6823  02A5  00D5               	movwf	sprintf@fval^(0+128)
  6824  02A6  3000               	movlw	0
  6825  02A7  00D6               	movwf	(sprintf@fval+1)^(0+128)
  6826  02A8  3000               	movlw	0
  6827  02A9  00D7               	movwf	(sprintf@fval+2)^(0+128)
  6828                           
  6829                           ;doprnt.c: 1130: } else {
  6830  02AA  2B00               	goto	l3968
  6831  02AB                     l3964:	
  6832                           
  6833                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6834  02AB  0021               	movlb	1	; select bank1
  6835  02AC  0855               	movf	sprintf@fval^(0+128),w
  6836  02AD  0020               	movlb	0	; select bank0
  6837  02AE  00C4               	movwf	___fttol@f1
  6838  02AF  0021               	movlb	1	; select bank1
  6839  02B0  0856               	movf	(sprintf@fval+1)^(0+128),w
  6840  02B1  0020               	movlb	0	; select bank0
  6841  02B2  00C5               	movwf	___fttol@f1+1
  6842  02B3  0021               	movlb	1	; select bank1
  6843  02B4  0857               	movf	(sprintf@fval+2)^(0+128),w
  6844  02B5  0020               	movlb	0	; select bank0
  6845  02B6  00C6               	movwf	___fttol@f1+2
  6846  02B7  319D  257A  3180   	fcall	___fttol
  6847  02BA  0020               	movlb	0	; select bank0
  6848  02BB  0847               	movf	?___fttol+3,w
  6849  02BC  0021               	movlb	1	; select bank1
  6850  02BD  00D1               	movwf	(sprintf@val+3)^(0+128)
  6851  02BE  0020               	movlb	0	; select bank0
  6852  02BF  0846               	movf	?___fttol+2,w
  6853  02C0  0021               	movlb	1	; select bank1
  6854  02C1  00D0               	movwf	(sprintf@val+2)^(0+128)
  6855  02C2  0020               	movlb	0	; select bank0
  6856  02C3  0845               	movf	?___fttol+1,w
  6857  02C4  0021               	movlb	1	; select bank1
  6858  02C5  00CF               	movwf	(sprintf@val+1)^(0+128)
  6859  02C6  0020               	movlb	0	; select bank0
  6860  02C7  0844               	movf	?___fttol,w
  6861  02C8  0021               	movlb	1	; select bank1
  6862  02C9  00CE               	movwf	sprintf@val^(0+128)
  6863                           
  6864                           ;doprnt.c: 1132: fval -= (double)val;
  6865  02CA  0851               	movf	(sprintf@val+3)^(0+128),w
  6866  02CB  0020               	movlb	0	; select bank0
  6867  02CC  00A3               	movwf	___lltoft@c+3
  6868  02CD  0021               	movlb	1	; select bank1
  6869  02CE  0850               	movf	(sprintf@val+2)^(0+128),w
  6870  02CF  0020               	movlb	0	; select bank0
  6871  02D0  00A2               	movwf	___lltoft@c+2
  6872  02D1  0021               	movlb	1	; select bank1
  6873  02D2  084F               	movf	(sprintf@val+1)^(0+128),w
  6874  02D3  0020               	movlb	0	; select bank0
  6875  02D4  00A1               	movwf	___lltoft@c+1
  6876  02D5  0021               	movlb	1	; select bank1
  6877  02D6  084E               	movf	sprintf@val^(0+128),w
  6878  02D7  0020               	movlb	0	; select bank0
  6879  02D8  00A0               	movwf	___lltoft@c
  6880  02D9  319B  2340  3180   	fcall	___lltoft
  6881  02DC  0020               	movlb	0	; select bank0
  6882  02DD  0820               	movf	?___lltoft,w
  6883  02DE  00D6               	movwf	___ftsub@f2
  6884  02DF  0821               	movf	?___lltoft+1,w
  6885  02E0  00D7               	movwf	___ftsub@f2+1
  6886  02E1  0822               	movf	?___lltoft+2,w
  6887  02E2  00D8               	movwf	___ftsub@f2+2
  6888  02E3  0021               	movlb	1	; select bank1
  6889  02E4  0855               	movf	sprintf@fval^(0+128),w
  6890  02E5  0020               	movlb	0	; select bank0
  6891  02E6  00D9               	movwf	___ftsub@f1
  6892  02E7  0021               	movlb	1	; select bank1
  6893  02E8  0856               	movf	(sprintf@fval+1)^(0+128),w
  6894  02E9  0020               	movlb	0	; select bank0
  6895  02EA  00DA               	movwf	___ftsub@f1+1
  6896  02EB  0021               	movlb	1	; select bank1
  6897  02EC  0857               	movf	(sprintf@fval+2)^(0+128),w
  6898  02ED  0020               	movlb	0	; select bank0
  6899  02EE  00DB               	movwf	___ftsub@f1+2
  6900  02EF  319A  22DB  3180   	fcall	___ftsub
  6901  02F2  0020               	movlb	0	; select bank0
  6902  02F3  0856               	movf	?___ftsub,w
  6903  02F4  0021               	movlb	1	; select bank1
  6904  02F5  00D5               	movwf	sprintf@fval^(0+128)
  6905  02F6  0020               	movlb	0	; select bank0
  6906  02F7  0857               	movf	?___ftsub+1,w
  6907  02F8  0021               	movlb	1	; select bank1
  6908  02F9  00D6               	movwf	(sprintf@fval+1)^(0+128)
  6909  02FA  0020               	movlb	0	; select bank0
  6910  02FB  0858               	movf	?___ftsub+2,w
  6911  02FC  0021               	movlb	1	; select bank1
  6912  02FD  00D7               	movwf	(sprintf@fval+2)^(0+128)
  6913                           
  6914                           ;doprnt.c: 1133: exp = 0;
  6915  02FE  01C8               	clrf	sprintf@exp^(0+128)
  6916  02FF  01C9               	clrf	(sprintf@exp+1)^(0+128)
  6917  0300                     l3968:	
  6918                           
  6919                           ;doprnt.c: 1134: }
  6920                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6921  0300  01D8               	clrf	sprintf@c^(0+128)
  6922  0301  0AD8               	incf	sprintf@c^(0+128),f
  6923  0302  300A               	movlw	10
  6924  0303  0658               	xorwf	sprintf@c^(0+128),w
  6925  0304  1903               	btfsc	3,2
  6926  0305  2B3D               	goto	l3980
  6927  0306                     l3974:	
  6928                           
  6929                           ;doprnt.c: 1137: if(val < dpowers[c])
  6930  0306  0858               	movf	sprintf@c^(0+128),w
  6931  0307  0020               	movlb	0	; select bank0
  6932  0308  00E1               	movwf	??_sprintf
  6933  0309  01E2               	clrf	??_sprintf+1
  6934  030A  35E1               	lslf	??_sprintf,f
  6935  030B  0DE2               	rlf	??_sprintf+1,f
  6936  030C  35E1               	lslf	??_sprintf,f
  6937  030D  0DE2               	rlf	??_sprintf+1,f
  6938  030E  3000               	movlw	low (_dpowers| (0+32768))
  6939  030F  0761               	addwf	??_sprintf,w
  6940  0310  0084               	movwf	4
  6941  0311  30A0               	movlw	high (_dpowers| (0+32768))
  6942  0312  3D62               	addwfc	??_sprintf+1,w
  6943  0313  0085               	movwf	5
  6944  0314  3F00               	moviw [0]fsr0
  6945  0315  00E3               	movwf	??_sprintf+2
  6946  0316  3F01               	moviw [1]fsr0
  6947  0317  00E4               	movwf	??_sprintf+3
  6948  0318  3F02               	moviw [2]fsr0
  6949  0319  00E5               	movwf	??_sprintf+4
  6950  031A  3F03               	moviw [3]fsr0
  6951  031B  00E6               	movwf	??_sprintf+5
  6952  031C  0866               	movf	??_sprintf+5,w
  6953  031D  0021               	movlb	1	; select bank1
  6954  031E  0251               	subwf	(sprintf@val+3)^(0+128),w
  6955  031F  1D03               	skipz
  6956  0320  2B31               	goto	u6205
  6957  0321  0020               	movlb	0	; select bank0
  6958  0322  0865               	movf	??_sprintf+4,w
  6959  0323  0021               	movlb	1	; select bank1
  6960  0324  0250               	subwf	(sprintf@val+2)^(0+128),w
  6961  0325  1D03               	skipz
  6962  0326  2B31               	goto	u6205
  6963  0327  0020               	movlb	0	; select bank0
  6964  0328  0864               	movf	??_sprintf+3,w
  6965  0329  0021               	movlb	1	; select bank1
  6966  032A  024F               	subwf	(sprintf@val+1)^(0+128),w
  6967  032B  1D03               	skipz
  6968  032C  2B31               	goto	u6205
  6969  032D  0020               	movlb	0	; select bank0
  6970  032E  0863               	movf	??_sprintf+2,w
  6971  032F  0021               	movlb	1	; select bank1
  6972  0330  024E               	subwf	sprintf@val^(0+128),w
  6973  0331                     u6205:	
  6974  0331  1C03               	btfss	3,0
  6975  0332  2B3D               	goto	l3980
  6976                           
  6977                           ;doprnt.c: 1138: break;
  6978  0333  3001               	movlw	1
  6979  0334  0020               	movlb	0	; select bank0
  6980  0335  00E1               	movwf	??_sprintf
  6981  0336  0861               	movf	??_sprintf,w
  6982  0337  0021               	movlb	1	; select bank1
  6983  0338  07D8               	addwf	sprintf@c^(0+128),f
  6984  0339  300A               	movlw	10
  6985  033A  0658               	xorwf	sprintf@c^(0+128),w
  6986  033B  1D03               	btfss	3,2
  6987  033C  2B06               	goto	l3974
  6988  033D                     l3980:	
  6989                           
  6990                           ;doprnt.c: 1175: {
  6991                           ;doprnt.c: 1188: if(flag & 0x03)
  6992  033D  3003               	movlw	3
  6993  033E  0546               	andwf	sprintf@flag^(0+128),w
  6994  033F  0020               	movlb	0	; select bank0
  6995  0340  00E1               	movwf	??_sprintf
  6996  0341  3000               	movlw	0
  6997  0342  0021               	movlb	1	; select bank1
  6998  0343  0547               	andwf	(sprintf@flag+1)^(0+128),w
  6999  0344  0020               	movlb	0	; select bank0
  7000  0345  00E2               	movwf	??_sprintf+1
  7001  0346  0861               	movf	??_sprintf,w
  7002  0347  0462               	iorwf	??_sprintf+1,w
  7003  0348  1903               	btfsc	3,2
  7004  0349  2B58               	goto	l3994
  7005                           
  7006                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7007  034A  302D               	movlw	45
  7008  034B                     L6:	
  7009  034B  00E1               	movwf	??_sprintf
  7010  034C  0021               	movlb	1	; select bank1
  7011  034D  0852               	movf	sprintf@sp^(0+128),w
  7012  034E  0086               	movwf	6
  7013  034F  0187               	clrf	7
  7014  0350  0020               	movlb	0	; select bank0
  7015  0351  0861               	movf	??_sprintf,w
  7016  0352  0081               	movwf	1
  7017  0353  3001               	movlw	1
  7018  0354  00E1               	movwf	??_sprintf
  7019  0355  0861               	movf	??_sprintf,w
  7020  0356  0021               	movlb	1	; select bank1
  7021  0357  07D2               	addwf	sprintf@sp^(0+128),f
  7022  0358                     l3994:	
  7023  0358  30FF               	movlw	255
  7024  0359  0020               	movlb	0	; select bank0
  7025  035A  00E1               	movwf	??_sprintf
  7026  035B  0861               	movf	??_sprintf,w
  7027  035C  0021               	movlb	1	; select bank1
  7028  035D  07D8               	addwf	sprintf@c^(0+128),f
  7029  035E  0A58               	incf	sprintf@c^(0+128),w
  7030  035F  1903               	btfsc	3,2
  7031  0360  2BCF               	goto	l4002
  7032                           
  7033                           ;doprnt.c: 1200: {
  7034                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7035                           
  7036                           ;doprnt.c: 1195: }
  7037                           ;doprnt.c: 1196: while(c--) {
  7038  0361  0858               	movf	sprintf@c^(0+128),w
  7039  0362  0020               	movlb	0	; select bank0
  7040  0363  00E1               	movwf	??_sprintf
  7041  0364  01E2               	clrf	??_sprintf+1
  7042  0365  35E1               	lslf	??_sprintf,f
  7043  0366  0DE2               	rlf	??_sprintf+1,f
  7044  0367  35E1               	lslf	??_sprintf,f
  7045  0368  0DE2               	rlf	??_sprintf+1,f
  7046  0369  3000               	movlw	low (_dpowers| (0+32768))
  7047  036A  0761               	addwf	??_sprintf,w
  7048  036B  0084               	movwf	4
  7049  036C  30A0               	movlw	high (_dpowers| (0+32768))
  7050  036D  3D62               	addwfc	??_sprintf+1,w
  7051  036E  0085               	movwf	5
  7052  036F  3F00               	moviw [0]fsr0
  7053  0370  00F1               	movwf	___lldiv@divisor
  7054  0371  3F01               	moviw [1]fsr0
  7055  0372  00F2               	movwf	___lldiv@divisor+1
  7056  0373  3F02               	moviw [2]fsr0
  7057  0374  00F3               	movwf	___lldiv@divisor+2
  7058  0375  3F03               	moviw [3]fsr0
  7059  0376  00F4               	movwf	___lldiv@divisor+3
  7060  0377  0021               	movlb	1	; select bank1
  7061  0378  0851               	movf	(sprintf@val+3)^(0+128),w
  7062  0379  00F8               	movwf	___lldiv@dividend+3
  7063  037A  0850               	movf	(sprintf@val+2)^(0+128),w
  7064  037B  00F7               	movwf	___lldiv@dividend+2
  7065  037C  084F               	movf	(sprintf@val+1)^(0+128),w
  7066  037D  00F6               	movwf	___lldiv@dividend+1
  7067  037E  084E               	movf	sprintf@val^(0+128),w
  7068  037F  00F5               	movwf	___lldiv@dividend
  7069  0380  318E  2648  3180   	fcall	___lldiv
  7070  0383  0874               	movf	?___lldiv+3,w
  7071  0384  0021               	movlb	1	; select bank1
  7072  0385  00CD               	movwf	(sprintf@tmpval+3)^(0+128)
  7073  0386  0873               	movf	?___lldiv+2,w
  7074  0387  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  7075  0388  0872               	movf	?___lldiv+1,w
  7076  0389  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  7077  038A  0871               	movf	?___lldiv,w
  7078  038B  00CA               	movwf	sprintf@tmpval^(0+128)
  7079                           
  7080                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7081  038C  3000               	movlw	0
  7082  038D  0020               	movlb	0	; select bank0
  7083  038E  00A8               	movwf	___llmod@divisor+3
  7084  038F  3000               	movlw	0
  7085  0390  00A7               	movwf	___llmod@divisor+2
  7086  0391  3000               	movlw	0
  7087  0392  00A6               	movwf	___llmod@divisor+1
  7088  0393  300A               	movlw	10
  7089  0394  00A5               	movwf	___llmod@divisor
  7090  0395  0021               	movlb	1	; select bank1
  7091  0396  084D               	movf	(sprintf@tmpval+3)^(0+128),w
  7092  0397  0020               	movlb	0	; select bank0
  7093  0398  00AC               	movwf	___llmod@dividend+3
  7094  0399  0021               	movlb	1	; select bank1
  7095  039A  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  7096  039B  0020               	movlb	0	; select bank0
  7097  039C  00AB               	movwf	___llmod@dividend+2
  7098  039D  0021               	movlb	1	; select bank1
  7099  039E  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  7100  039F  0020               	movlb	0	; select bank0
  7101  03A0  00AA               	movwf	___llmod@dividend+1
  7102  03A1  0021               	movlb	1	; select bank1
  7103  03A2  084A               	movf	sprintf@tmpval^(0+128),w
  7104  03A3  0020               	movlb	0	; select bank0
  7105  03A4  00A9               	movwf	___llmod@dividend
  7106  03A5  319B  23DA  3180   	fcall	___llmod
  7107  03A8  0020               	movlb	0	; select bank0
  7108  03A9  0828               	movf	?___llmod+3,w
  7109  03AA  0021               	movlb	1	; select bank1
  7110  03AB  00CD               	movwf	(sprintf@tmpval+3)^(0+128)
  7111  03AC  0020               	movlb	0	; select bank0
  7112  03AD  0827               	movf	?___llmod+2,w
  7113  03AE  0021               	movlb	1	; select bank1
  7114  03AF  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  7115  03B0  0020               	movlb	0	; select bank0
  7116  03B1  0826               	movf	?___llmod+1,w
  7117  03B2  0021               	movlb	1	; select bank1
  7118  03B3  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  7119  03B4  0020               	movlb	0	; select bank0
  7120  03B5  0825               	movf	?___llmod,w
  7121  03B6  0021               	movlb	1	; select bank1
  7122  03B7  00CA               	movwf	sprintf@tmpval^(0+128)
  7123                           
  7124                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7125  03B8  084A               	movf	sprintf@tmpval^(0+128),w
  7126  03B9  3E30               	addlw	48
  7127  03BA  0020               	movlb	0	; select bank0
  7128  03BB  2B4B               	goto	L6
  7129  03BC                     l3996:	
  7130                           ;doprnt.c: 1204: }
  7131                           ;doprnt.c: 1206: }
  7132                           ;doprnt.c: 1207: while(exp > 0) {
  7133                           
  7134                           
  7135                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7136  03BC  3030               	movlw	48
  7137  03BD  0020               	movlb	0	; select bank0
  7138  03BE  00E1               	movwf	??_sprintf
  7139  03BF  0021               	movlb	1	; select bank1
  7140  03C0  0852               	movf	sprintf@sp^(0+128),w
  7141  03C1  0086               	movwf	6
  7142  03C2  0187               	clrf	7
  7143  03C3  0020               	movlb	0	; select bank0
  7144  03C4  0861               	movf	??_sprintf,w
  7145  03C5  0081               	movwf	1
  7146  03C6  3001               	movlw	1
  7147  03C7  00E1               	movwf	??_sprintf
  7148  03C8  0861               	movf	??_sprintf,w
  7149  03C9  0021               	movlb	1	; select bank1
  7150  03CA  07D2               	addwf	sprintf@sp^(0+128),f
  7151                           
  7152                           ;doprnt.c: 1209: exp--;
  7153  03CB  30FF               	movlw	255
  7154  03CC  07C8               	addwf	sprintf@exp^(0+128),f
  7155  03CD  30FF               	movlw	255
  7156  03CE  3DC9               	addwfc	(sprintf@exp+1)^(0+128),f
  7157  03CF                     l4002:	
  7158  03CF  0849               	movf	(sprintf@exp+1)^(0+128),w
  7159  03D0  3A80               	xorlw	128
  7160  03D1  0020               	movlb	0	; select bank0
  7161  03D2  00E1               	movwf	??_sprintf
  7162  03D3  3080               	movlw	128
  7163  03D4  0261               	subwf	??_sprintf,w
  7164  03D5  1D03               	skipz
  7165  03D6  2BDA               	goto	u6245
  7166  03D7  3001               	movlw	1
  7167  03D8  0021               	movlb	1	; select bank1
  7168  03D9  0248               	subwf	sprintf@exp^(0+128),w
  7169  03DA                     u6245:	
  7170  03DA  1803               	skipnc
  7171  03DB  2BBC               	goto	l3996
  7172                           
  7173                           ;doprnt.c: 1210: }
  7174                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7175  03DC  0021               	movlb	1	; select bank1
  7176  03DD  0854               	movf	(sprintf@prec+1)^(0+128),w
  7177  03DE  3A80               	xorlw	128
  7178  03DF  0020               	movlb	0	; select bank0
  7179  03E0  00E1               	movwf	??_sprintf
  7180  03E1  3080               	movlw	128
  7181  03E2  0261               	subwf	??_sprintf,w
  7182  03E3  1D03               	skipz
  7183  03E4  2BE8               	goto	u6255
  7184  03E5  3009               	movlw	9
  7185  03E6  0021               	movlb	1	; select bank1
  7186  03E7  0253               	subwf	sprintf@prec^(0+128),w
  7187  03E8                     u6255:	
  7188  03E8  1C03               	skipc
  7189  03E9  2BEC               	goto	l4008
  7190                           
  7191                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7192  03EA  3008               	movlw	8
  7193  03EB  2BEE               	goto	L4
  7194  03EC                     l4008:	
  7195                           
  7196                           ;doprnt.c: 1213: else
  7197                           ;doprnt.c: 1214: c = prec;
  7198  03EC  0021               	movlb	1	; select bank1
  7199  03ED  0853               	movf	sprintf@prec^(0+128),w
  7200  03EE                     L4:	
  7201  03EE  0020               	movlb	0	; select bank0
  7202  03EF  00E1               	movwf	??_sprintf
  7203  03F0  0861               	movf	??_sprintf,w
  7204  03F1  0021               	movlb	1	; select bank1
  7205  03F2  00D8               	movwf	sprintf@c^(0+128)
  7206                           
  7207                           ;doprnt.c: 1215: prec -= c;
  7208  03F3  0858               	movf	sprintf@c^(0+128),w
  7209  03F4  0020               	movlb	0	; select bank0
  7210  03F5  00E1               	movwf	??_sprintf
  7211  03F6  01E2               	clrf	??_sprintf+1
  7212  03F7  1BE1               	btfsc	??_sprintf,7
  7213  03F8  03E2               	decf	??_sprintf+1,f
  7214  03F9  0861               	movf	??_sprintf,w
  7215  03FA  0021               	movlb	1	; select bank1
  7216  03FB  02D3               	subwf	sprintf@prec^(0+128),f
  7217  03FC  0020               	movlb	0	; select bank0
  7218  03FD  0862               	movf	??_sprintf+1,w
  7219  03FE  0021               	movlb	1	; select bank1
  7220  03FF  3BD4               	subwfb	(sprintf@prec+1)^(0+128),f
  7221                           
  7222                           ;doprnt.c: 1219: if(c)
  7223  0400  0858               	movf	sprintf@c^(0+128),w
  7224  0401  1903               	btfsc	3,2
  7225  0402  2C12               	goto	l4016
  7226                           
  7227                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7228  0403  302E               	movlw	46
  7229  0404  0020               	movlb	0	; select bank0
  7230  0405  00E1               	movwf	??_sprintf
  7231  0406  0021               	movlb	1	; select bank1
  7232  0407  0852               	movf	sprintf@sp^(0+128),w
  7233  0408  0086               	movwf	6
  7234  0409  0187               	clrf	7
  7235  040A  0020               	movlb	0	; select bank0
  7236  040B  0861               	movf	??_sprintf,w
  7237  040C  0081               	movwf	1
  7238  040D  3001               	movlw	1
  7239  040E  00E1               	movwf	??_sprintf
  7240  040F  0861               	movf	??_sprintf,w
  7241  0410  0021               	movlb	1	; select bank1
  7242  0411  07D2               	addwf	sprintf@sp^(0+128),f
  7243  0412                     l4016:	
  7244                           
  7245                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7246  0412  0858               	movf	sprintf@c^(0+128),w
  7247  0413  3195  25BC  3180   	fcall	_scale
  7248  0416  0020               	movlb	0	; select bank0
  7249  0417  083B               	movf	?_scale,w
  7250  0418  0021               	movlb	1	; select bank1
  7251  0419  00C2               	movwf	_sprintf$938^(0+128)
  7252  041A  0020               	movlb	0	; select bank0
  7253  041B  083C               	movf	?_scale+1,w
  7254  041C  0021               	movlb	1	; select bank1
  7255  041D  00C3               	movwf	(_sprintf$938+1)^(0+128)
  7256  041E  0020               	movlb	0	; select bank0
  7257  041F  083D               	movf	?_scale+2,w
  7258  0420  0021               	movlb	1	; select bank1
  7259  0421  00C4               	movwf	(_sprintf$938+2)^(0+128)
  7260                           
  7261                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7262  0422  0842               	movf	_sprintf$938^(0+128),w
  7263  0423  0020               	movlb	0	; select bank0
  7264  0424  00AE               	movwf	___ftmul@f2
  7265  0425  0021               	movlb	1	; select bank1
  7266  0426  0843               	movf	(_sprintf$938+1)^(0+128),w
  7267  0427  0020               	movlb	0	; select bank0
  7268  0428  00AF               	movwf	___ftmul@f2+1
  7269  0429  0021               	movlb	1	; select bank1
  7270  042A  0844               	movf	(_sprintf$938+2)^(0+128),w
  7271  042B  0020               	movlb	0	; select bank0
  7272  042C  00B0               	movwf	___ftmul@f2+2
  7273  042D  0021               	movlb	1	; select bank1
  7274  042E  0855               	movf	sprintf@fval^(0+128),w
  7275  042F  0020               	movlb	0	; select bank0
  7276  0430  00AB               	movwf	___ftmul@f1
  7277  0431  0021               	movlb	1	; select bank1
  7278  0432  0856               	movf	(sprintf@fval+1)^(0+128),w
  7279  0433  0020               	movlb	0	; select bank0
  7280  0434  00AC               	movwf	___ftmul@f1+1
  7281  0435  0021               	movlb	1	; select bank1
  7282  0436  0857               	movf	(sprintf@fval+2)^(0+128),w
  7283  0437  0020               	movlb	0	; select bank0
  7284  0438  00AD               	movwf	___ftmul@f1+2
  7285  0439  319E  2696  3180   	fcall	___ftmul
  7286  043C  0020               	movlb	0	; select bank0
  7287  043D  082B               	movf	?___ftmul,w
  7288  043E  00C4               	movwf	___fttol@f1
  7289  043F  082C               	movf	?___ftmul+1,w
  7290  0440  00C5               	movwf	___fttol@f1+1
  7291  0441  082D               	movf	?___ftmul+2,w
  7292  0442  00C6               	movwf	___fttol@f1+2
  7293  0443  319D  257A  3180   	fcall	___fttol
  7294  0446  0020               	movlb	0	; select bank0
  7295  0447  0847               	movf	?___fttol+3,w
  7296  0448  0021               	movlb	1	; select bank1
  7297  0449  00D1               	movwf	(sprintf@val+3)^(0+128)
  7298  044A  0020               	movlb	0	; select bank0
  7299  044B  0846               	movf	?___fttol+2,w
  7300  044C  0021               	movlb	1	; select bank1
  7301  044D  00D0               	movwf	(sprintf@val+2)^(0+128)
  7302  044E  0020               	movlb	0	; select bank0
  7303  044F  0845               	movf	?___fttol+1,w
  7304  0450  0021               	movlb	1	; select bank1
  7305  0451  00CF               	movwf	(sprintf@val+1)^(0+128)
  7306  0452  0020               	movlb	0	; select bank0
  7307  0453  0844               	movf	?___fttol,w
  7308  0454                     L5:	
  7309  0454  0021               	movlb	1	; select bank1
  7310  0455  00CE               	movwf	sprintf@val^(0+128)
  7311  0456  30FF               	movlw	255
  7312  0457  0020               	movlb	0	; select bank0
  7313  0458  00E1               	movwf	??_sprintf
  7314  0459  0861               	movf	??_sprintf,w
  7315  045A  0021               	movlb	1	; select bank1
  7316  045B  07D8               	addwf	sprintf@c^(0+128),f
  7317  045C  0A58               	incf	sprintf@c^(0+128),w
  7318  045D  1903               	btfsc	3,2
  7319  045E  2D11               	goto	l4038
  7320                           
  7321                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7322                           
  7323                           ;doprnt.c: 1228: while(c--) {
  7324  045F  0858               	movf	sprintf@c^(0+128),w
  7325  0460  0020               	movlb	0	; select bank0
  7326  0461  00E1               	movwf	??_sprintf
  7327  0462  01E2               	clrf	??_sprintf+1
  7328  0463  35E1               	lslf	??_sprintf,f
  7329  0464  0DE2               	rlf	??_sprintf+1,f
  7330  0465  35E1               	lslf	??_sprintf,f
  7331  0466  0DE2               	rlf	??_sprintf+1,f
  7332  0467  3000               	movlw	low (_dpowers| (0+32768))
  7333  0468  0761               	addwf	??_sprintf,w
  7334  0469  0084               	movwf	4
  7335  046A  30A0               	movlw	high (_dpowers| (0+32768))
  7336  046B  3D62               	addwfc	??_sprintf+1,w
  7337  046C  0085               	movwf	5
  7338  046D  3F00               	moviw [0]fsr0
  7339  046E  00F1               	movwf	___lldiv@divisor
  7340  046F  3F01               	moviw [1]fsr0
  7341  0470  00F2               	movwf	___lldiv@divisor+1
  7342  0471  3F02               	moviw [2]fsr0
  7343  0472  00F3               	movwf	___lldiv@divisor+2
  7344  0473  3F03               	moviw [3]fsr0
  7345  0474  00F4               	movwf	___lldiv@divisor+3
  7346  0475  0021               	movlb	1	; select bank1
  7347  0476  0851               	movf	(sprintf@val+3)^(0+128),w
  7348  0477  00F8               	movwf	___lldiv@dividend+3
  7349  0478  0850               	movf	(sprintf@val+2)^(0+128),w
  7350  0479  00F7               	movwf	___lldiv@dividend+2
  7351  047A  084F               	movf	(sprintf@val+1)^(0+128),w
  7352  047B  00F6               	movwf	___lldiv@dividend+1
  7353  047C  084E               	movf	sprintf@val^(0+128),w
  7354  047D  00F5               	movwf	___lldiv@dividend
  7355  047E  318E  2648  3180   	fcall	___lldiv
  7356  0481  0874               	movf	?___lldiv+3,w
  7357  0482  0021               	movlb	1	; select bank1
  7358  0483  00CD               	movwf	(sprintf@tmpval+3)^(0+128)
  7359  0484  0873               	movf	?___lldiv+2,w
  7360  0485  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  7361  0486  0872               	movf	?___lldiv+1,w
  7362  0487  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  7363  0488  0871               	movf	?___lldiv,w
  7364  0489  00CA               	movwf	sprintf@tmpval^(0+128)
  7365                           
  7366                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7367  048A  3000               	movlw	0
  7368  048B  0020               	movlb	0	; select bank0
  7369  048C  00A8               	movwf	___llmod@divisor+3
  7370  048D  3000               	movlw	0
  7371  048E  00A7               	movwf	___llmod@divisor+2
  7372  048F  3000               	movlw	0
  7373  0490  00A6               	movwf	___llmod@divisor+1
  7374  0491  300A               	movlw	10
  7375  0492  00A5               	movwf	___llmod@divisor
  7376  0493  0021               	movlb	1	; select bank1
  7377  0494  084D               	movf	(sprintf@tmpval+3)^(0+128),w
  7378  0495  0020               	movlb	0	; select bank0
  7379  0496  00AC               	movwf	___llmod@dividend+3
  7380  0497  0021               	movlb	1	; select bank1
  7381  0498  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  7382  0499  0020               	movlb	0	; select bank0
  7383  049A  00AB               	movwf	___llmod@dividend+2
  7384  049B  0021               	movlb	1	; select bank1
  7385  049C  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  7386  049D  0020               	movlb	0	; select bank0
  7387  049E  00AA               	movwf	___llmod@dividend+1
  7388  049F  0021               	movlb	1	; select bank1
  7389  04A0  084A               	movf	sprintf@tmpval^(0+128),w
  7390  04A1  0020               	movlb	0	; select bank0
  7391  04A2  00A9               	movwf	___llmod@dividend
  7392  04A3  319B  23DA  3180   	fcall	___llmod
  7393  04A6  0020               	movlb	0	; select bank0
  7394  04A7  0828               	movf	?___llmod+3,w
  7395  04A8  0021               	movlb	1	; select bank1
  7396  04A9  00CD               	movwf	(sprintf@tmpval+3)^(0+128)
  7397  04AA  0020               	movlb	0	; select bank0
  7398  04AB  0827               	movf	?___llmod+2,w
  7399  04AC  0021               	movlb	1	; select bank1
  7400  04AD  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  7401  04AE  0020               	movlb	0	; select bank0
  7402  04AF  0826               	movf	?___llmod+1,w
  7403  04B0  0021               	movlb	1	; select bank1
  7404  04B1  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  7405  04B2  0020               	movlb	0	; select bank0
  7406  04B3  0825               	movf	?___llmod,w
  7407  04B4  0021               	movlb	1	; select bank1
  7408  04B5  00CA               	movwf	sprintf@tmpval^(0+128)
  7409                           
  7410                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7411  04B6  084A               	movf	sprintf@tmpval^(0+128),w
  7412  04B7  3E30               	addlw	48
  7413  04B8  0020               	movlb	0	; select bank0
  7414  04B9  00E1               	movwf	??_sprintf
  7415  04BA  0021               	movlb	1	; select bank1
  7416  04BB  0852               	movf	sprintf@sp^(0+128),w
  7417  04BC  0086               	movwf	6
  7418  04BD  0187               	clrf	7
  7419  04BE  0020               	movlb	0	; select bank0
  7420  04BF  0861               	movf	??_sprintf,w
  7421  04C0  0081               	movwf	1
  7422  04C1  3001               	movlw	1
  7423  04C2  00E1               	movwf	??_sprintf
  7424  04C3  0861               	movf	??_sprintf,w
  7425  04C4  0021               	movlb	1	; select bank1
  7426  04C5  07D2               	addwf	sprintf@sp^(0+128),f
  7427                           
  7428                           ;doprnt.c: 1232: val %= dpowers[c];
  7429  04C6  0858               	movf	sprintf@c^(0+128),w
  7430  04C7  0020               	movlb	0	; select bank0
  7431  04C8  00E1               	movwf	??_sprintf
  7432  04C9  01E2               	clrf	??_sprintf+1
  7433  04CA  35E1               	lslf	??_sprintf,f
  7434  04CB  0DE2               	rlf	??_sprintf+1,f
  7435  04CC  35E1               	lslf	??_sprintf,f
  7436  04CD  0DE2               	rlf	??_sprintf+1,f
  7437  04CE  3000               	movlw	low (_dpowers| (0+32768))
  7438  04CF  0761               	addwf	??_sprintf,w
  7439  04D0  0084               	movwf	4
  7440  04D1  30A0               	movlw	high (_dpowers| (0+32768))
  7441  04D2  3D62               	addwfc	??_sprintf+1,w
  7442  04D3  0085               	movwf	5
  7443  04D4  3F00               	moviw [0]fsr0
  7444  04D5  00A5               	movwf	___llmod@divisor
  7445  04D6  3F01               	moviw [1]fsr0
  7446  04D7  00A6               	movwf	___llmod@divisor+1
  7447  04D8  3F02               	moviw [2]fsr0
  7448  04D9  00A7               	movwf	___llmod@divisor+2
  7449  04DA  3F03               	moviw [3]fsr0
  7450  04DB  00A8               	movwf	___llmod@divisor+3
  7451  04DC  0021               	movlb	1	; select bank1
  7452  04DD  0851               	movf	(sprintf@val+3)^(0+128),w
  7453  04DE  0020               	movlb	0	; select bank0
  7454  04DF  00AC               	movwf	___llmod@dividend+3
  7455  04E0  0021               	movlb	1	; select bank1
  7456  04E1  0850               	movf	(sprintf@val+2)^(0+128),w
  7457  04E2  0020               	movlb	0	; select bank0
  7458  04E3  00AB               	movwf	___llmod@dividend+2
  7459  04E4  0021               	movlb	1	; select bank1
  7460  04E5  084F               	movf	(sprintf@val+1)^(0+128),w
  7461  04E6  0020               	movlb	0	; select bank0
  7462  04E7  00AA               	movwf	___llmod@dividend+1
  7463  04E8  0021               	movlb	1	; select bank1
  7464  04E9  084E               	movf	sprintf@val^(0+128),w
  7465  04EA  0020               	movlb	0	; select bank0
  7466  04EB  00A9               	movwf	___llmod@dividend
  7467  04EC  319B  23DA  3180   	fcall	___llmod
  7468  04EF  0020               	movlb	0	; select bank0
  7469  04F0  0828               	movf	?___llmod+3,w
  7470  04F1  0021               	movlb	1	; select bank1
  7471  04F2  00D1               	movwf	(sprintf@val+3)^(0+128)
  7472  04F3  0020               	movlb	0	; select bank0
  7473  04F4  0827               	movf	?___llmod+2,w
  7474  04F5  0021               	movlb	1	; select bank1
  7475  04F6  00D0               	movwf	(sprintf@val+2)^(0+128)
  7476  04F7  0020               	movlb	0	; select bank0
  7477  04F8  0826               	movf	?___llmod+1,w
  7478  04F9  0021               	movlb	1	; select bank1
  7479  04FA  00CF               	movwf	(sprintf@val+1)^(0+128)
  7480  04FB  0020               	movlb	0	; select bank0
  7481  04FC  0825               	movf	?___llmod,w
  7482  04FD  2C54               	goto	L5
  7483  04FE                     l4032:	
  7484                           ;doprnt.c: 1233: }
  7485                           ;doprnt.c: 1235: while(prec) {
  7486                           
  7487                           
  7488                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7489  04FE  3030               	movlw	48
  7490  04FF  0020               	movlb	0	; select bank0
  7491  0500  00E1               	movwf	??_sprintf
  7492  0501  0021               	movlb	1	; select bank1
  7493  0502  0852               	movf	sprintf@sp^(0+128),w
  7494  0503  0086               	movwf	6
  7495  0504  0187               	clrf	7
  7496  0505  0020               	movlb	0	; select bank0
  7497  0506  0861               	movf	??_sprintf,w
  7498  0507  0081               	movwf	1
  7499  0508  3001               	movlw	1
  7500  0509  00E1               	movwf	??_sprintf
  7501  050A  0861               	movf	??_sprintf,w
  7502  050B  0021               	movlb	1	; select bank1
  7503  050C  07D2               	addwf	sprintf@sp^(0+128),f
  7504                           
  7505                           ;doprnt.c: 1237: prec--;
  7506  050D  30FF               	movlw	255
  7507  050E  07D3               	addwf	sprintf@prec^(0+128),f
  7508  050F  30FF               	movlw	255
  7509  0510  3DD4               	addwfc	(sprintf@prec+1)^(0+128),f
  7510  0511                     l4038:	
  7511  0511  0853               	movf	sprintf@prec^(0+128),w
  7512  0512  0454               	iorwf	(sprintf@prec+1)^(0+128),w
  7513  0513  1903               	btfsc	3,2
  7514  0514  2856               	goto	l4088
  7515  0515  2CFE               	goto	l4032
  7516  0516                     l4040:	
  7517                           ;doprnt.c: 1238: }
  7518                           ;doprnt.c: 1245: continue;
  7519                           
  7520                           
  7521                           ;doprnt.c: 1246: }
  7522                           ;doprnt.c: 1253: {
  7523                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7524  0516  0021               	movlb	1	; select bank1
  7525  0517  0845               	movf	sprintf@ap^(0+128),w
  7526  0518  0086               	movwf	6
  7527  0519  0187               	clrf	7
  7528  051A  3F40               	moviw [0]fsr1
  7529  051B  0020               	movlb	0	; select bank0
  7530  051C  00E1               	movwf	??_sprintf
  7531  051D  3F41               	moviw [1]fsr1
  7532  051E  00E2               	movwf	??_sprintf+1
  7533  051F  0861               	movf	??_sprintf,w
  7534  0520  0021               	movlb	1	; select bank1
  7535  0521  00CE               	movwf	sprintf@val^(0+128)
  7536  0522  0020               	movlb	0	; select bank0
  7537  0523  0862               	movf	??_sprintf+1,w
  7538  0524  0021               	movlb	1	; select bank1
  7539  0525  00CF               	movwf	(sprintf@val+1)^(0+128)
  7540  0526  0D89               	rlf	9,f
  7541  0527  3B89               	subwfb	9,f
  7542  0528  0989               	comf	9,f
  7543  0529  00D0               	movwf	(sprintf@val+2)^(0+128)
  7544  052A  00D1               	movwf	(sprintf@val+3)^(0+128)
  7545  052B  3002               	movlw	2
  7546  052C  0020               	movlb	0	; select bank0
  7547  052D  00E1               	movwf	??_sprintf
  7548  052E  0861               	movf	??_sprintf,w
  7549  052F  0021               	movlb	1	; select bank1
  7550  0530  07C5               	addwf	sprintf@ap^(0+128),f
  7551                           
  7552                           ;doprnt.c: 1261: if((long)val < 0) {
  7553  0531  1FD1               	btfss	(sprintf@val+3)^(0+128),7
  7554  0532  2D42               	goto	l4050
  7555                           
  7556                           ;doprnt.c: 1262: flag |= 0x03;
  7557  0533  3003               	movlw	3
  7558  0534  04C6               	iorwf	sprintf@flag^(0+128),f
  7559  0535  3000               	movlw	0
  7560  0536  04C7               	iorwf	(sprintf@flag+1)^(0+128),f
  7561                           
  7562                           ;doprnt.c: 1263: val = -val;
  7563  0537  09CE               	comf	sprintf@val^(0+128),f
  7564  0538  09CF               	comf	(sprintf@val+1)^(0+128),f
  7565  0539  09D0               	comf	(sprintf@val+2)^(0+128),f
  7566  053A  09D1               	comf	(sprintf@val+3)^(0+128),f
  7567  053B  0ACE               	incf	sprintf@val^(0+128),f
  7568  053C  1903               	skipnz
  7569  053D  0ACF               	incf	(sprintf@val+1)^(0+128),f
  7570  053E  1903               	skipnz
  7571  053F  0AD0               	incf	(sprintf@val+2)^(0+128),f
  7572  0540  1903               	skipnz
  7573  0541  0AD1               	incf	(sprintf@val+3)^(0+128),f
  7574  0542                     l4050:	
  7575                           
  7576                           ;doprnt.c: 1264: }
  7577                           ;doprnt.c: 1266: }
  7578                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7579  0542  0853               	movf	sprintf@prec^(0+128),w
  7580  0543  0454               	iorwf	(sprintf@prec+1)^(0+128),w
  7581  0544  1D03               	btfss	3,2
  7582  0545  2D50               	goto	l4056
  7583  0546  0851               	movf	(sprintf@val+3)^(0+128),w
  7584  0547  0450               	iorwf	(sprintf@val+2)^(0+128),w
  7585  0548  044F               	iorwf	(sprintf@val+1)^(0+128),w
  7586  0549  044E               	iorwf	sprintf@val^(0+128),w
  7587  054A  1D03               	skipz
  7588  054B  2D50               	goto	l4056
  7589                           
  7590                           ;doprnt.c: 1291: prec++;
  7591  054C  3001               	movlw	1
  7592  054D  07D3               	addwf	sprintf@prec^(0+128),f
  7593  054E  3000               	movlw	0
  7594  054F  3DD4               	addwfc	(sprintf@prec+1)^(0+128),f
  7595  0550                     l4056:	
  7596                           
  7597                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7598  0550  01D8               	clrf	sprintf@c^(0+128)
  7599  0551  0AD8               	incf	sprintf@c^(0+128),f
  7600  0552  300A               	movlw	10
  7601  0553  0658               	xorwf	sprintf@c^(0+128),w
  7602  0554  1903               	btfsc	3,2
  7603  0555  2D8D               	goto	l4068
  7604  0556                     l4062:	
  7605                           
  7606                           ;doprnt.c: 1306: if(val < dpowers[c])
  7607  0556  0858               	movf	sprintf@c^(0+128),w
  7608  0557  0020               	movlb	0	; select bank0
  7609  0558  00E1               	movwf	??_sprintf
  7610  0559  01E2               	clrf	??_sprintf+1
  7611  055A  35E1               	lslf	??_sprintf,f
  7612  055B  0DE2               	rlf	??_sprintf+1,f
  7613  055C  35E1               	lslf	??_sprintf,f
  7614  055D  0DE2               	rlf	??_sprintf+1,f
  7615  055E  3000               	movlw	low (_dpowers| (0+32768))
  7616  055F  0761               	addwf	??_sprintf,w
  7617  0560  0084               	movwf	4
  7618  0561  30A0               	movlw	high (_dpowers| (0+32768))
  7619  0562  3D62               	addwfc	??_sprintf+1,w
  7620  0563  0085               	movwf	5
  7621  0564  3F00               	moviw [0]fsr0
  7622  0565  00E3               	movwf	??_sprintf+2
  7623  0566  3F01               	moviw [1]fsr0
  7624  0567  00E4               	movwf	??_sprintf+3
  7625  0568  3F02               	moviw [2]fsr0
  7626  0569  00E5               	movwf	??_sprintf+4
  7627  056A  3F03               	moviw [3]fsr0
  7628  056B  00E6               	movwf	??_sprintf+5
  7629  056C  0866               	movf	??_sprintf+5,w
  7630  056D  0021               	movlb	1	; select bank1
  7631  056E  0251               	subwf	(sprintf@val+3)^(0+128),w
  7632  056F  1D03               	skipz
  7633  0570  2D81               	goto	u6335
  7634  0571  0020               	movlb	0	; select bank0
  7635  0572  0865               	movf	??_sprintf+4,w
  7636  0573  0021               	movlb	1	; select bank1
  7637  0574  0250               	subwf	(sprintf@val+2)^(0+128),w
  7638  0575  1D03               	skipz
  7639  0576  2D81               	goto	u6335
  7640  0577  0020               	movlb	0	; select bank0
  7641  0578  0864               	movf	??_sprintf+3,w
  7642  0579  0021               	movlb	1	; select bank1
  7643  057A  024F               	subwf	(sprintf@val+1)^(0+128),w
  7644  057B  1D03               	skipz
  7645  057C  2D81               	goto	u6335
  7646  057D  0020               	movlb	0	; select bank0
  7647  057E  0863               	movf	??_sprintf+2,w
  7648  057F  0021               	movlb	1	; select bank1
  7649  0580  024E               	subwf	sprintf@val^(0+128),w
  7650  0581                     u6335:	
  7651  0581  1C03               	btfss	3,0
  7652  0582  2D8D               	goto	l4068
  7653                           
  7654                           ;doprnt.c: 1307: break;
  7655  0583  3001               	movlw	1
  7656  0584  0020               	movlb	0	; select bank0
  7657  0585  00E1               	movwf	??_sprintf
  7658  0586  0861               	movf	??_sprintf,w
  7659  0587  0021               	movlb	1	; select bank1
  7660  0588  07D8               	addwf	sprintf@c^(0+128),f
  7661  0589  300A               	movlw	10
  7662  058A  0658               	xorwf	sprintf@c^(0+128),w
  7663  058B  1D03               	btfss	3,2
  7664  058C  2D56               	goto	l4062
  7665  058D                     l4068:	
  7666                           
  7667                           ;doprnt.c: 1339: if(c < prec)
  7668  058D  0858               	movf	sprintf@c^(0+128),w
  7669  058E  0020               	movlb	0	; select bank0
  7670  058F  00E1               	movwf	??_sprintf
  7671  0590  01E2               	clrf	??_sprintf+1
  7672  0591  1BE1               	btfsc	??_sprintf,7
  7673  0592  03E2               	decf	??_sprintf+1,f
  7674  0593  0862               	movf	??_sprintf+1,w
  7675  0594  3A80               	xorlw	128
  7676  0595  00E3               	movwf	??_sprintf+2
  7677  0596  0021               	movlb	1	; select bank1
  7678  0597  0854               	movf	(sprintf@prec+1)^(0+128),w
  7679  0598  3A80               	xorlw	128
  7680  0599  0020               	movlb	0	; select bank0
  7681  059A  0263               	subwf	??_sprintf+2,w
  7682  059B  1D03               	skipz
  7683  059C  2DA1               	goto	u6355
  7684  059D  0021               	movlb	1	; select bank1
  7685  059E  0853               	movf	sprintf@prec^(0+128),w
  7686  059F  0020               	movlb	0	; select bank0
  7687  05A0  0261               	subwf	??_sprintf,w
  7688  05A1                     u6355:	
  7689  05A1  1803               	skipnc
  7690  05A2  2DAB               	goto	l4072
  7691                           
  7692                           ;doprnt.c: 1340: c = prec;
  7693  05A3  0021               	movlb	1	; select bank1
  7694  05A4  0853               	movf	sprintf@prec^(0+128),w
  7695  05A5  0020               	movlb	0	; select bank0
  7696  05A6  00E1               	movwf	??_sprintf
  7697  05A7  0861               	movf	??_sprintf,w
  7698  05A8  0021               	movlb	1	; select bank1
  7699  05A9  00D8               	movwf	sprintf@c^(0+128)
  7700  05AA  2DC7               	goto	l430
  7701  05AB                     l4072:	
  7702                           
  7703                           ;doprnt.c: 1341: else if(prec < c)
  7704  05AB  0021               	movlb	1	; select bank1
  7705  05AC  0858               	movf	sprintf@c^(0+128),w
  7706  05AD  0020               	movlb	0	; select bank0
  7707  05AE  00E1               	movwf	??_sprintf
  7708  05AF  01E2               	clrf	??_sprintf+1
  7709  05B0  1BE1               	btfsc	??_sprintf,7
  7710  05B1  03E2               	decf	??_sprintf+1,f
  7711  05B2  0021               	movlb	1	; select bank1
  7712  05B3  0854               	movf	(sprintf@prec+1)^(0+128),w
  7713  05B4  3A80               	xorlw	128
  7714  05B5  0020               	movlb	0	; select bank0
  7715  05B6  00E3               	movwf	??_sprintf+2
  7716  05B7  0862               	movf	??_sprintf+1,w
  7717  05B8  3A80               	xorlw	128
  7718  05B9  0263               	subwf	??_sprintf+2,w
  7719  05BA  1D03               	skipz
  7720  05BB  2DBF               	goto	u6365
  7721  05BC  0861               	movf	??_sprintf,w
  7722  05BD  0021               	movlb	1	; select bank1
  7723  05BE  0253               	subwf	sprintf@prec^(0+128),w
  7724  05BF                     u6365:	
  7725  05BF  1803               	skipnc
  7726  05C0  2DC7               	goto	l430
  7727                           
  7728                           ;doprnt.c: 1342: prec = c;
  7729  05C1  0021               	movlb	1	; select bank1
  7730  05C2  0858               	movf	sprintf@c^(0+128),w
  7731  05C3  00D3               	movwf	sprintf@prec^(0+128)
  7732  05C4  01D4               	clrf	(sprintf@prec+1)^(0+128)
  7733  05C5  1BD3               	btfsc	sprintf@prec^(0+128),7
  7734  05C6  03D4               	decf	(sprintf@prec+1)^(0+128),f
  7735  05C7                     l430:	
  7736                           
  7737                           ;doprnt.c: 1422: {
  7738                           ;doprnt.c: 1438: if(flag & 0x03)
  7739  05C7  3003               	movlw	3
  7740  05C8  0021               	movlb	1	; select bank1
  7741  05C9  0546               	andwf	sprintf@flag^(0+128),w
  7742  05CA  0020               	movlb	0	; select bank0
  7743  05CB  00E1               	movwf	??_sprintf
  7744  05CC  3000               	movlw	0
  7745  05CD  0021               	movlb	1	; select bank1
  7746  05CE  0547               	andwf	(sprintf@flag+1)^(0+128),w
  7747  05CF  0020               	movlb	0	; select bank0
  7748  05D0  00E2               	movwf	??_sprintf+1
  7749  05D1  0861               	movf	??_sprintf,w
  7750  05D2  0462               	iorwf	??_sprintf+1,w
  7751  05D3  1903               	btfsc	3,2
  7752  05D4  2DE3               	goto	l4086
  7753                           
  7754                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7755  05D5  302D               	movlw	45
  7756  05D6                     L7:	
  7757  05D6  00E1               	movwf	??_sprintf
  7758  05D7  0021               	movlb	1	; select bank1
  7759  05D8  0852               	movf	sprintf@sp^(0+128),w
  7760  05D9  0086               	movwf	6
  7761  05DA  0187               	clrf	7
  7762  05DB  0020               	movlb	0	; select bank0
  7763  05DC  0861               	movf	??_sprintf,w
  7764  05DD  0081               	movwf	1
  7765  05DE  3001               	movlw	1
  7766  05DF  00E1               	movwf	??_sprintf
  7767  05E0  0861               	movf	??_sprintf,w
  7768  05E1  0021               	movlb	1	; select bank1
  7769  05E2  07D2               	addwf	sprintf@sp^(0+128),f
  7770  05E3                     l4086:	
  7771  05E3  30FF               	movlw	255
  7772  05E4  0021               	movlb	1	; select bank1
  7773  05E5  07D3               	addwf	sprintf@prec^(0+128),f
  7774  05E6  30FF               	movlw	255
  7775  05E7  3DD4               	addwfc	(sprintf@prec+1)^(0+128),f
  7776  05E8  0A53               	incf	sprintf@prec^(0+128),w
  7777  05E9  1903               	btfsc	3,2
  7778  05EA  0A54               	incf	(sprintf@prec+1)^(0+128),w
  7779  05EB  1903               	btfsc	3,2
  7780  05EC  2856               	goto	l4088
  7781                           
  7782                           ;doprnt.c: 1478: {
  7783                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7784                           
  7785                           ;doprnt.c: 1469: }
  7786                           ;doprnt.c: 1474: while(prec--) {
  7787  05ED  3000               	movlw	0
  7788  05EE  0020               	movlb	0	; select bank0
  7789  05EF  00A8               	movwf	___llmod@divisor+3
  7790  05F0  3000               	movlw	0
  7791  05F1  00A7               	movwf	___llmod@divisor+2
  7792  05F2  3000               	movlw	0
  7793  05F3  00A6               	movwf	___llmod@divisor+1
  7794  05F4  300A               	movlw	10
  7795  05F5  00A5               	movwf	___llmod@divisor
  7796  05F6  0021               	movlb	1	; select bank1
  7797  05F7  0854               	movf	(sprintf@prec+1)^(0+128),w
  7798  05F8  0085               	movwf	5
  7799  05F9  0853               	movf	sprintf@prec^(0+128),w
  7800  05FA  0084               	movwf	4
  7801  05FB  3584               	lslf	4,f
  7802  05FC  0D85               	rlf	5,f
  7803  05FD  3584               	lslf	4,f
  7804  05FE  0D85               	rlf	5,f
  7805  05FF  3000               	movlw	low (_dpowers| (0+32768))
  7806  0600  0784               	addwf	4,f
  7807  0601  30A0               	movlw	high (_dpowers| (0+32768))
  7808  0602  3D85               	addwfc	5,f
  7809  0603  3F00               	moviw [0]fsr0
  7810  0604  00F1               	movwf	___lldiv@divisor
  7811  0605  3F01               	moviw [1]fsr0
  7812  0606  00F2               	movwf	___lldiv@divisor+1
  7813  0607  3F02               	moviw [2]fsr0
  7814  0608  00F3               	movwf	___lldiv@divisor+2
  7815  0609  3F03               	moviw [3]fsr0
  7816  060A  00F4               	movwf	___lldiv@divisor+3
  7817  060B  0851               	movf	(sprintf@val+3)^(0+128),w
  7818  060C  00F8               	movwf	___lldiv@dividend+3
  7819  060D  0850               	movf	(sprintf@val+2)^(0+128),w
  7820  060E  00F7               	movwf	___lldiv@dividend+2
  7821  060F  084F               	movf	(sprintf@val+1)^(0+128),w
  7822  0610  00F6               	movwf	___lldiv@dividend+1
  7823  0611  084E               	movf	sprintf@val^(0+128),w
  7824  0612  00F5               	movwf	___lldiv@dividend
  7825  0613  318E  2648  3180   	fcall	___lldiv
  7826  0616  0874               	movf	?___lldiv+3,w
  7827  0617  0020               	movlb	0	; select bank0
  7828  0618  00AC               	movwf	___llmod@dividend+3
  7829  0619  0873               	movf	?___lldiv+2,w
  7830  061A  00AB               	movwf	___llmod@dividend+2
  7831  061B  0872               	movf	?___lldiv+1,w
  7832  061C  00AA               	movwf	___llmod@dividend+1
  7833  061D  0871               	movf	?___lldiv,w
  7834  061E  00A9               	movwf	___llmod@dividend
  7835  061F  319B  23DA  3180   	fcall	___llmod
  7836  0622  0020               	movlb	0	; select bank0
  7837  0623  0825               	movf	?___llmod,w
  7838  0624  3E30               	addlw	48
  7839  0625  00E1               	movwf	??_sprintf
  7840  0626  0861               	movf	??_sprintf,w
  7841  0627  0021               	movlb	1	; select bank1
  7842  0628  00D8               	movwf	sprintf@c^(0+128)
  7843                           
  7844                           ;doprnt.c: 1523: }
  7845                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7846  0629  0858               	movf	sprintf@c^(0+128),w
  7847  062A  0020               	movlb	0	; select bank0
  7848  062B  2DD6               	goto	L7
  7849  062C                     l4090:	
  7850                           ;doprnt.c: 1525: }
  7851                           ;doprnt.c: 1533: }
  7852                           ;doprnt.c: 1535: alldone:
  7853                           
  7854                           
  7855                           ;doprnt.c: 1538: *sp = 0;
  7856  062C  0852               	movf	sprintf@sp^(0+128),w
  7857  062D  0086               	movwf	6
  7858  062E  0187               	clrf	7
  7859  062F  0181               	clrf	1
  7860  0630  0008               	return
  7861  0631                     __end_of_sprintf:	
  7862                           ;doprnt.c: 1540: return 0;
  7863                           ;	Return value of _sprintf is never used
  7864                           
  7865                           
  7866                           	psect	text4
  7867  15BC                     __ptext4:	
  7868 ;; *************** function _scale *****************
  7869 ;; Defined at:
  7870 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  scl             1    wreg     char 
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;  scl             1   35[BANK0 ] char 
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  3   27[BANK0 ] char 
  7877 ;; Registers used:
  7878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7884 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7885 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7886 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7887 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7888 ;;Total ram usage:        9 bytes
  7889 ;; Hardware stack levels used:    1
  7890 ;; Hardware stack levels required when called:    3
  7891 ;; This function calls:
  7892 ;;		___awdiv
  7893 ;;		___awmod
  7894 ;;		___ftmul
  7895 ;;		___wmul
  7896 ;; This function is called by:
  7897 ;;		_sprintf
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           
  7902                           ;psect for function _scale
  7903  15BC                     _scale:	
  7904                           
  7905                           ;incstack = 0
  7906                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7907                           ;scale@scl stored from wreg
  7908  15BC  0020               	movlb	0	; select bank0
  7909  15BD  00C3               	movwf	scale@scl
  7910                           
  7911                           ;doprnt.c: 428: if(scl < 0) {
  7912  15BE  1FC3               	btfss	scale@scl,7
  7913  15BF  2EE1               	goto	l3774
  7914                           
  7915                           ;doprnt.c: 429: scl = -scl;
  7916  15C0  09C3               	comf	scale@scl,f
  7917  15C1  0AC3               	incf	scale@scl,f
  7918                           
  7919                           ;doprnt.c: 430: if(scl>=110)
  7920  15C2  0843               	movf	scale@scl,w
  7921  15C3  3A80               	xorlw	128
  7922  15C4  3E12               	addlw	-238
  7923  15C5  1C03               	skipc
  7924  15C6  2E65               	goto	l3764
  7925                           
  7926                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7927  15C7  300A               	movlw	10
  7928  15C8  00F8               	movwf	___awdiv@divisor
  7929  15C9  3000               	movlw	0
  7930  15CA  00F9               	movwf	___awdiv@divisor+1
  7931  15CB  0843               	movf	scale@scl,w
  7932  15CC  00F3               	movwf	___awmod@dividend
  7933  15CD  01F4               	clrf	___awmod@dividend+1
  7934  15CE  1BF3               	btfsc	___awmod@dividend,7
  7935  15CF  03F4               	decf	___awmod@dividend+1,f
  7936  15D0  3064               	movlw	100
  7937  15D1  00F1               	movwf	___awmod@divisor
  7938  15D2  3000               	movlw	0
  7939  15D3  00F2               	movwf	___awmod@divisor+1
  7940  15D4  319C  241D  3195   	fcall	___awmod
  7941  15D7  0872               	movf	?___awmod+1,w
  7942  15D8  00FB               	movwf	___awdiv@dividend+1
  7943  15D9  0871               	movf	?___awmod,w
  7944  15DA  00FA               	movwf	___awdiv@dividend
  7945  15DB  319C  2462  3195   	fcall	___awdiv
  7946  15DE  0878               	movf	?___awdiv,w
  7947  15DF  3E09               	addlw	9
  7948  15E0  0020               	movlb	0	; select bank0
  7949  15E1  00A5               	movwf	___wmul@multiplier
  7950  15E2  3000               	movlw	0
  7951  15E3  3D79               	addwfc	?___awdiv+1,w
  7952  15E4  00A6               	movwf	___wmul@multiplier+1
  7953  15E5  3003               	movlw	3
  7954  15E6  00A7               	movwf	___wmul@multiplicand
  7955  15E7  3000               	movlw	0
  7956  15E8  00A8               	movwf	___wmul@multiplicand+1
  7957  15E9  319A  22BF  3195   	fcall	___wmul
  7958  15EC  0020               	movlb	0	; select bank0
  7959  15ED  0826               	movf	?___wmul+1,w
  7960  15EE  0085               	movwf	5
  7961  15EF  0825               	movf	?___wmul,w
  7962  15F0  0084               	movwf	4
  7963  15F1  304F               	movlw	low (__npowers_| (0+32768))
  7964  15F2  0784               	addwf	4,f
  7965  15F3  30A0               	movlw	high (__npowers_| (0+32768))
  7966  15F4  3D85               	addwfc	5,f
  7967  15F5  3F00               	moviw [0]fsr0
  7968  15F6  00AB               	movwf	___ftmul@f1
  7969  15F7  3F01               	moviw [1]fsr0
  7970  15F8  00AC               	movwf	___ftmul@f1+1
  7971  15F9  3F02               	moviw [2]fsr0
  7972  15FA  00AD               	movwf	___ftmul@f1+2
  7973  15FB  3064               	movlw	100
  7974  15FC  00F8               	movwf	___awdiv@divisor
  7975  15FD  3000               	movlw	0
  7976  15FE  00F9               	movwf	___awdiv@divisor+1
  7977  15FF  0843               	movf	scale@scl,w
  7978  1600  00FA               	movwf	___awdiv@dividend
  7979  1601  01FB               	clrf	___awdiv@dividend+1
  7980  1602  1BFA               	btfsc	___awdiv@dividend,7
  7981  1603  03FB               	decf	___awdiv@dividend+1,f
  7982  1604  319C  2462  3195   	fcall	___awdiv
  7983  1607  0878               	movf	?___awdiv,w
  7984  1608  3E12               	addlw	18
  7985  1609  0020               	movlb	0	; select bank0
  7986  160A  00A5               	movwf	___wmul@multiplier
  7987  160B  3000               	movlw	0
  7988  160C  3D79               	addwfc	?___awdiv+1,w
  7989  160D  00A6               	movwf	___wmul@multiplier+1
  7990  160E  3003               	movlw	3
  7991  160F  00A7               	movwf	___wmul@multiplicand
  7992  1610  3000               	movlw	0
  7993  1611  00A8               	movwf	___wmul@multiplicand+1
  7994  1612  319A  22BF  3195   	fcall	___wmul
  7995  1615  0020               	movlb	0	; select bank0
  7996  1616  0826               	movf	?___wmul+1,w
  7997  1617  0085               	movwf	5
  7998  1618  0825               	movf	?___wmul,w
  7999  1619  0084               	movwf	4
  8000  161A  304F               	movlw	low (__npowers_| (0+32768))
  8001  161B  0784               	addwf	4,f
  8002  161C  30A0               	movlw	high (__npowers_| (0+32768))
  8003  161D  3D85               	addwfc	5,f
  8004  161E  3F00               	moviw [0]fsr0
  8005  161F  00AE               	movwf	___ftmul@f2
  8006  1620  3F01               	moviw [1]fsr0
  8007  1621  00AF               	movwf	___ftmul@f2+1
  8008  1622  3F02               	moviw [2]fsr0
  8009  1623  00B0               	movwf	___ftmul@f2+2
  8010  1624  319E  2696  3195   	fcall	___ftmul
  8011  1627  0020               	movlb	0	; select bank0
  8012  1628  082B               	movf	?___ftmul,w
  8013  1629  00C0               	movwf	_scale$937
  8014  162A  082C               	movf	?___ftmul+1,w
  8015  162B  00C1               	movwf	_scale$937+1
  8016  162C  082D               	movf	?___ftmul+2,w
  8017  162D  00C2               	movwf	_scale$937+2
  8018                           
  8019                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8020  162E  0843               	movf	scale@scl,w
  8021  162F  00F3               	movwf	___awmod@dividend
  8022  1630  01F4               	clrf	___awmod@dividend+1
  8023  1631  1BF3               	btfsc	___awmod@dividend,7
  8024  1632  03F4               	decf	___awmod@dividend+1,f
  8025  1633  300A               	movlw	10
  8026  1634  00F1               	movwf	___awmod@divisor
  8027  1635  3000               	movlw	0
  8028  1636  00F2               	movwf	___awmod@divisor+1
  8029  1637  319C  241D  3195   	fcall	___awmod
  8030  163A  0872               	movf	?___awmod+1,w
  8031  163B  0020               	movlb	0	; select bank0
  8032  163C  00A6               	movwf	___wmul@multiplier+1
  8033  163D  0871               	movf	?___awmod,w
  8034  163E  00A5               	movwf	___wmul@multiplier
  8035  163F  3003               	movlw	3
  8036  1640  00A7               	movwf	___wmul@multiplicand
  8037  1641  3000               	movlw	0
  8038  1642  00A8               	movwf	___wmul@multiplicand+1
  8039  1643  319A  22BF  3195   	fcall	___wmul
  8040  1646  0020               	movlb	0	; select bank0
  8041  1647  0826               	movf	?___wmul+1,w
  8042  1648  0085               	movwf	5
  8043  1649  0825               	movf	?___wmul,w
  8044  164A  0084               	movwf	4
  8045  164B  304F               	movlw	low (__npowers_| (0+32768))
  8046  164C  0784               	addwf	4,f
  8047  164D  30A0               	movlw	high (__npowers_| (0+32768))
  8048  164E  3D85               	addwfc	5,f
  8049  164F  3F00               	moviw [0]fsr0
  8050  1650  00AB               	movwf	___ftmul@f1
  8051  1651  3F01               	moviw [1]fsr0
  8052  1652  00AC               	movwf	___ftmul@f1+1
  8053  1653  3F02               	moviw [2]fsr0
  8054  1654  00AD               	movwf	___ftmul@f1+2
  8055  1655  0840               	movf	_scale$937,w
  8056  1656  00AE               	movwf	___ftmul@f2
  8057  1657  0841               	movf	_scale$937+1,w
  8058  1658  00AF               	movwf	___ftmul@f2+1
  8059  1659  0842               	movf	_scale$937+2,w
  8060  165A  00B0               	movwf	___ftmul@f2+2
  8061  165B  319E  2696         	fcall	___ftmul
  8062  165D  0020               	movlb	0	; select bank0
  8063  165E  082B               	movf	?___ftmul,w
  8064  165F  00BB               	movwf	?_scale
  8065  1660  082C               	movf	?___ftmul+1,w
  8066  1661  00BC               	movwf	?_scale+1
  8067  1662  082D               	movf	?___ftmul+2,w
  8068  1663  00BD               	movwf	?_scale+2
  8069  1664  0008               	return
  8070  1665                     l3764:	
  8071                           
  8072                           ;doprnt.c: 432: else if(scl > 10)
  8073  1665  0843               	movf	scale@scl,w
  8074  1666  3A80               	xorlw	128
  8075  1667  3E75               	addlw	-139
  8076  1668  1C03               	skipc
  8077  1669  2EC4               	goto	l3770
  8078                           
  8079                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8080  166A  0843               	movf	scale@scl,w
  8081  166B  00F3               	movwf	___awmod@dividend
  8082  166C  01F4               	clrf	___awmod@dividend+1
  8083  166D  1BF3               	btfsc	___awmod@dividend,7
  8084  166E  03F4               	decf	___awmod@dividend+1,f
  8085  166F  300A               	movlw	10
  8086  1670  00F1               	movwf	___awmod@divisor
  8087  1671  3000               	movlw	0
  8088  1672  00F2               	movwf	___awmod@divisor+1
  8089  1673  319C  241D  3195   	fcall	___awmod
  8090  1676  0872               	movf	?___awmod+1,w
  8091  1677  0020               	movlb	0	; select bank0
  8092  1678  00A6               	movwf	___wmul@multiplier+1
  8093  1679  0871               	movf	?___awmod,w
  8094  167A  00A5               	movwf	___wmul@multiplier
  8095  167B  3003               	movlw	3
  8096  167C  00A7               	movwf	___wmul@multiplicand
  8097  167D  3000               	movlw	0
  8098  167E  00A8               	movwf	___wmul@multiplicand+1
  8099  167F  319A  22BF  3195   	fcall	___wmul
  8100  1682  0020               	movlb	0	; select bank0
  8101  1683  0826               	movf	?___wmul+1,w
  8102  1684  0085               	movwf	5
  8103  1685  0825               	movf	?___wmul,w
  8104  1686  0084               	movwf	4
  8105  1687  304F               	movlw	low (__npowers_| (0+32768))
  8106  1688  0784               	addwf	4,f
  8107  1689  30A0               	movlw	high (__npowers_| (0+32768))
  8108  168A  3D85               	addwfc	5,f
  8109  168B  3F00               	moviw [0]fsr0
  8110  168C  00AB               	movwf	___ftmul@f1
  8111  168D  3F01               	moviw [1]fsr0
  8112  168E  00AC               	movwf	___ftmul@f1+1
  8113  168F  3F02               	moviw [2]fsr0
  8114  1690  00AD               	movwf	___ftmul@f1+2
  8115  1691  300A               	movlw	10
  8116  1692  00F8               	movwf	___awdiv@divisor
  8117  1693  3000               	movlw	0
  8118  1694  00F9               	movwf	___awdiv@divisor+1
  8119  1695  0843               	movf	scale@scl,w
  8120  1696  00FA               	movwf	___awdiv@dividend
  8121  1697  01FB               	clrf	___awdiv@dividend+1
  8122  1698  1BFA               	btfsc	___awdiv@dividend,7
  8123  1699  03FB               	decf	___awdiv@dividend+1,f
  8124  169A  319C  2462  3195   	fcall	___awdiv
  8125  169D  0878               	movf	?___awdiv,w
  8126  169E  3E09               	addlw	9
  8127  169F  0020               	movlb	0	; select bank0
  8128  16A0  00A5               	movwf	___wmul@multiplier
  8129  16A1  3000               	movlw	0
  8130  16A2  3D79               	addwfc	?___awdiv+1,w
  8131  16A3  00A6               	movwf	___wmul@multiplier+1
  8132  16A4  3003               	movlw	3
  8133  16A5  00A7               	movwf	___wmul@multiplicand
  8134  16A6  3000               	movlw	0
  8135  16A7  00A8               	movwf	___wmul@multiplicand+1
  8136  16A8  319A  22BF  3195   	fcall	___wmul
  8137  16AB  0020               	movlb	0	; select bank0
  8138  16AC  0826               	movf	?___wmul+1,w
  8139  16AD  0085               	movwf	5
  8140  16AE  0825               	movf	?___wmul,w
  8141  16AF  0084               	movwf	4
  8142  16B0  304F               	movlw	low (__npowers_| (0+32768))
  8143  16B1  0784               	addwf	4,f
  8144  16B2  30A0               	movlw	high (__npowers_| (0+32768))
  8145  16B3  3D85               	addwfc	5,f
  8146  16B4  3F00               	moviw [0]fsr0
  8147  16B5  00AE               	movwf	___ftmul@f2
  8148  16B6  3F01               	moviw [1]fsr0
  8149  16B7  00AF               	movwf	___ftmul@f2+1
  8150  16B8  3F02               	moviw [2]fsr0
  8151  16B9  00B0               	movwf	___ftmul@f2+2
  8152  16BA  319E  2696         	fcall	___ftmul
  8153  16BC  0020               	movlb	0	; select bank0
  8154  16BD  082B               	movf	?___ftmul,w
  8155  16BE  00BB               	movwf	?_scale
  8156  16BF  082C               	movf	?___ftmul+1,w
  8157  16C0  00BC               	movwf	?_scale+1
  8158  16C1  082D               	movf	?___ftmul+2,w
  8159  16C2  00BD               	movwf	?_scale+2
  8160  16C3  0008               	return
  8161  16C4                     l3770:	
  8162                           
  8163                           ;doprnt.c: 434: return _npowers_[scl];
  8164  16C4  0843               	movf	scale@scl,w
  8165  16C5  00BE               	movwf	??_scale
  8166  16C6  01BF               	clrf	??_scale+1
  8167  16C7  083E               	movf	??_scale,w
  8168  16C8  00A5               	movwf	___wmul@multiplier
  8169  16C9  083F               	movf	??_scale+1,w
  8170  16CA  00A6               	movwf	___wmul@multiplier+1
  8171  16CB  3003               	movlw	3
  8172  16CC  00A7               	movwf	___wmul@multiplicand
  8173  16CD  3000               	movlw	0
  8174  16CE  00A8               	movwf	___wmul@multiplicand+1
  8175  16CF  319A  22BF         	fcall	___wmul
  8176  16D1  0020               	movlb	0	; select bank0
  8177  16D2  0826               	movf	?___wmul+1,w
  8178  16D3  0085               	movwf	5
  8179  16D4  0825               	movf	?___wmul,w
  8180  16D5  0084               	movwf	4
  8181  16D6  304F               	movlw	low (__npowers_| (0+32768))
  8182  16D7  0784               	addwf	4,f
  8183  16D8  30A0               	movlw	high (__npowers_| (0+32768))
  8184  16D9  3D85               	addwfc	5,f
  8185  16DA  3F00               	moviw [0]fsr0
  8186  16DB  00BB               	movwf	?_scale
  8187  16DC  3F01               	moviw [1]fsr0
  8188  16DD  00BC               	movwf	?_scale+1
  8189  16DE  3F02               	moviw [2]fsr0
  8190  16DF  00BD               	movwf	?_scale+2
  8191  16E0  0008               	return
  8192  16E1                     l3774:	
  8193                           
  8194                           ;doprnt.c: 435: }
  8195                           ;doprnt.c: 436: if(scl>=110)
  8196  16E1  0843               	movf	scale@scl,w
  8197  16E2  3A80               	xorlw	128
  8198  16E3  3E12               	addlw	-238
  8199  16E4  1C03               	skipc
  8200  16E5  2F84               	goto	l3782
  8201                           
  8202                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8203  16E6  300A               	movlw	10
  8204  16E7  00F8               	movwf	___awdiv@divisor
  8205  16E8  3000               	movlw	0
  8206  16E9  00F9               	movwf	___awdiv@divisor+1
  8207  16EA  0843               	movf	scale@scl,w
  8208  16EB  00F3               	movwf	___awmod@dividend
  8209  16EC  01F4               	clrf	___awmod@dividend+1
  8210  16ED  1BF3               	btfsc	___awmod@dividend,7
  8211  16EE  03F4               	decf	___awmod@dividend+1,f
  8212  16EF  3064               	movlw	100
  8213  16F0  00F1               	movwf	___awmod@divisor
  8214  16F1  3000               	movlw	0
  8215  16F2  00F2               	movwf	___awmod@divisor+1
  8216  16F3  319C  241D  3195   	fcall	___awmod
  8217  16F6  0872               	movf	?___awmod+1,w
  8218  16F7  00FB               	movwf	___awdiv@dividend+1
  8219  16F8  0871               	movf	?___awmod,w
  8220  16F9  00FA               	movwf	___awdiv@dividend
  8221  16FA  319C  2462  3195   	fcall	___awdiv
  8222  16FD  0878               	movf	?___awdiv,w
  8223  16FE  3E09               	addlw	9
  8224  16FF  0020               	movlb	0	; select bank0
  8225  1700  00A5               	movwf	___wmul@multiplier
  8226  1701  3000               	movlw	0
  8227  1702  3D79               	addwfc	?___awdiv+1,w
  8228  1703  00A6               	movwf	___wmul@multiplier+1
  8229  1704  3003               	movlw	3
  8230  1705  00A7               	movwf	___wmul@multiplicand
  8231  1706  3000               	movlw	0
  8232  1707  00A8               	movwf	___wmul@multiplicand+1
  8233  1708  319A  22BF  3195   	fcall	___wmul
  8234  170B  0020               	movlb	0	; select bank0
  8235  170C  0826               	movf	?___wmul+1,w
  8236  170D  0085               	movwf	5
  8237  170E  0825               	movf	?___wmul,w
  8238  170F  0084               	movwf	4
  8239  1710  3028               	movlw	low (__powers_| (0+32768))
  8240  1711  0784               	addwf	4,f
  8241  1712  30A0               	movlw	high (__powers_| (0+32768))
  8242  1713  3D85               	addwfc	5,f
  8243  1714  3F00               	moviw [0]fsr0
  8244  1715  00AB               	movwf	___ftmul@f1
  8245  1716  3F01               	moviw [1]fsr0
  8246  1717  00AC               	movwf	___ftmul@f1+1
  8247  1718  3F02               	moviw [2]fsr0
  8248  1719  00AD               	movwf	___ftmul@f1+2
  8249  171A  3064               	movlw	100
  8250  171B  00F8               	movwf	___awdiv@divisor
  8251  171C  3000               	movlw	0
  8252  171D  00F9               	movwf	___awdiv@divisor+1
  8253  171E  0843               	movf	scale@scl,w
  8254  171F  00FA               	movwf	___awdiv@dividend
  8255  1720  01FB               	clrf	___awdiv@dividend+1
  8256  1721  1BFA               	btfsc	___awdiv@dividend,7
  8257  1722  03FB               	decf	___awdiv@dividend+1,f
  8258  1723  319C  2462  3195   	fcall	___awdiv
  8259  1726  0878               	movf	?___awdiv,w
  8260  1727  3E12               	addlw	18
  8261  1728  0020               	movlb	0	; select bank0
  8262  1729  00A5               	movwf	___wmul@multiplier
  8263  172A  3000               	movlw	0
  8264  172B  3D79               	addwfc	?___awdiv+1,w
  8265  172C  00A6               	movwf	___wmul@multiplier+1
  8266  172D  3003               	movlw	3
  8267  172E  00A7               	movwf	___wmul@multiplicand
  8268  172F  3000               	movlw	0
  8269  1730  00A8               	movwf	___wmul@multiplicand+1
  8270  1731  319A  22BF  3195   	fcall	___wmul
  8271  1734  0020               	movlb	0	; select bank0
  8272  1735  0826               	movf	?___wmul+1,w
  8273  1736  0085               	movwf	5
  8274  1737  0825               	movf	?___wmul,w
  8275  1738  0084               	movwf	4
  8276  1739  3028               	movlw	low (__powers_| (0+32768))
  8277  173A  0784               	addwf	4,f
  8278  173B  30A0               	movlw	high (__powers_| (0+32768))
  8279  173C  3D85               	addwfc	5,f
  8280  173D  3F00               	moviw [0]fsr0
  8281  173E  00AE               	movwf	___ftmul@f2
  8282  173F  3F01               	moviw [1]fsr0
  8283  1740  00AF               	movwf	___ftmul@f2+1
  8284  1741  3F02               	moviw [2]fsr0
  8285  1742  00B0               	movwf	___ftmul@f2+2
  8286  1743  319E  2696  3195   	fcall	___ftmul
  8287  1746  0020               	movlb	0	; select bank0
  8288  1747  082B               	movf	?___ftmul,w
  8289  1748  00C0               	movwf	_scale$937
  8290  1749  082C               	movf	?___ftmul+1,w
  8291  174A  00C1               	movwf	_scale$937+1
  8292  174B  082D               	movf	?___ftmul+2,w
  8293  174C  00C2               	movwf	_scale$937+2
  8294                           
  8295                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8296  174D  0843               	movf	scale@scl,w
  8297  174E  00F3               	movwf	___awmod@dividend
  8298  174F  01F4               	clrf	___awmod@dividend+1
  8299  1750  1BF3               	btfsc	___awmod@dividend,7
  8300  1751  03F4               	decf	___awmod@dividend+1,f
  8301  1752  300A               	movlw	10
  8302  1753  00F1               	movwf	___awmod@divisor
  8303  1754  3000               	movlw	0
  8304  1755  00F2               	movwf	___awmod@divisor+1
  8305  1756  319C  241D  3195   	fcall	___awmod
  8306  1759  0872               	movf	?___awmod+1,w
  8307  175A  0020               	movlb	0	; select bank0
  8308  175B  00A6               	movwf	___wmul@multiplier+1
  8309  175C  0871               	movf	?___awmod,w
  8310  175D  00A5               	movwf	___wmul@multiplier
  8311  175E  3003               	movlw	3
  8312  175F  00A7               	movwf	___wmul@multiplicand
  8313  1760  3000               	movlw	0
  8314  1761  00A8               	movwf	___wmul@multiplicand+1
  8315  1762  319A  22BF  3195   	fcall	___wmul
  8316  1765  0020               	movlb	0	; select bank0
  8317  1766  0826               	movf	?___wmul+1,w
  8318  1767  0085               	movwf	5
  8319  1768  0825               	movf	?___wmul,w
  8320  1769  0084               	movwf	4
  8321  176A  3028               	movlw	low (__powers_| (0+32768))
  8322  176B  0784               	addwf	4,f
  8323  176C  30A0               	movlw	high (__powers_| (0+32768))
  8324  176D  3D85               	addwfc	5,f
  8325  176E  3F00               	moviw [0]fsr0
  8326  176F  00AB               	movwf	___ftmul@f1
  8327  1770  3F01               	moviw [1]fsr0
  8328  1771  00AC               	movwf	___ftmul@f1+1
  8329  1772  3F02               	moviw [2]fsr0
  8330  1773  00AD               	movwf	___ftmul@f1+2
  8331  1774  0840               	movf	_scale$937,w
  8332  1775  00AE               	movwf	___ftmul@f2
  8333  1776  0841               	movf	_scale$937+1,w
  8334  1777  00AF               	movwf	___ftmul@f2+1
  8335  1778  0842               	movf	_scale$937+2,w
  8336  1779  00B0               	movwf	___ftmul@f2+2
  8337  177A  319E  2696         	fcall	___ftmul
  8338  177C  0020               	movlb	0	; select bank0
  8339  177D  082B               	movf	?___ftmul,w
  8340  177E  00BB               	movwf	?_scale
  8341  177F  082C               	movf	?___ftmul+1,w
  8342  1780  00BC               	movwf	?_scale+1
  8343  1781  082D               	movf	?___ftmul+2,w
  8344  1782  00BD               	movwf	?_scale+2
  8345  1783  0008               	return
  8346  1784                     l3782:	
  8347                           
  8348                           ;doprnt.c: 438: else if(scl > 10)
  8349  1784  0843               	movf	scale@scl,w
  8350  1785  3A80               	xorlw	128
  8351  1786  3E75               	addlw	-139
  8352  1787  1C03               	skipc
  8353  1788  2FE3               	goto	l3788
  8354                           
  8355                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8356  1789  0843               	movf	scale@scl,w
  8357  178A  00F3               	movwf	___awmod@dividend
  8358  178B  01F4               	clrf	___awmod@dividend+1
  8359  178C  1BF3               	btfsc	___awmod@dividend,7
  8360  178D  03F4               	decf	___awmod@dividend+1,f
  8361  178E  300A               	movlw	10
  8362  178F  00F1               	movwf	___awmod@divisor
  8363  1790  3000               	movlw	0
  8364  1791  00F2               	movwf	___awmod@divisor+1
  8365  1792  319C  241D  3195   	fcall	___awmod
  8366  1795  0872               	movf	?___awmod+1,w
  8367  1796  0020               	movlb	0	; select bank0
  8368  1797  00A6               	movwf	___wmul@multiplier+1
  8369  1798  0871               	movf	?___awmod,w
  8370  1799  00A5               	movwf	___wmul@multiplier
  8371  179A  3003               	movlw	3
  8372  179B  00A7               	movwf	___wmul@multiplicand
  8373  179C  3000               	movlw	0
  8374  179D  00A8               	movwf	___wmul@multiplicand+1
  8375  179E  319A  22BF  3195   	fcall	___wmul
  8376  17A1  0020               	movlb	0	; select bank0
  8377  17A2  0826               	movf	?___wmul+1,w
  8378  17A3  0085               	movwf	5
  8379  17A4  0825               	movf	?___wmul,w
  8380  17A5  0084               	movwf	4
  8381  17A6  3028               	movlw	low (__powers_| (0+32768))
  8382  17A7  0784               	addwf	4,f
  8383  17A8  30A0               	movlw	high (__powers_| (0+32768))
  8384  17A9  3D85               	addwfc	5,f
  8385  17AA  3F00               	moviw [0]fsr0
  8386  17AB  00AB               	movwf	___ftmul@f1
  8387  17AC  3F01               	moviw [1]fsr0
  8388  17AD  00AC               	movwf	___ftmul@f1+1
  8389  17AE  3F02               	moviw [2]fsr0
  8390  17AF  00AD               	movwf	___ftmul@f1+2
  8391  17B0  300A               	movlw	10
  8392  17B1  00F8               	movwf	___awdiv@divisor
  8393  17B2  3000               	movlw	0
  8394  17B3  00F9               	movwf	___awdiv@divisor+1
  8395  17B4  0843               	movf	scale@scl,w
  8396  17B5  00FA               	movwf	___awdiv@dividend
  8397  17B6  01FB               	clrf	___awdiv@dividend+1
  8398  17B7  1BFA               	btfsc	___awdiv@dividend,7
  8399  17B8  03FB               	decf	___awdiv@dividend+1,f
  8400  17B9  319C  2462  3195   	fcall	___awdiv
  8401  17BC  0878               	movf	?___awdiv,w
  8402  17BD  3E09               	addlw	9
  8403  17BE  0020               	movlb	0	; select bank0
  8404  17BF  00A5               	movwf	___wmul@multiplier
  8405  17C0  3000               	movlw	0
  8406  17C1  3D79               	addwfc	?___awdiv+1,w
  8407  17C2  00A6               	movwf	___wmul@multiplier+1
  8408  17C3  3003               	movlw	3
  8409  17C4  00A7               	movwf	___wmul@multiplicand
  8410  17C5  3000               	movlw	0
  8411  17C6  00A8               	movwf	___wmul@multiplicand+1
  8412  17C7  319A  22BF  3195   	fcall	___wmul
  8413  17CA  0020               	movlb	0	; select bank0
  8414  17CB  0826               	movf	?___wmul+1,w
  8415  17CC  0085               	movwf	5
  8416  17CD  0825               	movf	?___wmul,w
  8417  17CE  0084               	movwf	4
  8418  17CF  3028               	movlw	low (__powers_| (0+32768))
  8419  17D0  0784               	addwf	4,f
  8420  17D1  30A0               	movlw	high (__powers_| (0+32768))
  8421  17D2  3D85               	addwfc	5,f
  8422  17D3  3F00               	moviw [0]fsr0
  8423  17D4  00AE               	movwf	___ftmul@f2
  8424  17D5  3F01               	moviw [1]fsr0
  8425  17D6  00AF               	movwf	___ftmul@f2+1
  8426  17D7  3F02               	moviw [2]fsr0
  8427  17D8  00B0               	movwf	___ftmul@f2+2
  8428  17D9  319E  2696         	fcall	___ftmul
  8429  17DB  0020               	movlb	0	; select bank0
  8430  17DC  082B               	movf	?___ftmul,w
  8431  17DD  00BB               	movwf	?_scale
  8432  17DE  082C               	movf	?___ftmul+1,w
  8433  17DF  00BC               	movwf	?_scale+1
  8434  17E0  082D               	movf	?___ftmul+2,w
  8435  17E1  00BD               	movwf	?_scale+2
  8436  17E2  0008               	return
  8437  17E3                     l3788:	
  8438                           
  8439                           ;doprnt.c: 440: return _powers_[scl];
  8440  17E3  0843               	movf	scale@scl,w
  8441  17E4  00BE               	movwf	??_scale
  8442  17E5  01BF               	clrf	??_scale+1
  8443  17E6  083E               	movf	??_scale,w
  8444  17E7  00A5               	movwf	___wmul@multiplier
  8445  17E8  083F               	movf	??_scale+1,w
  8446  17E9  00A6               	movwf	___wmul@multiplier+1
  8447  17EA  3003               	movlw	3
  8448  17EB  00A7               	movwf	___wmul@multiplicand
  8449  17EC  3000               	movlw	0
  8450  17ED  00A8               	movwf	___wmul@multiplicand+1
  8451  17EE  319A  22BF         	fcall	___wmul
  8452  17F0  0020               	movlb	0	; select bank0
  8453  17F1  0826               	movf	?___wmul+1,w
  8454  17F2  0085               	movwf	5
  8455  17F3  0825               	movf	?___wmul,w
  8456  17F4  0084               	movwf	4
  8457  17F5  3028               	movlw	low (__powers_| (0+32768))
  8458  17F6  0784               	addwf	4,f
  8459  17F7  30A0               	movlw	high (__powers_| (0+32768))
  8460  17F8  3D85               	addwfc	5,f
  8461  17F9  3F00               	moviw [0]fsr0
  8462  17FA  00BB               	movwf	?_scale
  8463  17FB  3F01               	moviw [1]fsr0
  8464  17FC  00BC               	movwf	?_scale+1
  8465  17FD  3F02               	moviw [2]fsr0
  8466  17FE  00BD               	movwf	?_scale+2
  8467  17FF  0008               	return
  8468  1800                     __end_of_scale:	
  8469                           
  8470                           	psect	text5
  8471  1A5D                     __ptext5:	
  8472 ;; *************** function _isdigit *****************
  8473 ;; Defined at:
  8474 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  c               1    wreg     unsigned char 
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;  c               1    2[COMMON] unsigned char 
  8479 ;; Return value:  Size  Location     Type
  8480 ;;		None               void
  8481 ;; Registers used:
  8482 ;;		wreg, status,2, status,0
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8492 ;;Total ram usage:        2 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    1
  8495 ;; This function calls:
  8496 ;;		Nothing
  8497 ;; This function is called by:
  8498 ;;		_sprintf
  8499 ;; This function uses a non-reentrant model
  8500 ;;
  8501                           
  8502                           
  8503                           ;psect for function _isdigit
  8504  1A5D                     _isdigit:	
  8505                           
  8506                           ;incstack = 0
  8507                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8508                           ;isdigit@c stored from wreg
  8509  1A5D  00F2               	movwf	isdigit@c
  8510  1A5E  01F1               	clrf	_isdigit$716
  8511  1A5F  303A               	movlw	58
  8512  1A60  0272               	subwf	isdigit@c,w
  8513  1A61  1803               	skipnc
  8514  1A62  2A69               	goto	l2666
  8515  1A63  3030               	movlw	48
  8516  1A64  0272               	subwf	isdigit@c,w
  8517  1A65  1C03               	skipc
  8518  1A66  2A69               	goto	l2666
  8519  1A67  01F1               	clrf	_isdigit$716
  8520  1A68  0AF1               	incf	_isdigit$716,f
  8521  1A69                     l2666:	
  8522  1A69  0C71               	rrf	_isdigit$716,w
  8523  1A6A  0008               	return
  8524  1A6B                     __end_of_isdigit:	
  8525                           
  8526                           	psect	text6
  8527  0E9B                     __ptext6:	
  8528 ;; *************** function _fround *****************
  8529 ;; Defined at:
  8530 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8531 ;; Parameters:    Size  Location     Type
  8532 ;;  prec            1    wreg     unsigned char 
  8533 ;; Auto vars:     Size  Location     Type
  8534 ;;  prec            1   40[BANK0 ] unsigned char 
  8535 ;; Return value:  Size  Location     Type
  8536 ;;                  3   27[BANK0 ] unsigned char 
  8537 ;; Registers used:
  8538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8539 ;; Tracked objects:
  8540 ;;		On entry : 0/0
  8541 ;;		On exit  : 0/0
  8542 ;;		Unchanged: 0/0
  8543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8544 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8545 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8546 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8547 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8548 ;;Total ram usage:       14 bytes
  8549 ;; Hardware stack levels used:    1
  8550 ;; Hardware stack levels required when called:    3
  8551 ;; This function calls:
  8552 ;;		___awdiv
  8553 ;;		___awmod
  8554 ;;		___ftmul
  8555 ;;		___wmul
  8556 ;; This function is called by:
  8557 ;;		_sprintf
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561                           
  8562                           ;psect for function _fround
  8563  0E9B                     _fround:	
  8564                           
  8565                           ;incstack = 0
  8566                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8567                           ;fround@prec stored from wreg
  8568  0E9B  0020               	movlb	0	; select bank0
  8569  0E9C  00C8               	movwf	fround@prec
  8570                           
  8571                           ;doprnt.c: 413: if(prec>=110)
  8572  0E9D  306E               	movlw	110
  8573  0E9E  0248               	subwf	fround@prec,w
  8574  0E9F  1C03               	skipc
  8575  0EA0  2F5B               	goto	l3740
  8576                           
  8577                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8578  0EA1  300A               	movlw	10
  8579  0EA2  00F8               	movwf	___awdiv@divisor
  8580  0EA3  3000               	movlw	0
  8581  0EA4  00F9               	movwf	___awdiv@divisor+1
  8582  0EA5  0848               	movf	fround@prec,w
  8583  0EA6  00BE               	movwf	??_fround
  8584  0EA7  01BF               	clrf	??_fround+1
  8585  0EA8  083E               	movf	??_fround,w
  8586  0EA9  00F3               	movwf	___awmod@dividend
  8587  0EAA  083F               	movf	??_fround+1,w
  8588  0EAB  00F4               	movwf	___awmod@dividend+1
  8589  0EAC  3064               	movlw	100
  8590  0EAD  00F1               	movwf	___awmod@divisor
  8591  0EAE  3000               	movlw	0
  8592  0EAF  00F2               	movwf	___awmod@divisor+1
  8593  0EB0  319C  241D  318E   	fcall	___awmod
  8594  0EB3  0872               	movf	?___awmod+1,w
  8595  0EB4  00FB               	movwf	___awdiv@dividend+1
  8596  0EB5  0871               	movf	?___awmod,w
  8597  0EB6  00FA               	movwf	___awdiv@dividend
  8598  0EB7  319C  2462  318E   	fcall	___awdiv
  8599  0EBA  0878               	movf	?___awdiv,w
  8600  0EBB  3E09               	addlw	9
  8601  0EBC  0020               	movlb	0	; select bank0
  8602  0EBD  00A5               	movwf	___wmul@multiplier
  8603  0EBE  3000               	movlw	0
  8604  0EBF  3D79               	addwfc	?___awdiv+1,w
  8605  0EC0  00A6               	movwf	___wmul@multiplier+1
  8606  0EC1  3003               	movlw	3
  8607  0EC2  00A7               	movwf	___wmul@multiplicand
  8608  0EC3  3000               	movlw	0
  8609  0EC4  00A8               	movwf	___wmul@multiplicand+1
  8610  0EC5  319A  22BF  318E   	fcall	___wmul
  8611  0EC8  0020               	movlb	0	; select bank0
  8612  0EC9  0826               	movf	?___wmul+1,w
  8613  0ECA  0085               	movwf	5
  8614  0ECB  0825               	movf	?___wmul,w
  8615  0ECC  0084               	movwf	4
  8616  0ECD  304F               	movlw	low (__npowers_| (0+32768))
  8617  0ECE  0784               	addwf	4,f
  8618  0ECF  30A0               	movlw	high (__npowers_| (0+32768))
  8619  0ED0  3D85               	addwfc	5,f
  8620  0ED1  3F00               	moviw [0]fsr0
  8621  0ED2  00AB               	movwf	___ftmul@f1
  8622  0ED3  3F01               	moviw [1]fsr0
  8623  0ED4  00AC               	movwf	___ftmul@f1+1
  8624  0ED5  3F02               	moviw [2]fsr0
  8625  0ED6  00AD               	movwf	___ftmul@f1+2
  8626  0ED7  3064               	movlw	100
  8627  0ED8  00F8               	movwf	___awdiv@divisor
  8628  0ED9  3000               	movlw	0
  8629  0EDA  00F9               	movwf	___awdiv@divisor+1
  8630  0EDB  0848               	movf	fround@prec,w
  8631  0EDC  00C0               	movwf	??_fround+2
  8632  0EDD  01C1               	clrf	??_fround+3
  8633  0EDE  0840               	movf	??_fround+2,w
  8634  0EDF  00FA               	movwf	___awdiv@dividend
  8635  0EE0  0841               	movf	??_fround+3,w
  8636  0EE1  00FB               	movwf	___awdiv@dividend+1
  8637  0EE2  319C  2462  318E   	fcall	___awdiv
  8638  0EE5  0878               	movf	?___awdiv,w
  8639  0EE6  3E12               	addlw	18
  8640  0EE7  0020               	movlb	0	; select bank0
  8641  0EE8  00A5               	movwf	___wmul@multiplier
  8642  0EE9  3000               	movlw	0
  8643  0EEA  3D79               	addwfc	?___awdiv+1,w
  8644  0EEB  00A6               	movwf	___wmul@multiplier+1
  8645  0EEC  3003               	movlw	3
  8646  0EED  00A7               	movwf	___wmul@multiplicand
  8647  0EEE  3000               	movlw	0
  8648  0EEF  00A8               	movwf	___wmul@multiplicand+1
  8649  0EF0  319A  22BF  318E   	fcall	___wmul
  8650  0EF3  0020               	movlb	0	; select bank0
  8651  0EF4  0826               	movf	?___wmul+1,w
  8652  0EF5  0085               	movwf	5
  8653  0EF6  0825               	movf	?___wmul,w
  8654  0EF7  0084               	movwf	4
  8655  0EF8  304F               	movlw	low (__npowers_| (0+32768))
  8656  0EF9  0784               	addwf	4,f
  8657  0EFA  30A0               	movlw	high (__npowers_| (0+32768))
  8658  0EFB  3D85               	addwfc	5,f
  8659  0EFC  3F00               	moviw [0]fsr0
  8660  0EFD  00AE               	movwf	___ftmul@f2
  8661  0EFE  3F01               	moviw [1]fsr0
  8662  0EFF  00AF               	movwf	___ftmul@f2+1
  8663  0F00  3F02               	moviw [2]fsr0
  8664  0F01  00B0               	movwf	___ftmul@f2+2
  8665  0F02  319E  2696  318E   	fcall	___ftmul
  8666  0F05  0020               	movlb	0	; select bank0
  8667  0F06  082B               	movf	?___ftmul,w
  8668  0F07  00C5               	movwf	_fround$935
  8669  0F08  082C               	movf	?___ftmul+1,w
  8670  0F09  00C6               	movwf	_fround$935+1
  8671  0F0A  082D               	movf	?___ftmul+2,w
  8672  0F0B  00C7               	movwf	_fround$935+2
  8673                           
  8674                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8675  0F0C  0848               	movf	fround@prec,w
  8676  0F0D  00BE               	movwf	??_fround
  8677  0F0E  01BF               	clrf	??_fround+1
  8678  0F0F  083E               	movf	??_fround,w
  8679  0F10  00F3               	movwf	___awmod@dividend
  8680  0F11  083F               	movf	??_fround+1,w
  8681  0F12  00F4               	movwf	___awmod@dividend+1
  8682  0F13  300A               	movlw	10
  8683  0F14  00F1               	movwf	___awmod@divisor
  8684  0F15  3000               	movlw	0
  8685  0F16  00F2               	movwf	___awmod@divisor+1
  8686  0F17  319C  241D  318E   	fcall	___awmod
  8687  0F1A  0872               	movf	?___awmod+1,w
  8688  0F1B  0020               	movlb	0	; select bank0
  8689  0F1C  00A6               	movwf	___wmul@multiplier+1
  8690  0F1D  0871               	movf	?___awmod,w
  8691  0F1E  00A5               	movwf	___wmul@multiplier
  8692  0F1F  3003               	movlw	3
  8693  0F20  00A7               	movwf	___wmul@multiplicand
  8694  0F21  3000               	movlw	0
  8695  0F22  00A8               	movwf	___wmul@multiplicand+1
  8696  0F23  319A  22BF  318E   	fcall	___wmul
  8697  0F26  0020               	movlb	0	; select bank0
  8698  0F27  0826               	movf	?___wmul+1,w
  8699  0F28  0085               	movwf	5
  8700  0F29  0825               	movf	?___wmul,w
  8701  0F2A  0084               	movwf	4
  8702  0F2B  304F               	movlw	low (__npowers_| (0+32768))
  8703  0F2C  0784               	addwf	4,f
  8704  0F2D  30A0               	movlw	high (__npowers_| (0+32768))
  8705  0F2E  3D85               	addwfc	5,f
  8706  0F2F  3F00               	moviw [0]fsr0
  8707  0F30  00AB               	movwf	___ftmul@f1
  8708  0F31  3F01               	moviw [1]fsr0
  8709  0F32  00AC               	movwf	___ftmul@f1+1
  8710  0F33  3F02               	moviw [2]fsr0
  8711  0F34  00AD               	movwf	___ftmul@f1+2
  8712  0F35  0845               	movf	_fround$935,w
  8713  0F36  00AE               	movwf	___ftmul@f2
  8714  0F37  0846               	movf	_fround$935+1,w
  8715  0F38  00AF               	movwf	___ftmul@f2+1
  8716  0F39  0847               	movf	_fround$935+2,w
  8717  0F3A  00B0               	movwf	___ftmul@f2+2
  8718  0F3B  319E  2696  318E   	fcall	___ftmul
  8719  0F3E  0020               	movlb	0	; select bank0
  8720  0F3F  082B               	movf	?___ftmul,w
  8721  0F40  00C2               	movwf	_fround$936
  8722  0F41  082C               	movf	?___ftmul+1,w
  8723  0F42  00C3               	movwf	_fround$936+1
  8724  0F43  082D               	movf	?___ftmul+2,w
  8725  0F44  00C4               	movwf	_fround$936+2
  8726                           
  8727                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8728  0F45  3000               	movlw	0
  8729  0F46  00AB               	movwf	___ftmul@f1
  8730  0F47  3000               	movlw	0
  8731  0F48  00AC               	movwf	___ftmul@f1+1
  8732  0F49  303F               	movlw	63
  8733  0F4A  00AD               	movwf	___ftmul@f1+2
  8734  0F4B  0842               	movf	_fround$936,w
  8735  0F4C  00AE               	movwf	___ftmul@f2
  8736  0F4D  0843               	movf	_fround$936+1,w
  8737  0F4E  00AF               	movwf	___ftmul@f2+1
  8738  0F4F  0844               	movf	_fround$936+2,w
  8739  0F50  00B0               	movwf	___ftmul@f2+2
  8740  0F51  319E  2696         	fcall	___ftmul
  8741  0F53  0020               	movlb	0	; select bank0
  8742  0F54  082B               	movf	?___ftmul,w
  8743  0F55  00BB               	movwf	?_fround
  8744  0F56  082C               	movf	?___ftmul+1,w
  8745  0F57  00BC               	movwf	?_fround+1
  8746  0F58  082D               	movf	?___ftmul+2,w
  8747  0F59  00BD               	movwf	?_fround+2
  8748  0F5A  0008               	return
  8749  0F5B                     l3740:	
  8750                           
  8751                           ;doprnt.c: 415: else if(prec > 10)
  8752  0F5B  300B               	movlw	11
  8753  0F5C  0248               	subwf	fround@prec,w
  8754  0F5D  1C03               	skipc
  8755  0F5E  2FD3               	goto	l3748
  8756                           
  8757                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8758  0F5F  0848               	movf	fround@prec,w
  8759  0F60  00BE               	movwf	??_fround
  8760  0F61  01BF               	clrf	??_fround+1
  8761  0F62  083E               	movf	??_fround,w
  8762  0F63  00F3               	movwf	___awmod@dividend
  8763  0F64  083F               	movf	??_fround+1,w
  8764  0F65  00F4               	movwf	___awmod@dividend+1
  8765  0F66  300A               	movlw	10
  8766  0F67  00F1               	movwf	___awmod@divisor
  8767  0F68  3000               	movlw	0
  8768  0F69  00F2               	movwf	___awmod@divisor+1
  8769  0F6A  319C  241D  318E   	fcall	___awmod
  8770  0F6D  0872               	movf	?___awmod+1,w
  8771  0F6E  0020               	movlb	0	; select bank0
  8772  0F6F  00A6               	movwf	___wmul@multiplier+1
  8773  0F70  0871               	movf	?___awmod,w
  8774  0F71  00A5               	movwf	___wmul@multiplier
  8775  0F72  3003               	movlw	3
  8776  0F73  00A7               	movwf	___wmul@multiplicand
  8777  0F74  3000               	movlw	0
  8778  0F75  00A8               	movwf	___wmul@multiplicand+1
  8779  0F76  319A  22BF  318E   	fcall	___wmul
  8780  0F79  0020               	movlb	0	; select bank0
  8781  0F7A  0826               	movf	?___wmul+1,w
  8782  0F7B  0085               	movwf	5
  8783  0F7C  0825               	movf	?___wmul,w
  8784  0F7D  0084               	movwf	4
  8785  0F7E  304F               	movlw	low (__npowers_| (0+32768))
  8786  0F7F  0784               	addwf	4,f
  8787  0F80  30A0               	movlw	high (__npowers_| (0+32768))
  8788  0F81  3D85               	addwfc	5,f
  8789  0F82  3F00               	moviw [0]fsr0
  8790  0F83  00AB               	movwf	___ftmul@f1
  8791  0F84  3F01               	moviw [1]fsr0
  8792  0F85  00AC               	movwf	___ftmul@f1+1
  8793  0F86  3F02               	moviw [2]fsr0
  8794  0F87  00AD               	movwf	___ftmul@f1+2
  8795  0F88  300A               	movlw	10
  8796  0F89  00F8               	movwf	___awdiv@divisor
  8797  0F8A  3000               	movlw	0
  8798  0F8B  00F9               	movwf	___awdiv@divisor+1
  8799  0F8C  0848               	movf	fround@prec,w
  8800  0F8D  00C0               	movwf	??_fround+2
  8801  0F8E  01C1               	clrf	??_fround+3
  8802  0F8F  0840               	movf	??_fround+2,w
  8803  0F90  00FA               	movwf	___awdiv@dividend
  8804  0F91  0841               	movf	??_fround+3,w
  8805  0F92  00FB               	movwf	___awdiv@dividend+1
  8806  0F93  319C  2462  318E   	fcall	___awdiv
  8807  0F96  0878               	movf	?___awdiv,w
  8808  0F97  3E09               	addlw	9
  8809  0F98  0020               	movlb	0	; select bank0
  8810  0F99  00A5               	movwf	___wmul@multiplier
  8811  0F9A  3000               	movlw	0
  8812  0F9B  3D79               	addwfc	?___awdiv+1,w
  8813  0F9C  00A6               	movwf	___wmul@multiplier+1
  8814  0F9D  3003               	movlw	3
  8815  0F9E  00A7               	movwf	___wmul@multiplicand
  8816  0F9F  3000               	movlw	0
  8817  0FA0  00A8               	movwf	___wmul@multiplicand+1
  8818  0FA1  319A  22BF  318E   	fcall	___wmul
  8819  0FA4  0020               	movlb	0	; select bank0
  8820  0FA5  0826               	movf	?___wmul+1,w
  8821  0FA6  0085               	movwf	5
  8822  0FA7  0825               	movf	?___wmul,w
  8823  0FA8  0084               	movwf	4
  8824  0FA9  304F               	movlw	low (__npowers_| (0+32768))
  8825  0FAA  0784               	addwf	4,f
  8826  0FAB  30A0               	movlw	high (__npowers_| (0+32768))
  8827  0FAC  3D85               	addwfc	5,f
  8828  0FAD  3F00               	moviw [0]fsr0
  8829  0FAE  00AE               	movwf	___ftmul@f2
  8830  0FAF  3F01               	moviw [1]fsr0
  8831  0FB0  00AF               	movwf	___ftmul@f2+1
  8832  0FB1  3F02               	moviw [2]fsr0
  8833  0FB2  00B0               	movwf	___ftmul@f2+2
  8834  0FB3  319E  2696  318E   	fcall	___ftmul
  8835  0FB6  0020               	movlb	0	; select bank0
  8836  0FB7  082B               	movf	?___ftmul,w
  8837  0FB8  00C5               	movwf	_fround$935
  8838  0FB9  082C               	movf	?___ftmul+1,w
  8839  0FBA  00C6               	movwf	_fround$935+1
  8840  0FBB  082D               	movf	?___ftmul+2,w
  8841  0FBC  00C7               	movwf	_fround$935+2
  8842                           
  8843                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8844  0FBD  3000               	movlw	0
  8845  0FBE  00AB               	movwf	___ftmul@f1
  8846  0FBF  3000               	movlw	0
  8847  0FC0  00AC               	movwf	___ftmul@f1+1
  8848  0FC1  303F               	movlw	63
  8849  0FC2  00AD               	movwf	___ftmul@f1+2
  8850  0FC3  0845               	movf	_fround$935,w
  8851  0FC4  00AE               	movwf	___ftmul@f2
  8852  0FC5  0846               	movf	_fround$935+1,w
  8853  0FC6  00AF               	movwf	___ftmul@f2+1
  8854  0FC7  0847               	movf	_fround$935+2,w
  8855  0FC8  00B0               	movwf	___ftmul@f2+2
  8856  0FC9  319E  2696         	fcall	___ftmul
  8857  0FCB  0020               	movlb	0	; select bank0
  8858  0FCC  082B               	movf	?___ftmul,w
  8859  0FCD  00BB               	movwf	?_fround
  8860  0FCE  082C               	movf	?___ftmul+1,w
  8861  0FCF  00BC               	movwf	?_fround+1
  8862  0FD0  082D               	movf	?___ftmul+2,w
  8863  0FD1  00BD               	movwf	?_fround+2
  8864  0FD2  0008               	return
  8865  0FD3                     l3748:	
  8866                           
  8867                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8868  0FD3  3000               	movlw	0
  8869  0FD4  00AB               	movwf	___ftmul@f1
  8870  0FD5  3000               	movlw	0
  8871  0FD6  00AC               	movwf	___ftmul@f1+1
  8872  0FD7  303F               	movlw	63
  8873  0FD8  00AD               	movwf	___ftmul@f1+2
  8874  0FD9  0848               	movf	fround@prec,w
  8875  0FDA  00BE               	movwf	??_fround
  8876  0FDB  01BF               	clrf	??_fround+1
  8877  0FDC  083E               	movf	??_fround,w
  8878  0FDD  00A5               	movwf	___wmul@multiplier
  8879  0FDE  083F               	movf	??_fround+1,w
  8880  0FDF  00A6               	movwf	___wmul@multiplier+1
  8881  0FE0  3003               	movlw	3
  8882  0FE1  00A7               	movwf	___wmul@multiplicand
  8883  0FE2  3000               	movlw	0
  8884  0FE3  00A8               	movwf	___wmul@multiplicand+1
  8885  0FE4  319A  22BF  318E   	fcall	___wmul
  8886  0FE7  0020               	movlb	0	; select bank0
  8887  0FE8  0826               	movf	?___wmul+1,w
  8888  0FE9  0085               	movwf	5
  8889  0FEA  0825               	movf	?___wmul,w
  8890  0FEB  0084               	movwf	4
  8891  0FEC  304F               	movlw	low (__npowers_| (0+32768))
  8892  0FED  0784               	addwf	4,f
  8893  0FEE  30A0               	movlw	high (__npowers_| (0+32768))
  8894  0FEF  3D85               	addwfc	5,f
  8895  0FF0  3F00               	moviw [0]fsr0
  8896  0FF1  00AE               	movwf	___ftmul@f2
  8897  0FF2  3F01               	moviw [1]fsr0
  8898  0FF3  00AF               	movwf	___ftmul@f2+1
  8899  0FF4  3F02               	moviw [2]fsr0
  8900  0FF5  00B0               	movwf	___ftmul@f2+2
  8901  0FF6  319E  2696         	fcall	___ftmul
  8902  0FF8  0020               	movlb	0	; select bank0
  8903  0FF9  082B               	movf	?___ftmul,w
  8904  0FFA  00BB               	movwf	?_fround
  8905  0FFB  082C               	movf	?___ftmul+1,w
  8906  0FFC  00BC               	movwf	?_fround+1
  8907  0FFD  082D               	movf	?___ftmul+2,w
  8908  0FFE  00BD               	movwf	?_fround+2
  8909  0FFF  0008               	return
  8910  1000                     __end_of_fround:	
  8911                           
  8912                           	psect	text7
  8913  1ABF                     __ptext7:	
  8914 ;; *************** function ___wmul *****************
  8915 ;; Defined at:
  8916 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  multiplier      2    5[BANK0 ] unsigned int 
  8919 ;;  multiplicand    2    7[BANK0 ] unsigned int 
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;  product         2    9[BANK0 ] unsigned int 
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  2    5[BANK0 ] unsigned int 
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8934 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8935 ;;Total ram usage:        6 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:    1
  8938 ;; This function calls:
  8939 ;;		Nothing
  8940 ;; This function is called by:
  8941 ;;		_main
  8942 ;;		_fround
  8943 ;;		_scale
  8944 ;;		_sprintf
  8945 ;;		_LCD_GraphicsDisplayString
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           
  8950                           ;psect for function ___wmul
  8951  1ABF                     ___wmul:	
  8952                           
  8953                           ;incstack = 0
  8954                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8955  1ABF  0020               	movlb	0	; select bank0
  8956  1AC0  01A9               	clrf	___wmul@product
  8957  1AC1  01AA               	clrf	___wmul@product+1
  8958  1AC2                     l2276:	
  8959  1AC2  1C25               	btfss	___wmul@multiplier,0
  8960  1AC3  2AC8               	goto	l441
  8961  1AC4  0827               	movf	___wmul@multiplicand,w
  8962  1AC5  07A9               	addwf	___wmul@product,f
  8963  1AC6  0828               	movf	___wmul@multiplicand+1,w
  8964  1AC7  3DAA               	addwfc	___wmul@product+1,f
  8965  1AC8                     l441:	
  8966  1AC8  3001               	movlw	1
  8967  1AC9                     u2815:	
  8968  1AC9  35A7               	lslf	___wmul@multiplicand,f
  8969  1ACA  0DA8               	rlf	___wmul@multiplicand+1,f
  8970  1ACB  0B89               	decfsz	9,f
  8971  1ACC  2AC9               	goto	u2815
  8972  1ACD  3001               	movlw	1
  8973  1ACE                     u2825:	
  8974  1ACE  36A6               	lsrf	___wmul@multiplier+1,f
  8975  1ACF  0CA5               	rrf	___wmul@multiplier,f
  8976  1AD0  0B89               	decfsz	9,f
  8977  1AD1  2ACE               	goto	u2825
  8978  1AD2  0825               	movf	___wmul@multiplier,w
  8979  1AD3  0426               	iorwf	___wmul@multiplier+1,w
  8980  1AD4  1D03               	btfss	3,2
  8981  1AD5  2AC2               	goto	l2276
  8982  1AD6  082A               	movf	___wmul@product+1,w
  8983  1AD7  00A6               	movwf	?___wmul+1
  8984  1AD8  0829               	movf	___wmul@product,w
  8985  1AD9  00A5               	movwf	?___wmul
  8986  1ADA  0008               	return
  8987  1ADB                     __end_of___wmul:	
  8988                           
  8989                           	psect	text8
  8990  1E96                     __ptext8:	
  8991 ;; *************** function ___ftmul *****************
  8992 ;; Defined at:
  8993 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;  f1              3   11[BANK0 ] float 
  8996 ;;  f2              3   14[BANK0 ] float 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  8999 ;;  sign            1   26[BANK0 ] unsigned char 
  9000 ;;  cntr            1   25[BANK0 ] unsigned char 
  9001 ;;  exp             1   21[BANK0 ] unsigned char 
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  3   11[BANK0 ] float 
  9004 ;; Registers used:
  9005 ;;		wreg, status,2, status,0, pclath, cstack
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9011 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9012 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9013 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9014 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9015 ;;Total ram usage:       16 bytes
  9016 ;; Hardware stack levels used:    1
  9017 ;; Hardware stack levels required when called:    2
  9018 ;; This function calls:
  9019 ;;		___ftpack
  9020 ;; This function is called by:
  9021 ;;		_main
  9022 ;;		_fround
  9023 ;;		_scale
  9024 ;;		_sprintf
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           
  9029                           ;psect for function ___ftmul
  9030  1E96                     ___ftmul:	
  9031                           
  9032                           ;incstack = 0
  9033                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9034  1E96  0020               	movlb	0	; select bank0
  9035  1E97  082B               	movf	___ftmul@f1,w
  9036  1E98  00B1               	movwf	??___ftmul
  9037  1E99  082C               	movf	___ftmul@f1+1,w
  9038  1E9A  00B2               	movwf	??___ftmul+1
  9039  1E9B  082D               	movf	___ftmul@f1+2,w
  9040  1E9C  00B3               	movwf	??___ftmul+2
  9041  1E9D  1003               	clrc
  9042  1E9E  0D32               	rlf	??___ftmul+1,w
  9043  1E9F  0D33               	rlf	??___ftmul+2,w
  9044  1EA0  00B4               	movwf	??___ftmul+3
  9045  1EA1  0834               	movf	??___ftmul+3,w
  9046  1EA2  00B5               	movwf	___ftmul@exp
  9047  1EA3  0835               	movf	___ftmul@exp,w
  9048  1EA4  1D03               	btfss	3,2
  9049  1EA5  2EAD               	goto	l3686
  9050  1EA6  3000               	movlw	0
  9051  1EA7  00AB               	movwf	?___ftmul
  9052  1EA8  3000               	movlw	0
  9053  1EA9  00AC               	movwf	?___ftmul+1
  9054  1EAA  3000               	movlw	0
  9055  1EAB  00AD               	movwf	?___ftmul+2
  9056  1EAC  0008               	return
  9057  1EAD                     l3686:	
  9058  1EAD  082E               	movf	___ftmul@f2,w
  9059  1EAE  00B1               	movwf	??___ftmul
  9060  1EAF  082F               	movf	___ftmul@f2+1,w
  9061  1EB0  00B2               	movwf	??___ftmul+1
  9062  1EB1  0830               	movf	___ftmul@f2+2,w
  9063  1EB2  00B3               	movwf	??___ftmul+2
  9064  1EB3  1003               	clrc
  9065  1EB4  0D32               	rlf	??___ftmul+1,w
  9066  1EB5  0D33               	rlf	??___ftmul+2,w
  9067  1EB6  00B4               	movwf	??___ftmul+3
  9068  1EB7  0834               	movf	??___ftmul+3,w
  9069  1EB8  00BA               	movwf	___ftmul@sign
  9070  1EB9  083A               	movf	___ftmul@sign,w
  9071  1EBA  1D03               	btfss	3,2
  9072  1EBB  2EC3               	goto	l3692
  9073  1EBC  3000               	movlw	0
  9074  1EBD  00AB               	movwf	?___ftmul
  9075  1EBE  3000               	movlw	0
  9076  1EBF  00AC               	movwf	?___ftmul+1
  9077  1EC0  3000               	movlw	0
  9078  1EC1  00AD               	movwf	?___ftmul+2
  9079  1EC2  0008               	return
  9080  1EC3                     l3692:	
  9081  1EC3  083A               	movf	___ftmul@sign,w
  9082  1EC4  3E7B               	addlw	123
  9083  1EC5  00B1               	movwf	??___ftmul
  9084  1EC6  0831               	movf	??___ftmul,w
  9085  1EC7  07B5               	addwf	___ftmul@exp,f
  9086  1EC8  082B               	movf	___ftmul@f1,w
  9087  1EC9  00B1               	movwf	??___ftmul
  9088  1ECA  082C               	movf	___ftmul@f1+1,w
  9089  1ECB  00B2               	movwf	??___ftmul+1
  9090  1ECC  082D               	movf	___ftmul@f1+2,w
  9091  1ECD  00B3               	movwf	??___ftmul+2
  9092  1ECE  3010               	movlw	16
  9093  1ECF                     u5705:	
  9094  1ECF  36B3               	lsrf	??___ftmul+2,f
  9095  1ED0  0CB2               	rrf	??___ftmul+1,f
  9096  1ED1  0CB1               	rrf	??___ftmul,f
  9097  1ED2  0B89               	decfsz	9,f
  9098  1ED3  2ECF               	goto	u5705
  9099  1ED4  0831               	movf	??___ftmul,w
  9100  1ED5  00B4               	movwf	??___ftmul+3
  9101  1ED6  0834               	movf	??___ftmul+3,w
  9102  1ED7  00BA               	movwf	___ftmul@sign
  9103  1ED8  082E               	movf	___ftmul@f2,w
  9104  1ED9  00B1               	movwf	??___ftmul
  9105  1EDA  082F               	movf	___ftmul@f2+1,w
  9106  1EDB  00B2               	movwf	??___ftmul+1
  9107  1EDC  0830               	movf	___ftmul@f2+2,w
  9108  1EDD  00B3               	movwf	??___ftmul+2
  9109  1EDE  3010               	movlw	16
  9110  1EDF                     u5715:	
  9111  1EDF  36B3               	lsrf	??___ftmul+2,f
  9112  1EE0  0CB2               	rrf	??___ftmul+1,f
  9113  1EE1  0CB1               	rrf	??___ftmul,f
  9114  1EE2  0B89               	decfsz	9,f
  9115  1EE3  2EDF               	goto	u5715
  9116  1EE4  0831               	movf	??___ftmul,w
  9117  1EE5  00B4               	movwf	??___ftmul+3
  9118  1EE6  0834               	movf	??___ftmul+3,w
  9119  1EE7  06BA               	xorwf	___ftmul@sign,f
  9120  1EE8  3080               	movlw	128
  9121  1EE9  00B1               	movwf	??___ftmul
  9122  1EEA  0831               	movf	??___ftmul,w
  9123  1EEB  05BA               	andwf	___ftmul@sign,f
  9124  1EEC  17AC               	bsf	___ftmul@f1+1,7
  9125  1EED  17AF               	bsf	___ftmul@f2+1,7
  9126  1EEE  30FF               	movlw	255
  9127  1EEF  05AE               	andwf	___ftmul@f2,f
  9128  1EF0  30FF               	movlw	255
  9129  1EF1  05AF               	andwf	___ftmul@f2+1,f
  9130  1EF2  3000               	movlw	0
  9131  1EF3  05B0               	andwf	___ftmul@f2+2,f
  9132  1EF4  3000               	movlw	0
  9133  1EF5  00B6               	movwf	___ftmul@f3_as_product
  9134  1EF6  3000               	movlw	0
  9135  1EF7  00B7               	movwf	___ftmul@f3_as_product+1
  9136  1EF8  3000               	movlw	0
  9137  1EF9  00B8               	movwf	___ftmul@f3_as_product+2
  9138  1EFA  3007               	movlw	7
  9139  1EFB  00B1               	movwf	??___ftmul
  9140  1EFC  0831               	movf	??___ftmul,w
  9141  1EFD  00B9               	movwf	___ftmul@cntr
  9142  1EFE                     l3704:	
  9143  1EFE  1C2B               	btfss	___ftmul@f1,0
  9144  1EFF  2F06               	goto	l3708
  9145  1F00  082E               	movf	___ftmul@f2,w
  9146  1F01  07B6               	addwf	___ftmul@f3_as_product,f
  9147  1F02  082F               	movf	___ftmul@f2+1,w
  9148  1F03  3DB7               	addwfc	___ftmul@f3_as_product+1,f
  9149  1F04  0830               	movf	___ftmul@f2+2,w
  9150  1F05  3DB8               	addwfc	___ftmul@f3_as_product+2,f
  9151  1F06                     l3708:	
  9152  1F06  3001               	movlw	1
  9153  1F07                     u5735:	
  9154  1F07  36AD               	lsrf	___ftmul@f1+2,f
  9155  1F08  0CAC               	rrf	___ftmul@f1+1,f
  9156  1F09  0CAB               	rrf	___ftmul@f1,f
  9157  1F0A  0B89               	decfsz	9,f
  9158  1F0B  2F07               	goto	u5735
  9159  1F0C  3001               	movlw	1
  9160  1F0D                     u5745:	
  9161  1F0D  35AE               	lslf	___ftmul@f2,f
  9162  1F0E  0DAF               	rlf	___ftmul@f2+1,f
  9163  1F0F  0DB0               	rlf	___ftmul@f2+2,f
  9164  1F10  0B89               	decfsz	9,f
  9165  1F11  2F0D               	goto	u5745
  9166  1F12  3001               	movlw	1
  9167  1F13  02B9               	subwf	___ftmul@cntr,f
  9168  1F14  1D03               	btfss	3,2
  9169  1F15  2EFE               	goto	l3704
  9170  1F16  3009               	movlw	9
  9171  1F17  00B1               	movwf	??___ftmul
  9172  1F18  0831               	movf	??___ftmul,w
  9173  1F19  00B9               	movwf	___ftmul@cntr
  9174  1F1A                     l3716:	
  9175  1F1A  1C2B               	btfss	___ftmul@f1,0
  9176  1F1B  2F22               	goto	l3720
  9177  1F1C  082E               	movf	___ftmul@f2,w
  9178  1F1D  07B6               	addwf	___ftmul@f3_as_product,f
  9179  1F1E  082F               	movf	___ftmul@f2+1,w
  9180  1F1F  3DB7               	addwfc	___ftmul@f3_as_product+1,f
  9181  1F20  0830               	movf	___ftmul@f2+2,w
  9182  1F21  3DB8               	addwfc	___ftmul@f3_as_product+2,f
  9183  1F22                     l3720:	
  9184  1F22  3001               	movlw	1
  9185  1F23                     u5775:	
  9186  1F23  36AD               	lsrf	___ftmul@f1+2,f
  9187  1F24  0CAC               	rrf	___ftmul@f1+1,f
  9188  1F25  0CAB               	rrf	___ftmul@f1,f
  9189  1F26  0B89               	decfsz	9,f
  9190  1F27  2F23               	goto	u5775
  9191  1F28  3001               	movlw	1
  9192  1F29                     u5785:	
  9193  1F29  36B8               	lsrf	___ftmul@f3_as_product+2,f
  9194  1F2A  0CB7               	rrf	___ftmul@f3_as_product+1,f
  9195  1F2B  0CB6               	rrf	___ftmul@f3_as_product,f
  9196  1F2C  0B89               	decfsz	9,f
  9197  1F2D  2F29               	goto	u5785
  9198  1F2E  3001               	movlw	1
  9199  1F2F  02B9               	subwf	___ftmul@cntr,f
  9200  1F30  1D03               	btfss	3,2
  9201  1F31  2F1A               	goto	l3716
  9202  1F32  0836               	movf	___ftmul@f3_as_product,w
  9203  1F33  00F1               	movwf	___ftpack@arg
  9204  1F34  0837               	movf	___ftmul@f3_as_product+1,w
  9205  1F35  00F2               	movwf	___ftpack@arg+1
  9206  1F36  0838               	movf	___ftmul@f3_as_product+2,w
  9207  1F37  00F3               	movwf	___ftpack@arg+2
  9208  1F38  0835               	movf	___ftmul@exp,w
  9209  1F39  00B1               	movwf	??___ftmul
  9210  1F3A  0831               	movf	??___ftmul,w
  9211  1F3B  00F4               	movwf	___ftpack@exp
  9212  1F3C  083A               	movf	___ftmul@sign,w
  9213  1F3D  00B2               	movwf	??___ftmul+1
  9214  1F3E  0832               	movf	??___ftmul+1,w
  9215  1F3F  00F5               	movwf	___ftpack@sign
  9216  1F40  319D  2516         	fcall	___ftpack
  9217  1F42  0871               	movf	?___ftpack,w
  9218  1F43  0020               	movlb	0	; select bank0
  9219  1F44  00AB               	movwf	?___ftmul
  9220  1F45  0872               	movf	?___ftpack+1,w
  9221  1F46  00AC               	movwf	?___ftmul+1
  9222  1F47  0873               	movf	?___ftpack+2,w
  9223  1F48  00AD               	movwf	?___ftmul+2
  9224  1F49  0008               	return
  9225  1F4A                     __end_of___ftmul:	
  9226                           
  9227                           	psect	text9
  9228  1C1D                     __ptext9:	
  9229 ;; *************** function ___awmod *****************
  9230 ;; Defined at:
  9231 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  divisor         2    1[COMMON] int 
  9234 ;;  dividend        2    3[COMMON] int 
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;  sign            1    7[COMMON] unsigned char 
  9237 ;;  counter         1    6[COMMON] unsigned char 
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  2    1[COMMON] int 
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9250 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9251 ;;Total ram usage:        7 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:    1
  9254 ;; This function calls:
  9255 ;;		Nothing
  9256 ;; This function is called by:
  9257 ;;		_fround
  9258 ;;		_scale
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           
  9263                           ;psect for function ___awmod
  9264  1C1D                     ___awmod:	
  9265                           
  9266                           ;incstack = 0
  9267                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9268  1C1D  01F7               	clrf	___awmod@sign
  9269  1C1E  1FF4               	btfss	___awmod@dividend+1,7
  9270  1C1F  2C27               	goto	l2340
  9271  1C20  09F3               	comf	___awmod@dividend,f
  9272  1C21  09F4               	comf	___awmod@dividend+1,f
  9273  1C22  0AF3               	incf	___awmod@dividend,f
  9274  1C23  1903               	skipnz
  9275  1C24  0AF4               	incf	___awmod@dividend+1,f
  9276  1C25  01F7               	clrf	___awmod@sign
  9277  1C26  0AF7               	incf	___awmod@sign,f
  9278  1C27                     l2340:	
  9279  1C27  1FF2               	btfss	___awmod@divisor+1,7
  9280  1C28  2C2E               	goto	l2344
  9281  1C29  09F1               	comf	___awmod@divisor,f
  9282  1C2A  09F2               	comf	___awmod@divisor+1,f
  9283  1C2B  0AF1               	incf	___awmod@divisor,f
  9284  1C2C  1903               	skipnz
  9285  1C2D  0AF2               	incf	___awmod@divisor+1,f
  9286  1C2E                     l2344:	
  9287  1C2E  0871               	movf	___awmod@divisor,w
  9288  1C2F  0472               	iorwf	___awmod@divisor+1,w
  9289  1C30  1903               	btfsc	3,2
  9290  1C31  2C55               	goto	l2362
  9291  1C32  01F6               	clrf	___awmod@counter
  9292  1C33  0AF6               	incf	___awmod@counter,f
  9293  1C34                     l2352:	
  9294  1C34  1BF2               	btfsc	___awmod@divisor+1,7
  9295  1C35  2C40               	goto	l2354
  9296  1C36  3001               	movlw	1
  9297  1C37                     u2975:	
  9298  1C37  35F1               	lslf	___awmod@divisor,f
  9299  1C38  0DF2               	rlf	___awmod@divisor+1,f
  9300  1C39  0B89               	decfsz	9,f
  9301  1C3A  2C37               	goto	u2975
  9302  1C3B  3001               	movlw	1
  9303  1C3C  00F5               	movwf	??___awmod
  9304  1C3D  0875               	movf	??___awmod,w
  9305  1C3E  07F6               	addwf	___awmod@counter,f
  9306  1C3F  2C34               	goto	l2352
  9307  1C40                     l2354:	
  9308  1C40  0872               	movf	___awmod@divisor+1,w
  9309  1C41  0274               	subwf	___awmod@dividend+1,w
  9310  1C42  1D03               	skipz
  9311  1C43  2C46               	goto	u2995
  9312  1C44  0871               	movf	___awmod@divisor,w
  9313  1C45  0273               	subwf	___awmod@dividend,w
  9314  1C46                     u2995:	
  9315  1C46  1C03               	skipc
  9316  1C47  2C4C               	goto	l2358
  9317  1C48  0871               	movf	___awmod@divisor,w
  9318  1C49  02F3               	subwf	___awmod@dividend,f
  9319  1C4A  0872               	movf	___awmod@divisor+1,w
  9320  1C4B  3BF4               	subwfb	___awmod@dividend+1,f
  9321  1C4C                     l2358:	
  9322  1C4C  3001               	movlw	1
  9323  1C4D                     u3005:	
  9324  1C4D  36F2               	lsrf	___awmod@divisor+1,f
  9325  1C4E  0CF1               	rrf	___awmod@divisor,f
  9326  1C4F  0B89               	decfsz	9,f
  9327  1C50  2C4D               	goto	u3005
  9328  1C51  3001               	movlw	1
  9329  1C52  02F6               	subwf	___awmod@counter,f
  9330  1C53  1D03               	btfss	3,2
  9331  1C54  2C40               	goto	l2354
  9332  1C55                     l2362:	
  9333  1C55  0877               	movf	___awmod@sign,w
  9334  1C56  1903               	btfsc	3,2
  9335  1C57  2C5D               	goto	l2366
  9336  1C58  09F3               	comf	___awmod@dividend,f
  9337  1C59  09F4               	comf	___awmod@dividend+1,f
  9338  1C5A  0AF3               	incf	___awmod@dividend,f
  9339  1C5B  1903               	skipnz
  9340  1C5C  0AF4               	incf	___awmod@dividend+1,f
  9341  1C5D                     l2366:	
  9342  1C5D  0874               	movf	___awmod@dividend+1,w
  9343  1C5E  00F2               	movwf	?___awmod+1
  9344  1C5F  0873               	movf	___awmod@dividend,w
  9345  1C60  00F1               	movwf	?___awmod
  9346  1C61  0008               	return
  9347  1C62                     __end_of___awmod:	
  9348                           
  9349                           	psect	text10
  9350  1C62                     __ptext10:	
  9351 ;; *************** function ___awdiv *****************
  9352 ;; Defined at:
  9353 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;  divisor         2    8[COMMON] int 
  9356 ;;  dividend        2   10[COMMON] int 
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;  quotient        2    3[BANK0 ] int 
  9359 ;;  sign            1    2[BANK0 ] unsigned char 
  9360 ;;  counter         1    1[BANK0 ] unsigned char 
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  2    8[COMMON] int 
  9363 ;; Registers used:
  9364 ;;		wreg, status,2, status,0
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9371 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9372 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9373 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9374 ;;Total ram usage:        9 bytes
  9375 ;; Hardware stack levels used:    1
  9376 ;; Hardware stack levels required when called:    1
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		_fround
  9381 ;;		_scale
  9382 ;;		_sprintf
  9383 ;; This function uses a non-reentrant model
  9384 ;;
  9385                           
  9386                           
  9387                           ;psect for function ___awdiv
  9388  1C62                     ___awdiv:	
  9389                           
  9390                           ;incstack = 0
  9391                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9392  1C62  0020               	movlb	0	; select bank0
  9393  1C63  01A2               	clrf	___awdiv@sign
  9394  1C64  1FF9               	btfss	___awdiv@divisor+1,7
  9395  1C65  2C6D               	goto	l3574
  9396  1C66  09F8               	comf	___awdiv@divisor,f
  9397  1C67  09F9               	comf	___awdiv@divisor+1,f
  9398  1C68  0AF8               	incf	___awdiv@divisor,f
  9399  1C69  1903               	skipnz
  9400  1C6A  0AF9               	incf	___awdiv@divisor+1,f
  9401  1C6B  01A2               	clrf	___awdiv@sign
  9402  1C6C  0AA2               	incf	___awdiv@sign,f
  9403  1C6D                     l3574:	
  9404  1C6D  1FFB               	btfss	___awdiv@dividend+1,7
  9405  1C6E  2C78               	goto	l3580
  9406  1C6F  09FA               	comf	___awdiv@dividend,f
  9407  1C70  09FB               	comf	___awdiv@dividend+1,f
  9408  1C71  0AFA               	incf	___awdiv@dividend,f
  9409  1C72  1903               	skipnz
  9410  1C73  0AFB               	incf	___awdiv@dividend+1,f
  9411  1C74  3001               	movlw	1
  9412  1C75  00A0               	movwf	??___awdiv
  9413  1C76  0820               	movf	??___awdiv,w
  9414  1C77  06A2               	xorwf	___awdiv@sign,f
  9415  1C78                     l3580:	
  9416  1C78  01A3               	clrf	___awdiv@quotient
  9417  1C79  01A4               	clrf	___awdiv@quotient+1
  9418  1C7A  0878               	movf	___awdiv@divisor,w
  9419  1C7B  0479               	iorwf	___awdiv@divisor+1,w
  9420  1C7C  1903               	btfsc	3,2
  9421  1C7D  2CA7               	goto	l3602
  9422  1C7E  01A1               	clrf	___awdiv@counter
  9423  1C7F  0AA1               	incf	___awdiv@counter,f
  9424  1C80                     l3590:	
  9425  1C80  1BF9               	btfsc	___awdiv@divisor+1,7
  9426  1C81  2C8C               	goto	l3592
  9427  1C82  3001               	movlw	1
  9428  1C83                     u5385:	
  9429  1C83  35F8               	lslf	___awdiv@divisor,f
  9430  1C84  0DF9               	rlf	___awdiv@divisor+1,f
  9431  1C85  0B89               	decfsz	9,f
  9432  1C86  2C83               	goto	u5385
  9433  1C87  3001               	movlw	1
  9434  1C88  00A0               	movwf	??___awdiv
  9435  1C89  0820               	movf	??___awdiv,w
  9436  1C8A  07A1               	addwf	___awdiv@counter,f
  9437  1C8B  2C80               	goto	l3590
  9438  1C8C                     l3592:	
  9439  1C8C  3001               	movlw	1
  9440  1C8D                     u5405:	
  9441  1C8D  35A3               	lslf	___awdiv@quotient,f
  9442  1C8E  0DA4               	rlf	___awdiv@quotient+1,f
  9443  1C8F  0B89               	decfsz	9,f
  9444  1C90  2C8D               	goto	u5405
  9445  1C91  0879               	movf	___awdiv@divisor+1,w
  9446  1C92  027B               	subwf	___awdiv@dividend+1,w
  9447  1C93  1D03               	skipz
  9448  1C94  2C97               	goto	u5415
  9449  1C95  0878               	movf	___awdiv@divisor,w
  9450  1C96  027A               	subwf	___awdiv@dividend,w
  9451  1C97                     u5415:	
  9452  1C97  1C03               	skipc
  9453  1C98  2C9E               	goto	l3598
  9454  1C99  0878               	movf	___awdiv@divisor,w
  9455  1C9A  02FA               	subwf	___awdiv@dividend,f
  9456  1C9B  0879               	movf	___awdiv@divisor+1,w
  9457  1C9C  3BFB               	subwfb	___awdiv@dividend+1,f
  9458  1C9D  1423               	bsf	___awdiv@quotient,0
  9459  1C9E                     l3598:	
  9460  1C9E  3001               	movlw	1
  9461  1C9F                     u5425:	
  9462  1C9F  36F9               	lsrf	___awdiv@divisor+1,f
  9463  1CA0  0CF8               	rrf	___awdiv@divisor,f
  9464  1CA1  0B89               	decfsz	9,f
  9465  1CA2  2C9F               	goto	u5425
  9466  1CA3  3001               	movlw	1
  9467  1CA4  02A1               	subwf	___awdiv@counter,f
  9468  1CA5  1D03               	btfss	3,2
  9469  1CA6  2C8C               	goto	l3592
  9470  1CA7                     l3602:	
  9471  1CA7  0822               	movf	___awdiv@sign,w
  9472  1CA8  1903               	btfsc	3,2
  9473  1CA9  2CAF               	goto	l3606
  9474  1CAA  09A3               	comf	___awdiv@quotient,f
  9475  1CAB  09A4               	comf	___awdiv@quotient+1,f
  9476  1CAC  0AA3               	incf	___awdiv@quotient,f
  9477  1CAD  1903               	skipnz
  9478  1CAE  0AA4               	incf	___awdiv@quotient+1,f
  9479  1CAF                     l3606:	
  9480  1CAF  0824               	movf	___awdiv@quotient+1,w
  9481  1CB0  00F9               	movwf	?___awdiv+1
  9482  1CB1  0823               	movf	___awdiv@quotient,w
  9483  1CB2  00F8               	movwf	?___awdiv
  9484  1CB3  0008               	return
  9485  1CB4                     __end_of___awdiv:	
  9486                           
  9487                           	psect	text11
  9488  1F4A                     __ptext11:	
  9489 ;; *************** function __tdiv_to_l_ *****************
  9490 ;; Defined at:
  9491 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;  f1              3    1[COMMON] float 
  9494 ;;  f2              3    4[COMMON] float 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  quot            4    0[BANK0 ] unsigned long 
  9497 ;;  exp1            1    5[BANK0 ] unsigned char 
  9498 ;;  cntr            1    4[BANK0 ] unsigned char 
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  4    1[COMMON] unsigned long 
  9501 ;; Registers used:
  9502 ;;		wreg, status,2, status,0
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9508 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9509 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9510 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9511 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9512 ;;Total ram usage:       16 bytes
  9513 ;; Hardware stack levels used:    1
  9514 ;; Hardware stack levels required when called:    1
  9515 ;; This function calls:
  9516 ;;		Nothing
  9517 ;; This function is called by:
  9518 ;;		_sprintf
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           
  9523                           ;psect for function __tdiv_to_l_
  9524  1F4A                     __tdiv_to_l_:	
  9525                           
  9526                           ;incstack = 0
  9527                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  9528  1F4A  0871               	movf	__tdiv_to_l_@f1,w
  9529  1F4B  00F7               	movwf	??__tdiv_to_l_
  9530  1F4C  0872               	movf	__tdiv_to_l_@f1+1,w
  9531  1F4D  00F8               	movwf	??__tdiv_to_l_+1
  9532  1F4E  0873               	movf	__tdiv_to_l_@f1+2,w
  9533  1F4F  00F9               	movwf	??__tdiv_to_l_+2
  9534  1F50  1003               	clrc
  9535  1F51  0D78               	rlf	??__tdiv_to_l_+1,w
  9536  1F52  0D79               	rlf	??__tdiv_to_l_+2,w
  9537  1F53  00FA               	movwf	??__tdiv_to_l_+3
  9538  1F54  087A               	movf	??__tdiv_to_l_+3,w
  9539  1F55  0020               	movlb	0	; select bank0
  9540  1F56  00A5               	movwf	__tdiv_to_l_@exp1
  9541  1F57  0825               	movf	__tdiv_to_l_@exp1,w
  9542  1F58  1D03               	btfss	3,2
  9543  1F59  2F63               	goto	l2676
  9544  1F5A  3000               	movlw	0
  9545  1F5B  00F4               	movwf	?__tdiv_to_l_+3
  9546  1F5C  3000               	movlw	0
  9547  1F5D  00F3               	movwf	?__tdiv_to_l_+2
  9548  1F5E  3000               	movlw	0
  9549  1F5F  00F2               	movwf	?__tdiv_to_l_+1
  9550  1F60  3000               	movlw	0
  9551  1F61  00F1               	movwf	?__tdiv_to_l_
  9552  1F62  0008               	return
  9553  1F63                     l2676:	
  9554  1F63  0874               	movf	__tdiv_to_l_@f2,w
  9555  1F64  00F7               	movwf	??__tdiv_to_l_
  9556  1F65  0875               	movf	__tdiv_to_l_@f2+1,w
  9557  1F66  00F8               	movwf	??__tdiv_to_l_+1
  9558  1F67  0876               	movf	__tdiv_to_l_@f2+2,w
  9559  1F68  00F9               	movwf	??__tdiv_to_l_+2
  9560  1F69  1003               	clrc
  9561  1F6A  0D78               	rlf	??__tdiv_to_l_+1,w
  9562  1F6B  0D79               	rlf	??__tdiv_to_l_+2,w
  9563  1F6C  00FA               	movwf	??__tdiv_to_l_+3
  9564  1F6D  087A               	movf	??__tdiv_to_l_+3,w
  9565  1F6E  00A4               	movwf	__tdiv_to_l_@cntr
  9566  1F6F  0824               	movf	__tdiv_to_l_@cntr,w
  9567  1F70  1D03               	btfss	3,2
  9568  1F71  2F7B               	goto	l676
  9569  1F72  3000               	movlw	0
  9570  1F73  00F4               	movwf	?__tdiv_to_l_+3
  9571  1F74  3000               	movlw	0
  9572  1F75  00F3               	movwf	?__tdiv_to_l_+2
  9573  1F76  3000               	movlw	0
  9574  1F77  00F2               	movwf	?__tdiv_to_l_+1
  9575  1F78  3000               	movlw	0
  9576  1F79  00F1               	movwf	?__tdiv_to_l_
  9577  1F7A  0008               	return
  9578  1F7B                     l676:	
  9579  1F7B  17F2               	bsf	__tdiv_to_l_@f1+1,7
  9580  1F7C  30FF               	movlw	255
  9581  1F7D  05F1               	andwf	__tdiv_to_l_@f1,f
  9582  1F7E  30FF               	movlw	255
  9583  1F7F  05F2               	andwf	__tdiv_to_l_@f1+1,f
  9584  1F80  3000               	movlw	0
  9585  1F81  05F3               	andwf	__tdiv_to_l_@f1+2,f
  9586  1F82  17F5               	bsf	__tdiv_to_l_@f2+1,7
  9587  1F83  30FF               	movlw	255
  9588  1F84  05F4               	andwf	__tdiv_to_l_@f2,f
  9589  1F85  30FF               	movlw	255
  9590  1F86  05F5               	andwf	__tdiv_to_l_@f2+1,f
  9591  1F87  3000               	movlw	0
  9592  1F88  05F6               	andwf	__tdiv_to_l_@f2+2,f
  9593  1F89  3000               	movlw	0
  9594  1F8A  00A3               	movwf	__tdiv_to_l_@quot+3
  9595  1F8B  3000               	movlw	0
  9596  1F8C  00A2               	movwf	__tdiv_to_l_@quot+2
  9597  1F8D  3000               	movlw	0
  9598  1F8E  00A1               	movwf	__tdiv_to_l_@quot+1
  9599  1F8F  3000               	movlw	0
  9600  1F90  00A0               	movwf	__tdiv_to_l_@quot
  9601  1F91  307F               	movlw	127
  9602  1F92  02A5               	subwf	__tdiv_to_l_@exp1,f
  9603  1F93  3098               	movlw	152
  9604  1F94  0724               	addwf	__tdiv_to_l_@cntr,w
  9605  1F95  00F7               	movwf	??__tdiv_to_l_
  9606  1F96  0877               	movf	??__tdiv_to_l_,w
  9607  1F97  02A5               	subwf	__tdiv_to_l_@exp1,f
  9608  1F98  3018               	movlw	24
  9609  1F99  00F7               	movwf	??__tdiv_to_l_
  9610  1F9A  0877               	movf	??__tdiv_to_l_,w
  9611  1F9B  00A4               	movwf	__tdiv_to_l_@cntr
  9612  1F9C                     l2690:	
  9613  1F9C  3001               	movlw	1
  9614  1F9D                     u3815:	
  9615  1F9D  35A0               	lslf	__tdiv_to_l_@quot,f
  9616  1F9E  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  9617  1F9F  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  9618  1FA0  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  9619  1FA1  0B89               	decfsz	9,f
  9620  1FA2  2F9D               	goto	u3815
  9621  1FA3  0876               	movf	__tdiv_to_l_@f2+2,w
  9622  1FA4  0273               	subwf	__tdiv_to_l_@f1+2,w
  9623  1FA5  1D03               	skipz
  9624  1FA6  2FAD               	goto	u3825
  9625  1FA7  0875               	movf	__tdiv_to_l_@f2+1,w
  9626  1FA8  0272               	subwf	__tdiv_to_l_@f1+1,w
  9627  1FA9  1D03               	skipz
  9628  1FAA  2FAD               	goto	u3825
  9629  1FAB  0874               	movf	__tdiv_to_l_@f2,w
  9630  1FAC  0271               	subwf	__tdiv_to_l_@f1,w
  9631  1FAD                     u3825:	
  9632  1FAD  1C03               	skipc
  9633  1FAE  2FB6               	goto	l2698
  9634  1FAF  0874               	movf	__tdiv_to_l_@f2,w
  9635  1FB0  02F1               	subwf	__tdiv_to_l_@f1,f
  9636  1FB1  0875               	movf	__tdiv_to_l_@f2+1,w
  9637  1FB2  3BF2               	subwfb	__tdiv_to_l_@f1+1,f
  9638  1FB3  0876               	movf	__tdiv_to_l_@f2+2,w
  9639  1FB4  3BF3               	subwfb	__tdiv_to_l_@f1+2,f
  9640  1FB5  1420               	bsf	__tdiv_to_l_@quot,0
  9641  1FB6                     l2698:	
  9642  1FB6  3001               	movlw	1
  9643  1FB7                     u3835:	
  9644  1FB7  35F1               	lslf	__tdiv_to_l_@f1,f
  9645  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+1,f
  9646  1FB9  0DF3               	rlf	__tdiv_to_l_@f1+2,f
  9647  1FBA  0B89               	decfsz	9,f
  9648  1FBB  2FB7               	goto	u3835
  9649  1FBC  3001               	movlw	1
  9650  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  9651  1FBE  1D03               	btfss	3,2
  9652  1FBF  2F9C               	goto	l2690
  9653  1FC0  1FA5               	btfss	__tdiv_to_l_@exp1,7
  9654  1FC1  2FDE               	goto	l2710
  9655  1FC2  0825               	movf	__tdiv_to_l_@exp1,w
  9656  1FC3  3A80               	xorlw	128
  9657  1FC4  3E97               	addlw	151
  9658  1FC5  1803               	skipnc
  9659  1FC6  2FD0               	goto	l2708
  9660  1FC7  3000               	movlw	0
  9661  1FC8  00F4               	movwf	?__tdiv_to_l_+3
  9662  1FC9  3000               	movlw	0
  9663  1FCA  00F3               	movwf	?__tdiv_to_l_+2
  9664  1FCB  3000               	movlw	0
  9665  1FCC  00F2               	movwf	?__tdiv_to_l_+1
  9666  1FCD  3000               	movlw	0
  9667  1FCE  00F1               	movwf	?__tdiv_to_l_
  9668  1FCF  0008               	return
  9669  1FD0                     l2708:	
  9670  1FD0  3001               	movlw	1
  9671  1FD1                     u3875:	
  9672  1FD1  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  9673  1FD2  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  9674  1FD3  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  9675  1FD4  0CA0               	rrf	__tdiv_to_l_@quot,f
  9676  1FD5  0B89               	decfsz	9,f
  9677  1FD6  2FD1               	goto	u3875
  9678  1FD7  3001               	movlw	1
  9679  1FD8  00F7               	movwf	??__tdiv_to_l_
  9680  1FD9  0877               	movf	??__tdiv_to_l_,w
  9681  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  9682  1FDB  1903               	btfsc	3,2
  9683  1FDC  2FF7               	goto	l2718
  9684  1FDD  2FD0               	goto	l2708
  9685  1FDE                     l2710:	
  9686  1FDE  3018               	movlw	24
  9687  1FDF  0225               	subwf	__tdiv_to_l_@exp1,w
  9688  1FE0  1C03               	skipc
  9689  1FE1  2FF4               	goto	l686
  9690  1FE2  3000               	movlw	0
  9691  1FE3  00F4               	movwf	?__tdiv_to_l_+3
  9692  1FE4  3000               	movlw	0
  9693  1FE5  00F3               	movwf	?__tdiv_to_l_+2
  9694  1FE6  3000               	movlw	0
  9695  1FE7  00F2               	movwf	?__tdiv_to_l_+1
  9696  1FE8  3000               	movlw	0
  9697  1FE9  00F1               	movwf	?__tdiv_to_l_
  9698  1FEA  0008               	return
  9699  1FEB                     l2716:	
  9700  1FEB  3001               	movlw	1
  9701  1FEC                     u3905:	
  9702  1FEC  35A0               	lslf	__tdiv_to_l_@quot,f
  9703  1FED  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  9704  1FEE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  9705  1FEF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  9706  1FF0  0B89               	decfsz	9,f
  9707  1FF1  2FEC               	goto	u3905
  9708  1FF2  3001               	movlw	1
  9709  1FF3  02A5               	subwf	__tdiv_to_l_@exp1,f
  9710  1FF4                     l686:	
  9711  1FF4  0825               	movf	__tdiv_to_l_@exp1,w
  9712  1FF5  1D03               	btfss	3,2
  9713  1FF6  2FEB               	goto	l2716
  9714  1FF7                     l2718:	
  9715  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  9716  1FF8  00F4               	movwf	?__tdiv_to_l_+3
  9717  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  9718  1FFA  00F3               	movwf	?__tdiv_to_l_+2
  9719  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  9720  1FFC  00F2               	movwf	?__tdiv_to_l_+1
  9721  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  9722  1FFE  00F1               	movwf	?__tdiv_to_l_
  9723  1FFF  0008               	return
  9724  2000                     __end_of__tdiv_to_l_:	
  9725                           
  9726                           	psect	text12
  9727  11FC                     __ptext12:	
  9728 ;; *************** function __div_to_l_ *****************
  9729 ;; Defined at:
  9730 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  f1              3    1[COMMON] unsigned long 
  9733 ;;  f2              3    4[COMMON] unsigned long 
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;  quot            4    8[BANK0 ] unsigned long 
  9736 ;;  exp1            1   13[BANK0 ] unsigned char 
  9737 ;;  cntr            1   12[BANK0 ] unsigned char 
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  4    1[COMMON] unsigned long 
  9740 ;; Registers used:
  9741 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9747 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9748 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9749 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9750 ;;      Totals:         6      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9751 ;;Total ram usage:       20 bytes
  9752 ;; Hardware stack levels used:    1
  9753 ;; Hardware stack levels required when called:    1
  9754 ;; This function calls:
  9755 ;;		Nothing
  9756 ;; This function is called by:
  9757 ;;		_sprintf
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761                           
  9762                           ;psect for function __div_to_l_
  9763  11FC                     __div_to_l_:	
  9764                           
  9765                           ;incstack = 0
  9766                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  9767  11FC  3071               	movlw	low (__div_to_l_@f1| 0)
  9768  11FD  0086               	movwf	6
  9769  11FE  0187               	clrf	7
  9770  11FF  3F40               	moviw [0]fsr1
  9771  1200  0020               	movlb	0	; select bank0
  9772  1201  00A0               	movwf	??__div_to_l_
  9773  1202  3F41               	moviw [1]fsr1
  9774  1203  00A1               	movwf	??__div_to_l_+1
  9775  1204  3F42               	moviw [2]fsr1
  9776  1205  00A2               	movwf	??__div_to_l_+2
  9777  1206  3F43               	moviw [3]fsr1
  9778  1207  00A3               	movwf	??__div_to_l_+3
  9779  1208  1003               	clrc
  9780  1209  0D22               	rlf	??__div_to_l_+2,w
  9781  120A  0D23               	rlf	??__div_to_l_+3,w
  9782  120B  00A4               	movwf	??__div_to_l_+4
  9783  120C  0824               	movf	??__div_to_l_+4,w
  9784  120D  00AD               	movwf	__div_to_l_@exp1
  9785  120E  082D               	movf	__div_to_l_@exp1,w
  9786  120F  1D03               	btfss	3,2
  9787  1210  2A1A               	goto	l3798
  9788  1211  3000               	movlw	0
  9789  1212  00F4               	movwf	?__div_to_l_+3
  9790  1213  3000               	movlw	0
  9791  1214  00F3               	movwf	?__div_to_l_+2
  9792  1215  3000               	movlw	0
  9793  1216  00F2               	movwf	?__div_to_l_+1
  9794  1217  3000               	movlw	0
  9795  1218  00F1               	movwf	?__div_to_l_
  9796  1219  0008               	return
  9797  121A                     l3798:	
  9798  121A  3074               	movlw	low (__div_to_l_@f2| 0)
  9799  121B  0086               	movwf	6
  9800  121C  0187               	clrf	7
  9801  121D  3F40               	moviw [0]fsr1
  9802  121E  00A0               	movwf	??__div_to_l_
  9803  121F  3F41               	moviw [1]fsr1
  9804  1220  00A1               	movwf	??__div_to_l_+1
  9805  1221  3F42               	moviw [2]fsr1
  9806  1222  00A2               	movwf	??__div_to_l_+2
  9807  1223  3F43               	moviw [3]fsr1
  9808  1224  00A3               	movwf	??__div_to_l_+3
  9809  1225  1003               	clrc
  9810  1226  0D22               	rlf	??__div_to_l_+2,w
  9811  1227  0D23               	rlf	??__div_to_l_+3,w
  9812  1228  00A4               	movwf	??__div_to_l_+4
  9813  1229  0824               	movf	??__div_to_l_+4,w
  9814  122A  00AC               	movwf	__div_to_l_@cntr
  9815  122B  082C               	movf	__div_to_l_@cntr,w
  9816  122C  1D03               	btfss	3,2
  9817  122D  2A37               	goto	l3804
  9818  122E  3000               	movlw	0
  9819  122F  00F4               	movwf	?__div_to_l_+3
  9820  1230  3000               	movlw	0
  9821  1231  00F3               	movwf	?__div_to_l_+2
  9822  1232  3000               	movlw	0
  9823  1233  00F2               	movwf	?__div_to_l_+1
  9824  1234  3000               	movlw	0
  9825  1235  00F1               	movwf	?__div_to_l_
  9826  1236  0008               	return
  9827  1237                     l3804:	
  9828  1237  3071               	movlw	low (__div_to_l_@f1| 0)
  9829  1238  0086               	movwf	6
  9830  1239  0187               	clrf	7
  9831  123A  3000               	movlw	0
  9832  123B  0481               	iorwf	1,f
  9833  123C  3141               	addfsr 1,1
  9834  123D  3000               	movlw	0
  9835  123E  0481               	iorwf	1,f
  9836  123F  3141               	addfsr 1,1
  9837  1240  3080               	movlw	128
  9838  1241  0481               	iorwf	1,f
  9839  1242  3141               	addfsr 1,1
  9840  1243  3000               	movlw	0
  9841  1244  0481               	iorwf	1,f
  9842  1245  3071               	movlw	low (__div_to_l_@f1| 0)
  9843  1246  0086               	movwf	6
  9844  1247  0187               	clrf	7
  9845  1248  30FF               	movlw	255
  9846  1249  0581               	andwf	1,f
  9847  124A  3141               	addfsr 1,1
  9848  124B  30FF               	movlw	255
  9849  124C  0581               	andwf	1,f
  9850  124D  3141               	addfsr 1,1
  9851  124E  30FF               	movlw	255
  9852  124F  0581               	andwf	1,f
  9853  1250  3141               	addfsr 1,1
  9854  1251  3000               	movlw	0
  9855  1252  0581               	andwf	1,f
  9856  1253  3074               	movlw	low (__div_to_l_@f2| 0)
  9857  1254  0086               	movwf	6
  9858  1255  0187               	clrf	7
  9859  1256  3000               	movlw	0
  9860  1257  0481               	iorwf	1,f
  9861  1258  3141               	addfsr 1,1
  9862  1259  3000               	movlw	0
  9863  125A  0481               	iorwf	1,f
  9864  125B  3141               	addfsr 1,1
  9865  125C  3080               	movlw	128
  9866  125D  0481               	iorwf	1,f
  9867  125E  3141               	addfsr 1,1
  9868  125F  3000               	movlw	0
  9869  1260  0481               	iorwf	1,f
  9870  1261  3074               	movlw	low (__div_to_l_@f2| 0)
  9871  1262  0086               	movwf	6
  9872  1263  0187               	clrf	7
  9873  1264  30FF               	movlw	255
  9874  1265  0581               	andwf	1,f
  9875  1266  3141               	addfsr 1,1
  9876  1267  30FF               	movlw	255
  9877  1268  0581               	andwf	1,f
  9878  1269  3141               	addfsr 1,1
  9879  126A  30FF               	movlw	255
  9880  126B  0581               	andwf	1,f
  9881  126C  3141               	addfsr 1,1
  9882  126D  3000               	movlw	0
  9883  126E  0581               	andwf	1,f
  9884  126F  3000               	movlw	0
  9885  1270  00AB               	movwf	__div_to_l_@quot+3
  9886  1271  3000               	movlw	0
  9887  1272  00AA               	movwf	__div_to_l_@quot+2
  9888  1273  3000               	movlw	0
  9889  1274  00A9               	movwf	__div_to_l_@quot+1
  9890  1275  3000               	movlw	0
  9891  1276  00A8               	movwf	__div_to_l_@quot
  9892  1277  307F               	movlw	127
  9893  1278  02AD               	subwf	__div_to_l_@exp1,f
  9894  1279  30A0               	movlw	160
  9895  127A  072C               	addwf	__div_to_l_@cntr,w
  9896  127B  00A0               	movwf	??__div_to_l_
  9897  127C  0820               	movf	??__div_to_l_,w
  9898  127D  02AD               	subwf	__div_to_l_@exp1,f
  9899  127E  3020               	movlw	32
  9900  127F  00A0               	movwf	??__div_to_l_
  9901  1280  0820               	movf	??__div_to_l_,w
  9902  1281  00AC               	movwf	__div_to_l_@cntr
  9903  1282                     l3814:	
  9904  1282  3001               	movlw	1
  9905  1283                     u5895:	
  9906  1283  35A8               	lslf	__div_to_l_@quot,f
  9907  1284  0DA9               	rlf	__div_to_l_@quot+1,f
  9908  1285  0DAA               	rlf	__div_to_l_@quot+2,f
  9909  1286  0DAB               	rlf	__div_to_l_@quot+3,f
  9910  1287  0B89               	decfsz	9,f
  9911  1288  2A83               	goto	u5895
  9912  1289  3074               	movlw	low (__div_to_l_@f2| 0)
  9913  128A  0086               	movwf	6
  9914  128B  0187               	clrf	7
  9915  128C  3F40               	moviw [0]fsr1
  9916  128D  00A0               	movwf	??__div_to_l_
  9917  128E  3F41               	moviw [1]fsr1
  9918  128F  00A1               	movwf	??__div_to_l_+1
  9919  1290  3F42               	moviw [2]fsr1
  9920  1291  00A2               	movwf	??__div_to_l_+2
  9921  1292  3F43               	moviw [3]fsr1
  9922  1293  00A3               	movwf	??__div_to_l_+3
  9923  1294  3071               	movlw	low (__div_to_l_@f1| 0)
  9924  1295  0086               	movwf	6
  9925  1296  0187               	clrf	7
  9926  1297  3F40               	moviw [0]fsr1
  9927  1298  00A4               	movwf	??__div_to_l_+4
  9928  1299  3F41               	moviw [1]fsr1
  9929  129A  00A5               	movwf	??__div_to_l_+5
  9930  129B  3F42               	moviw [2]fsr1
  9931  129C  00A6               	movwf	??__div_to_l_+6
  9932  129D  3F43               	moviw [3]fsr1
  9933  129E  00A7               	movwf	??__div_to_l_+7
  9934  129F  0823               	movf	??__div_to_l_+3,w
  9935  12A0  0227               	subwf	??__div_to_l_+7,w
  9936  12A1  1D03               	skipz
  9937  12A2  2AAD               	goto	u5905
  9938  12A3  0822               	movf	??__div_to_l_+2,w
  9939  12A4  0226               	subwf	??__div_to_l_+6,w
  9940  12A5  1D03               	skipz
  9941  12A6  2AAD               	goto	u5905
  9942  12A7  0821               	movf	??__div_to_l_+1,w
  9943  12A8  0225               	subwf	??__div_to_l_+5,w
  9944  12A9  1D03               	skipz
  9945  12AA  2AAD               	goto	u5905
  9946  12AB  0820               	movf	??__div_to_l_,w
  9947  12AC  0224               	subwf	??__div_to_l_+4,w
  9948  12AD                     u5905:	
  9949  12AD  1C03               	skipc
  9950  12AE  2ACA               	goto	l3822
  9951  12AF  3074               	movlw	low (__div_to_l_@f2| 0)
  9952  12B0  0086               	movwf	6
  9953  12B1  0187               	clrf	7
  9954  12B2  3F40               	moviw [0]fsr1
  9955  12B3  00A0               	movwf	??__div_to_l_
  9956  12B4  3F41               	moviw [1]fsr1
  9957  12B5  00A1               	movwf	??__div_to_l_+1
  9958  12B6  3F42               	moviw [2]fsr1
  9959  12B7  00A2               	movwf	??__div_to_l_+2
  9960  12B8  3F43               	moviw [3]fsr1
  9961  12B9  00A3               	movwf	??__div_to_l_+3
  9962  12BA  3071               	movlw	low (__div_to_l_@f1| 0)
  9963  12BB  0086               	movwf	6
  9964  12BC  0187               	clrf	7
  9965  12BD  0820               	movf	??__div_to_l_,w
  9966  12BE  0281               	subwf	1,f
  9967  12BF  3141               	addfsr 1,1
  9968  12C0  0821               	movf	??__div_to_l_+1,w
  9969  12C1  3B81               	subwfb	1,f
  9970  12C2  3141               	addfsr 1,1
  9971  12C3  0822               	movf	??__div_to_l_+2,w
  9972  12C4  3B81               	subwfb	1,f
  9973  12C5  3141               	addfsr 1,1
  9974  12C6  0823               	movf	??__div_to_l_+3,w
  9975  12C7  3B81               	subwfb	1,f
  9976  12C8  317D               	addfsr 1,-3
  9977  12C9  1428               	bsf	__div_to_l_@quot,0
  9978  12CA                     l3822:	
  9979  12CA  3071               	movlw	low (__div_to_l_@f1| 0)
  9980  12CB  0086               	movwf	6
  9981  12CC  0187               	clrf	7
  9982  12CD  3581               	lslf	1,f
  9983  12CE  3141               	addfsr 1,1
  9984  12CF  0D81               	rlf	1,f
  9985  12D0  3141               	addfsr 1,1
  9986  12D1  0D81               	rlf	1,f
  9987  12D2  3141               	addfsr 1,1
  9988  12D3  0D81               	rlf	1,f
  9989  12D4  317D               	addfsr 1,-3
  9990  12D5  3001               	movlw	1
  9991  12D6  02AC               	subwf	__div_to_l_@cntr,f
  9992  12D7  1D03               	btfss	3,2
  9993  12D8  2A82               	goto	l3814
  9994  12D9  1FAD               	btfss	__div_to_l_@exp1,7
  9995  12DA  2AF7               	goto	l3834
  9996  12DB  082D               	movf	__div_to_l_@exp1,w
  9997  12DC  3A80               	xorlw	128
  9998  12DD  3E9F               	addlw	159
  9999  12DE  1803               	skipnc
 10000  12DF  2AE9               	goto	l3832
 10001  12E0  3000               	movlw	0
 10002  12E1  00F4               	movwf	?__div_to_l_+3
 10003  12E2  3000               	movlw	0
 10004  12E3  00F3               	movwf	?__div_to_l_+2
 10005  12E4  3000               	movlw	0
 10006  12E5  00F2               	movwf	?__div_to_l_+1
 10007  12E6  3000               	movlw	0
 10008  12E7  00F1               	movwf	?__div_to_l_
 10009  12E8  0008               	return
 10010  12E9                     l3832:	
 10011  12E9  3001               	movlw	1
 10012  12EA                     u5945:	
 10013  12EA  36AB               	lsrf	__div_to_l_@quot+3,f
 10014  12EB  0CAA               	rrf	__div_to_l_@quot+2,f
 10015  12EC  0CA9               	rrf	__div_to_l_@quot+1,f
 10016  12ED  0CA8               	rrf	__div_to_l_@quot,f
 10017  12EE  0B89               	decfsz	9,f
 10018  12EF  2AEA               	goto	u5945
 10019  12F0  3001               	movlw	1
 10020  12F1  00A0               	movwf	??__div_to_l_
 10021  12F2  0820               	movf	??__div_to_l_,w
 10022  12F3  07AD               	addwf	__div_to_l_@exp1,f
 10023  12F4  1903               	btfsc	3,2
 10024  12F5  2B10               	goto	l3842
 10025  12F6  2AE9               	goto	l3832
 10026  12F7                     l3834:	
 10027  12F7  3020               	movlw	32
 10028  12F8  022D               	subwf	__div_to_l_@exp1,w
 10029  12F9  1C03               	skipc
 10030  12FA  2B0D               	goto	l607
 10031  12FB  3000               	movlw	0
 10032  12FC  00F4               	movwf	?__div_to_l_+3
 10033  12FD  3000               	movlw	0
 10034  12FE  00F3               	movwf	?__div_to_l_+2
 10035  12FF  3000               	movlw	0
 10036  1300  00F2               	movwf	?__div_to_l_+1
 10037  1301  3000               	movlw	0
 10038  1302  00F1               	movwf	?__div_to_l_
 10039  1303  0008               	return
 10040  1304                     l3840:	
 10041  1304  3001               	movlw	1
 10042  1305                     u5975:	
 10043  1305  35A8               	lslf	__div_to_l_@quot,f
 10044  1306  0DA9               	rlf	__div_to_l_@quot+1,f
 10045  1307  0DAA               	rlf	__div_to_l_@quot+2,f
 10046  1308  0DAB               	rlf	__div_to_l_@quot+3,f
 10047  1309  0B89               	decfsz	9,f
 10048  130A  2B05               	goto	u5975
 10049  130B  3001               	movlw	1
 10050  130C  02AD               	subwf	__div_to_l_@exp1,f
 10051  130D                     l607:	
 10052  130D  082D               	movf	__div_to_l_@exp1,w
 10053  130E  1D03               	btfss	3,2
 10054  130F  2B04               	goto	l3840
 10055  1310                     l3842:	
 10056  1310  082B               	movf	__div_to_l_@quot+3,w
 10057  1311  00F4               	movwf	?__div_to_l_+3
 10058  1312  082A               	movf	__div_to_l_@quot+2,w
 10059  1313  00F3               	movwf	?__div_to_l_+2
 10060  1314  0829               	movf	__div_to_l_@quot+1,w
 10061  1315  00F2               	movwf	?__div_to_l_+1
 10062  1316  0828               	movf	__div_to_l_@quot,w
 10063  1317  00F1               	movwf	?__div_to_l_
 10064  1318  0008               	return
 10065  1319                     __end_of__div_to_l_:	
 10066                           
 10067                           	psect	text13
 10068  1B40                     __ptext13:	
 10069 ;; *************** function ___lltoft *****************
 10070 ;; Defined at:
 10071 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;  c               4    0[BANK0 ] unsigned long 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;  exp             1   10[COMMON] unsigned char 
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  3    0[BANK0 ] float 
 10078 ;; Registers used:
 10079 ;;		wreg, status,2, status,0, pclath, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10085 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10088 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10089 ;;Total ram usage:        6 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    2
 10092 ;; This function calls:
 10093 ;;		___ftpack
 10094 ;; This function is called by:
 10095 ;;		_sprintf
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           
 10100                           ;psect for function ___lltoft
 10101  1B40                     ___lltoft:	
 10102                           
 10103                           ;incstack = 0
 10104                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
 10105  1B40  308E               	movlw	142
 10106  1B41  00F9               	movwf	??___lltoft
 10107  1B42  0879               	movf	??___lltoft,w
 10108  1B43  00FA               	movwf	___lltoft@exp
 10109  1B44                     l3858:	
 10110  1B44  30FF               	movlw	255
 10111  1B45  0020               	movlb	0	; select bank0
 10112  1B46  0523               	andwf	___lltoft@c+3,w
 10113  1B47  1903               	btfsc	3,2
 10114  1B48  2B56               	goto	l3860
 10115  1B49  3001               	movlw	1
 10116  1B4A                     u6005:	
 10117  1B4A  0020               	movlb	0	; select bank0
 10118  1B4B  36A3               	lsrf	___lltoft@c+3,f
 10119  1B4C  0CA2               	rrf	___lltoft@c+2,f
 10120  1B4D  0CA1               	rrf	___lltoft@c+1,f
 10121  1B4E  0CA0               	rrf	___lltoft@c,f
 10122  1B4F  0B89               	decfsz	9,f
 10123  1B50  2B4A               	goto	u6005
 10124  1B51  3001               	movlw	1
 10125  1B52  00F9               	movwf	??___lltoft
 10126  1B53  0879               	movf	??___lltoft,w
 10127  1B54  07FA               	addwf	___lltoft@exp,f
 10128  1B55  2B44               	goto	l3858
 10129  1B56                     l3860:	
 10130  1B56  0820               	movf	___lltoft@c,w
 10131  1B57  00F1               	movwf	___ftpack@arg
 10132  1B58  0821               	movf	___lltoft@c+1,w
 10133  1B59  00F2               	movwf	___ftpack@arg+1
 10134  1B5A  0822               	movf	___lltoft@c+2,w
 10135  1B5B  00F3               	movwf	___ftpack@arg+2
 10136  1B5C  087A               	movf	___lltoft@exp,w
 10137  1B5D  00F9               	movwf	??___lltoft
 10138  1B5E  0879               	movf	??___lltoft,w
 10139  1B5F  00F4               	movwf	___ftpack@exp
 10140  1B60  01F5               	clrf	___ftpack@sign
 10141  1B61  319D  2516         	fcall	___ftpack
 10142  1B63  0871               	movf	?___ftpack,w
 10143  1B64  0020               	movlb	0	; select bank0
 10144  1B65  00A0               	movwf	?___lltoft
 10145  1B66  0872               	movf	?___ftpack+1,w
 10146  1B67  00A1               	movwf	?___lltoft+1
 10147  1B68  0873               	movf	?___ftpack+2,w
 10148  1B69  00A2               	movwf	?___lltoft+2
 10149  1B6A  0008               	return
 10150  1B6B                     __end_of___lltoft:	
 10151                           
 10152                           	psect	text14
 10153  1BDA                     __ptext14:	
 10154 ;; *************** function ___llmod *****************
 10155 ;; Defined at:
 10156 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;  divisor         4    5[BANK0 ] unsigned long 
 10159 ;;  dividend        4    9[BANK0 ] unsigned long 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;  counter         1   11[COMMON] unsigned char 
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  4    5[BANK0 ] unsigned long 
 10164 ;; Registers used:
 10165 ;;		wreg, status,2, status,0
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10171 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10174 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10175 ;;Total ram usage:       10 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:    1
 10178 ;; This function calls:
 10179 ;;		Nothing
 10180 ;; This function is called by:
 10181 ;;		_sprintf
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           
 10186                           ;psect for function ___llmod
 10187  1BDA                     ___llmod:	
 10188                           
 10189                           ;incstack = 0
 10190                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 10191  1BDA  0020               	movlb	0	; select bank0
 10192  1BDB  0828               	movf	___llmod@divisor+3,w
 10193  1BDC  0427               	iorwf	___llmod@divisor+2,w
 10194  1BDD  0426               	iorwf	___llmod@divisor+1,w
 10195  1BDE  0425               	iorwf	___llmod@divisor,w
 10196  1BDF  1903               	skipnz
 10197  1BE0  2C14               	goto	l2894
 10198  1BE1  01FB               	clrf	___llmod@counter
 10199  1BE2  0AFB               	incf	___llmod@counter,f
 10200  1BE3                     l2884:	
 10201  1BE3  1BA8               	btfsc	___llmod@divisor+3,7
 10202  1BE4  2BF1               	goto	l2886
 10203  1BE5  3001               	movlw	1
 10204  1BE6                     u4275:	
 10205  1BE6  35A5               	lslf	___llmod@divisor,f
 10206  1BE7  0DA6               	rlf	___llmod@divisor+1,f
 10207  1BE8  0DA7               	rlf	___llmod@divisor+2,f
 10208  1BE9  0DA8               	rlf	___llmod@divisor+3,f
 10209  1BEA  0B89               	decfsz	9,f
 10210  1BEB  2BE6               	goto	u4275
 10211  1BEC  3001               	movlw	1
 10212  1BED  00FA               	movwf	??___llmod
 10213  1BEE  087A               	movf	??___llmod,w
 10214  1BEF  07FB               	addwf	___llmod@counter,f
 10215  1BF0  2BE3               	goto	l2884
 10216  1BF1                     l2886:	
 10217  1BF1  0828               	movf	___llmod@divisor+3,w
 10218  1BF2  022C               	subwf	___llmod@dividend+3,w
 10219  1BF3  1D03               	skipz
 10220  1BF4  2BFF               	goto	u4295
 10221  1BF5  0827               	movf	___llmod@divisor+2,w
 10222  1BF6  022B               	subwf	___llmod@dividend+2,w
 10223  1BF7  1D03               	skipz
 10224  1BF8  2BFF               	goto	u4295
 10225  1BF9  0826               	movf	___llmod@divisor+1,w
 10226  1BFA  022A               	subwf	___llmod@dividend+1,w
 10227  1BFB  1D03               	skipz
 10228  1BFC  2BFF               	goto	u4295
 10229  1BFD  0825               	movf	___llmod@divisor,w
 10230  1BFE  0229               	subwf	___llmod@dividend,w
 10231  1BFF                     u4295:	
 10232  1BFF  1C03               	skipc
 10233  1C00  2C09               	goto	l2890
 10234  1C01  0825               	movf	___llmod@divisor,w
 10235  1C02  02A9               	subwf	___llmod@dividend,f
 10236  1C03  0826               	movf	___llmod@divisor+1,w
 10237  1C04  3BAA               	subwfb	___llmod@dividend+1,f
 10238  1C05  0827               	movf	___llmod@divisor+2,w
 10239  1C06  3BAB               	subwfb	___llmod@dividend+2,f
 10240  1C07  0828               	movf	___llmod@divisor+3,w
 10241  1C08  3BAC               	subwfb	___llmod@dividend+3,f
 10242  1C09                     l2890:	
 10243  1C09  3001               	movlw	1
 10244  1C0A                     u4305:	
 10245  1C0A  36A8               	lsrf	___llmod@divisor+3,f
 10246  1C0B  0CA7               	rrf	___llmod@divisor+2,f
 10247  1C0C  0CA6               	rrf	___llmod@divisor+1,f
 10248  1C0D  0CA5               	rrf	___llmod@divisor,f
 10249  1C0E  0B89               	decfsz	9,f
 10250  1C0F  2C0A               	goto	u4305
 10251  1C10  3001               	movlw	1
 10252  1C11  02FB               	subwf	___llmod@counter,f
 10253  1C12  1D03               	btfss	3,2
 10254  1C13  2BF1               	goto	l2886
 10255  1C14                     l2894:	
 10256  1C14  082C               	movf	___llmod@dividend+3,w
 10257  1C15  00A8               	movwf	?___llmod+3
 10258  1C16  082B               	movf	___llmod@dividend+2,w
 10259  1C17  00A7               	movwf	?___llmod+2
 10260  1C18  082A               	movf	___llmod@dividend+1,w
 10261  1C19  00A6               	movwf	?___llmod+1
 10262  1C1A  0829               	movf	___llmod@dividend,w
 10263  1C1B  00A5               	movwf	?___llmod
 10264  1C1C  0008               	return
 10265  1C1D                     __end_of___llmod:	
 10266                           
 10267                           	psect	text15
 10268  0E48                     __ptext15:	
 10269 ;; *************** function ___lldiv *****************
 10270 ;; Defined at:
 10271 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;  divisor         4    1[COMMON] unsigned long 
 10274 ;;  dividend        4    5[COMMON] unsigned long 
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;  quotient        4    0[BANK0 ] unsigned long 
 10277 ;;  counter         1    4[BANK0 ] unsigned char 
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  4    1[COMMON] unsigned long 
 10280 ;; Registers used:
 10281 ;;		wreg, status,2, status,0
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10287 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10288 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10289 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10290 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10291 ;;Total ram usage:       14 bytes
 10292 ;; Hardware stack levels used:    1
 10293 ;; Hardware stack levels required when called:    1
 10294 ;; This function calls:
 10295 ;;		Nothing
 10296 ;; This function is called by:
 10297 ;;		_sprintf
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300                           
 10301                           
 10302                           ;psect for function ___lldiv
 10303  0E48                     ___lldiv:	
 10304                           
 10305                           ;incstack = 0
 10306                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10307  0E48  3000               	movlw	0
 10308  0E49  0020               	movlb	0	; select bank0
 10309  0E4A  00A3               	movwf	___lldiv@quotient+3
 10310  0E4B  3000               	movlw	0
 10311  0E4C  00A2               	movwf	___lldiv@quotient+2
 10312  0E4D  3000               	movlw	0
 10313  0E4E  00A1               	movwf	___lldiv@quotient+1
 10314  0E4F  3000               	movlw	0
 10315  0E50  00A0               	movwf	___lldiv@quotient
 10316  0E51  0874               	movf	___lldiv@divisor+3,w
 10317  0E52  0473               	iorwf	___lldiv@divisor+2,w
 10318  0E53  0472               	iorwf	___lldiv@divisor+1,w
 10319  0E54  0471               	iorwf	___lldiv@divisor,w
 10320  0E55  1903               	skipnz
 10321  0E56  2E92               	goto	l2874
 10322  0E57  01A4               	clrf	___lldiv@counter
 10323  0E58  0AA4               	incf	___lldiv@counter,f
 10324  0E59                     l2860:	
 10325  0E59  1BF4               	btfsc	___lldiv@divisor+3,7
 10326  0E5A  2E67               	goto	l2862
 10327  0E5B  3001               	movlw	1
 10328  0E5C                     u4205:	
 10329  0E5C  35F1               	lslf	___lldiv@divisor,f
 10330  0E5D  0DF2               	rlf	___lldiv@divisor+1,f
 10331  0E5E  0DF3               	rlf	___lldiv@divisor+2,f
 10332  0E5F  0DF4               	rlf	___lldiv@divisor+3,f
 10333  0E60  0B89               	decfsz	9,f
 10334  0E61  2E5C               	goto	u4205
 10335  0E62  3001               	movlw	1
 10336  0E63  00F9               	movwf	??___lldiv
 10337  0E64  0879               	movf	??___lldiv,w
 10338  0E65  07A4               	addwf	___lldiv@counter,f
 10339  0E66  2E59               	goto	l2860
 10340  0E67                     l2862:	
 10341  0E67  3001               	movlw	1
 10342  0E68                     u4225:	
 10343  0E68  35A0               	lslf	___lldiv@quotient,f
 10344  0E69  0DA1               	rlf	___lldiv@quotient+1,f
 10345  0E6A  0DA2               	rlf	___lldiv@quotient+2,f
 10346  0E6B  0DA3               	rlf	___lldiv@quotient+3,f
 10347  0E6C  0B89               	decfsz	9,f
 10348  0E6D  2E68               	goto	u4225
 10349  0E6E  0874               	movf	___lldiv@divisor+3,w
 10350  0E6F  0278               	subwf	___lldiv@dividend+3,w
 10351  0E70  1D03               	skipz
 10352  0E71  2E7C               	goto	u4235
 10353  0E72  0873               	movf	___lldiv@divisor+2,w
 10354  0E73  0277               	subwf	___lldiv@dividend+2,w
 10355  0E74  1D03               	skipz
 10356  0E75  2E7C               	goto	u4235
 10357  0E76  0872               	movf	___lldiv@divisor+1,w
 10358  0E77  0276               	subwf	___lldiv@dividend+1,w
 10359  0E78  1D03               	skipz
 10360  0E79  2E7C               	goto	u4235
 10361  0E7A  0871               	movf	___lldiv@divisor,w
 10362  0E7B  0275               	subwf	___lldiv@dividend,w
 10363  0E7C                     u4235:	
 10364  0E7C  1C03               	skipc
 10365  0E7D  2E87               	goto	l2870
 10366  0E7E  0871               	movf	___lldiv@divisor,w
 10367  0E7F  02F5               	subwf	___lldiv@dividend,f
 10368  0E80  0872               	movf	___lldiv@divisor+1,w
 10369  0E81  3BF6               	subwfb	___lldiv@dividend+1,f
 10370  0E82  0873               	movf	___lldiv@divisor+2,w
 10371  0E83  3BF7               	subwfb	___lldiv@dividend+2,f
 10372  0E84  0874               	movf	___lldiv@divisor+3,w
 10373  0E85  3BF8               	subwfb	___lldiv@dividend+3,f
 10374  0E86  1420               	bsf	___lldiv@quotient,0
 10375  0E87                     l2870:	
 10376  0E87  3001               	movlw	1
 10377  0E88                     u4245:	
 10378  0E88  36F4               	lsrf	___lldiv@divisor+3,f
 10379  0E89  0CF3               	rrf	___lldiv@divisor+2,f
 10380  0E8A  0CF2               	rrf	___lldiv@divisor+1,f
 10381  0E8B  0CF1               	rrf	___lldiv@divisor,f
 10382  0E8C  0B89               	decfsz	9,f
 10383  0E8D  2E88               	goto	u4245
 10384  0E8E  3001               	movlw	1
 10385  0E8F  02A4               	subwf	___lldiv@counter,f
 10386  0E90  1D03               	btfss	3,2
 10387  0E91  2E67               	goto	l2862
 10388  0E92                     l2874:	
 10389  0E92  0823               	movf	___lldiv@quotient+3,w
 10390  0E93  00F4               	movwf	?___lldiv+3
 10391  0E94  0822               	movf	___lldiv@quotient+2,w
 10392  0E95  00F3               	movwf	?___lldiv+2
 10393  0E96  0821               	movf	___lldiv@quotient+1,w
 10394  0E97  00F2               	movwf	?___lldiv+1
 10395  0E98  0820               	movf	___lldiv@quotient,w
 10396  0E99  00F1               	movwf	?___lldiv
 10397  0E9A  0008               	return
 10398  0E9B                     __end_of___lldiv:	
 10399                           
 10400                           	psect	text16
 10401  1D7A                     __ptext16:	
 10402 ;; *************** function ___fttol *****************
 10403 ;; Defined at:
 10404 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  f1              3   36[BANK0 ] float 
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;  lval            4   45[BANK0 ] unsigned long 
 10409 ;;  exp1            1   49[BANK0 ] unsigned char 
 10410 ;;  sign1           1   44[BANK0 ] unsigned char 
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  4   36[BANK0 ] long 
 10413 ;; Registers used:
 10414 ;;		wreg, status,2, status,0
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10420 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10421 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10422 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10423 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10424 ;;Total ram usage:       14 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; Hardware stack levels required when called:    1
 10427 ;; This function calls:
 10428 ;;		Nothing
 10429 ;; This function is called by:
 10430 ;;		_sprintf
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           
 10435                           ;psect for function ___fttol
 10436  1D7A                     ___fttol:	
 10437                           
 10438                           ;incstack = 0
 10439                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10440  1D7A  0020               	movlb	0	; select bank0
 10441  1D7B  0844               	movf	___fttol@f1,w
 10442  1D7C  00C8               	movwf	??___fttol
 10443  1D7D  0845               	movf	___fttol@f1+1,w
 10444  1D7E  00C9               	movwf	??___fttol+1
 10445  1D7F  0846               	movf	___fttol@f1+2,w
 10446  1D80  00CA               	movwf	??___fttol+2
 10447  1D81  1003               	clrc
 10448  1D82  0D49               	rlf	??___fttol+1,w
 10449  1D83  0D4A               	rlf	??___fttol+2,w
 10450  1D84  00CB               	movwf	??___fttol+3
 10451  1D85  084B               	movf	??___fttol+3,w
 10452  1D86  00D1               	movwf	___fttol@exp1
 10453  1D87  0851               	movf	___fttol@exp1,w
 10454  1D88  1D03               	btfss	3,2
 10455  1D89  2D93               	goto	l2818
 10456  1D8A  3000               	movlw	0
 10457  1D8B  00C7               	movwf	?___fttol+3
 10458  1D8C  3000               	movlw	0
 10459  1D8D  00C6               	movwf	?___fttol+2
 10460  1D8E  3000               	movlw	0
 10461  1D8F  00C5               	movwf	?___fttol+1
 10462  1D90  3000               	movlw	0
 10463  1D91  00C4               	movwf	?___fttol
 10464  1D92  0008               	return
 10465  1D93                     l2818:	
 10466  1D93  0844               	movf	___fttol@f1,w
 10467  1D94  00C8               	movwf	??___fttol
 10468  1D95  0845               	movf	___fttol@f1+1,w
 10469  1D96  00C9               	movwf	??___fttol+1
 10470  1D97  0846               	movf	___fttol@f1+2,w
 10471  1D98  00CA               	movwf	??___fttol+2
 10472  1D99  3017               	movlw	23
 10473  1D9A                     u4105:	
 10474  1D9A  36CA               	lsrf	??___fttol+2,f
 10475  1D9B  0CC9               	rrf	??___fttol+1,f
 10476  1D9C  0CC8               	rrf	??___fttol,f
 10477  1D9D  0B89               	decfsz	9,f
 10478  1D9E  2D9A               	goto	u4105
 10479  1D9F  0848               	movf	??___fttol,w
 10480  1DA0  00CB               	movwf	??___fttol+3
 10481  1DA1  084B               	movf	??___fttol+3,w
 10482  1DA2  00CC               	movwf	___fttol@sign1
 10483  1DA3  17C5               	bsf	___fttol@f1+1,7
 10484  1DA4  30FF               	movlw	255
 10485  1DA5  05C4               	andwf	___fttol@f1,f
 10486  1DA6  30FF               	movlw	255
 10487  1DA7  05C5               	andwf	___fttol@f1+1,f
 10488  1DA8  3000               	movlw	0
 10489  1DA9  05C6               	andwf	___fttol@f1+2,f
 10490  1DAA  0844               	movf	___fttol@f1,w
 10491  1DAB  00CD               	movwf	___fttol@lval
 10492  1DAC  0845               	movf	___fttol@f1+1,w
 10493  1DAD  00CE               	movwf	___fttol@lval+1
 10494  1DAE  0846               	movf	___fttol@f1+2,w
 10495  1DAF  00CF               	movwf	___fttol@lval+2
 10496  1DB0  01D0               	clrf	___fttol@lval+3
 10497  1DB1  308E               	movlw	142
 10498  1DB2  02D1               	subwf	___fttol@exp1,f
 10499  1DB3  1FD1               	btfss	___fttol@exp1,7
 10500  1DB4  2DD1               	goto	l2838
 10501  1DB5  0851               	movf	___fttol@exp1,w
 10502  1DB6  3A80               	xorlw	128
 10503  1DB7  3E8F               	addlw	143
 10504  1DB8  1803               	skipnc
 10505  1DB9  2DC3               	goto	l2836
 10506  1DBA  3000               	movlw	0
 10507  1DBB  00C7               	movwf	?___fttol+3
 10508  1DBC  3000               	movlw	0
 10509  1DBD  00C6               	movwf	?___fttol+2
 10510  1DBE  3000               	movlw	0
 10511  1DBF  00C5               	movwf	?___fttol+1
 10512  1DC0  3000               	movlw	0
 10513  1DC1  00C4               	movwf	?___fttol
 10514  1DC2  0008               	return
 10515  1DC3                     l2836:	
 10516  1DC3  3001               	movlw	1
 10517  1DC4                     u4135:	
 10518  1DC4  36D0               	lsrf	___fttol@lval+3,f
 10519  1DC5  0CCF               	rrf	___fttol@lval+2,f
 10520  1DC6  0CCE               	rrf	___fttol@lval+1,f
 10521  1DC7  0CCD               	rrf	___fttol@lval,f
 10522  1DC8  0B89               	decfsz	9,f
 10523  1DC9  2DC4               	goto	u4135
 10524  1DCA  3001               	movlw	1
 10525  1DCB  00C8               	movwf	??___fttol
 10526  1DCC  0848               	movf	??___fttol,w
 10527  1DCD  07D1               	addwf	___fttol@exp1,f
 10528  1DCE  1903               	btfsc	3,2
 10529  1DCF  2DEA               	goto	l2846
 10530  1DD0  2DC3               	goto	l2836
 10531  1DD1                     l2838:	
 10532  1DD1  3018               	movlw	24
 10533  1DD2  0251               	subwf	___fttol@exp1,w
 10534  1DD3  1C03               	skipc
 10535  1DD4  2DE7               	goto	l727
 10536  1DD5  3000               	movlw	0
 10537  1DD6  00C7               	movwf	?___fttol+3
 10538  1DD7  3000               	movlw	0
 10539  1DD8  00C6               	movwf	?___fttol+2
 10540  1DD9  3000               	movlw	0
 10541  1DDA  00C5               	movwf	?___fttol+1
 10542  1DDB  3000               	movlw	0
 10543  1DDC  00C4               	movwf	?___fttol
 10544  1DDD  0008               	return
 10545  1DDE                     l2844:	
 10546  1DDE  3001               	movlw	1
 10547  1DDF                     u4165:	
 10548  1DDF  35CD               	lslf	___fttol@lval,f
 10549  1DE0  0DCE               	rlf	___fttol@lval+1,f
 10550  1DE1  0DCF               	rlf	___fttol@lval+2,f
 10551  1DE2  0DD0               	rlf	___fttol@lval+3,f
 10552  1DE3  0B89               	decfsz	9,f
 10553  1DE4  2DDF               	goto	u4165
 10554  1DE5  3001               	movlw	1
 10555  1DE6  02D1               	subwf	___fttol@exp1,f
 10556  1DE7                     l727:	
 10557  1DE7  0851               	movf	___fttol@exp1,w
 10558  1DE8  1D03               	btfss	3,2
 10559  1DE9  2DDE               	goto	l2844
 10560  1DEA                     l2846:	
 10561  1DEA  084C               	movf	___fttol@sign1,w
 10562  1DEB  1903               	btfsc	3,2
 10563  1DEC  2DF8               	goto	l2850
 10564  1DED  09CD               	comf	___fttol@lval,f
 10565  1DEE  09CE               	comf	___fttol@lval+1,f
 10566  1DEF  09CF               	comf	___fttol@lval+2,f
 10567  1DF0  09D0               	comf	___fttol@lval+3,f
 10568  1DF1  0ACD               	incf	___fttol@lval,f
 10569  1DF2  1903               	skipnz
 10570  1DF3  0ACE               	incf	___fttol@lval+1,f
 10571  1DF4  1903               	skipnz
 10572  1DF5  0ACF               	incf	___fttol@lval+2,f
 10573  1DF6  1903               	skipnz
 10574  1DF7  0AD0               	incf	___fttol@lval+3,f
 10575  1DF8                     l2850:	
 10576  1DF8  0850               	movf	___fttol@lval+3,w
 10577  1DF9  00C7               	movwf	?___fttol+3
 10578  1DFA  084F               	movf	___fttol@lval+2,w
 10579  1DFB  00C6               	movwf	?___fttol+2
 10580  1DFC  084E               	movf	___fttol@lval+1,w
 10581  1DFD  00C5               	movwf	?___fttol+1
 10582  1DFE  084D               	movf	___fttol@lval,w
 10583  1DFF  00C4               	movwf	?___fttol
 10584  1E00  0008               	return
 10585  1E01                     __end_of___fttol:	
 10586                           
 10587                           	psect	text17
 10588  1ADB                     __ptext17:	
 10589 ;; *************** function ___ftsub *****************
 10590 ;; Defined at:
 10591 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;  f2              3   54[BANK0 ] float 
 10594 ;;  f1              3   57[BANK0 ] float 
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;		None
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  3   54[BANK0 ] float 
 10599 ;; Registers used:
 10600 ;;		wreg, status,2, status,0, pclath, cstack
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10606 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10609 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10610 ;;Total ram usage:        6 bytes
 10611 ;; Hardware stack levels used:    1
 10612 ;; Hardware stack levels required when called:    3
 10613 ;; This function calls:
 10614 ;;		___ftadd
 10615 ;; This function is called by:
 10616 ;;		_sprintf
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           
 10621                           ;psect for function ___ftsub
 10622  1ADB                     ___ftsub:	
 10623                           
 10624                           ;incstack = 0
 10625                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
 10626  1ADB  0020               	movlb	0	; select bank0
 10627  1ADC  0858               	movf	___ftsub@f2+2,w
 10628  1ADD  0457               	iorwf	___ftsub@f2+1,w
 10629  1ADE  0456               	iorwf	___ftsub@f2,w
 10630  1ADF  1903               	skipnz
 10631  1AE0  2AE3               	goto	l3850
 10632  1AE1  3080               	movlw	128
 10633  1AE2  06D8               	xorwf	___ftsub@f2+2,f
 10634  1AE3                     l3850:	
 10635  1AE3  0859               	movf	___ftsub@f1,w
 10636  1AE4  00C9               	movwf	___ftadd@f1
 10637  1AE5  085A               	movf	___ftsub@f1+1,w
 10638  1AE6  00CA               	movwf	___ftadd@f1+1
 10639  1AE7  085B               	movf	___ftsub@f1+2,w
 10640  1AE8  00CB               	movwf	___ftadd@f1+2
 10641  1AE9  0856               	movf	___ftsub@f2,w
 10642  1AEA  00CC               	movwf	___ftadd@f2
 10643  1AEB  0857               	movf	___ftsub@f2+1,w
 10644  1AEC  00CD               	movwf	___ftadd@f2+1
 10645  1AED  0858               	movf	___ftsub@f2+2,w
 10646  1AEE  00CE               	movwf	___ftadd@f2+2
 10647  1AEF  3191  2106         	fcall	___ftadd
 10648  1AF1  0020               	movlb	0	; select bank0
 10649  1AF2  0849               	movf	?___ftadd,w
 10650  1AF3  00D6               	movwf	?___ftsub
 10651  1AF4  084A               	movf	?___ftadd+1,w
 10652  1AF5  00D7               	movwf	?___ftsub+1
 10653  1AF6  084B               	movf	?___ftadd+2,w
 10654  1AF7  00D8               	movwf	?___ftsub+2
 10655  1AF8  0008               	return
 10656  1AF9                     __end_of___ftsub:	
 10657                           
 10658                           	psect	text18
 10659  1106                     __ptext18:	
 10660 ;; *************** function ___ftadd *****************
 10661 ;; Defined at:
 10662 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;  f1              3   41[BANK0 ] float 
 10665 ;;  f2              3   44[BANK0 ] float 
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;  exp1            1   53[BANK0 ] unsigned char 
 10668 ;;  exp2            1   52[BANK0 ] unsigned char 
 10669 ;;  sign            1   51[BANK0 ] unsigned char 
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  3   41[BANK0 ] float 
 10672 ;; Registers used:
 10673 ;;		wreg, status,2, status,0, pclath, cstack
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10679 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10680 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10681 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10682 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10683 ;;Total ram usage:       13 bytes
 10684 ;; Hardware stack levels used:    1
 10685 ;; Hardware stack levels required when called:    2
 10686 ;; This function calls:
 10687 ;;		___ftpack
 10688 ;; This function is called by:
 10689 ;;		_sprintf
 10690 ;;		___ftsub
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           
 10695                           ;psect for function ___ftadd
 10696  1106                     ___ftadd:	
 10697                           
 10698                           ;incstack = 0
 10699                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 10700  1106  0020               	movlb	0	; select bank0
 10701  1107  0849               	movf	___ftadd@f1,w
 10702  1108  00CF               	movwf	??___ftadd
 10703  1109  084A               	movf	___ftadd@f1+1,w
 10704  110A  00D0               	movwf	??___ftadd+1
 10705  110B  084B               	movf	___ftadd@f1+2,w
 10706  110C  00D1               	movwf	??___ftadd+2
 10707  110D  1003               	clrc
 10708  110E  0D50               	rlf	??___ftadd+1,w
 10709  110F  0D51               	rlf	??___ftadd+2,w
 10710  1110  00D2               	movwf	??___ftadd+3
 10711  1111  0852               	movf	??___ftadd+3,w
 10712  1112  00D5               	movwf	___ftadd@exp1
 10713  1113  084C               	movf	___ftadd@f2,w
 10714  1114  00CF               	movwf	??___ftadd
 10715  1115  084D               	movf	___ftadd@f2+1,w
 10716  1116  00D0               	movwf	??___ftadd+1
 10717  1117  084E               	movf	___ftadd@f2+2,w
 10718  1118  00D1               	movwf	??___ftadd+2
 10719  1119  1003               	clrc
 10720  111A  0D50               	rlf	??___ftadd+1,w
 10721  111B  0D51               	rlf	??___ftadd+2,w
 10722  111C  00D2               	movwf	??___ftadd+3
 10723  111D  0852               	movf	??___ftadd+3,w
 10724  111E  00D4               	movwf	___ftadd@exp2
 10725  111F  0855               	movf	___ftadd@exp1,w
 10726  1120  1903               	btfsc	3,2
 10727  1121  292E               	goto	l3616
 10728  1122  0854               	movf	___ftadd@exp2,w
 10729  1123  0255               	subwf	___ftadd@exp1,w
 10730  1124  1803               	skipnc
 10731  1125  2935               	goto	l3620
 10732  1126  0355               	decf	___ftadd@exp1,w
 10733  1127  3AFF               	xorlw	255
 10734  1128  0754               	addwf	___ftadd@exp2,w
 10735  1129  00CF               	movwf	??___ftadd
 10736  112A  3019               	movlw	25
 10737  112B  024F               	subwf	??___ftadd,w
 10738  112C  1C03               	skipc
 10739  112D  2935               	goto	l3620
 10740  112E                     l3616:	
 10741  112E  084C               	movf	___ftadd@f2,w
 10742  112F  00C9               	movwf	?___ftadd
 10743  1130  084D               	movf	___ftadd@f2+1,w
 10744  1131  00CA               	movwf	?___ftadd+1
 10745  1132  084E               	movf	___ftadd@f2+2,w
 10746  1133  00CB               	movwf	?___ftadd+2
 10747  1134  0008               	return
 10748  1135                     l3620:	
 10749  1135  0854               	movf	___ftadd@exp2,w
 10750  1136  1903               	btfsc	3,2
 10751  1137  0008               	return
 10752  1138  0855               	movf	___ftadd@exp1,w
 10753  1139  0254               	subwf	___ftadd@exp2,w
 10754  113A  1803               	skipnc
 10755  113B  2944               	goto	l3626
 10756  113C  0354               	decf	___ftadd@exp2,w
 10757  113D  3AFF               	xorlw	255
 10758  113E  0755               	addwf	___ftadd@exp1,w
 10759  113F  00CF               	movwf	??___ftadd
 10760  1140  3019               	movlw	25
 10761  1141  024F               	subwf	??___ftadd,w
 10762  1142  1803               	btfsc	3,0
 10763  1143  0008               	return
 10764  1144                     l3626:	
 10765  1144  3006               	movlw	6
 10766  1145  00CF               	movwf	??___ftadd
 10767  1146  084F               	movf	??___ftadd,w
 10768  1147  00D3               	movwf	___ftadd@sign
 10769  1148  1BCB               	btfsc	___ftadd@f1+2,7
 10770  1149  17D3               	bsf	___ftadd@sign,7
 10771  114A  1BCE               	btfsc	___ftadd@f2+2,7
 10772  114B  1753               	bsf	___ftadd@sign,6
 10773  114C  17CA               	bsf	___ftadd@f1+1,7
 10774  114D  30FF               	movlw	255
 10775  114E  05C9               	andwf	___ftadd@f1,f
 10776  114F  30FF               	movlw	255
 10777  1150  05CA               	andwf	___ftadd@f1+1,f
 10778  1151  3000               	movlw	0
 10779  1152  05CB               	andwf	___ftadd@f1+2,f
 10780  1153  17CD               	bsf	___ftadd@f2+1,7
 10781  1154  30FF               	movlw	255
 10782  1155  05CC               	andwf	___ftadd@f2,f
 10783  1156  30FF               	movlw	255
 10784  1157  05CD               	andwf	___ftadd@f2+1,f
 10785  1158  3000               	movlw	0
 10786  1159  05CE               	andwf	___ftadd@f2+2,f
 10787  115A  0854               	movf	___ftadd@exp2,w
 10788  115B  0255               	subwf	___ftadd@exp1,w
 10789  115C  1803               	skipnc
 10790  115D  2980               	goto	l3648
 10791  115E                     l3638:	
 10792  115E  3001               	movlw	1
 10793  115F                     u5545:	
 10794  115F  35CC               	lslf	___ftadd@f2,f
 10795  1160  0DCD               	rlf	___ftadd@f2+1,f
 10796  1161  0DCE               	rlf	___ftadd@f2+2,f
 10797  1162  0B89               	decfsz	9,f
 10798  1163  295F               	goto	u5545
 10799  1164  3001               	movlw	1
 10800  1165  02D4               	subwf	___ftadd@exp2,f
 10801  1166  0854               	movf	___ftadd@exp2,w
 10802  1167  0655               	xorwf	___ftadd@exp1,w
 10803  1168  1903               	skipnz
 10804  1169  297B               	goto	l3646
 10805  116A  3001               	movlw	1
 10806  116B  02D3               	subwf	___ftadd@sign,f
 10807  116C  0853               	movf	___ftadd@sign,w
 10808  116D  3907               	andlw	7
 10809  116E  1903               	btfsc	3,2
 10810  116F  297B               	goto	l3646
 10811  1170  295E               	goto	l3638
 10812  1171                     l3644:	
 10813  1171  3001               	movlw	1
 10814  1172                     u5575:	
 10815  1172  36CB               	lsrf	___ftadd@f1+2,f
 10816  1173  0CCA               	rrf	___ftadd@f1+1,f
 10817  1174  0CC9               	rrf	___ftadd@f1,f
 10818  1175  0B89               	decfsz	9,f
 10819  1176  2972               	goto	u5575
 10820  1177  3001               	movlw	1
 10821  1178  00CF               	movwf	??___ftadd
 10822  1179  084F               	movf	??___ftadd,w
 10823  117A  07D5               	addwf	___ftadd@exp1,f
 10824  117B                     l3646:	
 10825  117B  0855               	movf	___ftadd@exp1,w
 10826  117C  0654               	xorwf	___ftadd@exp2,w
 10827  117D  1903               	btfsc	3,2
 10828  117E  29A5               	goto	l650
 10829  117F  2971               	goto	l3644
 10830  1180                     l3648:	
 10831  1180  0855               	movf	___ftadd@exp1,w
 10832  1181  0254               	subwf	___ftadd@exp2,w
 10833  1182  1803               	skipnc
 10834  1183  29A5               	goto	l650
 10835  1184                     l3650:	
 10836  1184  3001               	movlw	1
 10837  1185                     u5605:	
 10838  1185  35C9               	lslf	___ftadd@f1,f
 10839  1186  0DCA               	rlf	___ftadd@f1+1,f
 10840  1187  0DCB               	rlf	___ftadd@f1+2,f
 10841  1188  0B89               	decfsz	9,f
 10842  1189  2985               	goto	u5605
 10843  118A  3001               	movlw	1
 10844  118B  02D5               	subwf	___ftadd@exp1,f
 10845  118C  0854               	movf	___ftadd@exp2,w
 10846  118D  0655               	xorwf	___ftadd@exp1,w
 10847  118E  1903               	skipnz
 10848  118F  29A1               	goto	l3658
 10849  1190  3001               	movlw	1
 10850  1191  02D3               	subwf	___ftadd@sign,f
 10851  1192  0853               	movf	___ftadd@sign,w
 10852  1193  3907               	andlw	7
 10853  1194  1903               	btfsc	3,2
 10854  1195  29A1               	goto	l3658
 10855  1196  2984               	goto	l3650
 10856  1197                     l3656:	
 10857  1197  3001               	movlw	1
 10858  1198                     u5635:	
 10859  1198  36CE               	lsrf	___ftadd@f2+2,f
 10860  1199  0CCD               	rrf	___ftadd@f2+1,f
 10861  119A  0CCC               	rrf	___ftadd@f2,f
 10862  119B  0B89               	decfsz	9,f
 10863  119C  2998               	goto	u5635
 10864  119D  3001               	movlw	1
 10865  119E  00CF               	movwf	??___ftadd
 10866  119F  084F               	movf	??___ftadd,w
 10867  11A0  07D4               	addwf	___ftadd@exp2,f
 10868  11A1                     l3658:	
 10869  11A1  0855               	movf	___ftadd@exp1,w
 10870  11A2  0654               	xorwf	___ftadd@exp2,w
 10871  11A3  1D03               	skipz
 10872  11A4  2997               	goto	l3656
 10873  11A5                     l650:	
 10874  11A5  1FD3               	btfss	___ftadd@sign,7
 10875  11A6  29B7               	goto	l3662
 10876  11A7  30FF               	movlw	255
 10877  11A8  06C9               	xorwf	___ftadd@f1,f
 10878  11A9  30FF               	movlw	255
 10879  11AA  06CA               	xorwf	___ftadd@f1+1,f
 10880  11AB  30FF               	movlw	255
 10881  11AC  06CB               	xorwf	___ftadd@f1+2,f
 10882  11AD  3001               	movlw	1
 10883  11AE  07C9               	addwf	___ftadd@f1,f
 10884  11AF  3000               	movlw	0
 10885  11B0  1803               	skipnc
 10886  11B1  3001               	movlw	1
 10887  11B2  07CA               	addwf	___ftadd@f1+1,f
 10888  11B3  3000               	movlw	0
 10889  11B4  1803               	skipnc
 10890  11B5  3001               	movlw	1
 10891  11B6  07CB               	addwf	___ftadd@f1+2,f
 10892  11B7                     l3662:	
 10893  11B7  1F53               	btfss	___ftadd@sign,6
 10894  11B8  29C9               	goto	l3666
 10895  11B9  30FF               	movlw	255
 10896  11BA  06CC               	xorwf	___ftadd@f2,f
 10897  11BB  30FF               	movlw	255
 10898  11BC  06CD               	xorwf	___ftadd@f2+1,f
 10899  11BD  30FF               	movlw	255
 10900  11BE  06CE               	xorwf	___ftadd@f2+2,f
 10901  11BF  3001               	movlw	1
 10902  11C0  07CC               	addwf	___ftadd@f2,f
 10903  11C1  3000               	movlw	0
 10904  11C2  1803               	skipnc
 10905  11C3  3001               	movlw	1
 10906  11C4  07CD               	addwf	___ftadd@f2+1,f
 10907  11C5  3000               	movlw	0
 10908  11C6  1803               	skipnc
 10909  11C7  3001               	movlw	1
 10910  11C8  07CE               	addwf	___ftadd@f2+2,f
 10911  11C9                     l3666:	
 10912  11C9  01D3               	clrf	___ftadd@sign
 10913  11CA  0849               	movf	___ftadd@f1,w
 10914  11CB  07CC               	addwf	___ftadd@f2,f
 10915  11CC  084A               	movf	___ftadd@f1+1,w
 10916  11CD  3DCD               	addwfc	___ftadd@f2+1,f
 10917  11CE  084B               	movf	___ftadd@f1+2,w
 10918  11CF  3DCE               	addwfc	___ftadd@f2+2,f
 10919  11D0  1FCE               	btfss	___ftadd@f2+2,7
 10920  11D1  29E4               	goto	l3676
 10921  11D2  30FF               	movlw	255
 10922  11D3  06CC               	xorwf	___ftadd@f2,f
 10923  11D4  30FF               	movlw	255
 10924  11D5  06CD               	xorwf	___ftadd@f2+1,f
 10925  11D6  30FF               	movlw	255
 10926  11D7  06CE               	xorwf	___ftadd@f2+2,f
 10927  11D8  3001               	movlw	1
 10928  11D9  07CC               	addwf	___ftadd@f2,f
 10929  11DA  3000               	movlw	0
 10930  11DB  1803               	skipnc
 10931  11DC  3001               	movlw	1
 10932  11DD  07CD               	addwf	___ftadd@f2+1,f
 10933  11DE  3000               	movlw	0
 10934  11DF  1803               	skipnc
 10935  11E0  3001               	movlw	1
 10936  11E1  07CE               	addwf	___ftadd@f2+2,f
 10937  11E2  01D3               	clrf	___ftadd@sign
 10938  11E3  0AD3               	incf	___ftadd@sign,f
 10939  11E4                     l3676:	
 10940  11E4  084C               	movf	___ftadd@f2,w
 10941  11E5  00F1               	movwf	___ftpack@arg
 10942  11E6  084D               	movf	___ftadd@f2+1,w
 10943  11E7  00F2               	movwf	___ftpack@arg+1
 10944  11E8  084E               	movf	___ftadd@f2+2,w
 10945  11E9  00F3               	movwf	___ftpack@arg+2
 10946  11EA  0855               	movf	___ftadd@exp1,w
 10947  11EB  00CF               	movwf	??___ftadd
 10948  11EC  084F               	movf	??___ftadd,w
 10949  11ED  00F4               	movwf	___ftpack@exp
 10950  11EE  0853               	movf	___ftadd@sign,w
 10951  11EF  00D0               	movwf	??___ftadd+1
 10952  11F0  0850               	movf	??___ftadd+1,w
 10953  11F1  00F5               	movwf	___ftpack@sign
 10954  11F2  319D  2516         	fcall	___ftpack
 10955  11F4  0871               	movf	?___ftpack,w
 10956  11F5  0020               	movlb	0	; select bank0
 10957  11F6  00C9               	movwf	?___ftadd
 10958  11F7  0872               	movf	?___ftpack+1,w
 10959  11F8  00CA               	movwf	?___ftadd+1
 10960  11F9  0873               	movf	?___ftpack+2,w
 10961  11FA  00CB               	movwf	?___ftadd+2
 10962  11FB  0008               	return
 10963  11FC                     __end_of___ftadd:	
 10964                           
 10965                           	psect	text19
 10966  1A35                     __ptext19:	
 10967 ;; *************** function ___ftneg *****************
 10968 ;; Defined at:
 10969 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;  f1              3    1[COMMON] float 
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;		None
 10974 ;; Return value:  Size  Location     Type
 10975 ;;                  3    1[COMMON] float 
 10976 ;; Registers used:
 10977 ;;		wreg
 10978 ;; Tracked objects:
 10979 ;;		On entry : 0/0
 10980 ;;		On exit  : 0/0
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10983 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10986 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10987 ;;Total ram usage:        3 bytes
 10988 ;; Hardware stack levels used:    1
 10989 ;; Hardware stack levels required when called:    1
 10990 ;; This function calls:
 10991 ;;		Nothing
 10992 ;; This function is called by:
 10993 ;;		_sprintf
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           
 10998                           ;psect for function ___ftneg
 10999  1A35                     ___ftneg:	
 11000                           
 11001                           ;incstack = 0
 11002                           ; Regs used in ___ftneg: [wreg]
 11003  1A35  0873               	movf	___ftneg@f1+2,w
 11004  1A36  0472               	iorwf	___ftneg@f1+1,w
 11005  1A37  0471               	iorwf	___ftneg@f1,w
 11006  1A38  1903               	skipnz
 11007  1A39  0008               	return
 11008  1A3A  3080               	movlw	128
 11009  1A3B  06F3               	xorwf	___ftneg@f1+2,f
 11010  1A3C  0008               	return
 11011  1A3D                     __end_of___ftneg:	
 11012                           
 11013                           	psect	text20
 11014  1B9F                     __ptext20:	
 11015 ;; *************** function ___ftge *****************
 11016 ;; Defined at:
 11017 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;  ff1             3    1[COMMON] float 
 11020 ;;  ff2             3    4[COMMON] float 
 11021 ;; Auto vars:     Size  Location     Type
 11022 ;;		None
 11023 ;; Return value:  Size  Location     Type
 11024 ;;		None               void
 11025 ;; Registers used:
 11026 ;;		wreg, status,2, status,0
 11027 ;; Tracked objects:
 11028 ;;		On entry : 0/0
 11029 ;;		On exit  : 0/0
 11030 ;;		Unchanged: 0/0
 11031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11032 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11034 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11035 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11036 ;;Total ram usage:        9 bytes
 11037 ;; Hardware stack levels used:    1
 11038 ;; Hardware stack levels required when called:    1
 11039 ;; This function calls:
 11040 ;;		Nothing
 11041 ;; This function is called by:
 11042 ;;		_sprintf
 11043 ;; This function uses a non-reentrant model
 11044 ;;
 11045                           
 11046                           
 11047                           ;psect for function ___ftge
 11048  1B9F                     ___ftge:	
 11049                           
 11050                           ;incstack = 0
 11051                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 11052  1B9F  1FF3               	btfss	___ftge@ff1+2,7
 11053  1BA0  2BB5               	goto	l2780
 11054  1BA1  0971               	comf	___ftge@ff1,w
 11055  1BA2  00F7               	movwf	??___ftge
 11056  1BA3  0972               	comf	___ftge@ff1+1,w
 11057  1BA4  00F8               	movwf	??___ftge+1
 11058  1BA5  0973               	comf	___ftge@ff1+2,w
 11059  1BA6  00F9               	movwf	??___ftge+2
 11060  1BA7  0AF7               	incf	??___ftge,f
 11061  1BA8  1903               	skipnz
 11062  1BA9  0AF8               	incf	??___ftge+1,f
 11063  1BAA  1903               	skipnz
 11064  1BAB  0AF9               	incf	??___ftge+2,f
 11065  1BAC  3000               	movlw	0
 11066  1BAD  0777               	addwf	??___ftge,w
 11067  1BAE  00F1               	movwf	___ftge@ff1
 11068  1BAF  3000               	movlw	0
 11069  1BB0  3D78               	addwfc	??___ftge+1,w
 11070  1BB1  00F2               	movwf	___ftge@ff1+1
 11071  1BB2  3080               	movlw	128
 11072  1BB3  3D79               	addwfc	??___ftge+2,w
 11073  1BB4  00F3               	movwf	___ftge@ff1+2
 11074  1BB5                     l2780:	
 11075  1BB5  1FF6               	btfss	___ftge@ff2+2,7
 11076  1BB6  2BCB               	goto	l2784
 11077  1BB7  0974               	comf	___ftge@ff2,w
 11078  1BB8  00F7               	movwf	??___ftge
 11079  1BB9  0975               	comf	___ftge@ff2+1,w
 11080  1BBA  00F8               	movwf	??___ftge+1
 11081  1BBB  0976               	comf	___ftge@ff2+2,w
 11082  1BBC  00F9               	movwf	??___ftge+2
 11083  1BBD  0AF7               	incf	??___ftge,f
 11084  1BBE  1903               	skipnz
 11085  1BBF  0AF8               	incf	??___ftge+1,f
 11086  1BC0  1903               	skipnz
 11087  1BC1  0AF9               	incf	??___ftge+2,f
 11088  1BC2  3000               	movlw	0
 11089  1BC3  0777               	addwf	??___ftge,w
 11090  1BC4  00F4               	movwf	___ftge@ff2
 11091  1BC5  3000               	movlw	0
 11092  1BC6  3D78               	addwfc	??___ftge+1,w
 11093  1BC7  00F5               	movwf	___ftge@ff2+1
 11094  1BC8  3080               	movlw	128
 11095  1BC9  3D79               	addwfc	??___ftge+2,w
 11096  1BCA  00F6               	movwf	___ftge@ff2+2
 11097  1BCB                     l2784:	
 11098  1BCB  3080               	movlw	128
 11099  1BCC  06F3               	xorwf	___ftge@ff1+2,f
 11100  1BCD  3080               	movlw	128
 11101  1BCE  06F6               	xorwf	___ftge@ff2+2,f
 11102  1BCF  0876               	movf	___ftge@ff2+2,w
 11103  1BD0  0273               	subwf	___ftge@ff1+2,w
 11104  1BD1  1D03               	skipz
 11105  1BD2  0008               	return
 11106  1BD3  0875               	movf	___ftge@ff2+1,w
 11107  1BD4  0272               	subwf	___ftge@ff1+1,w
 11108  1BD5  1D03               	skipz
 11109  1BD6  0008               	return
 11110  1BD7  0874               	movf	___ftge@ff2,w
 11111  1BD8  0271               	subwf	___ftge@ff1,w
 11112  1BD9  0008               	return
 11113  1BDA                     __end_of___ftge:	
 11114                           
 11115                           	psect	text21
 11116  1A79                     __ptext21:	
 11117 ;; *************** function ___lwtoft *****************
 11118 ;; Defined at:
 11119 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  c               2    9[COMMON] unsigned int 
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;		None
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  3    9[COMMON] float 
 11126 ;; Registers used:
 11127 ;;		wreg, status,2, status,0, pclath, cstack
 11128 ;; Tracked objects:
 11129 ;;		On entry : 0/0
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11133 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11135 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11136 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11137 ;;Total ram usage:        4 bytes
 11138 ;; Hardware stack levels used:    1
 11139 ;; Hardware stack levels required when called:    2
 11140 ;; This function calls:
 11141 ;;		___ftpack
 11142 ;; This function is called by:
 11143 ;;		_main
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           
 11148                           ;psect for function ___lwtoft
 11149  1A79                     ___lwtoft:	
 11150                           
 11151                           ;incstack = 0
 11152                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 11153  1A79  0879               	movf	___lwtoft@c,w
 11154  1A7A  00F1               	movwf	___ftpack@arg
 11155  1A7B  087A               	movf	___lwtoft@c+1,w
 11156  1A7C  00F2               	movwf	___ftpack@arg+1
 11157  1A7D  01F3               	clrf	___ftpack@arg+2
 11158  1A7E  308E               	movlw	142
 11159  1A7F  0020               	movlb	0	; select bank0
 11160  1A80  00A0               	movwf	??___lwtoft
 11161  1A81  0820               	movf	??___lwtoft,w
 11162  1A82  00F4               	movwf	___ftpack@exp
 11163  1A83  01F5               	clrf	___ftpack@sign
 11164  1A84  319D  2516         	fcall	___ftpack
 11165  1A86  0871               	movf	?___ftpack,w
 11166  1A87  00F9               	movwf	?___lwtoft
 11167  1A88  0872               	movf	?___ftpack+1,w
 11168  1A89  00FA               	movwf	?___lwtoft+1
 11169  1A8A  0873               	movf	?___ftpack+2,w
 11170  1A8B  00FB               	movwf	?___lwtoft+2
 11171  1A8C  0008               	return
 11172  1A8D                     __end_of___lwtoft:	
 11173                           
 11174                           	psect	text22
 11175  1D16                     __ptext22:	
 11176 ;; *************** function ___ftpack *****************
 11177 ;; Defined at:
 11178 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;  arg             3    1[COMMON] unsigned um
 11181 ;;  exp             1    4[COMMON] unsigned char 
 11182 ;;  sign            1    5[COMMON] unsigned char 
 11183 ;; Auto vars:     Size  Location     Type
 11184 ;;		None
 11185 ;; Return value:  Size  Location     Type
 11186 ;;                  3    1[COMMON] float 
 11187 ;; Registers used:
 11188 ;;		wreg, status,2, status,0
 11189 ;; Tracked objects:
 11190 ;;		On entry : 0/0
 11191 ;;		On exit  : 0/0
 11192 ;;		Unchanged: 0/0
 11193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11194 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11196 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11197 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11198 ;;Total ram usage:        8 bytes
 11199 ;; Hardware stack levels used:    1
 11200 ;; Hardware stack levels required when called:    1
 11201 ;; This function calls:
 11202 ;;		Nothing
 11203 ;; This function is called by:
 11204 ;;		___ftadd
 11205 ;;		___ftmul
 11206 ;;		___lltoft
 11207 ;;		___lwtoft
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           
 11212                           ;psect for function ___ftpack
 11213  1D16                     ___ftpack:	
 11214                           
 11215                           ;incstack = 0
 11216                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11217  1D16  0874               	movf	___ftpack@exp,w
 11218  1D17  1903               	btfsc	3,2
 11219  1D18  2D1E               	goto	l3538
 11220  1D19  0873               	movf	___ftpack@arg+2,w
 11221  1D1A  0472               	iorwf	___ftpack@arg+1,w
 11222  1D1B  0471               	iorwf	___ftpack@arg,w
 11223  1D1C  1D03               	skipz
 11224  1D1D  2D2F               	goto	l3544
 11225  1D1E                     l3538:	
 11226  1D1E  3000               	movlw	0
 11227  1D1F  00F1               	movwf	?___ftpack
 11228  1D20  3000               	movlw	0
 11229  1D21  00F2               	movwf	?___ftpack+1
 11230  1D22  3000               	movlw	0
 11231  1D23  00F3               	movwf	?___ftpack+2
 11232  1D24  0008               	return
 11233  1D25                     l3542:	
 11234  1D25  3001               	movlw	1
 11235  1D26  00F6               	movwf	??___ftpack
 11236  1D27  0876               	movf	??___ftpack,w
 11237  1D28  07F4               	addwf	___ftpack@exp,f
 11238  1D29  3001               	movlw	1
 11239  1D2A                     u5255:	
 11240  1D2A  36F3               	lsrf	___ftpack@arg+2,f
 11241  1D2B  0CF2               	rrf	___ftpack@arg+1,f
 11242  1D2C  0CF1               	rrf	___ftpack@arg,f
 11243  1D2D  0B89               	decfsz	9,f
 11244  1D2E  2D2A               	goto	u5255
 11245  1D2F                     l3544:	
 11246  1D2F  30FE               	movlw	254
 11247  1D30  0573               	andwf	___ftpack@arg+2,w
 11248  1D31  1903               	btfsc	3,2
 11249  1D32  2D48               	goto	l619
 11250  1D33  2D25               	goto	l3542
 11251  1D34                     l3546:	
 11252  1D34  3001               	movlw	1
 11253  1D35  00F6               	movwf	??___ftpack
 11254  1D36  0876               	movf	??___ftpack,w
 11255  1D37  07F4               	addwf	___ftpack@exp,f
 11256  1D38  3001               	movlw	1
 11257  1D39  07F1               	addwf	___ftpack@arg,f
 11258  1D3A  3000               	movlw	0
 11259  1D3B  1803               	skipnc
 11260  1D3C  3001               	movlw	1
 11261  1D3D  07F2               	addwf	___ftpack@arg+1,f
 11262  1D3E  3000               	movlw	0
 11263  1D3F  1803               	skipnc
 11264  1D40  3001               	movlw	1
 11265  1D41  07F3               	addwf	___ftpack@arg+2,f
 11266  1D42  3001               	movlw	1
 11267  1D43                     u5275:	
 11268  1D43  36F3               	lsrf	___ftpack@arg+2,f
 11269  1D44  0CF2               	rrf	___ftpack@arg+1,f
 11270  1D45  0CF1               	rrf	___ftpack@arg,f
 11271  1D46  0B89               	decfsz	9,f
 11272  1D47  2D43               	goto	u5275
 11273  1D48                     l619:	
 11274  1D48  30FF               	movlw	255
 11275  1D49  0573               	andwf	___ftpack@arg+2,w
 11276  1D4A  1903               	btfsc	3,2
 11277  1D4B  2D55               	goto	l3554
 11278  1D4C  2D34               	goto	l3546
 11279  1D4D                     l3552:	
 11280  1D4D  3001               	movlw	1
 11281  1D4E  02F4               	subwf	___ftpack@exp,f
 11282  1D4F  3001               	movlw	1
 11283  1D50                     u5295:	
 11284  1D50  35F1               	lslf	___ftpack@arg,f
 11285  1D51  0DF2               	rlf	___ftpack@arg+1,f
 11286  1D52  0DF3               	rlf	___ftpack@arg+2,f
 11287  1D53  0B89               	decfsz	9,f
 11288  1D54  2D50               	goto	u5295
 11289  1D55                     l3554:	
 11290  1D55  1BF2               	btfsc	___ftpack@arg+1,7
 11291  1D56  2D5B               	goto	l626
 11292  1D57  3002               	movlw	2
 11293  1D58  0274               	subwf	___ftpack@exp,w
 11294  1D59  1803               	skipnc
 11295  1D5A  2D4D               	goto	l3552
 11296  1D5B                     l626:	
 11297  1D5B  1874               	btfsc	___ftpack@exp,0
 11298  1D5C  2D63               	goto	l627
 11299  1D5D  30FF               	movlw	255
 11300  1D5E  05F1               	andwf	___ftpack@arg,f
 11301  1D5F  307F               	movlw	127
 11302  1D60  05F2               	andwf	___ftpack@arg+1,f
 11303  1D61  30FF               	movlw	255
 11304  1D62  05F3               	andwf	___ftpack@arg+2,f
 11305  1D63                     l627:	
 11306  1D63  1003               	clrc
 11307  1D64  0CF4               	rrf	___ftpack@exp,f
 11308  1D65  0874               	movf	___ftpack@exp,w
 11309  1D66  00F6               	movwf	??___ftpack
 11310  1D67  01F7               	clrf	??___ftpack+1
 11311  1D68  01F8               	clrf	??___ftpack+2
 11312  1D69  3010               	movlw	16
 11313  1D6A                     u5335:	
 11314  1D6A  35F6               	lslf	??___ftpack,f
 11315  1D6B  0DF7               	rlf	??___ftpack+1,f
 11316  1D6C  0DF8               	rlf	??___ftpack+2,f
 11317  1D6D  0B89               	decfsz	9,f
 11318  1D6E  2D6A               	goto	u5335
 11319  1D6F  0876               	movf	??___ftpack,w
 11320  1D70  04F1               	iorwf	___ftpack@arg,f
 11321  1D71  0877               	movf	??___ftpack+1,w
 11322  1D72  04F2               	iorwf	___ftpack@arg+1,f
 11323  1D73  0878               	movf	??___ftpack+2,w
 11324  1D74  04F3               	iorwf	___ftpack@arg+2,f
 11325  1D75  0875               	movf	___ftpack@sign,w
 11326  1D76  1903               	btfsc	3,2
 11327  1D77  0008               	return
 11328  1D78  17F3               	bsf	___ftpack@arg+2,7
 11329  1D79  0008               	return
 11330  1D7A                     __end_of___ftpack:	
 11331                           
 11332                           	psect	text23
 11333  1A26                     __ptext23:	
 11334 ;; *************** function _OSCILLATOR_Initialize *****************
 11335 ;; Defined at:
 11336 ;;		line 277 in file "LDC_ROT.h"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;		None
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;		None
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		wreg, status,2
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11354 ;;Total ram usage:        0 bytes
 11355 ;; Hardware stack levels used:    1
 11356 ;; Hardware stack levels required when called:    1
 11357 ;; This function calls:
 11358 ;;		Nothing
 11359 ;; This function is called by:
 11360 ;;		_main
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           
 11365                           ;psect for function _OSCILLATOR_Initialize
 11366  1A26                     _OSCILLATOR_Initialize:	
 11367                           
 11368                           ;LDC_ROT.h: 281: OSCCON = 0b01111011;
 11369                           
 11370                           ;incstack = 0
 11371                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11372  1A26  307B               	movlw	123
 11373  1A27  0021               	movlb	1	; select bank1
 11374  1A28  009B               	movwf	27	;volatile
 11375                           
 11376                           ;LDC_ROT.h: 283: OSCSTAT = 0b100000000;
 11377  1A29  019C               	clrf	28	;volatile
 11378                           
 11379                           ;LDC_ROT.h: 285: OSCTUNE = 0x00;
 11380  1A2A  019A               	clrf	26	;volatile
 11381                           
 11382                           ;LDC_ROT.h: 287: BORCON = 0x00;
 11383  1A2B  019D               	clrf	29	;volatile
 11384  1A2C  0008               	return
 11385  1A2D                     __end_of_OSCILLATOR_Initialize:	
 11386                           
 11387                           	psect	text24
 11388  1001                     __ptext24:	
 11389 ;; *************** function _LCD_TextDisplayString *****************
 11390 ;; Defined at:
 11391 ;;		line 361 in file "LDC_ROT.h"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;  line            1    wreg     unsigned char 
 11394 ;;  string          2    5[COMMON] PTR unsigned char 
 11395 ;;		 -> STR_4(17), STR_2(17), naif(17), 
 11396 ;; Auto vars:     Size  Location     Type
 11397 ;;  line            1   10[COMMON] unsigned char 
 11398 ;;  i               1    9[COMMON] unsigned char 
 11399 ;;  addr            1    8[COMMON] unsigned char 
 11400 ;; Return value:  Size  Location     Type
 11401 ;;                  1    wreg      void 
 11402 ;; Registers used:
 11403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11404 ;; Tracked objects:
 11405 ;;		On entry : 0/0
 11406 ;;		On exit  : 0/0
 11407 ;;		Unchanged: 0/0
 11408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11410 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11412 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11413 ;;Total ram usage:        6 bytes
 11414 ;; Hardware stack levels used:    1
 11415 ;; Hardware stack levels required when called:    3
 11416 ;; This function calls:
 11417 ;;		_LCD_WriteCommand
 11418 ;;		_LCD_WriteData
 11419 ;; This function is called by:
 11420 ;;		_main
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           
 11425                           ;psect for function _LCD_TextDisplayString
 11426  1001                     _LCD_TextDisplayString:	
 11427                           
 11428                           ;incstack = 0
 11429                           ; Regs used in _LCD_TextDisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11430                           ;LCD_TextDisplayString@line stored from wreg
 11431  1001  00FA               	movwf	LCD_TextDisplayString@line
 11432                           
 11433                           ;LDC_ROT.h: 363: unsigned char addr,i;
 11434                           ;LDC_ROT.h: 364: if(line==1)
 11435  1002  037A               	decf	LCD_TextDisplayString@line,w
 11436  1003  1D03               	btfss	3,2
 11437  1004  2807               	goto	l2952
 11438                           
 11439                           ;LDC_ROT.h: 365: addr=0x80;
 11440  1005  3080               	movlw	128
 11441  1006  2818               	goto	L11
 11442  1007                     l2952:	
 11443                           
 11444                           ;LDC_ROT.h: 366: else if(line==2)
 11445  1007  3002               	movlw	2
 11446  1008  067A               	xorwf	LCD_TextDisplayString@line,w
 11447  1009  1D03               	btfss	3,2
 11448  100A  280D               	goto	l2956
 11449                           
 11450                           ;LDC_ROT.h: 367: addr=0x90;
 11451  100B  3090               	movlw	144
 11452  100C  2818               	goto	L11
 11453  100D                     l2956:	
 11454                           
 11455                           ;LDC_ROT.h: 368: else if(line==3)
 11456  100D  3003               	movlw	3
 11457  100E  067A               	xorwf	LCD_TextDisplayString@line,w
 11458  100F  1D03               	btfss	3,2
 11459  1010  2813               	goto	l2960
 11460                           
 11461                           ;LDC_ROT.h: 369: addr=0x88;
 11462  1011  3088               	movlw	136
 11463  1012  2818               	goto	L11
 11464  1013                     l2960:	
 11465                           
 11466                           ;LDC_ROT.h: 370: else if(line==4)
 11467  1013  3004               	movlw	4
 11468  1014  067A               	xorwf	LCD_TextDisplayString@line,w
 11469  1015  1D03               	btfss	3,2
 11470  1016  281B               	goto	l2964
 11471                           
 11472                           ;LDC_ROT.h: 371: addr=0x98;
 11473  1017  3098               	movlw	152
 11474  1018                     L11:	
 11475  1018  00F7               	movwf	??_LCD_TextDisplayString
 11476  1019  0877               	movf	??_LCD_TextDisplayString,w
 11477  101A  00F8               	movwf	LCD_TextDisplayString@addr
 11478  101B                     l2964:	
 11479                           
 11480                           ;LDC_ROT.h: 373: LCD_WriteCommand(addr);
 11481  101B  0878               	movf	LCD_TextDisplayString@addr,w
 11482  101C  319A  2218  3190   	fcall	_LCD_WriteCommand
 11483                           
 11484                           ;LDC_ROT.h: 375: for(i=0;i<16;i++)
 11485  101F  01F9               	clrf	LCD_TextDisplayString@i
 11486  1020                     L12:	
 11487  1020  3010               	movlw	16
 11488  1021  0279               	subwf	LCD_TextDisplayString@i,w
 11489  1022  1803               	btfsc	3,0
 11490  1023  0008               	return
 11491                           
 11492                           ;LDC_ROT.h: 376: LCD_WriteData(*string++);
 11493  1024  0875               	movf	LCD_TextDisplayString@string,w
 11494  1025  0084               	movwf	4
 11495  1026  0876               	movf	LCD_TextDisplayString@string+1,w
 11496  1027  0085               	movwf	5
 11497  1028  0800               	movf	0,w	;code access
 11498  1029  319A  221F  3190   	fcall	_LCD_WriteData
 11499  102C  3001               	movlw	1
 11500  102D  07F5               	addwf	LCD_TextDisplayString@string,f
 11501  102E  3000               	movlw	0
 11502  102F  3DF6               	addwfc	LCD_TextDisplayString@string+1,f
 11503  1030  3001               	movlw	1
 11504  1031  00F7               	movwf	??_LCD_TextDisplayString
 11505  1032  0877               	movf	??_LCD_TextDisplayString,w
 11506  1033  07F9               	addwf	LCD_TextDisplayString@i,f
 11507  1034  2820               	goto	L12
 11508  1035                     __end_of_LCD_TextDisplayString:	
 11509                           
 11510                           	psect	text25
 11511  1CB4                     __ptext25:	
 11512 ;; *************** function _LCD_Init *****************
 11513 ;; Defined at:
 11514 ;;		line 297 in file "LDC_ROT.h"
 11515 ;; Parameters:    Size  Location     Type
 11516 ;;		None
 11517 ;; Auto vars:     Size  Location     Type
 11518 ;;		None
 11519 ;; Return value:  Size  Location     Type
 11520 ;;                  1    wreg      void 
 11521 ;; Registers used:
 11522 ;;		wreg, status,2, status,0, pclath, cstack
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11532 ;;Total ram usage:        2 bytes
 11533 ;; Hardware stack levels used:    1
 11534 ;; Hardware stack levels required when called:    3
 11535 ;; This function calls:
 11536 ;;		_LCD_WriteCommand
 11537 ;; This function is called by:
 11538 ;;		_main
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           
 11543                           ;psect for function _LCD_Init
 11544  1CB4                     _LCD_Init:	
 11545                           
 11546                           ;LDC_ROT.h: 299: LATBbits.LATB2=1;
 11547                           
 11548                           ;incstack = 0
 11549                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 11550  1CB4  0022               	movlb	2	; select bank2
 11551  1CB5  150D               	bsf	13,2	;volatile
 11552                           
 11553                           ;LDC_ROT.h: 300: LATBbits.LATB2=0;
 11554  1CB6  110D               	bcf	13,2	;volatile
 11555                           
 11556                           ;LDC_ROT.h: 301: _delay((unsigned long)((5)*(16000000/4000.0)));
 11557  1CB7  301A               	movlw	26
 11558  1CB8  00F5               	movwf	??_LCD_Init
 11559  1CB9  30F8               	movlw	248
 11560  1CBA                     u6657:	
 11561  1CBA  0B89               	decfsz	9,f
 11562  1CBB  2CBA               	goto	u6657
 11563  1CBC  0BF5               	decfsz	??_LCD_Init,f
 11564  1CBD  2CBA               	goto	u6657
 11565  1CBE  3200               	nop2
 11566                           
 11567                           ;LDC_ROT.h: 302: LATBbits.LATB2=1;
 11568  1CBF  0022               	movlb	2	; select bank2
 11569  1CC0  150D               	bsf	13,2	;volatile
 11570                           
 11571                           ;LDC_ROT.h: 304: _delay((unsigned long)((50)*(16000000/4000.0)));
 11572  1CC1  3002               	movlw	2
 11573  1CC2  00F6               	movwf	??_LCD_Init+1
 11574  1CC3  3004               	movlw	4
 11575  1CC4  00F5               	movwf	??_LCD_Init
 11576  1CC5  30BA               	movlw	186
 11577  1CC6                     u6667:	
 11578  1CC6  0B89               	decfsz	9,f
 11579  1CC7  2CC6               	goto	u6667
 11580  1CC8  0BF5               	decfsz	??_LCD_Init,f
 11581  1CC9  2CC6               	goto	u6667
 11582  1CCA  0BF6               	decfsz	??_LCD_Init+1,f
 11583  1CCB  2CC6               	goto	u6667
 11584  1CCC  3200               	nop2
 11585                           
 11586                           ;LDC_ROT.h: 306: LCD_WriteCommand(0b00100000);
 11587  1CCD  3020               	movlw	32
 11588  1CCE  319A  2218  319C   	fcall	_LCD_WriteCommand
 11589                           
 11590                           ;LDC_ROT.h: 307: _delay((unsigned long)((5)*(16000000/4000.0)));
 11591  1CD1  301A               	movlw	26
 11592  1CD2  00F5               	movwf	??_LCD_Init
 11593  1CD3  30F8               	movlw	248
 11594  1CD4                     u6677:	
 11595  1CD4  0B89               	decfsz	9,f
 11596  1CD5  2CD4               	goto	u6677
 11597  1CD6  0BF5               	decfsz	??_LCD_Init,f
 11598  1CD7  2CD4               	goto	u6677
 11599  1CD8  3200               	nop2
 11600                           
 11601                           ;LDC_ROT.h: 309: LCD_WriteCommand(0b00100000);
 11602  1CD9  3020               	movlw	32
 11603  1CDA  319A  2218  319C   	fcall	_LCD_WriteCommand
 11604                           
 11605                           ;LDC_ROT.h: 310: _delay((unsigned long)((5)*(16000000/4000.0)));
 11606  1CDD  301A               	movlw	26
 11607  1CDE  00F5               	movwf	??_LCD_Init
 11608  1CDF  30F8               	movlw	248
 11609  1CE0                     u6687:	
 11610  1CE0  0B89               	decfsz	9,f
 11611  1CE1  2CE0               	goto	u6687
 11612  1CE2  0BF5               	decfsz	??_LCD_Init,f
 11613  1CE3  2CE0               	goto	u6687
 11614  1CE4  3200               	nop2
 11615                           
 11616                           ;LDC_ROT.h: 312: LCD_WriteCommand(0b00001100);
 11617  1CE5  300C               	movlw	12
 11618  1CE6  319A  2218  319C   	fcall	_LCD_WriteCommand
 11619                           
 11620                           ;LDC_ROT.h: 313: _delay((unsigned long)((5)*(16000000/4000.0)));
 11621  1CE9  301A               	movlw	26
 11622  1CEA  00F5               	movwf	??_LCD_Init
 11623  1CEB  30F8               	movlw	248
 11624  1CEC                     u6697:	
 11625  1CEC  0B89               	decfsz	9,f
 11626  1CED  2CEC               	goto	u6697
 11627  1CEE  0BF5               	decfsz	??_LCD_Init,f
 11628  1CEF  2CEC               	goto	u6697
 11629  1CF0  3200               	nop2
 11630                           
 11631                           ;LDC_ROT.h: 315: LCD_WriteCommand(0x01);
 11632  1CF1  3001               	movlw	1
 11633  1CF2  319A  2218  319C   	fcall	_LCD_WriteCommand
 11634                           
 11635                           ;LDC_ROT.h: 316: _delay((unsigned long)((5)*(16000000/4000.0)));
 11636  1CF5  301A               	movlw	26
 11637  1CF6  00F5               	movwf	??_LCD_Init
 11638  1CF7  30F8               	movlw	248
 11639  1CF8                     u6707:	
 11640  1CF8  0B89               	decfsz	9,f
 11641  1CF9  2CF8               	goto	u6707
 11642  1CFA  0BF5               	decfsz	??_LCD_Init,f
 11643  1CFB  2CF8               	goto	u6707
 11644  1CFC  3200               	nop2
 11645                           
 11646                           ;LDC_ROT.h: 318: LCD_WriteCommand(0x06);
 11647  1CFD  3006               	movlw	6
 11648  1CFE  319A  2218  319C   	fcall	_LCD_WriteCommand
 11649                           
 11650                           ;LDC_ROT.h: 319: _delay((unsigned long)((5)*(16000000/4000.0)));
 11651  1D01  301A               	movlw	26
 11652  1D02  00F5               	movwf	??_LCD_Init
 11653  1D03  30F8               	movlw	248
 11654  1D04                     u6717:	
 11655  1D04  0B89               	decfsz	9,f
 11656  1D05  2D04               	goto	u6717
 11657  1D06  0BF5               	decfsz	??_LCD_Init,f
 11658  1D07  2D04               	goto	u6717
 11659  1D08  3200               	nop2
 11660                           
 11661                           ;LDC_ROT.h: 321: LCD_WriteCommand(0b00000010);
 11662  1D09  3002               	movlw	2
 11663  1D0A  319A  2218  319C   	fcall	_LCD_WriteCommand
 11664                           
 11665                           ;LDC_ROT.h: 322: _delay((unsigned long)((5)*(16000000/4000.0)));
 11666  1D0D  301A               	movlw	26
 11667  1D0E  00F5               	movwf	??_LCD_Init
 11668  1D0F  30F8               	movlw	248
 11669  1D10                     u6727:	
 11670  1D10  0B89               	decfsz	9,f
 11671  1D11  2D10               	goto	u6727
 11672  1D12  0BF5               	decfsz	??_LCD_Init,f
 11673  1D13  2D10               	goto	u6727
 11674  1D14  3200               	nop2
 11675  1D15  0008               	return
 11676  1D16                     __end_of_LCD_Init:	
 11677                           
 11678                           	psect	text26
 11679  1035                     __ptext26:	
 11680 ;; *************** function _LCD_FillScreenGraphics *****************
 11681 ;; Defined at:
 11682 ;;		line 395 in file "LDC_ROT.h"
 11683 ;; Parameters:    Size  Location     Type
 11684 ;;  graphic         2    5[COMMON] PTR const unsigned char 
 11685 ;;		 -> des(1024), 
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;  x               1    8[COMMON] unsigned char 
 11688 ;;  y               1    7[COMMON] unsigned char 
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      void 
 11691 ;; Registers used:
 11692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11700 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11701 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11702 ;;Total ram usage:       12 bytes
 11703 ;; Hardware stack levels used:    1
 11704 ;; Hardware stack levels required when called:    3
 11705 ;; This function calls:
 11706 ;;		_LCD_WriteCommand
 11707 ;;		_LCD_WriteData
 11708 ;; This function is called by:
 11709 ;;		_main
 11710 ;; This function uses a non-reentrant model
 11711 ;;
 11712                           
 11713                           
 11714                           ;psect for function _LCD_FillScreenGraphics
 11715  1035                     _LCD_FillScreenGraphics:	
 11716                           
 11717                           ;LDC_ROT.h: 397: unsigned char x, y;
 11718                           ;LDC_ROT.h: 398: for(y = 0; y < 64; y++)
 11719                           
 11720                           ;incstack = 0
 11721                           ; Regs used in _LCD_FillScreenGraphics: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11722  1035  01F7               	clrf	LCD_FillScreenGraphics@y
 11723  1036                     L14:	
 11724  1036  3040               	movlw	64
 11725  1037  0277               	subwf	LCD_FillScreenGraphics@y,w
 11726  1038  1803               	btfsc	3,0
 11727  1039  0008               	return
 11728                           
 11729                           ;LDC_ROT.h: 399: {
 11730                           ;LDC_ROT.h: 400: if(y < 32)
 11731  103A  3020               	movlw	32
 11732  103B  0277               	subwf	LCD_FillScreenGraphics@y,w
 11733  103C  1803               	skipnc
 11734  103D  289D               	goto	l3018
 11735                           
 11736                           ;LDC_ROT.h: 401: {
 11737                           ;LDC_ROT.h: 402: for(x = 0; x < 8; x++)
 11738  103E  01F8               	clrf	LCD_FillScreenGraphics@x
 11739  103F                     L13:	
 11740  103F  3008               	movlw	8
 11741  1040  0278               	subwf	LCD_FillScreenGraphics@x,w
 11742  1041  1803               	btfsc	3,0
 11743  1042  2900               	goto	l3034
 11744                           
 11745                           ;LDC_ROT.h: 403: {
 11746                           ;LDC_ROT.h: 404: LCD_WriteCommand(0x80 | y);
 11747  1043  0877               	movf	LCD_FillScreenGraphics@y,w
 11748  1044  3880               	iorlw	128
 11749  1045  319A  2218  3190   	fcall	_LCD_WriteCommand
 11750                           
 11751                           ;LDC_ROT.h: 405: LCD_WriteCommand(0x80 | x);
 11752  1048  0878               	movf	LCD_FillScreenGraphics@x,w
 11753  1049  3880               	iorlw	128
 11754  104A  319A  2218  3190   	fcall	_LCD_WriteCommand
 11755                           
 11756                           ;LDC_ROT.h: 406: LCD_WriteData(graphic[2*x + 16*y]);
 11757  104D  0877               	movf	LCD_FillScreenGraphics@y,w
 11758  104E  0020               	movlb	0	; select bank0
 11759  104F  00A0               	movwf	??_LCD_FillScreenGraphics
 11760  1050  01A1               	clrf	??_LCD_FillScreenGraphics+1
 11761  1051  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 11762  1052  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 11763  1053  30F0               	movlw	240
 11764  1054  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 11765  1055  0820               	movf	??_LCD_FillScreenGraphics,w
 11766  1056  390F               	andlw	15
 11767  1057  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 11768  1058  30F0               	movlw	240
 11769  1059  05A0               	andwf	??_LCD_FillScreenGraphics,f
 11770  105A  0878               	movf	LCD_FillScreenGraphics@x,w
 11771  105B  00A2               	movwf	??_LCD_FillScreenGraphics+2
 11772  105C  01A3               	clrf	??_LCD_FillScreenGraphics+3
 11773  105D  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 11774  105E  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 11775  105F  0820               	movf	??_LCD_FillScreenGraphics,w
 11776  1060  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 11777  1061  00A4               	movwf	??_LCD_FillScreenGraphics+4
 11778  1062  0821               	movf	??_LCD_FillScreenGraphics+1,w
 11779  1063  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 11780  1064  00A5               	movwf	??_LCD_FillScreenGraphics+5
 11781  1065  0875               	movf	LCD_FillScreenGraphics@graphic,w
 11782  1066  0724               	addwf	??_LCD_FillScreenGraphics+4,w
 11783  1067  0084               	movwf	4
 11784  1068  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 11785  1069  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 11786  106A  0085               	movwf	5
 11787  106B  0800               	movf	0,w	;code access
 11788  106C  319A  221F  3190   	fcall	_LCD_WriteData
 11789                           
 11790                           ;LDC_ROT.h: 407: LCD_WriteData(graphic[2*x+1 + 16*y]);
 11791  106F  0877               	movf	LCD_FillScreenGraphics@y,w
 11792  1070  0020               	movlb	0	; select bank0
 11793  1071  00A0               	movwf	??_LCD_FillScreenGraphics
 11794  1072  01A1               	clrf	??_LCD_FillScreenGraphics+1
 11795  1073  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 11796  1074  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 11797  1075  30F0               	movlw	240
 11798  1076  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 11799  1077  0820               	movf	??_LCD_FillScreenGraphics,w
 11800  1078  390F               	andlw	15
 11801  1079  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 11802  107A  30F0               	movlw	240
 11803  107B  05A0               	andwf	??_LCD_FillScreenGraphics,f
 11804  107C  0878               	movf	LCD_FillScreenGraphics@x,w
 11805  107D  00A2               	movwf	??_LCD_FillScreenGraphics+2
 11806  107E  01A3               	clrf	??_LCD_FillScreenGraphics+3
 11807  107F  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 11808  1080  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 11809  1081  0820               	movf	??_LCD_FillScreenGraphics,w
 11810  1082  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 11811  1083  00A4               	movwf	??_LCD_FillScreenGraphics+4
 11812  1084  0821               	movf	??_LCD_FillScreenGraphics+1,w
 11813  1085  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 11814  1086  00A5               	movwf	??_LCD_FillScreenGraphics+5
 11815  1087  0824               	movf	??_LCD_FillScreenGraphics+4,w
 11816  1088  3E01               	addlw	1
 11817  1089  00A6               	movwf	??_LCD_FillScreenGraphics+6
 11818  108A  3000               	movlw	0
 11819  108B  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 11820  108C  00A7               	movwf	??_LCD_FillScreenGraphics+7
 11821  108D  0875               	movf	LCD_FillScreenGraphics@graphic,w
 11822  108E  0726               	addwf	??_LCD_FillScreenGraphics+6,w
 11823  108F  0084               	movwf	4
 11824  1090  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 11825  1091  3D27               	addwfc	??_LCD_FillScreenGraphics+7,w
 11826  1092  0085               	movwf	5
 11827  1093  0800               	movf	0,w	;code access
 11828  1094  319A  221F  3190   	fcall	_LCD_WriteData
 11829  1097  3001               	movlw	1
 11830  1098  0020               	movlb	0	; select bank0
 11831  1099  00A0               	movwf	??_LCD_FillScreenGraphics
 11832  109A  0820               	movf	??_LCD_FillScreenGraphics,w
 11833  109B  07F8               	addwf	LCD_FillScreenGraphics@x,f
 11834  109C  283F               	goto	L13
 11835  109D                     l3018:	
 11836                           ;LDC_ROT.h: 408: }
 11837                           ;LDC_ROT.h: 409: }
 11838                           
 11839                           
 11840                           ;LDC_ROT.h: 410: else
 11841                           ;LDC_ROT.h: 411: {
 11842                           ;LDC_ROT.h: 412: for(x = 0; x < 8; x++)
 11843  109D  01F8               	clrf	LCD_FillScreenGraphics@x
 11844  109E  3008               	movlw	8
 11845  109F  0278               	subwf	LCD_FillScreenGraphics@x,w
 11846  10A0  1803               	btfsc	3,0
 11847  10A1  2900               	goto	l3034
 11848  10A2                     l3024:	
 11849                           
 11850                           ;LDC_ROT.h: 413: {
 11851                           ;LDC_ROT.h: 414: LCD_WriteCommand(0x80 | (y-32));
 11852  10A2  0877               	movf	LCD_FillScreenGraphics@y,w
 11853  10A3  3EE0               	addlw	224
 11854  10A4  3880               	iorlw	128
 11855  10A5  319A  2218  3190   	fcall	_LCD_WriteCommand
 11856                           
 11857                           ;LDC_ROT.h: 415: LCD_WriteCommand(0x88 | x);
 11858  10A8  0878               	movf	LCD_FillScreenGraphics@x,w
 11859  10A9  3888               	iorlw	136
 11860  10AA  319A  2218  3190   	fcall	_LCD_WriteCommand
 11861                           
 11862                           ;LDC_ROT.h: 416: LCD_WriteData(graphic[2*x + 16*y]);
 11863  10AD  0877               	movf	LCD_FillScreenGraphics@y,w
 11864  10AE  0020               	movlb	0	; select bank0
 11865  10AF  00A0               	movwf	??_LCD_FillScreenGraphics
 11866  10B0  01A1               	clrf	??_LCD_FillScreenGraphics+1
 11867  10B1  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 11868  10B2  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 11869  10B3  30F0               	movlw	240
 11870  10B4  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 11871  10B5  0820               	movf	??_LCD_FillScreenGraphics,w
 11872  10B6  390F               	andlw	15
 11873  10B7  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 11874  10B8  30F0               	movlw	240
 11875  10B9  05A0               	andwf	??_LCD_FillScreenGraphics,f
 11876  10BA  0878               	movf	LCD_FillScreenGraphics@x,w
 11877  10BB  00A2               	movwf	??_LCD_FillScreenGraphics+2
 11878  10BC  01A3               	clrf	??_LCD_FillScreenGraphics+3
 11879  10BD  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 11880  10BE  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 11881  10BF  0820               	movf	??_LCD_FillScreenGraphics,w
 11882  10C0  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 11883  10C1  00A4               	movwf	??_LCD_FillScreenGraphics+4
 11884  10C2  0821               	movf	??_LCD_FillScreenGraphics+1,w
 11885  10C3  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 11886  10C4  00A5               	movwf	??_LCD_FillScreenGraphics+5
 11887  10C5  0875               	movf	LCD_FillScreenGraphics@graphic,w
 11888  10C6  0724               	addwf	??_LCD_FillScreenGraphics+4,w
 11889  10C7  0084               	movwf	4
 11890  10C8  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 11891  10C9  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 11892  10CA  0085               	movwf	5
 11893  10CB  0800               	movf	0,w	;code access
 11894  10CC  319A  221F  3190   	fcall	_LCD_WriteData
 11895                           
 11896                           ;LDC_ROT.h: 417: LCD_WriteData(graphic[2*x+1 + 16*y]);
 11897  10CF  0877               	movf	LCD_FillScreenGraphics@y,w
 11898  10D0  0020               	movlb	0	; select bank0
 11899  10D1  00A0               	movwf	??_LCD_FillScreenGraphics
 11900  10D2  01A1               	clrf	??_LCD_FillScreenGraphics+1
 11901  10D3  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 11902  10D4  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 11903  10D5  30F0               	movlw	240
 11904  10D6  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 11905  10D7  0820               	movf	??_LCD_FillScreenGraphics,w
 11906  10D8  390F               	andlw	15
 11907  10D9  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 11908  10DA  30F0               	movlw	240
 11909  10DB  05A0               	andwf	??_LCD_FillScreenGraphics,f
 11910  10DC  0878               	movf	LCD_FillScreenGraphics@x,w
 11911  10DD  00A2               	movwf	??_LCD_FillScreenGraphics+2
 11912  10DE  01A3               	clrf	??_LCD_FillScreenGraphics+3
 11913  10DF  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 11914  10E0  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 11915  10E1  0820               	movf	??_LCD_FillScreenGraphics,w
 11916  10E2  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 11917  10E3  00A4               	movwf	??_LCD_FillScreenGraphics+4
 11918  10E4  0821               	movf	??_LCD_FillScreenGraphics+1,w
 11919  10E5  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 11920  10E6  00A5               	movwf	??_LCD_FillScreenGraphics+5
 11921  10E7  0824               	movf	??_LCD_FillScreenGraphics+4,w
 11922  10E8  3E01               	addlw	1
 11923  10E9  00A6               	movwf	??_LCD_FillScreenGraphics+6
 11924  10EA  3000               	movlw	0
 11925  10EB  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 11926  10EC  00A7               	movwf	??_LCD_FillScreenGraphics+7
 11927  10ED  0875               	movf	LCD_FillScreenGraphics@graphic,w
 11928  10EE  0726               	addwf	??_LCD_FillScreenGraphics+6,w
 11929  10EF  0084               	movwf	4
 11930  10F0  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 11931  10F1  3D27               	addwfc	??_LCD_FillScreenGraphics+7,w
 11932  10F2  0085               	movwf	5
 11933  10F3  0800               	movf	0,w	;code access
 11934  10F4  319A  221F  3190   	fcall	_LCD_WriteData
 11935  10F7  3001               	movlw	1
 11936  10F8  0020               	movlb	0	; select bank0
 11937  10F9  00A0               	movwf	??_LCD_FillScreenGraphics
 11938  10FA  0820               	movf	??_LCD_FillScreenGraphics,w
 11939  10FB  07F8               	addwf	LCD_FillScreenGraphics@x,f
 11940  10FC  3008               	movlw	8
 11941  10FD  0278               	subwf	LCD_FillScreenGraphics@x,w
 11942  10FE  1C03               	skipc
 11943  10FF  28A2               	goto	l3024
 11944  1100                     l3034:	
 11945  1100  3001               	movlw	1
 11946  1101  0020               	movlb	0	; select bank0
 11947  1102  00A0               	movwf	??_LCD_FillScreenGraphics
 11948  1103  0820               	movf	??_LCD_FillScreenGraphics,w
 11949  1104  07F7               	addwf	LCD_FillScreenGraphics@y,f
 11950  1105  2836               	goto	L14
 11951  1106                     __end_of_LCD_FillScreenGraphics:	
 11952                           
 11953                           	psect	text27
 11954  1B1B                     __ptext27:	
 11955 ;; *************** function _LCD_EnableGraphics *****************
 11956 ;; Defined at:
 11957 ;;		line 379 in file "LDC_ROT.h"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;		None
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;		None
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		wreg, status,2, status,0, pclath, cstack
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11975 ;;Total ram usage:        1 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; Hardware stack levels required when called:    3
 11978 ;; This function calls:
 11979 ;;		_LCD_WriteCommand
 11980 ;; This function is called by:
 11981 ;;		_main
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           
 11986                           ;psect for function _LCD_EnableGraphics
 11987  1B1B                     _LCD_EnableGraphics:	
 11988                           
 11989                           ;LDC_ROT.h: 381: LCD_WriteCommand(0x20);
 11990                           
 11991                           ;incstack = 0
 11992                           ; Regs used in _LCD_EnableGraphics: [wreg+status,2+status,0+pclath+cstack]
 11993  1B1B  3020               	movlw	32
 11994  1B1C  319A  2218  319B   	fcall	_LCD_WriteCommand
 11995                           
 11996                           ;LDC_ROT.h: 382: _delay((unsigned long)((1)*(16000000/4000.0)));
 11997  1B1F  3006               	movlw	6
 11998  1B20  00F5               	movwf	??_LCD_EnableGraphics
 11999  1B21  3030               	movlw	48
 12000  1B22                     u6737:	
 12001  1B22  0B89               	decfsz	9,f
 12002  1B23  2B22               	goto	u6737
 12003  1B24  0BF5               	decfsz	??_LCD_EnableGraphics,f
 12004  1B25  2B22               	goto	u6737
 12005  1B26  3200               	nop2
 12006                           
 12007                           ;LDC_ROT.h: 383: LCD_WriteCommand(0x24);
 12008  1B27  3024               	movlw	36
 12009  1B28  319A  2218  319B   	fcall	_LCD_WriteCommand
 12010                           
 12011                           ;LDC_ROT.h: 384: _delay((unsigned long)((1)*(16000000/4000.0)));
 12012  1B2B  3006               	movlw	6
 12013  1B2C  00F5               	movwf	??_LCD_EnableGraphics
 12014  1B2D  3030               	movlw	48
 12015  1B2E                     u6747:	
 12016  1B2E  0B89               	decfsz	9,f
 12017  1B2F  2B2E               	goto	u6747
 12018  1B30  0BF5               	decfsz	??_LCD_EnableGraphics,f
 12019  1B31  2B2E               	goto	u6747
 12020  1B32  3200               	nop2
 12021                           
 12022                           ;LDC_ROT.h: 385: LCD_WriteCommand(0x26);
 12023  1B33  3026               	movlw	38
 12024  1B34  319A  2218  319B   	fcall	_LCD_WriteCommand
 12025                           
 12026                           ;LDC_ROT.h: 386: _delay((unsigned long)((1)*(16000000/4000.0)));
 12027  1B37  3006               	movlw	6
 12028  1B38  00F5               	movwf	??_LCD_EnableGraphics
 12029  1B39  3030               	movlw	48
 12030  1B3A                     u6757:	
 12031  1B3A  0B89               	decfsz	9,f
 12032  1B3B  2B3A               	goto	u6757
 12033  1B3C  0BF5               	decfsz	??_LCD_EnableGraphics,f
 12034  1B3D  2B3A               	goto	u6757
 12035  1B3E  3200               	nop2
 12036  1B3F  0008               	return
 12037  1B40                     __end_of_LCD_EnableGraphics:	
 12038                           
 12039                           	psect	text28
 12040  1A50                     __ptext28:	
 12041 ;; *************** function _LCD_DisableGraphics *****************
 12042 ;; Defined at:
 12043 ;;		line 389 in file "LDC_ROT.h"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;		None
 12046 ;; Auto vars:     Size  Location     Type
 12047 ;;		None
 12048 ;; Return value:  Size  Location     Type
 12049 ;;                  1    wreg      void 
 12050 ;; Registers used:
 12051 ;;		wreg, status,2, status,0, pclath, cstack
 12052 ;; Tracked objects:
 12053 ;;		On entry : 0/0
 12054 ;;		On exit  : 0/0
 12055 ;;		Unchanged: 0/0
 12056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12061 ;;Total ram usage:        1 bytes
 12062 ;; Hardware stack levels used:    1
 12063 ;; Hardware stack levels required when called:    3
 12064 ;; This function calls:
 12065 ;;		_LCD_WriteCommand
 12066 ;; This function is called by:
 12067 ;;		_main
 12068 ;; This function uses a non-reentrant model
 12069 ;;
 12070                           
 12071                           
 12072                           ;psect for function _LCD_DisableGraphics
 12073  1A50                     _LCD_DisableGraphics:	
 12074                           
 12075                           ;LDC_ROT.h: 391: LCD_WriteCommand(0x20);
 12076                           
 12077                           ;incstack = 0
 12078                           ; Regs used in _LCD_DisableGraphics: [wreg+status,2+status,0+pclath+cstack]
 12079  1A50  3020               	movlw	32
 12080  1A51  319A  2218  319A   	fcall	_LCD_WriteCommand
 12081                           
 12082                           ;LDC_ROT.h: 392: _delay((unsigned long)((1)*(16000000/4000.0)));
 12083  1A54  3006               	movlw	6
 12084  1A55  00F5               	movwf	??_LCD_DisableGraphics
 12085  1A56  3030               	movlw	48
 12086  1A57                     u6767:	
 12087  1A57  0B89               	decfsz	9,f
 12088  1A58  2A57               	goto	u6767
 12089  1A59  0BF5               	decfsz	??_LCD_DisableGraphics,f
 12090  1A5A  2A57               	goto	u6767
 12091  1A5B  3200               	nop2
 12092  1A5C  0008               	return
 12093  1A5D                     __end_of_LCD_DisableGraphics:	
 12094                           
 12095                           	psect	text29
 12096  1B6B                     __ptext29:	
 12097 ;; *************** function _LCD_ClearGraphics *****************
 12098 ;; Defined at:
 12099 ;;		line 526 in file "LDC_ROT.h"
 12100 ;; Parameters:    Size  Location     Type
 12101 ;;		None
 12102 ;; Auto vars:     Size  Location     Type
 12103 ;;  y               1    7[COMMON] unsigned char 
 12104 ;;  x               1    6[COMMON] unsigned char 
 12105 ;; Return value:  Size  Location     Type
 12106 ;;                  1    wreg      void 
 12107 ;; Registers used:
 12108 ;;		wreg, status,2, status,0, pclath, cstack
 12109 ;; Tracked objects:
 12110 ;;		On entry : 0/0
 12111 ;;		On exit  : 0/0
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12118 ;;Total ram usage:        3 bytes
 12119 ;; Hardware stack levels used:    1
 12120 ;; Hardware stack levels required when called:    3
 12121 ;; This function calls:
 12122 ;;		_LCD_WriteCommand
 12123 ;;		_LCD_WriteData
 12124 ;; This function is called by:
 12125 ;;		_main
 12126 ;; This function uses a non-reentrant model
 12127 ;;
 12128                           
 12129                           
 12130                           ;psect for function _LCD_ClearGraphics
 12131  1B6B                     _LCD_ClearGraphics:	
 12132                           
 12133                           ;LDC_ROT.h: 530: unsigned char x, y;
 12134                           ;LDC_ROT.h: 531: for(y = 0; y < 64; y++)
 12135                           
 12136                           ;incstack = 0
 12137                           ; Regs used in _LCD_ClearGraphics: [wreg+status,2+status,0+pclath+cstack]
 12138  1B6B  01F7               	clrf	LCD_ClearGraphics@y
 12139  1B6C                     L16:	
 12140  1B6C  3040               	movlw	64
 12141  1B6D  0277               	subwf	LCD_ClearGraphics@y,w
 12142  1B6E  1803               	btfsc	3,0
 12143  1B6F  0008               	return
 12144                           
 12145                           ;LDC_ROT.h: 532: {
 12146                           ;LDC_ROT.h: 533: if(y < 32)
 12147  1B70  3020               	movlw	32
 12148  1B71  0277               	subwf	LCD_ClearGraphics@y,w
 12149  1B72  1803               	skipnc
 12150  1B73  2B7B               	goto	l3048
 12151                           
 12152                           ;LDC_ROT.h: 534: {
 12153                           ;LDC_ROT.h: 535: LCD_WriteCommand(0x80 | y);
 12154  1B74  0877               	movf	LCD_ClearGraphics@y,w
 12155  1B75  3880               	iorlw	128
 12156  1B76  319A  2218  319B   	fcall	_LCD_WriteCommand
 12157                           
 12158                           ;LDC_ROT.h: 536: LCD_WriteCommand(0x80);
 12159  1B79  3080               	movlw	128
 12160  1B7A  2B82               	goto	L15
 12161  1B7B                     l3048:	
 12162                           ;LDC_ROT.h: 537: }
 12163                           
 12164                           
 12165                           ;LDC_ROT.h: 538: else
 12166                           ;LDC_ROT.h: 539: {
 12167                           ;LDC_ROT.h: 540: LCD_WriteCommand(0x80 | (y-32));
 12168  1B7B  0877               	movf	LCD_ClearGraphics@y,w
 12169  1B7C  3EE0               	addlw	224
 12170  1B7D  3880               	iorlw	128
 12171  1B7E  319A  2218  319B   	fcall	_LCD_WriteCommand
 12172                           
 12173                           ;LDC_ROT.h: 541: LCD_WriteCommand(0x88);
 12174  1B81  3088               	movlw	136
 12175  1B82                     L15:	
 12176  1B82  319A  2218  319B   	fcall	_LCD_WriteCommand
 12177                           
 12178                           ;LDC_ROT.h: 542: }
 12179                           ;LDC_ROT.h: 543: for(x = 0; x < 8; x++)
 12180  1B85  01F6               	clrf	LCD_ClearGraphics@x
 12181  1B86  3008               	movlw	8
 12182  1B87  0276               	subwf	LCD_ClearGraphics@x,w
 12183  1B88  1803               	btfsc	3,0
 12184  1B89  2B9A               	goto	l3062
 12185  1B8A                     l3056:	
 12186                           
 12187                           ;LDC_ROT.h: 544: {
 12188                           ;LDC_ROT.h: 545: LCD_WriteData(0x00);
 12189  1B8A  3000               	movlw	0
 12190  1B8B  319A  221F  319B   	fcall	_LCD_WriteData
 12191                           
 12192                           ;LDC_ROT.h: 546: LCD_WriteData(0x00);
 12193  1B8E  3000               	movlw	0
 12194  1B8F  319A  221F  319B   	fcall	_LCD_WriteData
 12195  1B92  3001               	movlw	1
 12196  1B93  00F5               	movwf	??_LCD_ClearGraphics
 12197  1B94  0875               	movf	??_LCD_ClearGraphics,w
 12198  1B95  07F6               	addwf	LCD_ClearGraphics@x,f
 12199  1B96  3008               	movlw	8
 12200  1B97  0276               	subwf	LCD_ClearGraphics@x,w
 12201  1B98  1C03               	skipc
 12202  1B99  2B8A               	goto	l3056
 12203  1B9A                     l3062:	
 12204  1B9A  3001               	movlw	1
 12205  1B9B  00F5               	movwf	??_LCD_ClearGraphics
 12206  1B9C  0875               	movf	??_LCD_ClearGraphics,w
 12207  1B9D  07F7               	addwf	LCD_ClearGraphics@y,f
 12208  1B9E  2B6C               	goto	L16
 12209  1B9F                     __end_of_LCD_ClearGraphics:	
 12210                           
 12211                           	psect	text30
 12212  1A1F                     __ptext30:	
 12213 ;; *************** function _LCD_WriteData *****************
 12214 ;; Defined at:
 12215 ;;		line 349 in file "LDC_ROT.h"
 12216 ;; Parameters:    Size  Location     Type
 12217 ;;  data            1    wreg     unsigned char 
 12218 ;; Auto vars:     Size  Location     Type
 12219 ;;  data            1    4[COMMON] unsigned char 
 12220 ;; Return value:  Size  Location     Type
 12221 ;;                  1    wreg      void 
 12222 ;; Registers used:
 12223 ;;		wreg, status,2, status,0, pclath, cstack
 12224 ;; Tracked objects:
 12225 ;;		On entry : 0/0
 12226 ;;		On exit  : 0/0
 12227 ;;		Unchanged: 0/0
 12228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12233 ;;Total ram usage:        1 bytes
 12234 ;; Hardware stack levels used:    1
 12235 ;; Hardware stack levels required when called:    2
 12236 ;; This function calls:
 12237 ;;		_LCD_WriteByte
 12238 ;; This function is called by:
 12239 ;;		_LCD_TextDisplayString
 12240 ;;		_LCD_FillScreenGraphics
 12241 ;;		_LCD_ClearGraphics
 12242 ;;		_LCD_GraphicsDisplayString
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           
 12247                           ;psect for function _LCD_WriteData
 12248  1A1F                     _LCD_WriteData:	
 12249                           
 12250                           ;incstack = 0
 12251                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0+pclath+cstack]
 12252                           ;LCD_WriteData@data stored from wreg
 12253  1A1F  00F4               	movwf	LCD_WriteData@data
 12254                           
 12255                           ;LDC_ROT.h: 351: LATBbits.LATB0=1;
 12256  1A20  0022               	movlb	2	; select bank2
 12257  1A21  140D               	bsf	13,0	;volatile
 12258                           
 12259                           ;LDC_ROT.h: 352: LCD_WriteByte(data);
 12260  1A22  0874               	movf	LCD_WriteData@data,w
 12261  1A23  319E  2601         	fcall	_LCD_WriteByte
 12262  1A25  0008               	return
 12263  1A26                     __end_of_LCD_WriteData:	
 12264                           
 12265                           	psect	text31
 12266  1A18                     __ptext31:	
 12267 ;; *************** function _LCD_WriteCommand *****************
 12268 ;; Defined at:
 12269 ;;		line 355 in file "LDC_ROT.h"
 12270 ;; Parameters:    Size  Location     Type
 12271 ;;  command         1    wreg     unsigned char 
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;  command         1    4[COMMON] unsigned char 
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  1    wreg      void 
 12276 ;; Registers used:
 12277 ;;		wreg, status,2, status,0, pclath, cstack
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12287 ;;Total ram usage:        1 bytes
 12288 ;; Hardware stack levels used:    1
 12289 ;; Hardware stack levels required when called:    2
 12290 ;; This function calls:
 12291 ;;		_LCD_WriteByte
 12292 ;; This function is called by:
 12293 ;;		_LCD_Init
 12294 ;;		_LCD_TextDisplayString
 12295 ;;		_LCD_EnableGraphics
 12296 ;;		_LCD_DisableGraphics
 12297 ;;		_LCD_FillScreenGraphics
 12298 ;;		_LCD_ClearGraphics
 12299 ;;		_LCD_GraphicsDisplayString
 12300 ;; This function uses a non-reentrant model
 12301 ;;
 12302                           
 12303                           
 12304                           ;psect for function _LCD_WriteCommand
 12305  1A18                     _LCD_WriteCommand:	
 12306                           
 12307                           ;incstack = 0
 12308                           ; Regs used in _LCD_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 12309                           ;LCD_WriteCommand@command stored from wreg
 12310  1A18  00F4               	movwf	LCD_WriteCommand@command
 12311                           
 12312                           ;LDC_ROT.h: 357: LATBbits.LATB0=0;
 12313  1A19  0022               	movlb	2	; select bank2
 12314  1A1A  100D               	bcf	13,0	;volatile
 12315                           
 12316                           ;LDC_ROT.h: 358: LCD_WriteByte(command);
 12317  1A1B  0874               	movf	LCD_WriteCommand@command,w
 12318  1A1C  319E  2601         	fcall	_LCD_WriteByte
 12319  1A1E  0008               	return
 12320  1A1F                     __end_of_LCD_WriteCommand:	
 12321                           
 12322                           	psect	text32
 12323  1E01                     __ptext32:	
 12324 ;; *************** function _LCD_WriteByte *****************
 12325 ;; Defined at:
 12326 ;;		line 324 in file "LDC_ROT.h"
 12327 ;; Parameters:    Size  Location     Type
 12328 ;;  command         1    wreg     unsigned char 
 12329 ;; Auto vars:     Size  Location     Type
 12330 ;;  command         1    3[COMMON] unsigned char 
 12331 ;; Return value:  Size  Location     Type
 12332 ;;                  1    wreg      void 
 12333 ;; Registers used:
 12334 ;;		wreg, status,2, status,0
 12335 ;; Tracked objects:
 12336 ;;		On entry : 0/0
 12337 ;;		On exit  : 0/0
 12338 ;;		Unchanged: 0/0
 12339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12343 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12344 ;;Total ram usage:        3 bytes
 12345 ;; Hardware stack levels used:    1
 12346 ;; Hardware stack levels required when called:    1
 12347 ;; This function calls:
 12348 ;;		Nothing
 12349 ;; This function is called by:
 12350 ;;		_LCD_WriteData
 12351 ;;		_LCD_WriteCommand
 12352 ;; This function uses a non-reentrant model
 12353 ;;
 12354                           
 12355                           
 12356                           ;psect for function _LCD_WriteByte
 12357  1E01                     _LCD_WriteByte:	
 12358                           
 12359                           ;incstack = 0
 12360                           ; Regs used in _LCD_WriteByte: [wreg+status,2+status,0]
 12361                           ;LCD_WriteByte@command stored from wreg
 12362  1E01  00F3               	movwf	LCD_WriteByte@command
 12363                           
 12364                           ;LDC_ROT.h: 326: LATBbits.LATB1 = 1;
 12365  1E02  0022               	movlb	2	; select bank2
 12366  1E03  148D               	bsf	13,1	;volatile
 12367                           
 12368                           ;LDC_ROT.h: 327: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12369  1E04  301A               	movlw	26
 12370  1E05                     u6777:	
 12371  1E05  0B89               	decfsz	9,f
 12372  1E06  2E05               	goto	u6777
 12373  1E07  3200               	nop2
 12374                           
 12375                           ;LDC_ROT.h: 329: LATBbits.LATB3 = (command & (1 << 4)) >> 4;
 12376  1E08  0873               	movf	LCD_WriteByte@command,w
 12377  1E09  00F1               	movwf	??_LCD_WriteByte
 12378  1E0A  3004               	movlw	4
 12379  1E0B                     u2745:	
 12380  1E0B  36F1               	lsrf	??_LCD_WriteByte,f
 12381  1E0C  0B89               	decfsz	9,f
 12382  1E0D  2E0B               	goto	u2745
 12383  1E0E  0871               	movf	??_LCD_WriteByte,w
 12384  1E0F  3901               	andlw	1
 12385  1E10  00F2               	movwf	??_LCD_WriteByte+1
 12386  1E11  0DF2               	rlf	??_LCD_WriteByte+1,f
 12387  1E12  0DF2               	rlf	??_LCD_WriteByte+1,f
 12388  1E13  0DF2               	rlf	??_LCD_WriteByte+1,f
 12389  1E14  0022               	movlb	2	; select bank2
 12390  1E15  080D               	movf	13,w	;volatile
 12391  1E16  0672               	xorwf	??_LCD_WriteByte+1,w
 12392  1E17  39F7               	andlw	-9
 12393  1E18  0672               	xorwf	??_LCD_WriteByte+1,w
 12394  1E19  008D               	movwf	13	;volatile
 12395                           
 12396                           ;LDC_ROT.h: 330: LATBbits.LATB4 = (command & (1 << 5)) >> 5;
 12397  1E1A  0873               	movf	LCD_WriteByte@command,w
 12398  1E1B  00F1               	movwf	??_LCD_WriteByte
 12399  1E1C  3005               	movlw	5
 12400  1E1D                     u2755:	
 12401  1E1D  36F1               	lsrf	??_LCD_WriteByte,f
 12402  1E1E  0B89               	decfsz	9,f
 12403  1E1F  2E1D               	goto	u2755
 12404  1E20  0871               	movf	??_LCD_WriteByte,w
 12405  1E21  3901               	andlw	1
 12406  1E22  00F2               	movwf	??_LCD_WriteByte+1
 12407  1E23  0EF2               	swapf	??_LCD_WriteByte+1,f
 12408  1E24  080D               	movf	13,w	;volatile
 12409  1E25  0672               	xorwf	??_LCD_WriteByte+1,w
 12410  1E26  39EF               	andlw	-17
 12411  1E27  0672               	xorwf	??_LCD_WriteByte+1,w
 12412  1E28  008D               	movwf	13	;volatile
 12413                           
 12414                           ;LDC_ROT.h: 331: LATBbits.LATB5 = (command & (1 << 6)) >> 6;
 12415  1E29  0873               	movf	LCD_WriteByte@command,w
 12416  1E2A  00F1               	movwf	??_LCD_WriteByte
 12417  1E2B  3006               	movlw	6
 12418  1E2C                     u2765:	
 12419  1E2C  36F1               	lsrf	??_LCD_WriteByte,f
 12420  1E2D  0B89               	decfsz	9,f
 12421  1E2E  2E2C               	goto	u2765
 12422  1E2F  0871               	movf	??_LCD_WriteByte,w
 12423  1E30  3901               	andlw	1
 12424  1E31  00F2               	movwf	??_LCD_WriteByte+1
 12425  1E32  0EF2               	swapf	??_LCD_WriteByte+1,f
 12426  1E33  0DF2               	rlf	??_LCD_WriteByte+1,f
 12427  1E34  080D               	movf	13,w	;volatile
 12428  1E35  0672               	xorwf	??_LCD_WriteByte+1,w
 12429  1E36  39DF               	andlw	-33
 12430  1E37  0672               	xorwf	??_LCD_WriteByte+1,w
 12431  1E38  008D               	movwf	13	;volatile
 12432                           
 12433                           ;LDC_ROT.h: 332: LATBbits.LATB6 = (command & (1 << 7)) >> 7;
 12434  1E39  0873               	movf	LCD_WriteByte@command,w
 12435  1E3A  00F1               	movwf	??_LCD_WriteByte
 12436  1E3B  3007               	movlw	7
 12437  1E3C                     u2775:	
 12438  1E3C  36F1               	lsrf	??_LCD_WriteByte,f
 12439  1E3D  0B89               	decfsz	9,f
 12440  1E3E  2E3C               	goto	u2775
 12441  1E3F  0871               	movf	??_LCD_WriteByte,w
 12442  1E40  3901               	andlw	1
 12443  1E41  00F2               	movwf	??_LCD_WriteByte+1
 12444  1E42  0EF2               	swapf	??_LCD_WriteByte+1,f
 12445  1E43  0DF2               	rlf	??_LCD_WriteByte+1,f
 12446  1E44  0DF2               	rlf	??_LCD_WriteByte+1,f
 12447  1E45  080D               	movf	13,w	;volatile
 12448  1E46  0672               	xorwf	??_LCD_WriteByte+1,w
 12449  1E47  39BF               	andlw	-65
 12450  1E48  0672               	xorwf	??_LCD_WriteByte+1,w
 12451  1E49  008D               	movwf	13	;volatile
 12452                           
 12453                           ;LDC_ROT.h: 333: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12454  1E4A  301A               	movlw	26
 12455  1E4B                     u6787:	
 12456  1E4B  0B89               	decfsz	9,f
 12457  1E4C  2E4B               	goto	u6787
 12458  1E4D  3200               	nop2
 12459                           
 12460                           ;LDC_ROT.h: 334: LATBbits.LATB1 = 0;
 12461  1E4E  0022               	movlb	2	; select bank2
 12462  1E4F  108D               	bcf	13,1	;volatile
 12463                           
 12464                           ;LDC_ROT.h: 336: LATBbits.LATB1 = 1;
 12465  1E50  148D               	bsf	13,1	;volatile
 12466                           
 12467                           ;LDC_ROT.h: 337: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12468  1E51  301A               	movlw	26
 12469  1E52                     u6797:	
 12470  1E52  0B89               	decfsz	9,f
 12471  1E53  2E52               	goto	u6797
 12472  1E54  3200               	nop2
 12473                           
 12474                           ;LDC_ROT.h: 339: LATBbits.LATB3 = (command & (1 << 0)) >> 0;
 12475  1E55  0873               	movf	LCD_WriteByte@command,w
 12476  1E56  3901               	andlw	1
 12477  1E57  00F1               	movwf	??_LCD_WriteByte
 12478  1E58  0DF1               	rlf	??_LCD_WriteByte,f
 12479  1E59  0DF1               	rlf	??_LCD_WriteByte,f
 12480  1E5A  0DF1               	rlf	??_LCD_WriteByte,f
 12481  1E5B  0022               	movlb	2	; select bank2
 12482  1E5C  080D               	movf	13,w	;volatile
 12483  1E5D  0671               	xorwf	??_LCD_WriteByte,w
 12484  1E5E  39F7               	andlw	-9
 12485  1E5F  0671               	xorwf	??_LCD_WriteByte,w
 12486  1E60  008D               	movwf	13	;volatile
 12487                           
 12488                           ;LDC_ROT.h: 340: LATBbits.LATB4 = (command & (1 << 1)) >> 1;
 12489  1E61  3673               	lsrf	LCD_WriteByte@command,w
 12490  1E62  3901               	andlw	1
 12491  1E63  00F1               	movwf	??_LCD_WriteByte
 12492  1E64  0EF1               	swapf	??_LCD_WriteByte,f
 12493  1E65  080D               	movf	13,w	;volatile
 12494  1E66  0671               	xorwf	??_LCD_WriteByte,w
 12495  1E67  39EF               	andlw	-17
 12496  1E68  0671               	xorwf	??_LCD_WriteByte,w
 12497  1E69  008D               	movwf	13	;volatile
 12498                           
 12499                           ;LDC_ROT.h: 341: LATBbits.LATB5 = (command & (1 << 2)) >> 2;
 12500  1E6A  0873               	movf	LCD_WriteByte@command,w
 12501  1E6B  00F1               	movwf	??_LCD_WriteByte
 12502  1E6C  3002               	movlw	2
 12503  1E6D                     u2785:	
 12504  1E6D  36F1               	lsrf	??_LCD_WriteByte,f
 12505  1E6E  0B89               	decfsz	9,f
 12506  1E6F  2E6D               	goto	u2785
 12507  1E70  0871               	movf	??_LCD_WriteByte,w
 12508  1E71  3901               	andlw	1
 12509  1E72  00F2               	movwf	??_LCD_WriteByte+1
 12510  1E73  0EF2               	swapf	??_LCD_WriteByte+1,f
 12511  1E74  0DF2               	rlf	??_LCD_WriteByte+1,f
 12512  1E75  080D               	movf	13,w	;volatile
 12513  1E76  0672               	xorwf	??_LCD_WriteByte+1,w
 12514  1E77  39DF               	andlw	-33
 12515  1E78  0672               	xorwf	??_LCD_WriteByte+1,w
 12516  1E79  008D               	movwf	13	;volatile
 12517                           
 12518                           ;LDC_ROT.h: 342: LATBbits.LATB6 = (command & (1 << 3)) >> 3;
 12519  1E7A  0873               	movf	LCD_WriteByte@command,w
 12520  1E7B  00F1               	movwf	??_LCD_WriteByte
 12521  1E7C  3003               	movlw	3
 12522  1E7D                     u2795:	
 12523  1E7D  36F1               	lsrf	??_LCD_WriteByte,f
 12524  1E7E  0B89               	decfsz	9,f
 12525  1E7F  2E7D               	goto	u2795
 12526  1E80  0871               	movf	??_LCD_WriteByte,w
 12527  1E81  3901               	andlw	1
 12528  1E82  00F2               	movwf	??_LCD_WriteByte+1
 12529  1E83  0EF2               	swapf	??_LCD_WriteByte+1,f
 12530  1E84  0DF2               	rlf	??_LCD_WriteByte+1,f
 12531  1E85  0DF2               	rlf	??_LCD_WriteByte+1,f
 12532  1E86  080D               	movf	13,w	;volatile
 12533  1E87  0672               	xorwf	??_LCD_WriteByte+1,w
 12534  1E88  39BF               	andlw	-65
 12535  1E89  0672               	xorwf	??_LCD_WriteByte+1,w
 12536  1E8A  008D               	movwf	13	;volatile
 12537                           
 12538                           ;LDC_ROT.h: 343: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12539  1E8B  301A               	movlw	26
 12540  1E8C                     u6807:	
 12541  1E8C  0B89               	decfsz	9,f
 12542  1E8D  2E8C               	goto	u6807
 12543  1E8E  3200               	nop2
 12544                           
 12545                           ;LDC_ROT.h: 344: LATBbits.LATB1 = 0;
 12546  1E8F  0022               	movlb	2	; select bank2
 12547  1E90  108D               	bcf	13,1	;volatile
 12548                           
 12549                           ;LDC_ROT.h: 346: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12550  1E91  301A               	movlw	26
 12551  1E92                     u6817:	
 12552  1E92  0B89               	decfsz	9,f
 12553  1E93  2E92               	goto	u6817
 12554  1E94  3200               	nop2
 12555  1E95  0008               	return
 12556  1E96                     __end_of_LCD_WriteByte:	
 12557                           
 12558                           	psect	text33
 12559  1A46                     __ptext33:	
 12560 ;; *************** function _InitKeypad *****************
 12561 ;; Defined at:
 12562 ;;		line 100 in file "LOAD20210.c"
 12563 ;; Parameters:    Size  Location     Type
 12564 ;;		None
 12565 ;; Auto vars:     Size  Location     Type
 12566 ;;		None
 12567 ;; Return value:  Size  Location     Type
 12568 ;;                  1    wreg      void 
 12569 ;; Registers used:
 12570 ;;		wreg, status,2
 12571 ;; Tracked objects:
 12572 ;;		On entry : 0/0
 12573 ;;		On exit  : 0/0
 12574 ;;		Unchanged: 0/0
 12575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12580 ;;Total ram usage:        0 bytes
 12581 ;; Hardware stack levels used:    1
 12582 ;; Hardware stack levels required when called:    1
 12583 ;; This function calls:
 12584 ;;		Nothing
 12585 ;; This function is called by:
 12586 ;;		_main
 12587 ;; This function uses a non-reentrant model
 12588 ;;
 12589                           
 12590                           
 12591                           ;psect for function _InitKeypad
 12592  1A46                     _InitKeypad:	
 12593                           
 12594                           ;LOAD20210.c: 103: OPTION_REGbits.nWPUEN =0;
 12595                           
 12596                           ;incstack = 0
 12597                           ; Regs used in _InitKeypad: [wreg+status,2]
 12598  1A46  0021               	movlb	1	; select bank1
 12599  1A47  1397               	bcf	23,7	;volatile
 12600                           
 12601                           ;LOAD20210.c: 104: TRISC = 0b11110000;
 12602  1A48  30F0               	movlw	240
 12603  1A49  008E               	movwf	14	;volatile
 12604                           
 12605                           ;LOAD20210.c: 105: WPUC = 0b11110000;
 12606  1A4A  30F0               	movlw	240
 12607  1A4B  0024               	movlb	4	; select bank4
 12608  1A4C  008E               	movwf	14	;volatile
 12609                           
 12610                           ;LOAD20210.c: 106: ANSELC=0;
 12611  1A4D  0023               	movlb	3	; select bank3
 12612  1A4E  018E               	clrf	14	;volatile
 12613  1A4F  0008               	return
 12614  1A50                     __end_of_InitKeypad:	
 12615                           
 12616                           	psect	text34
 12617  1A12                     __ptext34:	
 12618 ;; *************** function _DAC_CONFIG *****************
 12619 ;; Defined at:
 12620 ;;		line 259 in file "LDC_ROT.h"
 12621 ;; Parameters:    Size  Location     Type
 12622 ;;		None
 12623 ;; Auto vars:     Size  Location     Type
 12624 ;;		None
 12625 ;; Return value:  Size  Location     Type
 12626 ;;                  1    wreg      void 
 12627 ;; Registers used:
 12628 ;;		wreg
 12629 ;; Tracked objects:
 12630 ;;		On entry : 0/0
 12631 ;;		On exit  : 0/0
 12632 ;;		Unchanged: 0/0
 12633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12638 ;;Total ram usage:        0 bytes
 12639 ;; Hardware stack levels used:    1
 12640 ;; Hardware stack levels required when called:    1
 12641 ;; This function calls:
 12642 ;;		Nothing
 12643 ;; This function is called by:
 12644 ;;		_main
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           
 12649                           ;psect for function _DAC_CONFIG
 12650  1A12                     _DAC_CONFIG:	
 12651                           
 12652                           ;LDC_ROT.h: 261: DAC1CON0 = 0b10100000;
 12653                           
 12654                           ;incstack = 0
 12655                           ; Regs used in _DAC_CONFIG: [wreg]
 12656  1A12  30A0               	movlw	160
 12657  1A13  002B               	movlb	11	; select bank11
 12658  1A14  008E               	movwf	14	;volatile
 12659                           
 12660                           ;LDC_ROT.h: 262: DACLD = 0b00000001;
 12661  1A15  3001               	movlw	1
 12662  1A16  008D               	movwf	13	;volatile
 12663  1A17  0008               	return
 12664  1A18                     __end_of_DAC_CONFIG:	
 12665                           
 12666                           	psect	text35
 12667  1A2D                     __ptext35:	
 12668 ;; *************** function _DAC1_Load10bitInputData *****************
 12669 ;; Defined at:
 12670 ;;		line 265 in file "LDC_ROT.h"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;  input16BitDa    2    1[COMMON] unsigned int 
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;		None
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, status,2
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12688 ;;Total ram usage:        2 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:    1
 12691 ;; This function calls:
 12692 ;;		Nothing
 12693 ;; This function is called by:
 12694 ;;		_main
 12695 ;; This function uses a non-reentrant model
 12696 ;;
 12697                           
 12698                           
 12699                           ;psect for function _DAC1_Load10bitInputData
 12700  1A2D                     _DAC1_Load10bitInputData:	
 12701                           
 12702                           ;LDC_ROT.h: 269: DAC1CON0bits.DAC1FM = 1;
 12703                           
 12704                           ;incstack = 0
 12705                           ; Regs used in _DAC1_Load10bitInputData: [wreg+status,2]
 12706  1A2D  002B               	movlb	11	; select bank11
 12707  1A2E  170E               	bsf	14,6	;volatile
 12708                           
 12709                           ;LDC_ROT.h: 272: DAC1REFL = (uint8_t) input16BitData;
 12710  1A2F  0871               	movf	DAC1_Load10bitInputData@input16BitData,w
 12711  1A30  008F               	movwf	15	;volatile
 12712                           
 12713                           ;LDC_ROT.h: 273: DAC1REFH = (uint8_t)(input16BitData >> 8);
 12714  1A31  0872               	movf	DAC1_Load10bitInputData@input16BitData+1,w
 12715  1A32  0090               	movwf	16	;volatile
 12716                           
 12717                           ;LDC_ROT.h: 275: (DACLDbits.DAC1LD = 1);
 12718  1A33  140D               	bsf	13,0	;volatile
 12719  1A34  0008               	return
 12720  1A35                     __end_of_DAC1_Load10bitInputData:	
 12721                           
 12722                           	psect	text36
 12723  1A3D                     __ptext36:	
 12724 ;; *************** function _ADC_Initialize *****************
 12725 ;; Defined at:
 12726 ;;		line 67 in file "ADC_INIT.c"
 12727 ;; Parameters:    Size  Location     Type
 12728 ;;		None
 12729 ;; Auto vars:     Size  Location     Type
 12730 ;;		None
 12731 ;; Return value:  Size  Location     Type
 12732 ;;                  1    wreg      void 
 12733 ;; Registers used:
 12734 ;;		wreg, status,2
 12735 ;; Tracked objects:
 12736 ;;		On entry : 0/0
 12737 ;;		On exit  : 0/0
 12738 ;;		Unchanged: 0/0
 12739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12744 ;;Total ram usage:        0 bytes
 12745 ;; Hardware stack levels used:    1
 12746 ;; Hardware stack levels required when called:    1
 12747 ;; This function calls:
 12748 ;;		Nothing
 12749 ;; This function is called by:
 12750 ;;		_main
 12751 ;; This function uses a non-reentrant model
 12752 ;;
 12753                           
 12754                           
 12755                           ;psect for function _ADC_Initialize
 12756  1A3D                     _ADC_Initialize:	
 12757                           
 12758                           ;ADC_INIT.c: 72: ADCON1 = 11010001 ;
 12759                           
 12760                           ;incstack = 0
 12761                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12762  1A3D  30D1               	movlw	209
 12763  1A3E  0029               	movlb	9	; select bank9
 12764  1A3F  0091               	movwf	17	;volatile
 12765                           
 12766                           ;ADC_INIT.c: 75: ADCON2 = 0x00;
 12767  1A40  0192               	clrf	18	;volatile
 12768                           
 12769                           ;ADC_INIT.c: 78: ADRESL = 0x00;
 12770  1A41  018E               	clrf	14	;volatile
 12771                           
 12772                           ;ADC_INIT.c: 81: ADRESH = 0x00;
 12773  1A42  018F               	clrf	15	;volatile
 12774                           
 12775                           ;ADC_INIT.c: 84: ADCON0 = 0x1F;
 12776  1A43  301F               	movlw	31
 12777  1A44  0090               	movwf	16	;volatile
 12778  1A45  0008               	return
 12779  1A46                     __end_of_ADC_Initialize:	
 12780                           
 12781                           	psect	text37
 12782  1A8D                     __ptext37:	
 12783 ;; *************** function _ADC_GetConversion *****************
 12784 ;; Defined at:
 12785 ;;		line 115 in file "ADC_INIT.c"
 12786 ;; Parameters:    Size  Location     Type
 12787 ;;  channel         1    wreg     enum E17242
 12788 ;; Auto vars:     Size  Location     Type
 12789 ;;  channel         1    4[COMMON] enum E17242
 12790 ;; Return value:  Size  Location     Type
 12791 ;;                  2    1[COMMON] unsigned int 
 12792 ;; Registers used:
 12793 ;;		wreg, status,2, status,0
 12794 ;; Tracked objects:
 12795 ;;		On entry : 0/0
 12796 ;;		On exit  : 0/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12801 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12803 ;;Total ram usage:        4 bytes
 12804 ;; Hardware stack levels used:    1
 12805 ;; Hardware stack levels required when called:    1
 12806 ;; This function calls:
 12807 ;;		Nothing
 12808 ;; This function is called by:
 12809 ;;		_main
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           
 12814                           ;psect for function _ADC_GetConversion
 12815  1A8D                     _ADC_GetConversion:	
 12816                           
 12817                           ;incstack = 0
 12818                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 12819                           ;ADC_GetConversion@channel stored from wreg
 12820  1A8D  00F4               	movwf	ADC_GetConversion@channel
 12821                           
 12822                           ;ADC_INIT.c: 118: ADCON0bits.CHS = channel;
 12823  1A8E  0874               	movf	ADC_GetConversion@channel,w
 12824  1A8F  00F3               	movwf	??_ADC_GetConversion
 12825  1A90  0DF3               	rlf	??_ADC_GetConversion,f
 12826  1A91  0DF3               	rlf	??_ADC_GetConversion,f
 12827  1A92  0029               	movlb	9	; select bank9
 12828  1A93  0810               	movf	16,w	;volatile
 12829  1A94  0673               	xorwf	??_ADC_GetConversion,w
 12830  1A95  3903               	andlw	-253
 12831  1A96  0673               	xorwf	??_ADC_GetConversion,w
 12832  1A97  0090               	movwf	16	;volatile
 12833                           
 12834                           ;ADC_INIT.c: 121: ADCON0bits.ADON = 1;
 12835  1A98  1410               	bsf	16,0	;volatile
 12836                           
 12837                           ;ADC_INIT.c: 124: _delay((unsigned long)((5)*(16000000/4000000.0)));
 12838  1A99  3006               	movlw	6
 12839  1A9A                     u6827:	
 12840  1A9A  0B89               	decfsz	9,f
 12841  1A9B  2A9A               	goto	u6827
 12842  1A9C  3200               	nop2
 12843                           
 12844                           ;ADC_INIT.c: 127: ADCON0bits.GO = 1;
 12845  1A9D  0029               	movlb	9	; select bank9
 12846  1A9E  1490               	bsf	16,1	;volatile
 12847  1A9F                     l329:	
 12848                           ;ADC_INIT.c: 131: {
 12849                           
 12850                           ;ADC_INIT.c: 130: while (ADCON0bits.GO)
 12851                           
 12852  1A9F  1890               	btfsc	16,1	;volatile
 12853  1AA0  2A9F               	goto	l329
 12854                           
 12855                           ;ADC_INIT.c: 132: }
 12856                           ;ADC_INIT.c: 135: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12857  1AA1  080F               	movf	15,w	;volatile
 12858  1AA2  00F2               	movwf	?_ADC_GetConversion+1
 12859  1AA3  080E               	movf	14,w	;volatile
 12860  1AA4  00F1               	movwf	?_ADC_GetConversion
 12861  1AA5  0008               	return
 12862  1AA6                     __end_of_ADC_GetConversion:	
 12863                           
 12864                           	psect	intentry
 12865  0004                     __pintentry:	
 12866 ;; *************** function _isr *****************
 12867 ;; Defined at:
 12868 ;;		line 58 in file "LOAD20210.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;		None
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;		None
 12873 ;; Return value:  Size  Location     Type
 12874 ;;                  1    wreg      void 
 12875 ;; Registers used:
 12876 ;;		status,2
 12877 ;; Tracked objects:
 12878 ;;		On entry : 0/0
 12879 ;;		On exit  : 0/0
 12880 ;;		Unchanged: 0/0
 12881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12886 ;;Total ram usage:        1 bytes
 12887 ;; Hardware stack levels used:    1
 12888 ;; This function calls:
 12889 ;;		Nothing
 12890 ;; This function is called by:
 12891 ;;		Interrupt level 1
 12892 ;; This function uses a non-reentrant model
 12893 ;;
 12894                           
 12895  0004                     _isr:	
 12896                           
 12897                           ;incstack = 0
 12898  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12899                           
 12900                           ; Regs used in _isr: [status,2]
 12901  0005  3180               	pagesel	$
 12902  0006  0020               	movlb	0	; select bank0
 12903  0007  087F               	movf	127,w
 12904  0008  00F0               	movwf	??_isr
 12905                           
 12906                           ;LOAD20210.c: 61: if (IOCAF3 == 1)
 12907  0009  0027               	movlb	7	; select bank7
 12908  000A  1D93               	btfss	19,3	;volatile
 12909  000B  2810               	goto	i1l204
 12910                           
 12911                           ;LOAD20210.c: 62: {
 12912                           ;LOAD20210.c: 63: IOCAF3 =0;
 12913  000C  1193               	bcf	19,3	;volatile
 12914                           
 12915                           ;LOAD20210.c: 65: count=0;
 12916  000D  0020               	movlb	0	; select bank0
 12917  000E  01EB               	clrf	_count
 12918  000F  01EC               	clrf	_count+1
 12919  0010                     i1l204:	
 12920  0010  0870               	movf	??_isr,w
 12921  0011  0020               	movlb	0	; select bank0
 12922  0012  00FF               	movwf	127
 12923  0013  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12924  0014  0009               	retfie
 12925  0015                     __end_of_isr:	
 12926  007E                     btemp	set	126	;btemp
 12927  007E                     int$flags	set	126
 12928  007E                     wtemp0	set	126


Data Sizes:
    Strings     42
    Constant    2646
    Data        63
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     75      80
    BANK1            80     23      66
    BANK2            80      0      25
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> naif(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_FillScreenGraphics@graphic	PTR const unsigned char  size(2) Largest target is 1024
		 -> des(CODE[1024]), 

    LCD_TextDisplayString@string	PTR unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_2(CODE[17]), naif(BANK1[17]), 


Critical Paths under _main in COMMON

    _main->___lwtoft
    _switch_press_scan->_keypad_scanner
    _sprintf->___awdiv
    _sprintf->___llmod
    _scale->___awdiv
    _fround->___awdiv
    ___wmul->___awdiv
    ___ftmul->___awdiv
    ___ftmul->___lwtoft
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___lwtoft->___ftpack
    _LCD_TextDisplayString->_LCD_WriteCommand
    _LCD_TextDisplayString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCommand
    _LCD_FillScreenGraphics->_LCD_WriteCommand
    _LCD_FillScreenGraphics->_LCD_WriteData
    _LCD_EnableGraphics->_LCD_WriteCommand
    _LCD_DisableGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteData
    _LCD_WriteData->_LCD_WriteByte
    _LCD_WriteCommand->_LCD_WriteByte

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   75984
                                             71 BANK0      4     4      0
                  _ADC_GetConversion
                     _ADC_Initialize
            _DAC1_Load10bitInputData
                         _DAC_CONFIG
                         _InitKeypad
                  _LCD_ClearGraphics
                _LCD_DisableGraphics
                 _LCD_EnableGraphics
             _LCD_FillScreenGraphics
                           _LCD_Init
              _LCD_TextDisplayString
              _OSCILLATOR_Initialize
                            ___ftmul
                           ___lwtoft
                             ___wmul
                            _sprintf
                  _switch_press_scan
 ---------------------------------------------------------------------------------
 (1) _switch_press_scan                                    2     2      0      46
                                              3 COMMON     2     2      0
                     _keypad_scanner
 ---------------------------------------------------------------------------------
 (2) _keypad_scanner                                       2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             41    36      5   59645
                                             60 BANK0     11     6      5
                                              0 BANK1     23    23      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3   14664
                                             27 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              14    11      3   14385
                                             27 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    5340
                                              5 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    5262
                                             11 BANK0     16    10      6
                  _ADC_GetConversion (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1985
                                              8 COMMON     4     0      4
                                              0 BANK0      5     5      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     431
                                              1 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     827
                                              1 COMMON     6     0      6
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2643
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     671
                                             10 COMMON     2     2      0
                                              5 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     546
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     444
                                             36 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4247
                                             54 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3997
                                             41 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              1 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     648
                                              1 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2572
                                              9 COMMON     3     0      3
                                              0 BANK0      1     1      0
                  _ADC_GetConversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2464
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_TextDisplayString                                6     4      2     835
                                              5 COMMON     6     4      2
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                              5 COMMON     2     2      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_FillScreenGraphics                              12    10      2     972
                                              5 COMMON     4     2      2
                                              0 BANK0      8     8      0
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_EnableGraphics                                   1     1      0     198
                                              5 COMMON     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_DisableGraphics                                  1     1      0     198
                                              5 COMMON     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_ClearGraphics                                    3     3      0     554
                                              5 COMMON     3     3      0
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        1     1      0     198
                                              4 COMMON     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCommand                                     1     1      0     198
                                              4 COMMON     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteByte                                        3     3      0     176
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitKeypad                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DAC_CONFIG                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DAC1_Load10bitInputData                              2     0      2     108
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _DAC1_Load10bitInputData
   _DAC_CONFIG
   _InitKeypad
   _LCD_ClearGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _LCD_DisableGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
   _LCD_EnableGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
   _LCD_FillScreenGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _LCD_Init
     _LCD_WriteCommand
       _LCD_WriteByte
   _LCD_TextDisplayString
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _OSCILLATOR_Initialize
   ___ftmul
     _ADC_GetConversion (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwtoft
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           _ADC_GetConversion (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       _ADC_GetConversion (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             _ADC_GetConversion (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_GetConversion (ARG)
               ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           _ADC_GetConversion (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _switch_press_scan
     _keypad_scanner

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     17      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      19       9       31.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      B8      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      B8      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Feb 27 19:28:48 2021

                 ??_LCD_EnableGraphics 0075                            __CFG_CP$OFF 0000  
                         ___awdiv@sign 0022                    ___wmul@multiplicand 0027  
                  __size_of_DAC_CONFIG 0006                           ___ftadd@exp1 0055  
                         ___ftadd@exp2 0054                            __CFG_LVP$ON 0000  
                         ___ftadd@sign 0053                                    l220 136B  
                                  l212 1345                                    l221 1366  
                                  l213 1340                                    l207 1332  
                                  l240 13D6                                    l232 13AA  
                                  l224 1384                                    l216 1358  
                                  l208 132D                                    l241 13D1  
                                  l233 13A5                                    l225 137F  
                                  l217 1353                                    l260 143B  
                                  l252 140F                                    l244 13E9  
                                  l236 13BD                                    l228 1397  
                                  l261 1436                                    l253 140A  
                                  l245 13E4                                    l237 13B8  
                                  l229 1392                                    l430 05C7  
                                  l264 144E                                    l256 1428  
                                  l248 13FC                                    l329 1A9F  
                                  l441 1AC8                                    l265 1449  
                                  l257 1423                                    l249 13F7  
                                  l281 1550                                    l284 1548  
                                  l381 00D0                                    l269 145C  
                                  l607 130D                                    l626 1D5B  
                                  l650 11A5                                    l627 1D63  
                                  l619 1D48                                    l389 01F7  
                                  l727 1DE7                                    l676 1F7B  
                                  l686 1FF4                                    _GIE 005F  
                                  _Key 007C                                    _des 0631  
                                  _isr 0004                           ___awmod@sign 0077  
                         __CFG_BORV$LO 0000                                    wreg 0009  
                          _sprintf$938 00C2                      ?_LCD_WriteCommand 0070  
                         __CFG_ZCD$OFF 0000                     ??_LCD_WriteCommand 0074  
                                 l3024 10A2                                   l3034 1100  
                                 l3018 109D                                   l4002 03CF  
                                 l2340 1C27                                   l3062 1B9A  
                                 l3056 1B8A                                   l3048 1B7B  
                                 l2352 1C34                                   l2344 1C2E  
                                 l4032 04FE                                   l4016 0412  
                                 l4008 03EC                                   l4040 0516  
                                 l2354 1C40                                   l2362 1C55  
                                 l4050 0542                                   l3330 1A77  
                                 l2276 1AC2                                   l2710 1FDE  
                                 l2366 1C5D                                   l2358 1C4C  
                                 l4062 0556                                   l4038 0511  
                                 l4072 05AB                                   l4056 0550  
                                 l4152 1509                                   l3602 1CA7  
                                 l4090 062C                                   l4138 14AF  
                                 l3620 1135                                   l2716 1FEB  
                                 l2708 1FD0                                   l4068 058D  
                                 l4164 153C                                   l3542 1D25  
                                 l2718 1FF7                                   l3606 1CAF  
                                 l4086 05E3                                   l4190 15AD  
                                 l3552 1D4D                                   l3544 1D2F  
                                 l3616 112E                                   l3720 1F22  
                                 l3704 1EFE                                   l4088 0056  
                                 l4168 1540                                   l3554 1D55  
                                 l3546 1D34                                   l3538 1D1E  
                                 l3650 1184                                   l3626 1144  
                                 l2850 1DF8                                   l2818 1D93  
                                 l2690 1F9C                                   l2666 1A69  
                                 l2780 1BB5                                   l3644 1171  
                                 l2844 1DDE                                   l2836 1DC3  
                                 l2860 0E59                                   l3804 1237  
                                 l2676 1F63                                   l3580 1C78  
                                 l3716 1F1A                                   l3708 1F06  
                                 l3740 0F5B                                   l3662 11B7  
                                 l3646 117B                                   l3638 115E  
                                 l2846 1DEA                                   l2838 1DD1  
                                 l2870 0E87                                   l2862 0E67  
                                 l3822 12CA                                   l3814 1282  
                                 l3590 1C80                                   l3574 1C6D  
                                 l3902 0102                                   l2960 1013  
                                 l2952 1007                                   l2784 1BCB  
                                 l3656 1197                                   l3648 1180  
                                 l3840 1304                                   l3832 12E9  
                                 l3592 1C8C                                   l3912 0137  
                                 l3666 11C9                                   l3658 11A1  
                                 l3850 1AE3                                   l2874 0E92  
                                 l2890 1C09                                   l3842 1310  
                                 l3834 12F7                                   l2698 1FB6  
                                 l3770 16C4                                   l2956 100D  
                                 l2964 101B                                   l3676 11E4  
                                 l2884 1BE3                                   l3860 1B56  
                                 l3692 1EC3                                   l3748 0FD3  
                                 l3764 1665                                   l2886 1BF1  
                                 l2894 1C14                                   l3598 1C9E  
                                 l3686 1EAD                                   l3782 1784  
                                 l3774 16E1                                   l3950 0263  
                                 l3942 022C                                   l3936 01E0  
                                 l3928 0193                                   l3872 007E  
                                 l3858 1B44                                   l3954 0277  
                                 l3788 17E3                                   l3980 033D  
                                 l3964 02AB                                   l3798 121A  
                                 l3974 0306                                   l3894 00D2  
                                 l3886 0093                                   l3968 0300  
                                 l3896 00EE                                   l3888 00CB  
                                 l3994 0358                                   l3996 03BC  
                                 ?_isr 0070                                   STR_1 2087  
                                 STR_2 0A31                                   STR_3 208C  
                                 STR_4 2076                                   u3005 1C4D  
                                 u4105 1D9A                                   u4205 0E5C  
                                 u4135 1DC4                                   u4225 0E68  
                                 u4305 1C0A                                   u4235 0E7C  
                                 u4165 1DDF                                   u4245 0E88  
                                 u6005 1B4A                                   u2815 1AC9  
                                 u2745 1E0B                                   u2825 1ACE  
                                 u2755 1E1D                                   u4275 1BE6  
                                 u2765 1E2C                                   u5405 1C8D  
                                 u6205 0331                                   u2775 1E3C  
                                 u5335 1D6A                                   u5255 1D2A  
                                 u4295 1BFF                                   u3815 1F9D  
                                 u5415 1C97                                   u6135 0203  
                                 u2785 1E6D                                   u3905 1FEC  
                                 u3825 1FAD                                   u5425 1C9F  
                                 u6145 0238                                   u2795 1E7D  
                                 u5275 1D43                                   u3835 1FB7  
                                 u5605 1185                                   u6245 03DA  
                                 u5295 1D50                                   u2975 1C37  
                                 u6335 0581                                   u6255 03E8  
                                 u6175 0261                                   u6095 014C  
                                 u5545 115F                                   u5385 1C83  
                                 u5705 1ECF                                   u6425 1527  
                                 u5635 1198                                   u3875 1FD1  
                                 u2995 1C46                                   u5715 1EDF  
                                 u6355 05A1                                   u6507 1339  
                                 u6365 05BF                                   u6517 134C  
                                 u6445 1593                                   u5575 1172  
                                 u5735 1F07                                   u6607 1403  
                                 u6527 135F                                   u5905 12AD  
                                 u5745 1F0D                                   u6617 141C  
                                 u6537 1378                                   u6707 1CF8  
                                 u6627 142F                                   u6547 138B  
                                 u6717 1D04                                   u6637 1442  
                                 u6557 139E                                   u6477 1496  
                                 u6807 1E8C                                   u6727 1D10  
                                 u5775 1F23                                   u6647 1455  
                                 u6567 13B1                                   u6487 150F  
                                 u6817 1E92                                   u6737 1B22  
                                 u6657 1CBA                                   u5945 12EA  
                                 u5785 1F29                                   u6577 13CA  
                                 u6497 1326                                   u6827 1A9A  
                                 u6747 1B2E                                   u6667 1CC6  
                                 u6587 13DD                                   u6757 1B3A  
                                 u6677 1CD4                                   u6597 13F0  
                                 u6767 1A57                                   u6687 1CE0  
                                 u5975 1305                                   u5895 1283  
                                 u6777 1E05                                   u6697 1CEC  
                                 u6787 1E4B                                   u6797 1E52  
                                 _WPUC 020E                           __CFG_WRT$OFF 0000  
                                 _naif 00B1                                   _main 1461  
                         ___ftpack@arg 0071                           ___ftpack@exp 0074  
                                 fsr0h 0005                                   fsr1h 0007  
                                 indf0 0000                                   fsr0l 0004  
                                 indf1 0001                                   fsr1l 0006  
                                 btemp 007E                                   start 0015  
            ??_DAC1_Load10bitInputData 0073                          __CFG_IESO$OFF 0000  
                        _LCD_WriteData 1A1F                          __CFG_MCLRE$ON 0000  
                        _LCD_WriteByte 1E01                           ___ftmul@cntr 0039  
                         ___ftmul@sign 003A          LCD_FillScreenGraphics@graphic 0075  
                         ___fttol@exp1 0051                           ___fttol@lval 004D  
                                ??_isr 0070                       __end_of_LCD_Init 1D16  
       __size_of_OSCILLATOR_Initialize 0007          __end_of_OSCILLATOR_Initialize 1A2D  
              LCD_WriteCommand@command 0074                                  ?_main 0070  
                                _DACLD 058D                    _LCD_DisableGraphics 1A50  
                      __end_of___awdiv 1CB4                        __end_of___ftadd 11FC  
                        __CFG_WDTE$OFF 0000                        __end_of___awmod 1C62  
                      __end_of___ftneg 1A3D                        __end_of___lldiv 0E9B  
                      __end_of___ftmul 1F4A                        ___awdiv@divisor 0078  
                      __end_of___llmod 1C1D                        __end_of___ftsub 1AF9  
                      __end_of___fttol 1E01                                  _IOCIE 005B  
                                i1l204 0010                        ___awdiv@counter 0021  
                                _TRISA 008C                                  _TRISB 008D  
                                _TRISC 008E                                  _TRISD 008F  
                         ___lltoft@exp 007A                         __CFG_FCMEN$OFF 0000  
                     ??_keypad_scanner 0071                                  _black 0A42  
                      __end_of_dpowers 2028                                  _hello 0120  
                                _count 006B                                  _scale 15BC  
                      __end_of_isdigit 1A6B                          ___ftpack@sign 0075  
                       __CFG_BOREN$OFF 0000                LCD_FillScreenGraphics@x 0078  
              LCD_FillScreenGraphics@y 0077                   ?_LCD_DisableGraphics 0070  
                                status 0003                                  wtemp0 007E  
                      __end_of_sprintf 0631                         ?_LCD_WriteData 0070  
                       ?_LCD_WriteByte 0070                             _InitKeypad 1A46  
                      __initialization 0017                           __end_of_main 15BC  
                       __CFG_LPBOR$OFF 0000                                 ??_main 0067  
                        ___fttol@sign1 004C               ??_LCD_FillScreenGraphics 0020  
                       __CFG_PLLEN$OFF 0000                   __size_of__tdiv_to_l_ 00B6  
                               _ADCON0 0490                                 _ADCON1 0491  
                               _ADCON2 0492                       ___llmod@dividend 0029  
                               ?_scale 003B                                 _ADRESH 048F  
                               _ADRESL 048E                       ___awdiv@dividend 007A  
                         ??_DAC_CONFIG 0071                                 _ANSELA 018C  
                               _ANSELB 018D                                 _ANSELC 018E  
                               _ANSELD 018F                       __end_of___ftpack 1D7A  
                               _BORCON 009D                                 _IOCAF3 1C9B  
                               _IOCAP3 1C8B                       __end_of___lltoft 1B6B  
                               _ODCONB 028D                                 _INLVLA 038C  
                     __end_of___lwtoft 1A8D                  ??_LCD_DisableGraphics 0075  
                               _OSCCON 009B                                 _UPDOWN 00A0  
                               _Alpha1 1800                                 _Alpha2 18FA  
                       __CFG_PWRTE$OFF 0000                       __end_of__powers_ 204F  
                               ___ftge 1B9F                                 ___wmul 1ABF  
                            ??___awdiv 0020                              ??___ftadd 004F  
                            ??___awmod 0075                              ??___ftneg 0074  
                            ??___lldiv 0079                              ??___ftmul 0031  
                            ??___llmod 007A                              ??___ftsub 007C  
                            ??___fttol 0048                                 _fround 0E9B  
                     ___awdiv@quotient 0023                        ___awmod@divisor 0071  
                      ___awmod@counter 0076                     __end_of_DAC_CONFIG 1A18  
                ___ftmul@f3_as_product 0036                           __pdataCOMMON 007C  
                            ??_isdigit 0071                        _currentStateCLK 006E  
             ADC_GetConversion@channel 0074                              ??_sprintf 0061  
              __end_of__initialization 004A                              ?_LCD_Init 0070  
              ??_LCD_TextDisplayString 0077                             ___ftadd@f1 0049  
                           ___ftadd@f2 004C                        ??_LCD_WriteData 0074  
                           ___ftge@ff1 0071                             ___ftge@ff2 0074  
                      ??_LCD_WriteByte 0071                             ___ftneg@f1 0071  
                          ?_InitKeypad 0070                             ___ftmul@f1 002B  
                           ___ftmul@f2 002E                             ___ftsub@f1 0059  
                           ___ftsub@f2 0056                             ___fttol@f1 0044  
                       __pcstackCOMMON 0070                           __pidataBANK0 1A0F  
                         __pidataBANK1 1AF9                           __pidataBANK2 1AA6  
                        __end_of_black 0E42                             ___lltoft@c 0020  
                        __end_of_scale 1800                             ___lwtoft@c 0079  
                           __div_to_l_ 11FC        __size_of_LCD_FillScreenGraphics 00D1  
                       _OPTION_REGbits 0097                        __div_to_l_@exp1 002D  
                      __div_to_l_@cntr 002C                                ??_scale 003E  
                      __div_to_l_@quot 0028                             __pbssBANK0 006E  
                           __pbssBANK1 00D9                             ??_LCD_Init 0075  
DAC1_Load10bitInputData@input16BitData 0071                          __div_to_l_@f1 0071  
                        __div_to_l_@f2 0074              __size_of_LCD_WriteCommand 0007  
                           __pmaintext 1461                      _LCD_ClearGraphics 1B6B  
                              ?___ftge 0071            __size_of_LCD_EnableGraphics 0025  
                              ?___wmul 0025                        __CFG_PPS1WAY$ON 0000  
                           __pintentry 0004                     ?_LCD_ClearGraphics 0070  
                              ?_fround 003B                              ?___ftpack 0071  
                            ?___lltoft 0020                __size_of_ADC_Initialize 0009  
                            ?___lwtoft 0079                    ??_LCD_ClearGraphics 0075  
                              _OSCSTAT 009C                                _OSCTUNE 009A  
                              _SLRCONB 030D                    __size_of_InitKeypad 000A  
                            _DACLDbits 058D                 _LCD_FillScreenGraphics 1035  
            __end_of_LCD_ClearGraphics 1B9F                      __end_of__npowers_ 2076  
                 _ADC_InterruptHandler 00DC                      LCD_WriteData@data 0074  
                      __size_of___ftge 003B                                ___awdiv 1C62  
                              ___ftadd 1106                                ___awmod 1C1D  
                              ___ftneg 1A35                                ___lldiv 0E48  
                      __size_of___wmul 001C                                ___ftmul 1E96  
                              ___llmod 1BDA                                ___ftsub 1ADB  
                              ___fttol 1D7A                             _fround$935 0045  
                           _fround$936 0042                                _dac_out 00E0  
                      __CFG_STVREN$OFF 0000                             ??___ftpack 0076  
                      __size_of_fround 0165                             ??___lltoft 0079  
                              __ptext1 1A6B                                __ptext2 1319  
                              __ptext3 004E                                __ptext4 15BC  
                              __ptext5 1A5D                                __ptext6 0E9B  
                              __ptext7 1ABF                                __ptext8 1E96  
                              __ptext9 1C1D                             ??___lwtoft 0020  
                          ?__div_to_l_ 0071                                _dpowers 2000  
                _OSCILLATOR_Initialize 1A26                                _current 00D9  
                              _isdigit 1A5D                           __size_of_isr 0011  
                     ___awmod@dividend 0073                                _sprintf 004E  
                 end_of_initialization 004A                       _previousStateCLK 00DE  
             ?_DAC1_Load10bitInputData 0071                                init_ram 0E42  
                              initloop 0E43                        ___lldiv@divisor 0071  
                      ___lldiv@counter 0024                         __tdiv_to_l_@f1 0071  
                       __tdiv_to_l_@f2 0074                          ??__tdiv_to_l_ 0077  
                            _PORTAbits 000C                              _PORTCbits 000E  
                           _print_line 006D                       __CFG_FOSC$INTOSC 0000  
          __end_of_LCD_DisableGraphics 1A5D                   switch_press_scan@key 0074  
       __size_of_LCD_TextDisplayString 0034             __size_of_LCD_ClearGraphics 0034  
              __size_of_keypad_scanner 0148          __end_of_LCD_TextDisplayString 1035  
                    __size_of_LCD_Init 0062                    __size_of__div_to_l_ 011D  
                     _LCD_WriteCommand 1A18                         __end_of_Alpha1 18FA  
                       __end_of_Alpha2 19E0                           ??_InitKeypad 0071  
                          ___ftmul@exp 0035                         __end_of___ftge 1BDA  
                       __end_of___wmul 1ADB                          __pidataCOMMON 0003  
                       _ADC_Initialize 1A3D                 ?_OSCILLATOR_Initialize 0070  
                       __end_of_fround 1000                    start_initialization 0017  
                  __end_of__tdiv_to_l_ 2000                            __end_of_des 0A31  
      __end_of_DAC1_Load10bitInputData 1A35                            __end_of_isr 0015  
                   __end_of_InitKeypad 1A50                        ___llmod@divisor 0025  
                      ___llmod@counter 007B                  __end_of_LCD_WriteData 1A26  
                __end_of_LCD_WriteByte 1E96                               ??___ftge 0077  
                             ??___wmul 007C                   LCD_WriteByte@command 0073  
               __end_of_ADC_Initialize 1A46                            __pdataBANK0 006B  
                          __pdataBANK1 00A0                            __pdataBANK2 0120  
                             ??_fround 003E                          sprintf@tmpval 00CA  
                           fround@prec 0048                      __size_of___ftpack 0064  
                    __size_of___lltoft 002B                              ___latbits 0003  
                    __size_of___lwtoft 0014                          __pcstackBANK0 0020  
                        __pcstackBANK1 00C2                ?_LCD_FillScreenGraphics 0075  
                          sprintf@flag 00C6                            sprintf@fval 00D5  
                          sprintf@prec 00D3             __end_of_LCD_EnableGraphics 1B40  
            LCD_TextDisplayString@addr 0078              LCD_TextDisplayString@line 007A  
          LCD_TextDisplayString@string 0075                               ?___awdiv 0078  
                             ?___ftadd 0049                               ?___awmod 0071  
                             ?___ftneg 0071                               ?___lldiv 0071  
                             ?___ftmul 002B                               ?___llmod 0025  
                             ?___ftsub 0056                              __npowers_ 204F  
                             ?___fttol 0044                        ?_ADC_Initialize 0070  
                             _DAC1CON0 058E                               _DAC1REFH 0590  
                             _DAC1REFL 058F                            __tdiv_to_l_ 1F4A  
                         ??__div_to_l_ 0020                               ?_isdigit 0070  
                            _scale$937 0040         __end_of_LCD_FillScreenGraphics 1106  
                             ?_sprintf 005C                         __size_of_scale 0244  
                             _LCD_Init 1CB4                         ___wmul@product 0029  
                             _LATBbits 010D                               _LATCbits 010E  
                             _LATDbits 010F                         _keypad_scanner 1319  
                   __end_of__div_to_l_ 1319       __size_of_DAC1_Load10bitInputData 0008  
                    _switch_press_scan 1A6B                             _ADCON0bits 0490  
                    ___wmul@multiplier 0025                     ?_switch_press_scan 0070  
               LCD_TextDisplayString@i 0079               __end_of_LCD_WriteCommand 1A1F  
                  ??_switch_press_scan 0073                             _DAC_CONFIG 1A12  
               __end_of_keypad_scanner 1461                      _ADC_GetConversion 1A8D  
            __end_of_switch_press_scan 1A79                ??_OSCILLATOR_Initialize 0071  
                   ?_ADC_GetConversion 0071                       __size_of___awdiv 0052  
                     __size_of___ftadd 00F6                       __size_of___awmod 0045  
                     __size_of___ftneg 0008                       __size_of___lldiv 0053  
                     __size_of___ftmul 00B4                       __size_of___llmod 0043  
                     __size_of___ftsub 001E                       __size_of___fttol 0087  
                             ___ftpack 1D16                               ___lltoft 1B40  
                          _isdigit$716 0071                               ___lwtoft 1A79  
                  ??_ADC_GetConversion 0073                             sprintf@exp 00C8  
                           sprintf@val 00CE                       __size_of_isdigit 000E  
                             _main$934 0069                               __ptext10 1C62  
                             __ptext11 1F4A                               __ptext20 1B9F  
                             __ptext12 11FC                               __ptext21 1A79  
                             __ptext13 1B40                               __ptext30 1A1F  
                             __ptext22 1D16                               __ptext14 1BDA  
                             __ptext31 1A18                               __ptext23 1A26  
                             __ptext15 0E48                               __ptext32 1E01  
                             __ptext24 1001                               __ptext16 1D7A  
                             __ptext33 1A46                               __ptext25 1CB4  
                             __ptext17 1ADB                               __ptext34 1A12  
                             __ptext26 1035                               __ptext18 1106  
                             __ptext35 1A2D                               __ptext27 1B1B  
                             __ptext19 1A35                               __ptext36 1A3D  
                             __ptext28 1A50                               __ptext37 1A8D  
                             __ptext29 1B6B                               __powers_ 2028  
                     __size_of_sprintf 05E3                        ?_keypad_scanner 0070  
         __size_of_LCD_DisableGraphics 000D                          __size_of_main 015B  
            __end_of_ADC_GetConversion 1AA6                  _LCD_TextDisplayString 1001  
                             int$flags 007E                         __pstringtext10 208C  
                       __pstringtext11 0000                               isdigit@c 0072  
                             scale@scl 0043                            ?_DAC_CONFIG 0070  
                             intlevel1 0000                              sprintf@ap 00C5  
                     __tdiv_to_l_@exp1 0025                       __tdiv_to_l_@cntr 0024  
                            sprintf@sp 00D2                       __tdiv_to_l_@quot 0020  
                         _DAC1CON0bits 058E                       ___lldiv@dividend 0075  
                    __CFG_CLKOUTEN$OFF 0000                       ??_ADC_Initialize 0071  
              _DAC1_Load10bitInputData 1A2D             __size_of_switch_press_scan 000E  
                         ?__tdiv_to_l_ 0071                          __pstringtext1 0A42  
                        __pstringtext2 1800                          __pstringtext3 18FA  
                        __pstringtext4 2000                          __pstringtext5 2028  
                        __pstringtext6 204F                          __pstringtext7 0631  
                        __pstringtext8 2076                          __pstringtext9 2087  
                   _LCD_EnableGraphics 1B1B                               sprintf@c 00D8  
                             sprintf@f 005C                       ___lldiv@quotient 0020  
               __size_of_LCD_WriteData 0007                 __size_of_LCD_WriteByte 0095  
                  ?_LCD_EnableGraphics 0070                     LCD_ClearGraphics@x 0076  
                   LCD_ClearGraphics@y 0077             __size_of_ADC_GetConversion 0019  
               ?_LCD_TextDisplayString 0075  
