

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 06 23:17:48 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1779
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	idataBANK2,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	inittext,global,class=CODE,delta=2
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text24,local,class=CODE,merge=1,delta=2
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2
    66                           	psect	text38,local,class=CODE,merge=1,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	dabs	1,0x7E,2
    70  0000                     
    71                           ; Version 1.45
    72                           ; Generated 16/11/2017 GMT
    73                           ; 
    74                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F1779 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0110                     	;# 
   164  0111                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0115                     	;# 
   169  0116                     	;# 
   170  0117                     	;# 
   171  0118                     	;# 
   172  0119                     	;# 
   173  011A                     	;# 
   174  011B                     	;# 
   175  011C                     	;# 
   176  011D                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  018E                     	;# 
   180  018F                     	;# 
   181  0190                     	;# 
   182  0191                     	;# 
   183  0191                     	;# 
   184  0192                     	;# 
   185  0193                     	;# 
   186  0193                     	;# 
   187  0194                     	;# 
   188  0195                     	;# 
   189  0196                     	;# 
   190  0197                     	;# 
   191  0199                     	;# 
   192  0199                     	;# 
   193  0199                     	;# 
   194  019A                     	;# 
   195  019A                     	;# 
   196  019A                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  019C                     	;# 
   204  019C                     	;# 
   205  019D                     	;# 
   206  019D                     	;# 
   207  019D                     	;# 
   208  019E                     	;# 
   209  019E                     	;# 
   210  019E                     	;# 
   211  019F                     	;# 
   212  019F                     	;# 
   213  019F                     	;# 
   214  019F                     	;# 
   215  019F                     	;# 
   216  020C                     	;# 
   217  020D                     	;# 
   218  020E                     	;# 
   219  020F                     	;# 
   220  0210                     	;# 
   221  0211                     	;# 
   222  0211                     	;# 
   223  0212                     	;# 
   224  0212                     	;# 
   225  0213                     	;# 
   226  0213                     	;# 
   227  0214                     	;# 
   228  0214                     	;# 
   229  0215                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  021B                     	;# 
   238  021C                     	;# 
   239  021D                     	;# 
   240  021E                     	;# 
   241  021F                     	;# 
   242  028C                     	;# 
   243  028D                     	;# 
   244  028E                     	;# 
   245  028F                     	;# 
   246  0290                     	;# 
   247  0291                     	;# 
   248  0291                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0294                     	;# 
   252  0295                     	;# 
   253  0295                     	;# 
   254  0296                     	;# 
   255  0297                     	;# 
   256  0298                     	;# 
   257  0299                     	;# 
   258  0299                     	;# 
   259  029A                     	;# 
   260  029B                     	;# 
   261  029C                     	;# 
   262  029E                     	;# 
   263  029F                     	;# 
   264  030C                     	;# 
   265  030D                     	;# 
   266  030E                     	;# 
   267  030F                     	;# 
   268  0310                     	;# 
   269  0311                     	;# 
   270  0311                     	;# 
   271  0312                     	;# 
   272  0313                     	;# 
   273  0314                     	;# 
   274  0315                     	;# 
   275  0316                     	;# 
   276  0317                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031B                     	;# 
   280  031C                     	;# 
   281  031D                     	;# 
   282  031E                     	;# 
   283  031F                     	;# 
   284  038C                     	;# 
   285  038D                     	;# 
   286  038E                     	;# 
   287  038F                     	;# 
   288  0390                     	;# 
   289  0391                     	;# 
   290  0392                     	;# 
   291  0393                     	;# 
   292  0394                     	;# 
   293  0395                     	;# 
   294  0396                     	;# 
   295  0397                     	;# 
   296  0398                     	;# 
   297  0399                     	;# 
   298  039D                     	;# 
   299  039E                     	;# 
   300  039F                     	;# 
   301  040D                     	;# 
   302  040F                     	;# 
   303  040F                     	;# 
   304  0410                     	;# 
   305  0411                     	;# 
   306  0412                     	;# 
   307  0413                     	;# 
   308  0413                     	;# 
   309  0414                     	;# 
   310  0414                     	;# 
   311  0415                     	;# 
   312  0416                     	;# 
   313  0417                     	;# 
   314  0418                     	;# 
   315  041A                     	;# 
   316  041A                     	;# 
   317  041B                     	;# 
   318  041B                     	;# 
   319  041C                     	;# 
   320  041D                     	;# 
   321  041E                     	;# 
   322  041F                     	;# 
   323  048E                     	;# 
   324  048E                     	;# 
   325  048F                     	;# 
   326  0490                     	;# 
   327  0491                     	;# 
   328  0492                     	;# 
   329  0493                     	;# 
   330  0493                     	;# 
   331  0494                     	;# 
   332  0494                     	;# 
   333  0495                     	;# 
   334  0496                     	;# 
   335  0497                     	;# 
   336  0498                     	;# 
   337  049A                     	;# 
   338  049A                     	;# 
   339  049B                     	;# 
   340  049B                     	;# 
   341  049C                     	;# 
   342  049D                     	;# 
   343  049E                     	;# 
   344  049F                     	;# 
   345  050F                     	;# 
   346  0510                     	;# 
   347  0511                     	;# 
   348  0512                     	;# 
   349  0513                     	;# 
   350  0514                     	;# 
   351  0515                     	;# 
   352  0516                     	;# 
   353  0517                     	;# 
   354  0518                     	;# 
   355  0519                     	;# 
   356  051A                     	;# 
   357  051B                     	;# 
   358  051C                     	;# 
   359  051D                     	;# 
   360  051E                     	;# 
   361  058D                     	;# 
   362  058E                     	;# 
   363  058F                     	;# 
   364  058F                     	;# 
   365  058F                     	;# 
   366  0590                     	;# 
   367  0590                     	;# 
   368  0591                     	;# 
   369  0592                     	;# 
   370  0592                     	;# 
   371  0592                     	;# 
   372  0593                     	;# 
   373  0593                     	;# 
   374  0594                     	;# 
   375  0595                     	;# 
   376  0595                     	;# 
   377  0596                     	;# 
   378  0597                     	;# 
   379  0597                     	;# 
   380  0598                     	;# 
   381  0599                     	;# 
   382  0599                     	;# 
   383  0599                     	;# 
   384  059A                     	;# 
   385  059A                     	;# 
   386  059B                     	;# 
   387  059C                     	;# 
   388  059C                     	;# 
   389  059C                     	;# 
   390  059D                     	;# 
   391  059D                     	;# 
   392  059E                     	;# 
   393  059F                     	;# 
   394  059F                     	;# 
   395  060C                     	;# 
   396  060D                     	;# 
   397  060D                     	;# 
   398  060E                     	;# 
   399  060F                     	;# 
   400  0610                     	;# 
   401  0611                     	;# 
   402  0612                     	;# 
   403  0613                     	;# 
   404  0614                     	;# 
   405  0615                     	;# 
   406  0616                     	;# 
   407  0617                     	;# 
   408  0618                     	;# 
   409  0619                     	;# 
   410  061A                     	;# 
   411  061B                     	;# 
   412  061C                     	;# 
   413  061D                     	;# 
   414  061E                     	;# 
   415  061F                     	;# 
   416  068D                     	;# 
   417  068E                     	;# 
   418  068F                     	;# 
   419  0690                     	;# 
   420  0691                     	;# 
   421  0692                     	;# 
   422  0693                     	;# 
   423  0694                     	;# 
   424  0695                     	;# 
   425  0696                     	;# 
   426  0697                     	;# 
   427  0698                     	;# 
   428  0699                     	;# 
   429  069A                     	;# 
   430  069B                     	;# 
   431  069C                     	;# 
   432  069D                     	;# 
   433  069E                     	;# 
   434  069F                     	;# 
   435  070D                     	;# 
   436  070E                     	;# 
   437  070F                     	;# 
   438  0710                     	;# 
   439  0711                     	;# 
   440  0712                     	;# 
   441  0713                     	;# 
   442  0714                     	;# 
   443  0715                     	;# 
   444  0716                     	;# 
   445  0717                     	;# 
   446  0718                     	;# 
   447  0719                     	;# 
   448  071A                     	;# 
   449  071B                     	;# 
   450  071C                     	;# 
   451  071D                     	;# 
   452  071E                     	;# 
   453  071F                     	;# 
   454  078E                     	;# 
   455  078F                     	;# 
   456  0790                     	;# 
   457  0791                     	;# 
   458  0792                     	;# 
   459  0793                     	;# 
   460  0794                     	;# 
   461  0795                     	;# 
   462  0796                     	;# 
   463  0797                     	;# 
   464  0798                     	;# 
   465  0799                     	;# 
   466  079A                     	;# 
   467  079B                     	;# 
   468  079C                     	;# 
   469  079D                     	;# 
   470  079E                     	;# 
   471  079F                     	;# 
   472  080D                     	;# 
   473  080E                     	;# 
   474  080F                     	;# 
   475  0810                     	;# 
   476  0811                     	;# 
   477  0812                     	;# 
   478  0813                     	;# 
   479  0814                     	;# 
   480  0815                     	;# 
   481  0816                     	;# 
   482  0817                     	;# 
   483  0818                     	;# 
   484  0819                     	;# 
   485  081A                     	;# 
   486  081B                     	;# 
   487  081C                     	;# 
   488  081D                     	;# 
   489  081E                     	;# 
   490  081F                     	;# 
   491  088D                     	;# 
   492  088E                     	;# 
   493  088F                     	;# 
   494  0890                     	;# 
   495  0891                     	;# 
   496  0892                     	;# 
   497  0893                     	;# 
   498  0894                     	;# 
   499  0895                     	;# 
   500  0896                     	;# 
   501  0897                     	;# 
   502  0898                     	;# 
   503  0899                     	;# 
   504  089A                     	;# 
   505  089B                     	;# 
   506  089C                     	;# 
   507  089D                     	;# 
   508  089E                     	;# 
   509  089F                     	;# 
   510  090C                     	;# 
   511  090D                     	;# 
   512  090E                     	;# 
   513  090F                     	;# 
   514  0910                     	;# 
   515  0911                     	;# 
   516  0912                     	;# 
   517  0913                     	;# 
   518  0914                     	;# 
   519  0915                     	;# 
   520  0916                     	;# 
   521  0917                     	;# 
   522  0918                     	;# 
   523  0919                     	;# 
   524  091A                     	;# 
   525  091B                     	;# 
   526  091C                     	;# 
   527  091D                     	;# 
   528  091E                     	;# 
   529  091F                     	;# 
   530  0D1B                     	;# 
   531  0D1C                     	;# 
   532  0D1D                     	;# 
   533  0D1E                     	;# 
   534  0D1F                     	;# 
   535  0D8E                     	;# 
   536  0D8F                     	;# 
   537  0D90                     	;# 
   538  0D91                     	;# 
   539  0D91                     	;# 
   540  0D92                     	;# 
   541  0D93                     	;# 
   542  0D93                     	;# 
   543  0D94                     	;# 
   544  0D95                     	;# 
   545  0D95                     	;# 
   546  0D96                     	;# 
   547  0D97                     	;# 
   548  0D97                     	;# 
   549  0D98                     	;# 
   550  0D99                     	;# 
   551  0D99                     	;# 
   552  0D9A                     	;# 
   553  0D9B                     	;# 
   554  0D9C                     	;# 
   555  0D9C                     	;# 
   556  0D9D                     	;# 
   557  0D9D                     	;# 
   558  0D9E                     	;# 
   559  0D9F                     	;# 
   560  0DA0                     	;# 
   561  0DA1                     	;# 
   562  0DA1                     	;# 
   563  0DA2                     	;# 
   564  0DA3                     	;# 
   565  0DA3                     	;# 
   566  0DA4                     	;# 
   567  0DA5                     	;# 
   568  0DA5                     	;# 
   569  0DA6                     	;# 
   570  0DA7                     	;# 
   571  0DA7                     	;# 
   572  0DA8                     	;# 
   573  0DA9                     	;# 
   574  0DA9                     	;# 
   575  0DAA                     	;# 
   576  0DAB                     	;# 
   577  0DAC                     	;# 
   578  0DAC                     	;# 
   579  0DAD                     	;# 
   580  0DAD                     	;# 
   581  0DAE                     	;# 
   582  0DAF                     	;# 
   583  0DB0                     	;# 
   584  0DB1                     	;# 
   585  0DB1                     	;# 
   586  0DB2                     	;# 
   587  0DB3                     	;# 
   588  0DB3                     	;# 
   589  0DB4                     	;# 
   590  0DB5                     	;# 
   591  0DB5                     	;# 
   592  0DB6                     	;# 
   593  0DB7                     	;# 
   594  0DB7                     	;# 
   595  0DB8                     	;# 
   596  0DB9                     	;# 
   597  0DB9                     	;# 
   598  0DBA                     	;# 
   599  0DBB                     	;# 
   600  0DBC                     	;# 
   601  0DBC                     	;# 
   602  0DBD                     	;# 
   603  0DBD                     	;# 
   604  0DBE                     	;# 
   605  0DBF                     	;# 
   606  0DC0                     	;# 
   607  0DC1                     	;# 
   608  0DC1                     	;# 
   609  0DC2                     	;# 
   610  0DC3                     	;# 
   611  0DC3                     	;# 
   612  0DC4                     	;# 
   613  0DC5                     	;# 
   614  0DC5                     	;# 
   615  0DC6                     	;# 
   616  0DC7                     	;# 
   617  0DC7                     	;# 
   618  0DC8                     	;# 
   619  0DC9                     	;# 
   620  0DC9                     	;# 
   621  0DCA                     	;# 
   622  0DCB                     	;# 
   623  0DCC                     	;# 
   624  0DCC                     	;# 
   625  0DCD                     	;# 
   626  0DCD                     	;# 
   627  0DCE                     	;# 
   628  0DCF                     	;# 
   629  0DD0                     	;# 
   630  0E0C                     	;# 
   631  0E0D                     	;# 
   632  0E0E                     	;# 
   633  0E0F                     	;# 
   634  0E10                     	;# 
   635  0E11                     	;# 
   636  0E12                     	;# 
   637  0E13                     	;# 
   638  0E14                     	;# 
   639  0E15                     	;# 
   640  0E15                     	;# 
   641  0E15                     	;# 
   642  0E16                     	;# 
   643  0E16                     	;# 
   644  0E16                     	;# 
   645  0E17                     	;# 
   646  0E17                     	;# 
   647  0E17                     	;# 
   648  0E18                     	;# 
   649  0E18                     	;# 
   650  0E18                     	;# 
   651  0E19                     	;# 
   652  0E1A                     	;# 
   653  0E1B                     	;# 
   654  0E1C                     	;# 
   655  0E1D                     	;# 
   656  0E1E                     	;# 
   657  0E1F                     	;# 
   658  0E20                     	;# 
   659  0E21                     	;# 
   660  0E22                     	;# 
   661  0E23                     	;# 
   662  0E24                     	;# 
   663  0E25                     	;# 
   664  0E26                     	;# 
   665  0E27                     	;# 
   666  0E28                     	;# 
   667  0E29                     	;# 
   668  0E2A                     	;# 
   669  0E2B                     	;# 
   670  0E2C                     	;# 
   671  0E2D                     	;# 
   672  0E2E                     	;# 
   673  0E2F                     	;# 
   674  0E30                     	;# 
   675  0E31                     	;# 
   676  0E32                     	;# 
   677  0E33                     	;# 
   678  0E34                     	;# 
   679  0E35                     	;# 
   680  0E36                     	;# 
   681  0E37                     	;# 
   682  0E38                     	;# 
   683  0E39                     	;# 
   684  0E3A                     	;# 
   685  0E3B                     	;# 
   686  0E3C                     	;# 
   687  0E3D                     	;# 
   688  0E3E                     	;# 
   689  0E90                     	;# 
   690  0E91                     	;# 
   691  0E92                     	;# 
   692  0E93                     	;# 
   693  0E94                     	;# 
   694  0E95                     	;# 
   695  0E96                     	;# 
   696  0E97                     	;# 
   697  0E98                     	;# 
   698  0E99                     	;# 
   699  0E9A                     	;# 
   700  0E9B                     	;# 
   701  0E9C                     	;# 
   702  0E9D                     	;# 
   703  0E9E                     	;# 
   704  0E9F                     	;# 
   705  0EA0                     	;# 
   706  0EA1                     	;# 
   707  0EA2                     	;# 
   708  0EA3                     	;# 
   709  0EA4                     	;# 
   710  0EA5                     	;# 
   711  0EA6                     	;# 
   712  0EA7                     	;# 
   713  0EA8                     	;# 
   714  0EA9                     	;# 
   715  0EAA                     	;# 
   716  0EAB                     	;# 
   717  0EAC                     	;# 
   718  0EAD                     	;# 
   719  0EAE                     	;# 
   720  0EAF                     	;# 
   721  0EB0                     	;# 
   722  0EB1                     	;# 
   723  0EB2                     	;# 
   724  0F0F                     	;# 
   725  0F10                     	;# 
   726  0F11                     	;# 
   727  0F12                     	;# 
   728  0F13                     	;# 
   729  0F14                     	;# 
   730  0F15                     	;# 
   731  0F16                     	;# 
   732  0F17                     	;# 
   733  0F18                     	;# 
   734  0F19                     	;# 
   735  0F1A                     	;# 
   736  0F1B                     	;# 
   737  0F1C                     	;# 
   738  0F1D                     	;# 
   739  0F1E                     	;# 
   740  0F1F                     	;# 
   741  0F20                     	;# 
   742  0F21                     	;# 
   743  0F22                     	;# 
   744  0F23                     	;# 
   745  0F24                     	;# 
   746  0F25                     	;# 
   747  0F26                     	;# 
   748  0F27                     	;# 
   749  0F28                     	;# 
   750  0F29                     	;# 
   751  0F2A                     	;# 
   752  0F2B                     	;# 
   753  0F2C                     	;# 
   754  0F2D                     	;# 
   755  0F2E                     	;# 
   756  0F2F                     	;# 
   757  0F30                     	;# 
   758  0F31                     	;# 
   759  0F32                     	;# 
   760  0F33                     	;# 
   761  0F34                     	;# 
   762  0F35                     	;# 
   763  0F36                     	;# 
   764  0F37                     	;# 
   765  0FE4                     	;# 
   766  0FE5                     	;# 
   767  0FE6                     	;# 
   768  0FE7                     	;# 
   769  0FE8                     	;# 
   770  0FE9                     	;# 
   771  0FEA                     	;# 
   772  0FEB                     	;# 
   773  0FED                     	;# 
   774  0FEE                     	;# 
   775  0FEF                     	;# 
   776  0000                     	;# 
   777  0001                     	;# 
   778  0002                     	;# 
   779  0003                     	;# 
   780  0004                     	;# 
   781  0005                     	;# 
   782  0006                     	;# 
   783  0007                     	;# 
   784  0008                     	;# 
   785  0009                     	;# 
   786  000A                     	;# 
   787  000B                     	;# 
   788  000C                     	;# 
   789  000D                     	;# 
   790  000E                     	;# 
   791  000F                     	;# 
   792  0010                     	;# 
   793  0011                     	;# 
   794  0012                     	;# 
   795  0013                     	;# 
   796  0014                     	;# 
   797  0015                     	;# 
   798  0016                     	;# 
   799  0017                     	;# 
   800  0018                     	;# 
   801  0018                     	;# 
   802  0019                     	;# 
   803  001A                     	;# 
   804  001B                     	;# 
   805  001C                     	;# 
   806  001C                     	;# 
   807  001D                     	;# 
   808  001E                     	;# 
   809  001F                     	;# 
   810  008C                     	;# 
   811  008D                     	;# 
   812  008E                     	;# 
   813  008F                     	;# 
   814  0090                     	;# 
   815  0091                     	;# 
   816  0092                     	;# 
   817  0093                     	;# 
   818  0094                     	;# 
   819  0095                     	;# 
   820  0096                     	;# 
   821  0097                     	;# 
   822  0098                     	;# 
   823  0099                     	;# 
   824  009A                     	;# 
   825  009B                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009E                     	;# 
   829  009F                     	;# 
   830  010C                     	;# 
   831  010D                     	;# 
   832  010E                     	;# 
   833  010F                     	;# 
   834  0110                     	;# 
   835  0111                     	;# 
   836  0112                     	;# 
   837  0113                     	;# 
   838  0114                     	;# 
   839  0115                     	;# 
   840  0116                     	;# 
   841  0117                     	;# 
   842  0118                     	;# 
   843  0119                     	;# 
   844  011A                     	;# 
   845  011B                     	;# 
   846  011C                     	;# 
   847  011D                     	;# 
   848  018C                     	;# 
   849  018D                     	;# 
   850  018E                     	;# 
   851  018F                     	;# 
   852  0190                     	;# 
   853  0191                     	;# 
   854  0191                     	;# 
   855  0192                     	;# 
   856  0193                     	;# 
   857  0193                     	;# 
   858  0194                     	;# 
   859  0195                     	;# 
   860  0196                     	;# 
   861  0197                     	;# 
   862  0199                     	;# 
   863  0199                     	;# 
   864  0199                     	;# 
   865  019A                     	;# 
   866  019A                     	;# 
   867  019A                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019C                     	;# 
   874  019C                     	;# 
   875  019C                     	;# 
   876  019D                     	;# 
   877  019D                     	;# 
   878  019D                     	;# 
   879  019E                     	;# 
   880  019E                     	;# 
   881  019E                     	;# 
   882  019F                     	;# 
   883  019F                     	;# 
   884  019F                     	;# 
   885  019F                     	;# 
   886  019F                     	;# 
   887  020C                     	;# 
   888  020D                     	;# 
   889  020E                     	;# 
   890  020F                     	;# 
   891  0210                     	;# 
   892  0211                     	;# 
   893  0211                     	;# 
   894  0212                     	;# 
   895  0212                     	;# 
   896  0213                     	;# 
   897  0213                     	;# 
   898  0214                     	;# 
   899  0214                     	;# 
   900  0215                     	;# 
   901  0215                     	;# 
   902  0215                     	;# 
   903  0215                     	;# 
   904  0216                     	;# 
   905  0216                     	;# 
   906  0217                     	;# 
   907  0217                     	;# 
   908  021B                     	;# 
   909  021C                     	;# 
   910  021D                     	;# 
   911  021E                     	;# 
   912  021F                     	;# 
   913  028C                     	;# 
   914  028D                     	;# 
   915  028E                     	;# 
   916  028F                     	;# 
   917  0290                     	;# 
   918  0291                     	;# 
   919  0291                     	;# 
   920  0292                     	;# 
   921  0293                     	;# 
   922  0294                     	;# 
   923  0295                     	;# 
   924  0295                     	;# 
   925  0296                     	;# 
   926  0297                     	;# 
   927  0298                     	;# 
   928  0299                     	;# 
   929  0299                     	;# 
   930  029A                     	;# 
   931  029B                     	;# 
   932  029C                     	;# 
   933  029E                     	;# 
   934  029F                     	;# 
   935  030C                     	;# 
   936  030D                     	;# 
   937  030E                     	;# 
   938  030F                     	;# 
   939  0310                     	;# 
   940  0311                     	;# 
   941  0311                     	;# 
   942  0312                     	;# 
   943  0313                     	;# 
   944  0314                     	;# 
   945  0315                     	;# 
   946  0316                     	;# 
   947  0317                     	;# 
   948  0318                     	;# 
   949  0319                     	;# 
   950  031B                     	;# 
   951  031C                     	;# 
   952  031D                     	;# 
   953  031E                     	;# 
   954  031F                     	;# 
   955  038C                     	;# 
   956  038D                     	;# 
   957  038E                     	;# 
   958  038F                     	;# 
   959  0390                     	;# 
   960  0391                     	;# 
   961  0392                     	;# 
   962  0393                     	;# 
   963  0394                     	;# 
   964  0395                     	;# 
   965  0396                     	;# 
   966  0397                     	;# 
   967  0398                     	;# 
   968  0399                     	;# 
   969  039D                     	;# 
   970  039E                     	;# 
   971  039F                     	;# 
   972  040D                     	;# 
   973  040F                     	;# 
   974  040F                     	;# 
   975  0410                     	;# 
   976  0411                     	;# 
   977  0412                     	;# 
   978  0413                     	;# 
   979  0413                     	;# 
   980  0414                     	;# 
   981  0414                     	;# 
   982  0415                     	;# 
   983  0416                     	;# 
   984  0417                     	;# 
   985  0418                     	;# 
   986  041A                     	;# 
   987  041A                     	;# 
   988  041B                     	;# 
   989  041B                     	;# 
   990  041C                     	;# 
   991  041D                     	;# 
   992  041E                     	;# 
   993  041F                     	;# 
   994  048E                     	;# 
   995  048E                     	;# 
   996  048F                     	;# 
   997  0490                     	;# 
   998  0491                     	;# 
   999  0492                     	;# 
  1000  0493                     	;# 
  1001  0493                     	;# 
  1002  0494                     	;# 
  1003  0494                     	;# 
  1004  0495                     	;# 
  1005  0496                     	;# 
  1006  0497                     	;# 
  1007  0498                     	;# 
  1008  049A                     	;# 
  1009  049A                     	;# 
  1010  049B                     	;# 
  1011  049B                     	;# 
  1012  049C                     	;# 
  1013  049D                     	;# 
  1014  049E                     	;# 
  1015  049F                     	;# 
  1016  050F                     	;# 
  1017  0510                     	;# 
  1018  0511                     	;# 
  1019  0512                     	;# 
  1020  0513                     	;# 
  1021  0514                     	;# 
  1022  0515                     	;# 
  1023  0516                     	;# 
  1024  0517                     	;# 
  1025  0518                     	;# 
  1026  0519                     	;# 
  1027  051A                     	;# 
  1028  051B                     	;# 
  1029  051C                     	;# 
  1030  051D                     	;# 
  1031  051E                     	;# 
  1032  058D                     	;# 
  1033  058E                     	;# 
  1034  058F                     	;# 
  1035  058F                     	;# 
  1036  058F                     	;# 
  1037  0590                     	;# 
  1038  0590                     	;# 
  1039  0591                     	;# 
  1040  0592                     	;# 
  1041  0592                     	;# 
  1042  0592                     	;# 
  1043  0593                     	;# 
  1044  0593                     	;# 
  1045  0594                     	;# 
  1046  0595                     	;# 
  1047  0595                     	;# 
  1048  0596                     	;# 
  1049  0597                     	;# 
  1050  0597                     	;# 
  1051  0598                     	;# 
  1052  0599                     	;# 
  1053  0599                     	;# 
  1054  0599                     	;# 
  1055  059A                     	;# 
  1056  059A                     	;# 
  1057  059B                     	;# 
  1058  059C                     	;# 
  1059  059C                     	;# 
  1060  059C                     	;# 
  1061  059D                     	;# 
  1062  059D                     	;# 
  1063  059E                     	;# 
  1064  059F                     	;# 
  1065  059F                     	;# 
  1066  060C                     	;# 
  1067  060D                     	;# 
  1068  060D                     	;# 
  1069  060E                     	;# 
  1070  060F                     	;# 
  1071  0610                     	;# 
  1072  0611                     	;# 
  1073  0612                     	;# 
  1074  0613                     	;# 
  1075  0614                     	;# 
  1076  0615                     	;# 
  1077  0616                     	;# 
  1078  0617                     	;# 
  1079  0618                     	;# 
  1080  0619                     	;# 
  1081  061A                     	;# 
  1082  061B                     	;# 
  1083  061C                     	;# 
  1084  061D                     	;# 
  1085  061E                     	;# 
  1086  061F                     	;# 
  1087  068D                     	;# 
  1088  068E                     	;# 
  1089  068F                     	;# 
  1090  0690                     	;# 
  1091  0691                     	;# 
  1092  0692                     	;# 
  1093  0693                     	;# 
  1094  0694                     	;# 
  1095  0695                     	;# 
  1096  0696                     	;# 
  1097  0697                     	;# 
  1098  0698                     	;# 
  1099  0699                     	;# 
  1100  069A                     	;# 
  1101  069B                     	;# 
  1102  069C                     	;# 
  1103  069D                     	;# 
  1104  069E                     	;# 
  1105  069F                     	;# 
  1106  070D                     	;# 
  1107  070E                     	;# 
  1108  070F                     	;# 
  1109  0710                     	;# 
  1110  0711                     	;# 
  1111  0712                     	;# 
  1112  0713                     	;# 
  1113  0714                     	;# 
  1114  0715                     	;# 
  1115  0716                     	;# 
  1116  0717                     	;# 
  1117  0718                     	;# 
  1118  0719                     	;# 
  1119  071A                     	;# 
  1120  071B                     	;# 
  1121  071C                     	;# 
  1122  071D                     	;# 
  1123  071E                     	;# 
  1124  071F                     	;# 
  1125  078E                     	;# 
  1126  078F                     	;# 
  1127  0790                     	;# 
  1128  0791                     	;# 
  1129  0792                     	;# 
  1130  0793                     	;# 
  1131  0794                     	;# 
  1132  0795                     	;# 
  1133  0796                     	;# 
  1134  0797                     	;# 
  1135  0798                     	;# 
  1136  0799                     	;# 
  1137  079A                     	;# 
  1138  079B                     	;# 
  1139  079C                     	;# 
  1140  079D                     	;# 
  1141  079E                     	;# 
  1142  079F                     	;# 
  1143  080D                     	;# 
  1144  080E                     	;# 
  1145  080F                     	;# 
  1146  0810                     	;# 
  1147  0811                     	;# 
  1148  0812                     	;# 
  1149  0813                     	;# 
  1150  0814                     	;# 
  1151  0815                     	;# 
  1152  0816                     	;# 
  1153  0817                     	;# 
  1154  0818                     	;# 
  1155  0819                     	;# 
  1156  081A                     	;# 
  1157  081B                     	;# 
  1158  081C                     	;# 
  1159  081D                     	;# 
  1160  081E                     	;# 
  1161  081F                     	;# 
  1162  088D                     	;# 
  1163  088E                     	;# 
  1164  088F                     	;# 
  1165  0890                     	;# 
  1166  0891                     	;# 
  1167  0892                     	;# 
  1168  0893                     	;# 
  1169  0894                     	;# 
  1170  0895                     	;# 
  1171  0896                     	;# 
  1172  0897                     	;# 
  1173  0898                     	;# 
  1174  0899                     	;# 
  1175  089A                     	;# 
  1176  089B                     	;# 
  1177  089C                     	;# 
  1178  089D                     	;# 
  1179  089E                     	;# 
  1180  089F                     	;# 
  1181  090C                     	;# 
  1182  090D                     	;# 
  1183  090E                     	;# 
  1184  090F                     	;# 
  1185  0910                     	;# 
  1186  0911                     	;# 
  1187  0912                     	;# 
  1188  0913                     	;# 
  1189  0914                     	;# 
  1190  0915                     	;# 
  1191  0916                     	;# 
  1192  0917                     	;# 
  1193  0918                     	;# 
  1194  0919                     	;# 
  1195  091A                     	;# 
  1196  091B                     	;# 
  1197  091C                     	;# 
  1198  091D                     	;# 
  1199  091E                     	;# 
  1200  091F                     	;# 
  1201  0D1B                     	;# 
  1202  0D1C                     	;# 
  1203  0D1D                     	;# 
  1204  0D1E                     	;# 
  1205  0D1F                     	;# 
  1206  0D8E                     	;# 
  1207  0D8F                     	;# 
  1208  0D90                     	;# 
  1209  0D91                     	;# 
  1210  0D91                     	;# 
  1211  0D92                     	;# 
  1212  0D93                     	;# 
  1213  0D93                     	;# 
  1214  0D94                     	;# 
  1215  0D95                     	;# 
  1216  0D95                     	;# 
  1217  0D96                     	;# 
  1218  0D97                     	;# 
  1219  0D97                     	;# 
  1220  0D98                     	;# 
  1221  0D99                     	;# 
  1222  0D99                     	;# 
  1223  0D9A                     	;# 
  1224  0D9B                     	;# 
  1225  0D9C                     	;# 
  1226  0D9C                     	;# 
  1227  0D9D                     	;# 
  1228  0D9D                     	;# 
  1229  0D9E                     	;# 
  1230  0D9F                     	;# 
  1231  0DA0                     	;# 
  1232  0DA1                     	;# 
  1233  0DA1                     	;# 
  1234  0DA2                     	;# 
  1235  0DA3                     	;# 
  1236  0DA3                     	;# 
  1237  0DA4                     	;# 
  1238  0DA5                     	;# 
  1239  0DA5                     	;# 
  1240  0DA6                     	;# 
  1241  0DA7                     	;# 
  1242  0DA7                     	;# 
  1243  0DA8                     	;# 
  1244  0DA9                     	;# 
  1245  0DA9                     	;# 
  1246  0DAA                     	;# 
  1247  0DAB                     	;# 
  1248  0DAC                     	;# 
  1249  0DAC                     	;# 
  1250  0DAD                     	;# 
  1251  0DAD                     	;# 
  1252  0DAE                     	;# 
  1253  0DAF                     	;# 
  1254  0DB0                     	;# 
  1255  0DB1                     	;# 
  1256  0DB1                     	;# 
  1257  0DB2                     	;# 
  1258  0DB3                     	;# 
  1259  0DB3                     	;# 
  1260  0DB4                     	;# 
  1261  0DB5                     	;# 
  1262  0DB5                     	;# 
  1263  0DB6                     	;# 
  1264  0DB7                     	;# 
  1265  0DB7                     	;# 
  1266  0DB8                     	;# 
  1267  0DB9                     	;# 
  1268  0DB9                     	;# 
  1269  0DBA                     	;# 
  1270  0DBB                     	;# 
  1271  0DBC                     	;# 
  1272  0DBC                     	;# 
  1273  0DBD                     	;# 
  1274  0DBD                     	;# 
  1275  0DBE                     	;# 
  1276  0DBF                     	;# 
  1277  0DC0                     	;# 
  1278  0DC1                     	;# 
  1279  0DC1                     	;# 
  1280  0DC2                     	;# 
  1281  0DC3                     	;# 
  1282  0DC3                     	;# 
  1283  0DC4                     	;# 
  1284  0DC5                     	;# 
  1285  0DC5                     	;# 
  1286  0DC6                     	;# 
  1287  0DC7                     	;# 
  1288  0DC7                     	;# 
  1289  0DC8                     	;# 
  1290  0DC9                     	;# 
  1291  0DC9                     	;# 
  1292  0DCA                     	;# 
  1293  0DCB                     	;# 
  1294  0DCC                     	;# 
  1295  0DCC                     	;# 
  1296  0DCD                     	;# 
  1297  0DCD                     	;# 
  1298  0DCE                     	;# 
  1299  0DCF                     	;# 
  1300  0DD0                     	;# 
  1301  0E0C                     	;# 
  1302  0E0D                     	;# 
  1303  0E0E                     	;# 
  1304  0E0F                     	;# 
  1305  0E10                     	;# 
  1306  0E11                     	;# 
  1307  0E12                     	;# 
  1308  0E13                     	;# 
  1309  0E14                     	;# 
  1310  0E15                     	;# 
  1311  0E15                     	;# 
  1312  0E15                     	;# 
  1313  0E16                     	;# 
  1314  0E16                     	;# 
  1315  0E16                     	;# 
  1316  0E17                     	;# 
  1317  0E17                     	;# 
  1318  0E17                     	;# 
  1319  0E18                     	;# 
  1320  0E18                     	;# 
  1321  0E18                     	;# 
  1322  0E19                     	;# 
  1323  0E1A                     	;# 
  1324  0E1B                     	;# 
  1325  0E1C                     	;# 
  1326  0E1D                     	;# 
  1327  0E1E                     	;# 
  1328  0E1F                     	;# 
  1329  0E20                     	;# 
  1330  0E21                     	;# 
  1331  0E22                     	;# 
  1332  0E23                     	;# 
  1333  0E24                     	;# 
  1334  0E25                     	;# 
  1335  0E26                     	;# 
  1336  0E27                     	;# 
  1337  0E28                     	;# 
  1338  0E29                     	;# 
  1339  0E2A                     	;# 
  1340  0E2B                     	;# 
  1341  0E2C                     	;# 
  1342  0E2D                     	;# 
  1343  0E2E                     	;# 
  1344  0E2F                     	;# 
  1345  0E30                     	;# 
  1346  0E31                     	;# 
  1347  0E32                     	;# 
  1348  0E33                     	;# 
  1349  0E34                     	;# 
  1350  0E35                     	;# 
  1351  0E36                     	;# 
  1352  0E37                     	;# 
  1353  0E38                     	;# 
  1354  0E39                     	;# 
  1355  0E3A                     	;# 
  1356  0E3B                     	;# 
  1357  0E3C                     	;# 
  1358  0E3D                     	;# 
  1359  0E3E                     	;# 
  1360  0E90                     	;# 
  1361  0E91                     	;# 
  1362  0E92                     	;# 
  1363  0E93                     	;# 
  1364  0E94                     	;# 
  1365  0E95                     	;# 
  1366  0E96                     	;# 
  1367  0E97                     	;# 
  1368  0E98                     	;# 
  1369  0E99                     	;# 
  1370  0E9A                     	;# 
  1371  0E9B                     	;# 
  1372  0E9C                     	;# 
  1373  0E9D                     	;# 
  1374  0E9E                     	;# 
  1375  0E9F                     	;# 
  1376  0EA0                     	;# 
  1377  0EA1                     	;# 
  1378  0EA2                     	;# 
  1379  0EA3                     	;# 
  1380  0EA4                     	;# 
  1381  0EA5                     	;# 
  1382  0EA6                     	;# 
  1383  0EA7                     	;# 
  1384  0EA8                     	;# 
  1385  0EA9                     	;# 
  1386  0EAA                     	;# 
  1387  0EAB                     	;# 
  1388  0EAC                     	;# 
  1389  0EAD                     	;# 
  1390  0EAE                     	;# 
  1391  0EAF                     	;# 
  1392  0EB0                     	;# 
  1393  0EB1                     	;# 
  1394  0EB2                     	;# 
  1395  0F0F                     	;# 
  1396  0F10                     	;# 
  1397  0F11                     	;# 
  1398  0F12                     	;# 
  1399  0F13                     	;# 
  1400  0F14                     	;# 
  1401  0F15                     	;# 
  1402  0F16                     	;# 
  1403  0F17                     	;# 
  1404  0F18                     	;# 
  1405  0F19                     	;# 
  1406  0F1A                     	;# 
  1407  0F1B                     	;# 
  1408  0F1C                     	;# 
  1409  0F1D                     	;# 
  1410  0F1E                     	;# 
  1411  0F1F                     	;# 
  1412  0F20                     	;# 
  1413  0F21                     	;# 
  1414  0F22                     	;# 
  1415  0F23                     	;# 
  1416  0F24                     	;# 
  1417  0F25                     	;# 
  1418  0F26                     	;# 
  1419  0F27                     	;# 
  1420  0F28                     	;# 
  1421  0F29                     	;# 
  1422  0F2A                     	;# 
  1423  0F2B                     	;# 
  1424  0F2C                     	;# 
  1425  0F2D                     	;# 
  1426  0F2E                     	;# 
  1427  0F2F                     	;# 
  1428  0F30                     	;# 
  1429  0F31                     	;# 
  1430  0F32                     	;# 
  1431  0F33                     	;# 
  1432  0F34                     	;# 
  1433  0F35                     	;# 
  1434  0F36                     	;# 
  1435  0F37                     	;# 
  1436  0FE4                     	;# 
  1437  0FE5                     	;# 
  1438  0FE6                     	;# 
  1439  0FE7                     	;# 
  1440  0FE8                     	;# 
  1441  0FE9                     	;# 
  1442  0FEA                     	;# 
  1443  0FEB                     	;# 
  1444  0FED                     	;# 
  1445  0FEE                     	;# 
  1446  0FEF                     	;# 
  1447                           
  1448                           	psect	idataCOMMON
  1449  1000                     __pidataCOMMON:	
  1450                           
  1451                           ;initializer for _Key
  1452  1000  346E               	retlw	110
  1453                           
  1454                           	psect	idataBANK0
  1455  0002                     __pidataBANK0:	
  1456                           
  1457                           ;initializer for _count
  1458  0002  3408               	retlw	8
  1459  0003  3402               	retlw	2
  1460                           
  1461                           	psect	idataBANK1
  1462  1B8C                     __pidataBANK1:	
  1463                           
  1464                           ;initializer for _UPDOWN
  1465  1B8C  3420               	retlw	32
  1466  1B8D  3420               	retlw	32
  1467  1B8E  3420               	retlw	32
  1468  1B8F  3420               	retlw	32
  1469  1B90  3420               	retlw	32
  1470  1B91  3420               	retlw	32
  1471  1B92  3420               	retlw	32
  1472  1B93  3420               	retlw	32
  1473  1B94  3420               	retlw	32
  1474  1B95  3420               	retlw	32
  1475  1B96  3420               	retlw	32
  1476  1B97  3420               	retlw	32
  1477  1B98  3420               	retlw	32
  1478  1B99  3420               	retlw	32
  1479  1B9A  3420               	retlw	32
  1480  1B9B  3420               	retlw	32
  1481  1B9C  3400               	retlw	0
  1482                           
  1483                           ;initializer for _print_line
  1484  1B9D  3403               	retlw	3
  1485                           
  1486                           ;initializer for _naif
  1487  1B9E  3420               	retlw	32
  1488  1B9F  3420               	retlw	32
  1489  1BA0  3420               	retlw	32
  1490  1BA1  3420               	retlw	32
  1491  1BA2  3420               	retlw	32
  1492  1BA3  3420               	retlw	32
  1493  1BA4  3420               	retlw	32
  1494  1BA5  3420               	retlw	32
  1495  1BA6  3420               	retlw	32
  1496  1BA7  3420               	retlw	32
  1497  1BA8  3420               	retlw	32
  1498  1BA9  3420               	retlw	32
  1499  1BAA  3420               	retlw	32
  1500  1BAB  3420               	retlw	32
  1501  1BAC  3420               	retlw	32
  1502  1BAD  3420               	retlw	32
  1503  1BAE  3400               	retlw	0
  1504                           
  1505                           	psect	idataBANK2
  1506  1B18                     __pidataBANK2:	
  1507                           
  1508                           ;initializer for _hello
  1509  1B18  346E               	retlw	110
  1510  1B19  3461               	retlw	97
  1511  1B1A  3469               	retlw	105
  1512  1B1B  3466               	retlw	102
  1513  1B1C  3420               	retlw	32
  1514  1B1D  3468               	retlw	104
  1515  1B1E  3461               	retlw	97
  1516  1B1F  346D               	retlw	109
  1517  1B20  3464               	retlw	100
  1518  1B21  3469               	retlw	105
  1519  1B22  3420               	retlw	32
  1520  1B23  3461               	retlw	97
  1521  1B24  346C               	retlw	108
  1522  1B25  346A               	retlw	106
  1523  1B26  346F               	retlw	111
  1524  1B27  3468               	retlw	104
  1525  1B28  3461               	retlw	97
  1526  1B29  346E               	retlw	110
  1527  1B2A  3469               	retlw	105
  1528  1B2B  3420               	retlw	32
  1529  1B2C  3420               	retlw	32
  1530  1B2D  3420               	retlw	32
  1531  1B2E  3400               	retlw	0
  1532  1B2F  3400               	retlw	0
  1533  1B30  3400               	retlw	0
  1534                           
  1535                           	psect	stringtext1
  1536  094E                     __pstringtext1:	
  1537  094E                     _black:	
  1538  094E  34FF               	retlw	255
  1539  094F  34FF               	retlw	255
  1540  0950  34FF               	retlw	255
  1541  0951  34FF               	retlw	255
  1542  0952  34FF               	retlw	255
  1543  0953  34FF               	retlw	255
  1544  0954  34FF               	retlw	255
  1545  0955  34FF               	retlw	255
  1546  0956  34FF               	retlw	255
  1547  0957  34FF               	retlw	255
  1548  0958  34FF               	retlw	255
  1549  0959  34FF               	retlw	255
  1550  095A  34FF               	retlw	255
  1551  095B  34FF               	retlw	255
  1552  095C  34FF               	retlw	255
  1553  095D  34FF               	retlw	255
  1554  095E  34FF               	retlw	255
  1555  095F  34FF               	retlw	255
  1556  0960  34FF               	retlw	255
  1557  0961  34FF               	retlw	255
  1558  0962  34FF               	retlw	255
  1559  0963  34FF               	retlw	255
  1560  0964  34FF               	retlw	255
  1561  0965  34FF               	retlw	255
  1562  0966  34FF               	retlw	255
  1563  0967  34FF               	retlw	255
  1564  0968  34FF               	retlw	255
  1565  0969  34FF               	retlw	255
  1566  096A  34FF               	retlw	255
  1567  096B  34FF               	retlw	255
  1568  096C  34FF               	retlw	255
  1569  096D  34FF               	retlw	255
  1570  096E  34FF               	retlw	255
  1571  096F  34FF               	retlw	255
  1572  0970  34FF               	retlw	255
  1573  0971  34FF               	retlw	255
  1574  0972  34FF               	retlw	255
  1575  0973  34FF               	retlw	255
  1576  0974  34FF               	retlw	255
  1577  0975  34FF               	retlw	255
  1578  0976  34FF               	retlw	255
  1579  0977  34FF               	retlw	255
  1580  0978  34FF               	retlw	255
  1581  0979  34FF               	retlw	255
  1582  097A  34FF               	retlw	255
  1583  097B  34FF               	retlw	255
  1584  097C  34FF               	retlw	255
  1585  097D  34FF               	retlw	255
  1586  097E  34FF               	retlw	255
  1587  097F  34FF               	retlw	255
  1588  0980  34FF               	retlw	255
  1589  0981  34FF               	retlw	255
  1590  0982  34FF               	retlw	255
  1591  0983  34FF               	retlw	255
  1592  0984  34FF               	retlw	255
  1593  0985  34FF               	retlw	255
  1594  0986  34FF               	retlw	255
  1595  0987  34FF               	retlw	255
  1596  0988  34FF               	retlw	255
  1597  0989  34FF               	retlw	255
  1598  098A  34FF               	retlw	255
  1599  098B  34FF               	retlw	255
  1600  098C  34FF               	retlw	255
  1601  098D  34FF               	retlw	255
  1602  098E  34FF               	retlw	255
  1603  098F  34FF               	retlw	255
  1604  0990  34FF               	retlw	255
  1605  0991  34FF               	retlw	255
  1606  0992  34FF               	retlw	255
  1607  0993  34FF               	retlw	255
  1608  0994  34FF               	retlw	255
  1609  0995  34FF               	retlw	255
  1610  0996  34FF               	retlw	255
  1611  0997  34FF               	retlw	255
  1612  0998  34FF               	retlw	255
  1613  0999  34FF               	retlw	255
  1614  099A  34FF               	retlw	255
  1615  099B  34FF               	retlw	255
  1616  099C  34FF               	retlw	255
  1617  099D  34FF               	retlw	255
  1618  099E  34FF               	retlw	255
  1619  099F  34FF               	retlw	255
  1620  09A0  34FF               	retlw	255
  1621  09A1  34FF               	retlw	255
  1622  09A2  34FF               	retlw	255
  1623  09A3  34FF               	retlw	255
  1624  09A4  34FF               	retlw	255
  1625  09A5  34FF               	retlw	255
  1626  09A6  34FF               	retlw	255
  1627  09A7  34FF               	retlw	255
  1628  09A8  34FF               	retlw	255
  1629  09A9  34FF               	retlw	255
  1630  09AA  34FF               	retlw	255
  1631  09AB  34FF               	retlw	255
  1632  09AC  34FF               	retlw	255
  1633  09AD  34FF               	retlw	255
  1634  09AE  34FF               	retlw	255
  1635  09AF  34FF               	retlw	255
  1636  09B0  34FF               	retlw	255
  1637  09B1  34FF               	retlw	255
  1638  09B2  34FF               	retlw	255
  1639  09B3  34FF               	retlw	255
  1640  09B4  34FF               	retlw	255
  1641  09B5  34FF               	retlw	255
  1642  09B6  34FF               	retlw	255
  1643  09B7  34F9               	retlw	249
  1644  09B8  3400               	retlw	0
  1645  09B9  345F               	retlw	95
  1646  09BA  34FF               	retlw	255
  1647  09BB  34FF               	retlw	255
  1648  09BC  34FF               	retlw	255
  1649  09BD  34FF               	retlw	255
  1650  09BE  34FF               	retlw	255
  1651  09BF  34FF               	retlw	255
  1652  09C0  34FF               	retlw	255
  1653  09C1  34FF               	retlw	255
  1654  09C2  34FF               	retlw	255
  1655  09C3  34FF               	retlw	255
  1656  09C4  34FF               	retlw	255
  1657  09C5  34FF               	retlw	255
  1658  09C6  34FE               	retlw	254
  1659  09C7  3400               	retlw	0
  1660  09C8  3400               	retlw	0
  1661  09C9  3400               	retlw	0
  1662  09CA  347F               	retlw	127
  1663  09CB  34FF               	retlw	255
  1664  09CC  34FF               	retlw	255
  1665  09CD  34FF               	retlw	255
  1666  09CE  34FF               	retlw	255
  1667  09CF  34FF               	retlw	255
  1668  09D0  34FF               	retlw	255
  1669  09D1  34FF               	retlw	255
  1670  09D2  34FF               	retlw	255
  1671  09D3  34FF               	retlw	255
  1672  09D4  34FF               	retlw	255
  1673  09D5  34FF               	retlw	255
  1674  09D6  34F0               	retlw	240
  1675  09D7  3400               	retlw	0
  1676  09D8  3400               	retlw	0
  1677  09D9  3400               	retlw	0
  1678  09DA  340F               	retlw	15
  1679  09DB  34FF               	retlw	255
  1680  09DC  34FF               	retlw	255
  1681  09DD  34FF               	retlw	255
  1682  09DE  34FF               	retlw	255
  1683  09DF  34FF               	retlw	255
  1684  09E0  34FF               	retlw	255
  1685  09E1  34FF               	retlw	255
  1686  09E2  34FF               	retlw	255
  1687  09E3  34FF               	retlw	255
  1688  09E4  34FF               	retlw	255
  1689  09E5  34FF               	retlw	255
  1690  09E6  3480               	retlw	128
  1691  09E7  3400               	retlw	0
  1692  09E8  3400               	retlw	0
  1693  09E9  3400               	retlw	0
  1694  09EA  3401               	retlw	1
  1695  09EB  34FF               	retlw	255
  1696  09EC  34FF               	retlw	255
  1697  09ED  34FF               	retlw	255
  1698  09EE  34FF               	retlw	255
  1699  09EF  34FF               	retlw	255
  1700  09F0  34FF               	retlw	255
  1701  09F1  34FF               	retlw	255
  1702  09F2  34FF               	retlw	255
  1703  09F3  34FF               	retlw	255
  1704  09F4  34FF               	retlw	255
  1705  09F5  34FE               	retlw	254
  1706  09F6  3400               	retlw	0
  1707  09F7  3400               	retlw	0
  1708  09F8  3400               	retlw	0
  1709  09F9  3400               	retlw	0
  1710  09FA  3400               	retlw	0
  1711  09FB  347F               	retlw	127
  1712  09FC  34FF               	retlw	255
  1713  09FD  34FF               	retlw	255
  1714  09FE  34FF               	retlw	255
  1715  09FF  34FF               	retlw	255
  1716  0A00  34FF               	retlw	255
  1717  0A01  34FF               	retlw	255
  1718  0A02  34FF               	retlw	255
  1719  0A03  34FF               	retlw	255
  1720  0A04  34FF               	retlw	255
  1721  0A05  34F8               	retlw	248
  1722  0A06  3400               	retlw	0
  1723  0A07  3401               	retlw	1
  1724  0A08  34B5               	retlw	181
  1725  0A09  3400               	retlw	0
  1726  0A0A  3400               	retlw	0
  1727  0A0B  341F               	retlw	31
  1728  0A0C  34FF               	retlw	255
  1729  0A0D  34FF               	retlw	255
  1730  0A0E  34FF               	retlw	255
  1731  0A0F  34FF               	retlw	255
  1732  0A10  34FF               	retlw	255
  1733  0A11  34FF               	retlw	255
  1734  0A12  34FF               	retlw	255
  1735  0A13  34FF               	retlw	255
  1736  0A14  34FF               	retlw	255
  1737  0A15  34E0               	retlw	224
  1738  0A16  3400               	retlw	0
  1739  0A17  345F               	retlw	95
  1740  0A18  34FF               	retlw	255
  1741  0A19  34F8               	retlw	248
  1742  0A1A  3400               	retlw	0
  1743  0A1B  340F               	retlw	15
  1744  0A1C  34FF               	retlw	255
  1745  0A1D  34FF               	retlw	255
  1746  0A1E  34FF               	retlw	255
  1747  0A1F  34FF               	retlw	255
  1748  0A20  34FF               	retlw	255
  1749  0A21  34FF               	retlw	255
  1750  0A22  34FF               	retlw	255
  1751  0A23  34FF               	retlw	255
  1752  0A24  34FF               	retlw	255
  1753  0A25  34E0               	retlw	224
  1754  0A26  3401               	retlw	1
  1755  0A27  34FF               	retlw	255
  1756  0A28  34FF               	retlw	255
  1757  0A29  34FF               	retlw	255
  1758  0A2A  3400               	retlw	0
  1759  0A2B  3403               	retlw	3
  1760  0A2C  34FF               	retlw	255
  1761  0A2D  34FF               	retlw	255
  1762  0A2E  34FF               	retlw	255
  1763  0A2F  34FF               	retlw	255
  1764  0A30  34FF               	retlw	255
  1765  0A31  34FF               	retlw	255
  1766  0A32  34FF               	retlw	255
  1767  0A33  34FF               	retlw	255
  1768  0A34  34FF               	retlw	255
  1769  0A35  34F0               	retlw	240
  1770  0A36  340F               	retlw	15
  1771  0A37  34FF               	retlw	255
  1772  0A38  34A7               	retlw	167
  1773  0A39  34FF               	retlw	255
  1774  0A3A  34E0               	retlw	224
  1775  0A3B  3401               	retlw	1
  1776  0A3C  34FF               	retlw	255
  1777  0A3D  34FF               	retlw	255
  1778  0A3E  34FF               	retlw	255
  1779  0A3F  34FF               	retlw	255
  1780  0A40  34FF               	retlw	255
  1781  0A41  34FF               	retlw	255
  1782  0A42  34FF               	retlw	255
  1783  0A43  34FF               	retlw	255
  1784  0A44  34F9               	retlw	249
  1785  0A45  34FE               	retlw	254
  1786  0A46  343F               	retlw	63
  1787  0A47  34F8               	retlw	248
  1788  0A48  3400               	retlw	0
  1789  0A49  345F               	retlw	95
  1790  0A4A  34F0               	retlw	240
  1791  0A4B  3401               	retlw	1
  1792  0A4C  34FF               	retlw	255
  1793  0A4D  34FF               	retlw	255
  1794  0A4E  34FF               	retlw	255
  1795  0A4F  34FF               	retlw	255
  1796  0A50  34FF               	retlw	255
  1797  0A51  34FF               	retlw	255
  1798  0A52  34FF               	retlw	255
  1799  0A53  34FF               	retlw	255
  1800  0A54  34E0               	retlw	224
  1801  0A55  347F               	retlw	127
  1802  0A56  34FF               	retlw	255
  1803  0A57  34C0               	retlw	192
  1804  0A58  3400               	retlw	0
  1805  0A59  3407               	retlw	7
  1806  0A5A  34F8               	retlw	248
  1807  0A5B  3400               	retlw	0
  1808  0A5C  34FF               	retlw	255
  1809  0A5D  34FF               	retlw	255
  1810  0A5E  34FF               	retlw	255
  1811  0A5F  34FF               	retlw	255
  1812  0A60  34FF               	retlw	255
  1813  0A61  34FF               	retlw	255
  1814  0A62  34FF               	retlw	255
  1815  0A63  34FF               	retlw	255
  1816  0A64  3480               	retlw	128
  1817  0A65  341F               	retlw	31
  1818  0A66  34FF               	retlw	255
  1819  0A67  3400               	retlw	0
  1820  0A68  3400               	retlw	0
  1821  0A69  3403               	retlw	3
  1822  0A6A  34FC               	retlw	252
  1823  0A6B  3400               	retlw	0
  1824  0A6C  347F               	retlw	127
  1825  0A6D  34FF               	retlw	255
  1826  0A6E  34FF               	retlw	255
  1827  0A6F  34FF               	retlw	255
  1828  0A70  34FF               	retlw	255
  1829  0A71  34FF               	retlw	255
  1830  0A72  34FF               	retlw	255
  1831  0A73  34FF               	retlw	255
  1832  0A74  3400               	retlw	0
  1833  0A75  3407               	retlw	7
  1834  0A76  34FC               	retlw	252
  1835  0A77  3400               	retlw	0
  1836  0A78  3400               	retlw	0
  1837  0A79  3400               	retlw	0
  1838  0A7A  34FE               	retlw	254
  1839  0A7B  3400               	retlw	0
  1840  0A7C  347F               	retlw	127
  1841  0A7D  34FF               	retlw	255
  1842  0A7E  34FF               	retlw	255
  1843  0A7F  34FF               	retlw	255
  1844  0A80  34FF               	retlw	255
  1845  0A81  34FF               	retlw	255
  1846  0A82  34FF               	retlw	255
  1847  0A83  34FF               	retlw	255
  1848  0A84  34C0               	retlw	192
  1849  0A85  3401               	retlw	1
  1850  0A86  34F0               	retlw	240
  1851  0A87  3400               	retlw	0
  1852  0A88  3478               	retlw	120
  1853  0A89  3400               	retlw	0
  1854  0A8A  34FE               	retlw	254
  1855  0A8B  3400               	retlw	0
  1856  0A8C  347F               	retlw	127
  1857  0A8D  34FF               	retlw	255
  1858  0A8E  34FF               	retlw	255
  1859  0A8F  34FF               	retlw	255
  1860  0A90  34FF               	retlw	255
  1861  0A91  34FF               	retlw	255
  1862  0A92  34FF               	retlw	255
  1863  0A93  34CF               	retlw	207
  1864  0A94  34E0               	retlw	224
  1865  0A95  3400               	retlw	0
  1866  0A96  3440               	retlw	64
  1867  0A97  3401               	retlw	1
  1868  0A98  34FE               	retlw	254
  1869  0A99  3400               	retlw	0
  1870  0A9A  34FF               	retlw	255
  1871  0A9B  3400               	retlw	0
  1872  0A9C  347F               	retlw	127
  1873  0A9D  34FF               	retlw	255
  1874  0A9E  34FF               	retlw	255
  1875  0A9F  34FF               	retlw	255
  1876  0AA0  34FF               	retlw	255
  1877  0AA1  34FF               	retlw	255
  1878  0AA2  34FF               	retlw	255
  1879  0AA3  3481               	retlw	129
  1880  0AA4  34FC               	retlw	252
  1881  0AA5  3400               	retlw	0
  1882  0AA6  3400               	retlw	0
  1883  0AA7  3407               	retlw	7
  1884  0AA8  34FE               	retlw	254
  1885  0AA9  3400               	retlw	0
  1886  0AAA  34FE               	retlw	254
  1887  0AAB  3400               	retlw	0
  1888  0AAC  347F               	retlw	127
  1889  0AAD  34FF               	retlw	255
  1890  0AAE  34FF               	retlw	255
  1891  0AAF  34FF               	retlw	255
  1892  0AB0  34FF               	retlw	255
  1893  0AB1  34FF               	retlw	255
  1894  0AB2  34FC               	retlw	252
  1895  0AB3  3400               	retlw	0
  1896  0AB4  347F               	retlw	127
  1897  0AB5  3400               	retlw	0
  1898  0AB6  3400               	retlw	0
  1899  0AB7  341F               	retlw	31
  1900  0AB8  34FC               	retlw	252
  1901  0AB9  3400               	retlw	0
  1902  0ABA  34FE               	retlw	254
  1903  0ABB  3400               	retlw	0
  1904  0ABC  347F               	retlw	127
  1905  0ABD  34FF               	retlw	255
  1906  0ABE  34FF               	retlw	255
  1907  0ABF  34FF               	retlw	255
  1908  0AC0  34FF               	retlw	255
  1909  0AC1  34FF               	retlw	255
  1910  0AC2  34F8               	retlw	248
  1911  0AC3  3400               	retlw	0
  1912  0AC4  343F               	retlw	63
  1913  0AC5  34C0               	retlw	192
  1914  0AC6  3400               	retlw	0
  1915  0AC7  347F               	retlw	127
  1916  0AC8  34F0               	retlw	240
  1917  0AC9  3400               	retlw	0
  1918  0ACA  34FE               	retlw	254
  1919  0ACB  3400               	retlw	0
  1920  0ACC  347F               	retlw	127
  1921  0ACD  34FF               	retlw	255
  1922  0ACE  34FF               	retlw	255
  1923  0ACF  34FF               	retlw	255
  1924  0AD0  34FF               	retlw	255
  1925  0AD1  34FF               	retlw	255
  1926  0AD2  34E0               	retlw	224
  1927  0AD3  3400               	retlw	0
  1928  0AD4  34FF               	retlw	255
  1929  0AD5  34E0               	retlw	224
  1930  0AD6  3401               	retlw	1
  1931  0AD7  34FF               	retlw	255
  1932  0AD8  34C0               	retlw	192
  1933  0AD9  3403               	retlw	3
  1934  0ADA  34FC               	retlw	252
  1935  0ADB  3400               	retlw	0
  1936  0ADC  34FF               	retlw	255
  1937  0ADD  34FF               	retlw	255
  1938  0ADE  34FF               	retlw	255
  1939  0ADF  34FF               	retlw	255
  1940  0AE0  34FF               	retlw	255
  1941  0AE1  34FF               	retlw	255
  1942  0AE2  3400               	retlw	0
  1943  0AE3  3403               	retlw	3
  1944  0AE4  34FF               	retlw	255
  1945  0AE5  34FC               	retlw	252
  1946  0AE6  3407               	retlw	7
  1947  0AE7  34DE               	retlw	222
  1948  0AE8  3400               	retlw	0
  1949  0AE9  3407               	retlw	7
  1950  0AEA  34F8               	retlw	248
  1951  0AEB  3400               	retlw	0
  1952  0AEC  34FF               	retlw	255
  1953  0AED  34FF               	retlw	255
  1954  0AEE  34FF               	retlw	255
  1955  0AEF  34FF               	retlw	255
  1956  0AF0  34FF               	retlw	255
  1957  0AF1  34FC               	retlw	252
  1958  0AF2  3400               	retlw	0
  1959  0AF3  340F               	retlw	15
  1960  0AF4  34FC               	retlw	252
  1961  0AF5  347F               	retlw	127
  1962  0AF6  349F               	retlw	159
  1963  0AF7  3404               	retlw	4
  1964  0AF8  3400               	retlw	0
  1965  0AF9  341F               	retlw	31
  1966  0AFA  34F0               	retlw	240
  1967  0AFB  3401               	retlw	1
  1968  0AFC  34FF               	retlw	255
  1969  0AFD  34FF               	retlw	255
  1970  0AFE  34FF               	retlw	255
  1971  0AFF  34FF               	retlw	255
  1972  0B00  34FF               	retlw	255
  1973  0B01  34F8               	retlw	248
  1974  0B02  3400               	retlw	0
  1975  0B03  343F               	retlw	63
  1976  0B04  34F0               	retlw	240
  1977  0B05  341F               	retlw	31
  1978  0B06  34FC               	retlw	252
  1979  0B07  3400               	retlw	0
  1980  0B08  3400               	retlw	0
  1981  0B09  347F               	retlw	127
  1982  0B0A  34C0               	retlw	192
  1983  0B0B  3403               	retlw	3
  1984  0B0C  34FF               	retlw	255
  1985  0B0D  34FF               	retlw	255
  1986  0B0E  34FF               	retlw	255
  1987  0B0F  34FF               	retlw	255
  1988  0B10  34FF               	retlw	255
  1989  0B11  34C0               	retlw	192
  1990  0B12  3400               	retlw	0
  1991  0B13  34FF               	retlw	255
  1992  0B14  34C0               	retlw	192
  1993  0B15  3407               	retlw	7
  1994  0B16  34F8               	retlw	248
  1995  0B17  3400               	retlw	0
  1996  0B18  3401               	retlw	1
  1997  0B19  34FF               	retlw	255
  1998  0B1A  3480               	retlw	128
  1999  0B1B  3407               	retlw	7
  2000  0B1C  34FF               	retlw	255
  2001  0B1D  34FF               	retlw	255
  2002  0B1E  34FF               	retlw	255
  2003  0B1F  34FF               	retlw	255
  2004  0B20  34FF               	retlw	255
  2005  0B21  3400               	retlw	0
  2006  0B22  3407               	retlw	7
  2007  0B23  34FE               	retlw	254
  2008  0B24  3400               	retlw	0
  2009  0B25  3407               	retlw	7
  2010  0B26  34FC               	retlw	252
  2011  0B27  3400               	retlw	0
  2012  0B28  3407               	retlw	7
  2013  0B29  34FE               	retlw	254
  2014  0B2A  3400               	retlw	0
  2015  0B2B  340F               	retlw	15
  2016  0B2C  34FF               	retlw	255
  2017  0B2D  34FF               	retlw	255
  2018  0B2E  34FF               	retlw	255
  2019  0B2F  34FF               	retlw	255
  2020  0B30  34FE               	retlw	254
  2021  0B31  3400               	retlw	0
  2022  0B32  340F               	retlw	15
  2023  0B33  34FC               	retlw	252
  2024  0B34  3400               	retlw	0
  2025  0B35  341F               	retlw	31
  2026  0B36  34FF               	retlw	255
  2027  0B37  3400               	retlw	0
  2028  0B38  343F               	retlw	63
  2029  0B39  34F0               	retlw	240
  2030  0B3A  3400               	retlw	0
  2031  0B3B  343F               	retlw	63
  2032  0B3C  34FF               	retlw	255
  2033  0B3D  34FF               	retlw	255
  2034  0B3E  34FF               	retlw	255
  2035  0B3F  34FF               	retlw	255
  2036  0B40  34F8               	retlw	248
  2037  0B41  3400               	retlw	0
  2038  0B42  343F               	retlw	63
  2039  0B43  34F8               	retlw	248
  2040  0B44  3400               	retlw	0
  2041  0B45  347F               	retlw	127
  2042  0B46  34FF               	retlw	255
  2043  0B47  34C0               	retlw	192
  2044  0B48  347F               	retlw	127
  2045  0B49  34C0               	retlw	192
  2046  0B4A  3400               	retlw	0
  2047  0B4B  34FF               	retlw	255
  2048  0B4C  34FF               	retlw	255
  2049  0B4D  34FF               	retlw	255
  2050  0B4E  34FF               	retlw	255
  2051  0B4F  34FF               	retlw	255
  2052  0B50  34FC               	retlw	252
  2053  0B51  3400               	retlw	0
  2054  0B52  340F               	retlw	15
  2055  0B53  34FC               	retlw	252
  2056  0B54  3400               	retlw	0
  2057  0B55  343F               	retlw	63
  2058  0B56  34C7               	retlw	199
  2059  0B57  34F9               	retlw	249
  2060  0B58  34FF               	retlw	255
  2061  0B59  3400               	retlw	0
  2062  0B5A  3403               	retlw	3
  2063  0B5B  34FF               	retlw	255
  2064  0B5C  34FF               	retlw	255
  2065  0B5D  34FF               	retlw	255
  2066  0B5E  34FF               	retlw	255
  2067  0B5F  34FF               	retlw	255
  2068  0B60  34FF               	retlw	255
  2069  0B61  3480               	retlw	128
  2070  0B62  3403               	retlw	3
  2071  0B63  34FF               	retlw	255
  2072  0B64  3400               	retlw	0
  2073  0B65  340E               	retlw	14
  2074  0B66  3400               	retlw	0
  2075  0B67  34FF               	retlw	255
  2076  0B68  34FC               	retlw	252
  2077  0B69  3400               	retlw	0
  2078  0B6A  340F               	retlw	15
  2079  0B6B  34FF               	retlw	255
  2080  0B6C  34FF               	retlw	255
  2081  0B6D  34FF               	retlw	255
  2082  0B6E  34FF               	retlw	255
  2083  0B6F  34FF               	retlw	255
  2084  0B70  34FF               	retlw	255
  2085  0B71  34C0               	retlw	192
  2086  0B72  3403               	retlw	3
  2087  0B73  34FF               	retlw	255
  2088  0B74  34E0               	retlw	224
  2089  0B75  3400               	retlw	0
  2090  0B76  3400               	retlw	0
  2091  0B77  347F               	retlw	127
  2092  0B78  34F0               	retlw	240
  2093  0B79  3400               	retlw	0
  2094  0B7A  343F               	retlw	63
  2095  0B7B  34FF               	retlw	255
  2096  0B7C  34FF               	retlw	255
  2097  0B7D  34FF               	retlw	255
  2098  0B7E  34FF               	retlw	255
  2099  0B7F  34FF               	retlw	255
  2100  0B80  34FF               	retlw	255
  2101  0B81  34F0               	retlw	240
  2102  0B82  3407               	retlw	7
  2103  0B83  34FF               	retlw	255
  2104  0B84  34F0               	retlw	240
  2105  0B85  3400               	retlw	0
  2106  0B86  3400               	retlw	0
  2107  0B87  347F               	retlw	127
  2108  0B88  34F0               	retlw	240
  2109  0B89  3400               	retlw	0
  2110  0B8A  34FF               	retlw	255
  2111  0B8B  34FF               	retlw	255
  2112  0B8C  34FF               	retlw	255
  2113  0B8D  34FF               	retlw	255
  2114  0B8E  34FF               	retlw	255
  2115  0B8F  34FF               	retlw	255
  2116  0B90  34FF               	retlw	255
  2117  0B91  34E0               	retlw	224
  2118  0B92  341F               	retlw	31
  2119  0B93  34FF               	retlw	255
  2120  0B94  34FE               	retlw	254
  2121  0B95  3400               	retlw	0
  2122  0B96  3403               	retlw	3
  2123  0B97  34FF               	retlw	255
  2124  0B98  34F0               	retlw	240
  2125  0B99  3403               	retlw	3
  2126  0B9A  34FF               	retlw	255
  2127  0B9B  34FF               	retlw	255
  2128  0B9C  34FF               	retlw	255
  2129  0B9D  34FF               	retlw	255
  2130  0B9E  34FF               	retlw	255
  2131  0B9F  34FF               	retlw	255
  2132  0BA0  34FF               	retlw	255
  2133  0BA1  3480               	retlw	128
  2134  0BA2  347F               	retlw	127
  2135  0BA3  34C1               	retlw	193
  2136  0BA4  34FF               	retlw	255
  2137  0BA5  3480               	retlw	128
  2138  0BA6  3407               	retlw	7
  2139  0BA7  34FE               	retlw	254
  2140  0BA8  34FE               	retlw	254
  2141  0BA9  340F               	retlw	15
  2142  0BAA  34FF               	retlw	255
  2143  0BAB  34FF               	retlw	255
  2144  0BAC  34FF               	retlw	255
  2145  0BAD  34FF               	retlw	255
  2146  0BAE  34FF               	retlw	255
  2147  0BAF  34FF               	retlw	255
  2148  0BB0  34FE               	retlw	254
  2149  0BB1  3403               	retlw	3
  2150  0BB2  34FF               	retlw	255
  2151  0BB3  3400               	retlw	0
  2152  0BB4  347F               	retlw	127
  2153  0BB5  34C0               	retlw	192
  2154  0BB6  343F               	retlw	63
  2155  0BB7  34F0               	retlw	240
  2156  0BB8  347F               	retlw	127
  2157  0BB9  34BF               	retlw	191
  2158  0BBA  34FF               	retlw	255
  2159  0BBB  34FF               	retlw	255
  2160  0BBC  34FF               	retlw	255
  2161  0BBD  34FF               	retlw	255
  2162  0BBE  34FF               	retlw	255
  2163  0BBF  34FF               	retlw	255
  2164  0BC0  34F0               	retlw	240
  2165  0BC1  3407               	retlw	7
  2166  0BC2  34FC               	retlw	252
  2167  0BC3  3400               	retlw	0
  2168  0BC4  341F               	retlw	31
  2169  0BC5  34F1               	retlw	241
  2170  0BC6  34FF               	retlw	255
  2171  0BC7  34C0               	retlw	192
  2172  0BC8  341F               	retlw	31
  2173  0BC9  34FF               	retlw	255
  2174  0BCA  34FF               	retlw	255
  2175  0BCB  34FF               	retlw	255
  2176  0BCC  34FF               	retlw	255
  2177  0BCD  34FF               	retlw	255
  2178  0BCE  34FF               	retlw	255
  2179  0BCF  34FF               	retlw	255
  2180  0BD0  34E0               	retlw	224
  2181  0BD1  341F               	retlw	31
  2182  0BD2  34FC               	retlw	252
  2183  0BD3  3400               	retlw	0
  2184  0BD4  341F               	retlw	31
  2185  0BD5  34FF               	retlw	255
  2186  0BD6  34FF               	retlw	255
  2187  0BD7  3400               	retlw	0
  2188  0BD8  340F               	retlw	15
  2189  0BD9  34FF               	retlw	255
  2190  0BDA  34FF               	retlw	255
  2191  0BDB  34FF               	retlw	255
  2192  0BDC  34FF               	retlw	255
  2193  0BDD  34FF               	retlw	255
  2194  0BDE  34FF               	retlw	255
  2195  0BDF  34FF               	retlw	255
  2196  0BE0  3400               	retlw	0
  2197  0BE1  347F               	retlw	127
  2198  0BE2  34FF               	retlw	255
  2199  0BE3  3480               	retlw	128
  2200  0BE4  347F               	retlw	127
  2201  0BE5  34FF               	retlw	255
  2202  0BE6  34FC               	retlw	252
  2203  0BE7  3400               	retlw	0
  2204  0BE8  340F               	retlw	15
  2205  0BE9  34FF               	retlw	255
  2206  0BEA  34FF               	retlw	255
  2207  0BEB  34FF               	retlw	255
  2208  0BEC  34FF               	retlw	255
  2209  0BED  34FF               	retlw	255
  2210  0BEE  34FF               	retlw	255
  2211  0BEF  34FC               	retlw	252
  2212  0BF0  3403               	retlw	3
  2213  0BF1  34FF               	retlw	255
  2214  0BF2  34FF               	retlw	255
  2215  0BF3  34C1               	retlw	193
  2216  0BF4  34FF               	retlw	255
  2217  0BF5  34FF               	retlw	255
  2218  0BF6  34F0               	retlw	240
  2219  0BF7  3400               	retlw	0
  2220  0BF8  343F               	retlw	63
  2221  0BF9  34FF               	retlw	255
  2222  0BFA  34FF               	retlw	255
  2223  0BFB  34FF               	retlw	255
  2224  0BFC  34FF               	retlw	255
  2225  0BFD  34FF               	retlw	255
  2226  0BFE  34FF               	retlw	255
  2227  0BFF  34F8               	retlw	248
  2228  0C00  3407               	retlw	7
  2229  0C01  34FF               	retlw	255
  2230  0C02  34FF               	retlw	255
  2231  0C03  34FF               	retlw	255
  2232  0C04  34FC               	retlw	252
  2233  0C05  343F               	retlw	63
  2234  0C06  34C0               	retlw	192
  2235  0C07  3400               	retlw	0
  2236  0C08  34FF               	retlw	255
  2237  0C09  34FF               	retlw	255
  2238  0C0A  34FF               	retlw	255
  2239  0C0B  34FF               	retlw	255
  2240  0C0C  34FF               	retlw	255
  2241  0C0D  34FF               	retlw	255
  2242  0C0E  34FF               	retlw	255
  2243  0C0F  34E0               	retlw	224
  2244  0C10  341F               	retlw	31
  2245  0C11  34FF               	retlw	255
  2246  0C12  34FF               	retlw	255
  2247  0C13  34FF               	retlw	255
  2248  0C14  34F0               	retlw	240
  2249  0C15  340F               	retlw	15
  2250  0C16  3400               	retlw	0
  2251  0C17  3407               	retlw	7
  2252  0C18  34FF               	retlw	255
  2253  0C19  34FF               	retlw	255
  2254  0C1A  34FF               	retlw	255
  2255  0C1B  34FF               	retlw	255
  2256  0C1C  34FF               	retlw	255
  2257  0C1D  34FF               	retlw	255
  2258  0C1E  34FF               	retlw	255
  2259  0C1F  34E0               	retlw	224
  2260  0C20  34FF               	retlw	255
  2261  0C21  34FF               	retlw	255
  2262  0C22  34FF               	retlw	255
  2263  0C23  34FF               	retlw	255
  2264  0C24  34C0               	retlw	192
  2265  0C25  3400               	retlw	0
  2266  0C26  3400               	retlw	0
  2267  0C27  341F               	retlw	31
  2268  0C28  34FF               	retlw	255
  2269  0C29  34FF               	retlw	255
  2270  0C2A  34FF               	retlw	255
  2271  0C2B  34FF               	retlw	255
  2272  0C2C  34FF               	retlw	255
  2273  0C2D  34FF               	retlw	255
  2274  0C2E  34FF               	retlw	255
  2275  0C2F  34FB               	retlw	251
  2276  0C30  34FF               	retlw	255
  2277  0C31  34FF               	retlw	255
  2278  0C32  34FF               	retlw	255
  2279  0C33  34FF               	retlw	255
  2280  0C34  3400               	retlw	0
  2281  0C35  3400               	retlw	0
  2282  0C36  3400               	retlw	0
  2283  0C37  347F               	retlw	127
  2284  0C38  34FF               	retlw	255
  2285  0C39  34FF               	retlw	255
  2286  0C3A  34FF               	retlw	255
  2287  0C3B  34FF               	retlw	255
  2288  0C3C  34FF               	retlw	255
  2289  0C3D  34FF               	retlw	255
  2290  0C3E  34FF               	retlw	255
  2291  0C3F  34FF               	retlw	255
  2292  0C40  34FF               	retlw	255
  2293  0C41  34FF               	retlw	255
  2294  0C42  34FF               	retlw	255
  2295  0C43  34FC               	retlw	252
  2296  0C44  3400               	retlw	0
  2297  0C45  3400               	retlw	0
  2298  0C46  3401               	retlw	1
  2299  0C47  34FF               	retlw	255
  2300  0C48  34FF               	retlw	255
  2301  0C49  34FF               	retlw	255
  2302  0C4A  34FF               	retlw	255
  2303  0C4B  34FF               	retlw	255
  2304  0C4C  34FF               	retlw	255
  2305  0C4D  34FF               	retlw	255
  2306  0C4E  34FF               	retlw	255
  2307  0C4F  34FF               	retlw	255
  2308  0C50  34FF               	retlw	255
  2309  0C51  34FF               	retlw	255
  2310  0C52  34FF               	retlw	255
  2311  0C53  34F0               	retlw	240
  2312  0C54  340E               	retlw	14
  2313  0C55  3400               	retlw	0
  2314  0C56  3407               	retlw	7
  2315  0C57  34FF               	retlw	255
  2316  0C58  34FF               	retlw	255
  2317  0C59  34FF               	retlw	255
  2318  0C5A  34FF               	retlw	255
  2319  0C5B  34FF               	retlw	255
  2320  0C5C  34FF               	retlw	255
  2321  0C5D  34FF               	retlw	255
  2322  0C5E  34FF               	retlw	255
  2323  0C5F  34FF               	retlw	255
  2324  0C60  34FF               	retlw	255
  2325  0C61  34FF               	retlw	255
  2326  0C62  34FF               	retlw	255
  2327  0C63  34C0               	retlw	192
  2328  0C64  343F               	retlw	63
  2329  0C65  3480               	retlw	128
  2330  0C66  341F               	retlw	31
  2331  0C67  34FF               	retlw	255
  2332  0C68  34FF               	retlw	255
  2333  0C69  34FF               	retlw	255
  2334  0C6A  34FF               	retlw	255
  2335  0C6B  34FF               	retlw	255
  2336  0C6C  34FF               	retlw	255
  2337  0C6D  34FF               	retlw	255
  2338  0C6E  34FF               	retlw	255
  2339  0C6F  34FF               	retlw	255
  2340  0C70  34FF               	retlw	255
  2341  0C71  34FF               	retlw	255
  2342  0C72  34FF               	retlw	255
  2343  0C73  3400               	retlw	0
  2344  0C74  34FF               	retlw	255
  2345  0C75  34E0               	retlw	224
  2346  0C76  347F               	retlw	127
  2347  0C77  34FF               	retlw	255
  2348  0C78  34FF               	retlw	255
  2349  0C79  34FF               	retlw	255
  2350  0C7A  34FF               	retlw	255
  2351  0C7B  34FF               	retlw	255
  2352  0C7C  34FF               	retlw	255
  2353  0C7D  34FF               	retlw	255
  2354  0C7E  34FF               	retlw	255
  2355  0C7F  34FF               	retlw	255
  2356  0C80  34FF               	retlw	255
  2357  0C81  34FF               	retlw	255
  2358  0C82  34FC               	retlw	252
  2359  0C83  3403               	retlw	3
  2360  0C84  34FF               	retlw	255
  2361  0C85  34F9               	retlw	249
  2362  0C86  34FF               	retlw	255
  2363  0C87  34FF               	retlw	255
  2364  0C88  34FF               	retlw	255
  2365  0C89  34FF               	retlw	255
  2366  0C8A  34FF               	retlw	255
  2367  0C8B  34FF               	retlw	255
  2368  0C8C  34FF               	retlw	255
  2369  0C8D  34FF               	retlw	255
  2370  0C8E  34FF               	retlw	255
  2371  0C8F  34FF               	retlw	255
  2372  0C90  34FF               	retlw	255
  2373  0C91  34FF               	retlw	255
  2374  0C92  34F0               	retlw	240
  2375  0C93  340F               	retlw	15
  2376  0C94  34FF               	retlw	255
  2377  0C95  34FF               	retlw	255
  2378  0C96  34FF               	retlw	255
  2379  0C97  34FF               	retlw	255
  2380  0C98  34FF               	retlw	255
  2381  0C99  34FF               	retlw	255
  2382  0C9A  34FF               	retlw	255
  2383  0C9B  34FF               	retlw	255
  2384  0C9C  34FF               	retlw	255
  2385  0C9D  34FF               	retlw	255
  2386  0C9E  34FF               	retlw	255
  2387  0C9F  34FF               	retlw	255
  2388  0CA0  34FF               	retlw	255
  2389  0CA1  34FF               	retlw	255
  2390  0CA2  34C0               	retlw	192
  2391  0CA3  343F               	retlw	63
  2392  0CA4  34FF               	retlw	255
  2393  0CA5  34FF               	retlw	255
  2394  0CA6  34FF               	retlw	255
  2395  0CA7  34FF               	retlw	255
  2396  0CA8  34FF               	retlw	255
  2397  0CA9  34FF               	retlw	255
  2398  0CAA  34FF               	retlw	255
  2399  0CAB  34FF               	retlw	255
  2400  0CAC  34FF               	retlw	255
  2401  0CAD  34FF               	retlw	255
  2402  0CAE  34FF               	retlw	255
  2403  0CAF  34FF               	retlw	255
  2404  0CB0  34FF               	retlw	255
  2405  0CB1  34FF               	retlw	255
  2406  0CB2  3400               	retlw	0
  2407  0CB3  34FF               	retlw	255
  2408  0CB4  34FF               	retlw	255
  2409  0CB5  34FF               	retlw	255
  2410  0CB6  34FF               	retlw	255
  2411  0CB7  34FF               	retlw	255
  2412  0CB8  34FF               	retlw	255
  2413  0CB9  34FF               	retlw	255
  2414  0CBA  34FF               	retlw	255
  2415  0CBB  34FF               	retlw	255
  2416  0CBC  34FF               	retlw	255
  2417  0CBD  34FF               	retlw	255
  2418  0CBE  34FF               	retlw	255
  2419  0CBF  34FF               	retlw	255
  2420  0CC0  34FF               	retlw	255
  2421  0CC1  34FF               	retlw	255
  2422  0CC2  3403               	retlw	3
  2423  0CC3  34FF               	retlw	255
  2424  0CC4  34FF               	retlw	255
  2425  0CC5  34FF               	retlw	255
  2426  0CC6  34FF               	retlw	255
  2427  0CC7  34FF               	retlw	255
  2428  0CC8  34FF               	retlw	255
  2429  0CC9  34FF               	retlw	255
  2430  0CCA  34FF               	retlw	255
  2431  0CCB  34FF               	retlw	255
  2432  0CCC  34FF               	retlw	255
  2433  0CCD  34FF               	retlw	255
  2434  0CCE  34FF               	retlw	255
  2435  0CCF  34FF               	retlw	255
  2436  0CD0  34FF               	retlw	255
  2437  0CD1  34FF               	retlw	255
  2438  0CD2  349F               	retlw	159
  2439  0CD3  34FF               	retlw	255
  2440  0CD4  34FF               	retlw	255
  2441  0CD5  34FF               	retlw	255
  2442  0CD6  34FF               	retlw	255
  2443  0CD7  34FF               	retlw	255
  2444  0CD8  34FF               	retlw	255
  2445  0CD9  34FF               	retlw	255
  2446  0CDA  34FF               	retlw	255
  2447  0CDB  34FF               	retlw	255
  2448  0CDC  34FF               	retlw	255
  2449  0CDD  34FF               	retlw	255
  2450  0CDE  34FF               	retlw	255
  2451  0CDF  34FF               	retlw	255
  2452  0CE0  34FF               	retlw	255
  2453  0CE1  34FF               	retlw	255
  2454  0CE2  34FF               	retlw	255
  2455  0CE3  34FF               	retlw	255
  2456  0CE4  34FF               	retlw	255
  2457  0CE5  34FF               	retlw	255
  2458  0CE6  34FF               	retlw	255
  2459  0CE7  34FF               	retlw	255
  2460  0CE8  34FF               	retlw	255
  2461  0CE9  34FF               	retlw	255
  2462  0CEA  34FF               	retlw	255
  2463  0CEB  34FF               	retlw	255
  2464  0CEC  34FF               	retlw	255
  2465  0CED  34FF               	retlw	255
  2466  0CEE  34FF               	retlw	255
  2467  0CEF  34FF               	retlw	255
  2468  0CF0  34FF               	retlw	255
  2469  0CF1  34FF               	retlw	255
  2470  0CF2  34FF               	retlw	255
  2471  0CF3  34FF               	retlw	255
  2472  0CF4  34FF               	retlw	255
  2473  0CF5  34FF               	retlw	255
  2474  0CF6  34FF               	retlw	255
  2475  0CF7  34FF               	retlw	255
  2476  0CF8  34FF               	retlw	255
  2477  0CF9  34FF               	retlw	255
  2478  0CFA  34FF               	retlw	255
  2479  0CFB  34FF               	retlw	255
  2480  0CFC  34FF               	retlw	255
  2481  0CFD  34FF               	retlw	255
  2482  0CFE  34FF               	retlw	255
  2483  0CFF  34FF               	retlw	255
  2484  0D00  34FF               	retlw	255
  2485  0D01  34FF               	retlw	255
  2486  0D02  34FF               	retlw	255
  2487  0D03  34FF               	retlw	255
  2488  0D04  34FF               	retlw	255
  2489  0D05  34FF               	retlw	255
  2490  0D06  34FF               	retlw	255
  2491  0D07  34FF               	retlw	255
  2492  0D08  34FF               	retlw	255
  2493  0D09  34FF               	retlw	255
  2494  0D0A  34FF               	retlw	255
  2495  0D0B  34FF               	retlw	255
  2496  0D0C  34FF               	retlw	255
  2497  0D0D  34FF               	retlw	255
  2498  0D0E  34FF               	retlw	255
  2499  0D0F  34FF               	retlw	255
  2500  0D10  34FF               	retlw	255
  2501  0D11  34FF               	retlw	255
  2502  0D12  34FF               	retlw	255
  2503  0D13  34FF               	retlw	255
  2504  0D14  34FF               	retlw	255
  2505  0D15  34FF               	retlw	255
  2506  0D16  34FF               	retlw	255
  2507  0D17  34FF               	retlw	255
  2508  0D18  34FF               	retlw	255
  2509  0D19  34FF               	retlw	255
  2510  0D1A  34FF               	retlw	255
  2511  0D1B  34FF               	retlw	255
  2512  0D1C  34FF               	retlw	255
  2513  0D1D  34FF               	retlw	255
  2514  0D1E  34FF               	retlw	255
  2515  0D1F  34FF               	retlw	255
  2516  0D20  34FF               	retlw	255
  2517  0D21  34FF               	retlw	255
  2518  0D22  34FF               	retlw	255
  2519  0D23  34FF               	retlw	255
  2520  0D24  34FF               	retlw	255
  2521  0D25  34FF               	retlw	255
  2522  0D26  34FF               	retlw	255
  2523  0D27  34FF               	retlw	255
  2524  0D28  34FF               	retlw	255
  2525  0D29  34FF               	retlw	255
  2526  0D2A  34FF               	retlw	255
  2527  0D2B  34FF               	retlw	255
  2528  0D2C  34FF               	retlw	255
  2529  0D2D  34FF               	retlw	255
  2530  0D2E  34FF               	retlw	255
  2531  0D2F  34FF               	retlw	255
  2532  0D30  34FF               	retlw	255
  2533  0D31  34FF               	retlw	255
  2534  0D32  34FF               	retlw	255
  2535  0D33  34FF               	retlw	255
  2536  0D34  34FF               	retlw	255
  2537  0D35  34FF               	retlw	255
  2538  0D36  34FF               	retlw	255
  2539  0D37  34FF               	retlw	255
  2540  0D38  34FF               	retlw	255
  2541  0D39  34FF               	retlw	255
  2542  0D3A  34FF               	retlw	255
  2543  0D3B  34FF               	retlw	255
  2544  0D3C  34FF               	retlw	255
  2545  0D3D  34FF               	retlw	255
  2546  0D3E  34FF               	retlw	255
  2547  0D3F  34FF               	retlw	255
  2548  0D40  34FF               	retlw	255
  2549  0D41  34FF               	retlw	255
  2550  0D42  34FF               	retlw	255
  2551  0D43  34FF               	retlw	255
  2552  0D44  34FF               	retlw	255
  2553  0D45  34FF               	retlw	255
  2554  0D46  34FF               	retlw	255
  2555  0D47  34FF               	retlw	255
  2556  0D48  34FF               	retlw	255
  2557  0D49  34FF               	retlw	255
  2558  0D4A  34FF               	retlw	255
  2559  0D4B  34FF               	retlw	255
  2560  0D4C  34FF               	retlw	255
  2561  0D4D  34FF               	retlw	255
  2562  0D4E                     __end_of_black:	
  2563                           
  2564                           	psect	stringtext2
  2565  1800                     __pstringtext2:	
  2566  1800                     _Alpha1:	
  2567  1800  3400               	retlw	0
  2568  1801  3400               	retlw	0
  2569  1802  3400               	retlw	0
  2570  1803  3400               	retlw	0
  2571  1804  3400               	retlw	0
  2572  1805  3400               	retlw	0
  2573  1806  3400               	retlw	0
  2574  1807  345F               	retlw	95
  2575  1808  3400               	retlw	0
  2576  1809  3400               	retlw	0
  2577  180A  3400               	retlw	0
  2578  180B  3407               	retlw	7
  2579  180C  3400               	retlw	0
  2580  180D  3407               	retlw	7
  2581  180E  3400               	retlw	0
  2582  180F  3414               	retlw	20
  2583  1810  347F               	retlw	127
  2584  1811  3414               	retlw	20
  2585  1812  347F               	retlw	127
  2586  1813  3414               	retlw	20
  2587  1814  3424               	retlw	36
  2588  1815  342A               	retlw	42
  2589  1816  347F               	retlw	127
  2590  1817  342A               	retlw	42
  2591  1818  3412               	retlw	18
  2592  1819  3423               	retlw	35
  2593  181A  3413               	retlw	19
  2594  181B  3408               	retlw	8
  2595  181C  3464               	retlw	100
  2596  181D  3462               	retlw	98
  2597  181E  3436               	retlw	54
  2598  181F  3449               	retlw	73
  2599  1820  3455               	retlw	85
  2600  1821  3422               	retlw	34
  2601  1822  3450               	retlw	80
  2602  1823  3400               	retlw	0
  2603  1824  3405               	retlw	5
  2604  1825  3403               	retlw	3
  2605  1826  3400               	retlw	0
  2606  1827  3400               	retlw	0
  2607  1828  3400               	retlw	0
  2608  1829  341C               	retlw	28
  2609  182A  3422               	retlw	34
  2610  182B  3441               	retlw	65
  2611  182C  3400               	retlw	0
  2612  182D  3400               	retlw	0
  2613  182E  3441               	retlw	65
  2614  182F  3422               	retlw	34
  2615  1830  341C               	retlw	28
  2616  1831  3400               	retlw	0
  2617  1832  3414               	retlw	20
  2618  1833  3408               	retlw	8
  2619  1834  343E               	retlw	62
  2620  1835  3408               	retlw	8
  2621  1836  3414               	retlw	20
  2622  1837  3408               	retlw	8
  2623  1838  3408               	retlw	8
  2624  1839  343E               	retlw	62
  2625  183A  3408               	retlw	8
  2626  183B  3408               	retlw	8
  2627  183C  3400               	retlw	0
  2628  183D  3450               	retlw	80
  2629  183E  3430               	retlw	48
  2630  183F  3400               	retlw	0
  2631  1840  3400               	retlw	0
  2632  1841  3408               	retlw	8
  2633  1842  3408               	retlw	8
  2634  1843  3408               	retlw	8
  2635  1844  3408               	retlw	8
  2636  1845  3408               	retlw	8
  2637  1846  3400               	retlw	0
  2638  1847  3460               	retlw	96
  2639  1848  3460               	retlw	96
  2640  1849  3400               	retlw	0
  2641  184A  3400               	retlw	0
  2642  184B  3420               	retlw	32
  2643  184C  3410               	retlw	16
  2644  184D  3408               	retlw	8
  2645  184E  3404               	retlw	4
  2646  184F  3402               	retlw	2
  2647  1850  343E               	retlw	62
  2648  1851  3451               	retlw	81
  2649  1852  3449               	retlw	73
  2650  1853  3445               	retlw	69
  2651  1854  343E               	retlw	62
  2652  1855  3400               	retlw	0
  2653  1856  3442               	retlw	66
  2654  1857  347F               	retlw	127
  2655  1858  3440               	retlw	64
  2656  1859  3400               	retlw	0
  2657  185A  3442               	retlw	66
  2658  185B  3461               	retlw	97
  2659  185C  3451               	retlw	81
  2660  185D  3449               	retlw	73
  2661  185E  3446               	retlw	70
  2662  185F  3421               	retlw	33
  2663  1860  3441               	retlw	65
  2664  1861  3445               	retlw	69
  2665  1862  344B               	retlw	75
  2666  1863  3431               	retlw	49
  2667  1864  3418               	retlw	24
  2668  1865  3414               	retlw	20
  2669  1866  3412               	retlw	18
  2670  1867  347F               	retlw	127
  2671  1868  3410               	retlw	16
  2672  1869  3427               	retlw	39
  2673  186A  3445               	retlw	69
  2674  186B  3445               	retlw	69
  2675  186C  3445               	retlw	69
  2676  186D  3439               	retlw	57
  2677  186E  343C               	retlw	60
  2678  186F  344A               	retlw	74
  2679  1870  3449               	retlw	73
  2680  1871  3449               	retlw	73
  2681  1872  3430               	retlw	48
  2682  1873  3401               	retlw	1
  2683  1874  3471               	retlw	113
  2684  1875  3409               	retlw	9
  2685  1876  3405               	retlw	5
  2686  1877  3403               	retlw	3
  2687  1878  3436               	retlw	54
  2688  1879  3449               	retlw	73
  2689  187A  3449               	retlw	73
  2690  187B  3449               	retlw	73
  2691  187C  3436               	retlw	54
  2692  187D  3406               	retlw	6
  2693  187E  3449               	retlw	73
  2694  187F  3449               	retlw	73
  2695  1880  3429               	retlw	41
  2696  1881  341E               	retlw	30
  2697  1882  3400               	retlw	0
  2698  1883  3436               	retlw	54
  2699  1884  3436               	retlw	54
  2700  1885  3400               	retlw	0
  2701  1886  3400               	retlw	0
  2702  1887  3400               	retlw	0
  2703  1888  3456               	retlw	86
  2704  1889  3436               	retlw	54
  2705  188A  3400               	retlw	0
  2706  188B  3400               	retlw	0
  2707  188C  3408               	retlw	8
  2708  188D  3414               	retlw	20
  2709  188E  3422               	retlw	34
  2710  188F  3441               	retlw	65
  2711  1890  3400               	retlw	0
  2712  1891  3414               	retlw	20
  2713  1892  3414               	retlw	20
  2714  1893  3414               	retlw	20
  2715  1894  3414               	retlw	20
  2716  1895  3414               	retlw	20
  2717  1896  3400               	retlw	0
  2718  1897  3441               	retlw	65
  2719  1898  3422               	retlw	34
  2720  1899  3414               	retlw	20
  2721  189A  3408               	retlw	8
  2722  189B  3402               	retlw	2
  2723  189C  3401               	retlw	1
  2724  189D  3451               	retlw	81
  2725  189E  3409               	retlw	9
  2726  189F  3406               	retlw	6
  2727  18A0  3432               	retlw	50
  2728  18A1  3449               	retlw	73
  2729  18A2  3479               	retlw	121
  2730  18A3  3441               	retlw	65
  2731  18A4  343E               	retlw	62
  2732  18A5  347E               	retlw	126
  2733  18A6  3411               	retlw	17
  2734  18A7  3411               	retlw	17
  2735  18A8  3411               	retlw	17
  2736  18A9  347E               	retlw	126
  2737  18AA  347F               	retlw	127
  2738  18AB  3449               	retlw	73
  2739  18AC  3449               	retlw	73
  2740  18AD  3449               	retlw	73
  2741  18AE  3436               	retlw	54
  2742  18AF  343E               	retlw	62
  2743  18B0  3441               	retlw	65
  2744  18B1  3441               	retlw	65
  2745  18B2  3441               	retlw	65
  2746  18B3  3422               	retlw	34
  2747  18B4  347F               	retlw	127
  2748  18B5  3441               	retlw	65
  2749  18B6  3441               	retlw	65
  2750  18B7  3422               	retlw	34
  2751  18B8  341C               	retlw	28
  2752  18B9  347F               	retlw	127
  2753  18BA  3449               	retlw	73
  2754  18BB  3449               	retlw	73
  2755  18BC  3449               	retlw	73
  2756  18BD  3441               	retlw	65
  2757  18BE  347F               	retlw	127
  2758  18BF  3409               	retlw	9
  2759  18C0  3409               	retlw	9
  2760  18C1  3409               	retlw	9
  2761  18C2  3401               	retlw	1
  2762  18C3  343E               	retlw	62
  2763  18C4  3441               	retlw	65
  2764  18C5  3449               	retlw	73
  2765  18C6  3449               	retlw	73
  2766  18C7  347A               	retlw	122
  2767  18C8  347F               	retlw	127
  2768  18C9  3408               	retlw	8
  2769  18CA  3408               	retlw	8
  2770  18CB  3408               	retlw	8
  2771  18CC  347F               	retlw	127
  2772  18CD  3400               	retlw	0
  2773  18CE  3441               	retlw	65
  2774  18CF  347F               	retlw	127
  2775  18D0  3441               	retlw	65
  2776  18D1  3400               	retlw	0
  2777  18D2  3420               	retlw	32
  2778  18D3  3440               	retlw	64
  2779  18D4  3441               	retlw	65
  2780  18D5  343F               	retlw	63
  2781  18D6  3401               	retlw	1
  2782  18D7  347F               	retlw	127
  2783  18D8  3408               	retlw	8
  2784  18D9  3414               	retlw	20
  2785  18DA  3422               	retlw	34
  2786  18DB  3441               	retlw	65
  2787  18DC  347F               	retlw	127
  2788  18DD  3440               	retlw	64
  2789  18DE  3440               	retlw	64
  2790  18DF  3440               	retlw	64
  2791  18E0  3440               	retlw	64
  2792  18E1  347F               	retlw	127
  2793  18E2  3402               	retlw	2
  2794  18E3  340C               	retlw	12
  2795  18E4  3402               	retlw	2
  2796  18E5  347F               	retlw	127
  2797  18E6  347F               	retlw	127
  2798  18E7  3404               	retlw	4
  2799  18E8  3408               	retlw	8
  2800  18E9  3410               	retlw	16
  2801  18EA  347F               	retlw	127
  2802  18EB  343E               	retlw	62
  2803  18EC  3441               	retlw	65
  2804  18ED  3441               	retlw	65
  2805  18EE  3441               	retlw	65
  2806  18EF  343E               	retlw	62
  2807  18F0  347F               	retlw	127
  2808  18F1  3409               	retlw	9
  2809  18F2  3409               	retlw	9
  2810  18F3  3409               	retlw	9
  2811  18F4  3406               	retlw	6
  2812  18F5  343E               	retlw	62
  2813  18F6  3441               	retlw	65
  2814  18F7  3451               	retlw	81
  2815  18F8  3421               	retlw	33
  2816  18F9  345E               	retlw	94
  2817  18FA                     __end_of_Alpha1:	
  2818                           
  2819                           	psect	stringtext3
  2820  18FA                     __pstringtext3:	
  2821  18FA                     _Alpha2:	
  2822  18FA  347F               	retlw	127
  2823  18FB  3409               	retlw	9
  2824  18FC  3419               	retlw	25
  2825  18FD  3429               	retlw	41
  2826  18FE  3446               	retlw	70
  2827  18FF  3446               	retlw	70
  2828  1900  3449               	retlw	73
  2829  1901  3449               	retlw	73
  2830  1902  3449               	retlw	73
  2831  1903  3431               	retlw	49
  2832  1904  3401               	retlw	1
  2833  1905  3401               	retlw	1
  2834  1906  347F               	retlw	127
  2835  1907  3401               	retlw	1
  2836  1908  3401               	retlw	1
  2837  1909  343F               	retlw	63
  2838  190A  3440               	retlw	64
  2839  190B  3440               	retlw	64
  2840  190C  3440               	retlw	64
  2841  190D  343F               	retlw	63
  2842  190E  341F               	retlw	31
  2843  190F  3420               	retlw	32
  2844  1910  3440               	retlw	64
  2845  1911  3420               	retlw	32
  2846  1912  341F               	retlw	31
  2847  1913  343F               	retlw	63
  2848  1914  3440               	retlw	64
  2849  1915  3438               	retlw	56
  2850  1916  3440               	retlw	64
  2851  1917  343F               	retlw	63
  2852  1918  3463               	retlw	99
  2853  1919  3414               	retlw	20
  2854  191A  3408               	retlw	8
  2855  191B  3414               	retlw	20
  2856  191C  3463               	retlw	99
  2857  191D  3407               	retlw	7
  2858  191E  3408               	retlw	8
  2859  191F  3470               	retlw	112
  2860  1920  3408               	retlw	8
  2861  1921  3407               	retlw	7
  2862  1922  3461               	retlw	97
  2863  1923  3451               	retlw	81
  2864  1924  3449               	retlw	73
  2865  1925  3445               	retlw	69
  2866  1926  3443               	retlw	67
  2867  1927  3400               	retlw	0
  2868  1928  347F               	retlw	127
  2869  1929  3441               	retlw	65
  2870  192A  3441               	retlw	65
  2871  192B  3400               	retlw	0
  2872  192C  3402               	retlw	2
  2873  192D  3404               	retlw	4
  2874  192E  3408               	retlw	8
  2875  192F  3410               	retlw	16
  2876  1930  3420               	retlw	32
  2877  1931  3400               	retlw	0
  2878  1932  3441               	retlw	65
  2879  1933  3441               	retlw	65
  2880  1934  347F               	retlw	127
  2881  1935  3400               	retlw	0
  2882  1936  3404               	retlw	4
  2883  1937  3402               	retlw	2
  2884  1938  3401               	retlw	1
  2885  1939  3402               	retlw	2
  2886  193A  3404               	retlw	4
  2887  193B  3440               	retlw	64
  2888  193C  3440               	retlw	64
  2889  193D  3440               	retlw	64
  2890  193E  3440               	retlw	64
  2891  193F  3440               	retlw	64
  2892  1940  3400               	retlw	0
  2893  1941  3401               	retlw	1
  2894  1942  3402               	retlw	2
  2895  1943  3404               	retlw	4
  2896  1944  3400               	retlw	0
  2897  1945  3420               	retlw	32
  2898  1946  3454               	retlw	84
  2899  1947  3454               	retlw	84
  2900  1948  3454               	retlw	84
  2901  1949  3478               	retlw	120
  2902  194A  347F               	retlw	127
  2903  194B  3448               	retlw	72
  2904  194C  3444               	retlw	68
  2905  194D  3444               	retlw	68
  2906  194E  3438               	retlw	56
  2907  194F  3438               	retlw	56
  2908  1950  3444               	retlw	68
  2909  1951  3444               	retlw	68
  2910  1952  3444               	retlw	68
  2911  1953  3420               	retlw	32
  2912  1954  3438               	retlw	56
  2913  1955  3444               	retlw	68
  2914  1956  3444               	retlw	68
  2915  1957  3448               	retlw	72
  2916  1958  347F               	retlw	127
  2917  1959  3438               	retlw	56
  2918  195A  3454               	retlw	84
  2919  195B  3454               	retlw	84
  2920  195C  3454               	retlw	84
  2921  195D  3418               	retlw	24
  2922  195E  3408               	retlw	8
  2923  195F  347E               	retlw	126
  2924  1960  3409               	retlw	9
  2925  1961  3401               	retlw	1
  2926  1962  3402               	retlw	2
  2927  1963  340C               	retlw	12
  2928  1964  3452               	retlw	82
  2929  1965  3452               	retlw	82
  2930  1966  3452               	retlw	82
  2931  1967  343E               	retlw	62
  2932  1968  347F               	retlw	127
  2933  1969  3408               	retlw	8
  2934  196A  3404               	retlw	4
  2935  196B  3404               	retlw	4
  2936  196C  3478               	retlw	120
  2937  196D  3400               	retlw	0
  2938  196E  3444               	retlw	68
  2939  196F  347D               	retlw	125
  2940  1970  3440               	retlw	64
  2941  1971  3400               	retlw	0
  2942  1972  3420               	retlw	32
  2943  1973  3440               	retlw	64
  2944  1974  3444               	retlw	68
  2945  1975  343D               	retlw	61
  2946  1976  3400               	retlw	0
  2947  1977  347F               	retlw	127
  2948  1978  3410               	retlw	16
  2949  1979  3428               	retlw	40
  2950  197A  3444               	retlw	68
  2951  197B  3400               	retlw	0
  2952  197C  3400               	retlw	0
  2953  197D  3441               	retlw	65
  2954  197E  347F               	retlw	127
  2955  197F  3440               	retlw	64
  2956  1980  3400               	retlw	0
  2957  1981  347C               	retlw	124
  2958  1982  3404               	retlw	4
  2959  1983  3418               	retlw	24
  2960  1984  3404               	retlw	4
  2961  1985  3478               	retlw	120
  2962  1986  347C               	retlw	124
  2963  1987  3408               	retlw	8
  2964  1988  3404               	retlw	4
  2965  1989  3404               	retlw	4
  2966  198A  3478               	retlw	120
  2967  198B  3438               	retlw	56
  2968  198C  3444               	retlw	68
  2969  198D  3444               	retlw	68
  2970  198E  3444               	retlw	68
  2971  198F  3438               	retlw	56
  2972  1990  347C               	retlw	124
  2973  1991  3414               	retlw	20
  2974  1992  3414               	retlw	20
  2975  1993  3414               	retlw	20
  2976  1994  3408               	retlw	8
  2977  1995  3408               	retlw	8
  2978  1996  3414               	retlw	20
  2979  1997  3414               	retlw	20
  2980  1998  3418               	retlw	24
  2981  1999  347C               	retlw	124
  2982  199A  347C               	retlw	124
  2983  199B  3408               	retlw	8
  2984  199C  3404               	retlw	4
  2985  199D  3404               	retlw	4
  2986  199E  3408               	retlw	8
  2987  199F  3448               	retlw	72
  2988  19A0  3454               	retlw	84
  2989  19A1  3454               	retlw	84
  2990  19A2  3454               	retlw	84
  2991  19A3  3420               	retlw	32
  2992  19A4  3404               	retlw	4
  2993  19A5  343F               	retlw	63
  2994  19A6  3444               	retlw	68
  2995  19A7  3440               	retlw	64
  2996  19A8  3420               	retlw	32
  2997  19A9  343C               	retlw	60
  2998  19AA  3440               	retlw	64
  2999  19AB  3440               	retlw	64
  3000  19AC  3420               	retlw	32
  3001  19AD  347C               	retlw	124
  3002  19AE  341C               	retlw	28
  3003  19AF  3420               	retlw	32
  3004  19B0  3440               	retlw	64
  3005  19B1  3420               	retlw	32
  3006  19B2  341C               	retlw	28
  3007  19B3  343C               	retlw	60
  3008  19B4  3440               	retlw	64
  3009  19B5  3430               	retlw	48
  3010  19B6  3440               	retlw	64
  3011  19B7  343C               	retlw	60
  3012  19B8  3444               	retlw	68
  3013  19B9  3428               	retlw	40
  3014  19BA  3410               	retlw	16
  3015  19BB  3428               	retlw	40
  3016  19BC  3444               	retlw	68
  3017  19BD  340C               	retlw	12
  3018  19BE  3450               	retlw	80
  3019  19BF  3450               	retlw	80
  3020  19C0  3450               	retlw	80
  3021  19C1  343C               	retlw	60
  3022  19C2  3444               	retlw	68
  3023  19C3  3464               	retlw	100
  3024  19C4  3454               	retlw	84
  3025  19C5  344C               	retlw	76
  3026  19C6  3444               	retlw	68
  3027  19C7  3400               	retlw	0
  3028  19C8  3408               	retlw	8
  3029  19C9  3436               	retlw	54
  3030  19CA  3441               	retlw	65
  3031  19CB  3400               	retlw	0
  3032  19CC  3400               	retlw	0
  3033  19CD  3400               	retlw	0
  3034  19CE  347F               	retlw	127
  3035  19CF  3400               	retlw	0
  3036  19D0  3400               	retlw	0
  3037  19D1  3400               	retlw	0
  3038  19D2  3441               	retlw	65
  3039  19D3  3436               	retlw	54
  3040  19D4  3408               	retlw	8
  3041  19D5  3400               	retlw	0
  3042  19D6  3410               	retlw	16
  3043  19D7  3408               	retlw	8
  3044  19D8  3408               	retlw	8
  3045  19D9  3410               	retlw	16
  3046  19DA  3408               	retlw	8
  3047  19DB  3478               	retlw	120
  3048  19DC  3446               	retlw	70
  3049  19DD  3441               	retlw	65
  3050  19DE  3446               	retlw	70
  3051  19DF  3478               	retlw	120
  3052  19E0                     __end_of_Alpha2:	
  3053                           
  3054                           	psect	stringtext4
  3055  2000                     __pstringtext4:	
  3056  2000                     _dpowers:	
  3057  2000  3401               	retlw	1
  3058  2001  3400               	retlw	0
  3059  2002  3400               	retlw	0
  3060  2003  3400               	retlw	0
  3061  2004  340A               	retlw	10
  3062  2005  3400               	retlw	0
  3063  2006  3400               	retlw	0
  3064  2007  3400               	retlw	0
  3065  2008  3464               	retlw	100
  3066  2009  3400               	retlw	0
  3067  200A  3400               	retlw	0
  3068  200B  3400               	retlw	0
  3069  200C  34E8               	retlw	232
  3070  200D  3403               	retlw	3
  3071  200E  3400               	retlw	0
  3072  200F  3400               	retlw	0
  3073  2010  3410               	retlw	16
  3074  2011  3427               	retlw	39
  3075  2012  3400               	retlw	0
  3076  2013  3400               	retlw	0
  3077  2014  34A0               	retlw	160
  3078  2015  3486               	retlw	134
  3079  2016  3401               	retlw	1
  3080  2017  3400               	retlw	0
  3081  2018  3440               	retlw	64
  3082  2019  3442               	retlw	66
  3083  201A  340F               	retlw	15
  3084  201B  3400               	retlw	0
  3085  201C  3480               	retlw	128
  3086  201D  3496               	retlw	150
  3087  201E  3498               	retlw	152
  3088  201F  3400               	retlw	0
  3089  2020  3400               	retlw	0
  3090  2021  34E1               	retlw	225
  3091  2022  34F5               	retlw	245
  3092  2023  3405               	retlw	5
  3093  2024  3400               	retlw	0
  3094  2025  34CA               	retlw	202
  3095  2026  349A               	retlw	154
  3096  2027  343B               	retlw	59
  3097  2028                     __end_of_dpowers:	
  3098                           
  3099                           	psect	stringtext5
  3100  2028                     __pstringtext5:	
  3101  2028                     __powers_:	
  3102  2028  3400               	retlw	0
  3103  2029  3480               	retlw	128
  3104  202A  343F               	retlw	63
  3105  202B  3400               	retlw	0
  3106  202C  3420               	retlw	32
  3107  202D  3441               	retlw	65
  3108  202E  3400               	retlw	0
  3109  202F  34C8               	retlw	200
  3110  2030  3442               	retlw	66
  3111  2031  3400               	retlw	0
  3112  2032  347A               	retlw	122
  3113  2033  3444               	retlw	68
  3114  2034  3440               	retlw	64
  3115  2035  341C               	retlw	28
  3116  2036  3446               	retlw	70
  3117  2037  3450               	retlw	80
  3118  2038  34C3               	retlw	195
  3119  2039  3447               	retlw	71
  3120  203A  3424               	retlw	36
  3121  203B  3474               	retlw	116
  3122  203C  3449               	retlw	73
  3123  203D  3497               	retlw	151
  3124  203E  3418               	retlw	24
  3125  203F  344B               	retlw	75
  3126  2040  34BC               	retlw	188
  3127  2041  34BE               	retlw	190
  3128  2042  344C               	retlw	76
  3129  2043  346B               	retlw	107
  3130  2044  346E               	retlw	110
  3131  2045  344E               	retlw	78
  3132  2046  3403               	retlw	3
  3133  2047  3415               	retlw	21
  3134  2048  3450               	retlw	80
  3135  2049  3479               	retlw	121
  3136  204A  34AD               	retlw	173
  3137  204B  3460               	retlw	96
  3138  204C  34F3               	retlw	243
  3139  204D  3449               	retlw	73
  3140  204E  3471               	retlw	113
  3141  204F                     __end_of__powers_:	
  3142                           
  3143                           	psect	stringtext6
  3144  204F                     __pstringtext6:	
  3145  204F                     __npowers_:	
  3146  204F  3400               	retlw	0
  3147  2050  3480               	retlw	128
  3148  2051  343F               	retlw	63
  3149  2052  34CD               	retlw	205
  3150  2053  34CC               	retlw	204
  3151  2054  343D               	retlw	61
  3152  2055  34D7               	retlw	215
  3153  2056  3423               	retlw	35
  3154  2057  343C               	retlw	60
  3155  2058  3412               	retlw	18
  3156  2059  3483               	retlw	131
  3157  205A  343A               	retlw	58
  3158  205B  34B7               	retlw	183
  3159  205C  34D1               	retlw	209
  3160  205D  3438               	retlw	56
  3161  205E  34C6               	retlw	198
  3162  205F  3427               	retlw	39
  3163  2060  3437               	retlw	55
  3164  2061  3438               	retlw	56
  3165  2062  3486               	retlw	134
  3166  2063  3435               	retlw	53
  3167  2064  34C0               	retlw	192
  3168  2065  34D6               	retlw	214
  3169  2066  3433               	retlw	51
  3170  2067  34CC               	retlw	204
  3171  2068  342B               	retlw	43
  3172  2069  3432               	retlw	50
  3173  206A  3470               	retlw	112
  3174  206B  3489               	retlw	137
  3175  206C  3430               	retlw	48
  3176  206D  34E7               	retlw	231
  3177  206E  34DB               	retlw	219
  3178  206F  342E               	retlw	46
  3179  2070  34E5               	retlw	229
  3180  2071  343C               	retlw	60
  3181  2072  341E               	retlw	30
  3182  2073  3442               	retlw	66
  3183  2074  34A2               	retlw	162
  3184  2075  340D               	retlw	13
  3185  2076                     __end_of__npowers_:	
  3186                           
  3187                           	psect	stringtext7
  3188  053D                     __pstringtext7:	
  3189  053D                     _des:	
  3190  053D  34FF               	retlw	255
  3191  053E  34F1               	retlw	241
  3192  053F  34FF               	retlw	255
  3193  0540  34FF               	retlw	255
  3194  0541  34FF               	retlw	255
  3195  0542  34FF               	retlw	255
  3196  0543  34FF               	retlw	255
  3197  0544  34FF               	retlw	255
  3198  0545  34FF               	retlw	255
  3199  0546  34FF               	retlw	255
  3200  0547  34FF               	retlw	255
  3201  0548  34FF               	retlw	255
  3202  0549  34FF               	retlw	255
  3203  054A  34FF               	retlw	255
  3204  054B  34FF               	retlw	255
  3205  054C  34FF               	retlw	255
  3206  054D  34FF               	retlw	255
  3207  054E  34E0               	retlw	224
  3208  054F  34FF               	retlw	255
  3209  0550  34FF               	retlw	255
  3210  0551  34FF               	retlw	255
  3211  0552  34FF               	retlw	255
  3212  0553  34FF               	retlw	255
  3213  0554  34FF               	retlw	255
  3214  0555  34FF               	retlw	255
  3215  0556  34FF               	retlw	255
  3216  0557  34FF               	retlw	255
  3217  0558  34FF               	retlw	255
  3218  0559  34FF               	retlw	255
  3219  055A  34FF               	retlw	255
  3220  055B  34FF               	retlw	255
  3221  055C  34FF               	retlw	255
  3222  055D  34FF               	retlw	255
  3223  055E  34F0               	retlw	240
  3224  055F  34FF               	retlw	255
  3225  0560  34FF               	retlw	255
  3226  0561  34FF               	retlw	255
  3227  0562  34FF               	retlw	255
  3228  0563  34FF               	retlw	255
  3229  0564  34FF               	retlw	255
  3230  0565  34FF               	retlw	255
  3231  0566  34FF               	retlw	255
  3232  0567  34FF               	retlw	255
  3233  0568  34FF               	retlw	255
  3234  0569  34FF               	retlw	255
  3235  056A  34FF               	retlw	255
  3236  056B  348F               	retlw	143
  3237  056C  34FF               	retlw	255
  3238  056D  34FF               	retlw	255
  3239  056E  34FF               	retlw	255
  3240  056F  34FF               	retlw	255
  3241  0570  34FF               	retlw	255
  3242  0571  34FF               	retlw	255
  3243  0572  34FF               	retlw	255
  3244  0573  34FF               	retlw	255
  3245  0574  34FF               	retlw	255
  3246  0575  34FF               	retlw	255
  3247  0576  34FF               	retlw	255
  3248  0577  34FF               	retlw	255
  3249  0578  34FF               	retlw	255
  3250  0579  34FF               	retlw	255
  3251  057A  34FF               	retlw	255
  3252  057B  3407               	retlw	7
  3253  057C  34FF               	retlw	255
  3254  057D  34FF               	retlw	255
  3255  057E  34FD               	retlw	253
  3256  057F  34FF               	retlw	255
  3257  0580  34FF               	retlw	255
  3258  0581  34FF               	retlw	255
  3259  0582  34FF               	retlw	255
  3260  0583  34FF               	retlw	255
  3261  0584  34FF               	retlw	255
  3262  0585  34FF               	retlw	255
  3263  0586  34FF               	retlw	255
  3264  0587  34FF               	retlw	255
  3265  0588  34FF               	retlw	255
  3266  0589  34FF               	retlw	255
  3267  058A  34FF               	retlw	255
  3268  058B  3487               	retlw	135
  3269  058C  34FF               	retlw	255
  3270  058D  34FF               	retlw	255
  3271  058E  34F9               	retlw	249
  3272  058F  34FF               	retlw	255
  3273  0590  34FF               	retlw	255
  3274  0591  34F9               	retlw	249
  3275  0592  34FF               	retlw	255
  3276  0593  34FF               	retlw	255
  3277  0594  34FF               	retlw	255
  3278  0595  34FF               	retlw	255
  3279  0596  34FF               	retlw	255
  3280  0597  34FF               	retlw	255
  3281  0598  34FF               	retlw	255
  3282  0599  34FF               	retlw	255
  3283  059A  34CF               	retlw	207
  3284  059B  34FF               	retlw	255
  3285  059C  34FF               	retlw	255
  3286  059D  34FF               	retlw	255
  3287  059E  34F0               	retlw	240
  3288  059F  34F8               	retlw	248
  3289  05A0  347F               	retlw	127
  3290  05A1  34F0               	retlw	240
  3291  05A2  34FF               	retlw	255
  3292  05A3  34CF               	retlw	207
  3293  05A4  34C3               	retlw	195
  3294  05A5  34FE               	retlw	254
  3295  05A6  340F               	retlw	15
  3296  05A7  34FF               	retlw	255
  3297  05A8  3483               	retlw	131
  3298  05A9  34FF               	retlw	255
  3299  05AA  3403               	retlw	3
  3300  05AB  34E7               	retlw	231
  3301  05AC  34FF               	retlw	255
  3302  05AD  34FF               	retlw	255
  3303  05AE  34C0               	retlw	192
  3304  05AF  34F0               	retlw	240
  3305  05B0  341F               	retlw	31
  3306  05B1  34E0               	retlw	224
  3307  05B2  3467               	retlw	103
  3308  05B3  348F               	retlw	143
  3309  05B4  3483               	retlw	131
  3310  05B5  34F8               	retlw	248
  3311  05B6  3407               	retlw	7
  3312  05B7  349F               	retlw	159
  3313  05B8  3403               	retlw	3
  3314  05B9  34CE               	retlw	206
  3315  05BA  3403               	retlw	3
  3316  05BB  34C7               	retlw	199
  3317  05BC  34FF               	retlw	255
  3318  05BD  34FF               	retlw	255
  3319  05BE  3480               	retlw	128
  3320  05BF  34F8               	retlw	248
  3321  05C0  3403               	retlw	3
  3322  05C1  34C4               	retlw	196
  3323  05C2  3447               	retlw	71
  3324  05C3  3487               	retlw	135
  3325  05C4  3483               	retlw	131
  3326  05C5  34F0               	retlw	240
  3327  05C6  3407               	retlw	7
  3328  05C7  341F               	retlw	31
  3329  05C8  3403               	retlw	3
  3330  05C9  34C8               	retlw	200
  3331  05CA  3461               	retlw	97
  3332  05CB  34C3               	retlw	195
  3333  05CC  34FF               	retlw	255
  3334  05CD  34FF               	retlw	255
  3335  05CE  3480               	retlw	128
  3336  05CF  3400               	retlw	0
  3337  05D0  3400               	retlw	0
  3338  05D1  3400               	retlw	0
  3339  05D2  3440               	retlw	64
  3340  05D3  340F               	retlw	15
  3341  05D4  3481               	retlw	129
  3342  05D5  34E0               	retlw	224
  3343  05D6  3400               	retlw	0
  3344  05D7  3400               	retlw	0
  3345  05D8  3400               	retlw	0
  3346  05D9  3400               	retlw	0
  3347  05DA  3400               	retlw	0
  3348  05DB  3407               	retlw	7
  3349  05DC  34FF               	retlw	255
  3350  05DD  34FF               	retlw	255
  3351  05DE  3480               	retlw	128
  3352  05DF  3400               	retlw	0
  3353  05E0  3400               	retlw	0
  3354  05E1  3400               	retlw	0
  3355  05E2  3460               	retlw	96
  3356  05E3  340F               	retlw	15
  3357  05E4  3481               	retlw	129
  3358  05E5  34E4               	retlw	228
  3359  05E6  3400               	retlw	0
  3360  05E7  3400               	retlw	0
  3361  05E8  3400               	retlw	0
  3362  05E9  3400               	retlw	0
  3363  05EA  3400               	retlw	0
  3364  05EB  3407               	retlw	7
  3365  05EC  34FF               	retlw	255
  3366  05ED  34FF               	retlw	255
  3367  05EE  3480               	retlw	128
  3368  05EF  3400               	retlw	0
  3369  05F0  3460               	retlw	96
  3370  05F1  3400               	retlw	0
  3371  05F2  3460               	retlw	96
  3372  05F3  340F               	retlw	15
  3373  05F4  3481               	retlw	129
  3374  05F5  34E4               	retlw	228
  3375  05F6  3400               	retlw	0
  3376  05F7  3400               	retlw	0
  3377  05F8  3400               	retlw	0
  3378  05F9  3400               	retlw	0
  3379  05FA  3400               	retlw	0
  3380  05FB  3407               	retlw	7
  3381  05FC  34FF               	retlw	255
  3382  05FD  34FF               	retlw	255
  3383  05FE  34FC               	retlw	252
  3384  05FF  3401               	retlw	1
  3385  0600  34F8               	retlw	248
  3386  0601  3438               	retlw	56
  3387  0602  34C0               	retlw	192
  3388  0603  341F               	retlw	31
  3389  0604  34E1               	retlw	225
  3390  0605  34E7               	retlw	231
  3391  0606  3400               	retlw	0
  3392  0607  3441               	retlw	65
  3393  0608  3481               	retlw	129
  3394  0609  3420               	retlw	32
  3395  060A  3400               	retlw	0
  3396  060B  340F               	retlw	15
  3397  060C  34FF               	retlw	255
  3398  060D  34FF               	retlw	255
  3399  060E  34FF               	retlw	255
  3400  060F  34FE               	retlw	254
  3401  0610  343F               	retlw	63
  3402  0611  34FE               	retlw	254
  3403  0612  3407               	retlw	7
  3404  0613  349F               	retlw	159
  3405  0614  3403               	retlw	3
  3406  0615  34E3               	retlw	227
  3407  0616  34DF               	retlw	223
  3408  0617  341F               	retlw	31
  3409  0618  34E7               	retlw	231
  3410  0619  34FF               	retlw	255
  3411  061A  34FF               	retlw	255
  3412  061B  34FF               	retlw	255
  3413  061C  34FF               	retlw	255
  3414  061D  34FF               	retlw	255
  3415  061E  34FF               	retlw	255
  3416  061F  34FE               	retlw	254
  3417  0620  341F               	retlw	31
  3418  0621  34FF               	retlw	255
  3419  0622  340F               	retlw	15
  3420  0623  348F               	retlw	143
  3421  0624  3483               	retlw	131
  3422  0625  34E7               	retlw	231
  3423  0626  34FE               	retlw	254
  3424  0627  340F               	retlw	15
  3425  0628  34FF               	retlw	255
  3426  0629  34FF               	retlw	255
  3427  062A  34FF               	retlw	255
  3428  062B  34FF               	retlw	255
  3429  062C  34FF               	retlw	255
  3430  062D  34FF               	retlw	255
  3431  062E  34FF               	retlw	255
  3432  062F  34FF               	retlw	255
  3433  0630  343F               	retlw	63
  3434  0631  34FF               	retlw	255
  3435  0632  340F               	retlw	15
  3436  0633  348F               	retlw	143
  3437  0634  34C7               	retlw	199
  3438  0635  34E7               	retlw	231
  3439  0636  34FF               	retlw	255
  3440  0637  340F               	retlw	15
  3441  0638  34FF               	retlw	255
  3442  0639  34FF               	retlw	255
  3443  063A  34FF               	retlw	255
  3444  063B  34FF               	retlw	255
  3445  063C  34FF               	retlw	255
  3446  063D  34FF               	retlw	255
  3447  063E  34FF               	retlw	255
  3448  063F  34FF               	retlw	255
  3449  0640  34FF               	retlw	255
  3450  0641  34FF               	retlw	255
  3451  0642  34FF               	retlw	255
  3452  0643  34FF               	retlw	255
  3453  0644  34FF               	retlw	255
  3454  0645  34E7               	retlw	231
  3455  0646  34FF               	retlw	255
  3456  0647  34FF               	retlw	255
  3457  0648  34FF               	retlw	255
  3458  0649  34FF               	retlw	255
  3459  064A  34FF               	retlw	255
  3460  064B  34FF               	retlw	255
  3461  064C  34FF               	retlw	255
  3462  064D  34FF               	retlw	255
  3463  064E  34FF               	retlw	255
  3464  064F  34FF               	retlw	255
  3465  0650  34FF               	retlw	255
  3466  0651  34FF               	retlw	255
  3467  0652  34FF               	retlw	255
  3468  0653  34FF               	retlw	255
  3469  0654  34FF               	retlw	255
  3470  0655  34FF               	retlw	255
  3471  0656  34FF               	retlw	255
  3472  0657  34FF               	retlw	255
  3473  0658  34FF               	retlw	255
  3474  0659  34FF               	retlw	255
  3475  065A  34FF               	retlw	255
  3476  065B  34FF               	retlw	255
  3477  065C  34FF               	retlw	255
  3478  065D  34FF               	retlw	255
  3479  065E  34FF               	retlw	255
  3480  065F  34FF               	retlw	255
  3481  0660  34FF               	retlw	255
  3482  0661  34FF               	retlw	255
  3483  0662  34FF               	retlw	255
  3484  0663  34FF               	retlw	255
  3485  0664  34FF               	retlw	255
  3486  0665  34FF               	retlw	255
  3487  0666  34FF               	retlw	255
  3488  0667  34FF               	retlw	255
  3489  0668  34FF               	retlw	255
  3490  0669  34FF               	retlw	255
  3491  066A  34FF               	retlw	255
  3492  066B  34FF               	retlw	255
  3493  066C  34FF               	retlw	255
  3494  066D  34FF               	retlw	255
  3495  066E  34FF               	retlw	255
  3496  066F  34FF               	retlw	255
  3497  0670  34FF               	retlw	255
  3498  0671  34FF               	retlw	255
  3499  0672  34FF               	retlw	255
  3500  0673  34FF               	retlw	255
  3501  0674  34FF               	retlw	255
  3502  0675  34FF               	retlw	255
  3503  0676  34FF               	retlw	255
  3504  0677  34FF               	retlw	255
  3505  0678  34FF               	retlw	255
  3506  0679  34FF               	retlw	255
  3507  067A  34FF               	retlw	255
  3508  067B  34FF               	retlw	255
  3509  067C  34FF               	retlw	255
  3510  067D  34FF               	retlw	255
  3511  067E  34FF               	retlw	255
  3512  067F  34FF               	retlw	255
  3513  0680  34FF               	retlw	255
  3514  0681  34FF               	retlw	255
  3515  0682  34FF               	retlw	255
  3516  0683  34FF               	retlw	255
  3517  0684  34FF               	retlw	255
  3518  0685  34FF               	retlw	255
  3519  0686  34FF               	retlw	255
  3520  0687  34FF               	retlw	255
  3521  0688  34FF               	retlw	255
  3522  0689  34FF               	retlw	255
  3523  068A  34FF               	retlw	255
  3524  068B  34FF               	retlw	255
  3525  068C  34FF               	retlw	255
  3526  068D  34FF               	retlw	255
  3527  068E  34FF               	retlw	255
  3528  068F  34FF               	retlw	255
  3529  0690  34FF               	retlw	255
  3530  0691  34FF               	retlw	255
  3531  0692  34FF               	retlw	255
  3532  0693  34FF               	retlw	255
  3533  0694  34FF               	retlw	255
  3534  0695  34FF               	retlw	255
  3535  0696  34FF               	retlw	255
  3536  0697  34FF               	retlw	255
  3537  0698  34FF               	retlw	255
  3538  0699  34FF               	retlw	255
  3539  069A  34FF               	retlw	255
  3540  069B  34FF               	retlw	255
  3541  069C  34FF               	retlw	255
  3542  069D  34FF               	retlw	255
  3543  069E  34FF               	retlw	255
  3544  069F  34FF               	retlw	255
  3545  06A0  34FF               	retlw	255
  3546  06A1  34FF               	retlw	255
  3547  06A2  34FF               	retlw	255
  3548  06A3  34FF               	retlw	255
  3549  06A4  34FF               	retlw	255
  3550  06A5  34FF               	retlw	255
  3551  06A6  34FF               	retlw	255
  3552  06A7  34FF               	retlw	255
  3553  06A8  34FF               	retlw	255
  3554  06A9  34FF               	retlw	255
  3555  06AA  34FF               	retlw	255
  3556  06AB  34FF               	retlw	255
  3557  06AC  34FF               	retlw	255
  3558  06AD  34FF               	retlw	255
  3559  06AE  34FF               	retlw	255
  3560  06AF  34FF               	retlw	255
  3561  06B0  34FF               	retlw	255
  3562  06B1  34FF               	retlw	255
  3563  06B2  34FF               	retlw	255
  3564  06B3  34FF               	retlw	255
  3565  06B4  34FF               	retlw	255
  3566  06B5  34FF               	retlw	255
  3567  06B6  34FF               	retlw	255
  3568  06B7  34FF               	retlw	255
  3569  06B8  34FF               	retlw	255
  3570  06B9  34FF               	retlw	255
  3571  06BA  34FF               	retlw	255
  3572  06BB  34FF               	retlw	255
  3573  06BC  34FF               	retlw	255
  3574  06BD  34FF               	retlw	255
  3575  06BE  34FF               	retlw	255
  3576  06BF  34FF               	retlw	255
  3577  06C0  34FF               	retlw	255
  3578  06C1  34FF               	retlw	255
  3579  06C2  34FF               	retlw	255
  3580  06C3  34EF               	retlw	239
  3581  06C4  34FF               	retlw	255
  3582  06C5  34FF               	retlw	255
  3583  06C6  34FF               	retlw	255
  3584  06C7  34FF               	retlw	255
  3585  06C8  34FF               	retlw	255
  3586  06C9  34FF               	retlw	255
  3587  06CA  34FF               	retlw	255
  3588  06CB  34FF               	retlw	255
  3589  06CC  34FF               	retlw	255
  3590  06CD  34FF               	retlw	255
  3591  06CE  34FF               	retlw	255
  3592  06CF  34FF               	retlw	255
  3593  06D0  34FF               	retlw	255
  3594  06D1  34FF               	retlw	255
  3595  06D2  34FF               	retlw	255
  3596  06D3  34C7               	retlw	199
  3597  06D4  34F7               	retlw	247
  3598  06D5  34FF               	retlw	255
  3599  06D6  34F3               	retlw	243
  3600  06D7  34FF               	retlw	255
  3601  06D8  34DF               	retlw	223
  3602  06D9  34FF               	retlw	255
  3603  06DA  34FF               	retlw	255
  3604  06DB  34FF               	retlw	255
  3605  06DC  34FF               	retlw	255
  3606  06DD  34FF               	retlw	255
  3607  06DE  34FF               	retlw	255
  3608  06DF  34FF               	retlw	255
  3609  06E0  34FF               	retlw	255
  3610  06E1  34FF               	retlw	255
  3611  06E2  34FF               	retlw	255
  3612  06E3  34C3               	retlw	195
  3613  06E4  34E7               	retlw	231
  3614  06E5  34FF               	retlw	255
  3615  06E6  34F1               	retlw	241
  3616  06E7  34FF               	retlw	255
  3617  06E8  349C               	retlw	156
  3618  06E9  347F               	retlw	127
  3619  06EA  34FF               	retlw	255
  3620  06EB  34FF               	retlw	255
  3621  06EC  34FF               	retlw	255
  3622  06ED  34FF               	retlw	255
  3623  06EE  34FF               	retlw	255
  3624  06EF  34FF               	retlw	255
  3625  06F0  34F9               	retlw	249
  3626  06F1  34FF               	retlw	255
  3627  06F2  34FF               	retlw	255
  3628  06F3  34C3               	retlw	195
  3629  06F4  34C7               	retlw	199
  3630  06F5  34FF               	retlw	255
  3631  06F6  34F1               	retlw	241
  3632  06F7  34FF               	retlw	255
  3633  06F8  341C               	retlw	28
  3634  06F9  343F               	retlw	63
  3635  06FA  34FF               	retlw	255
  3636  06FB  34FF               	retlw	255
  3637  06FC  34FF               	retlw	255
  3638  06FD  34FF               	retlw	255
  3639  06FE  34FF               	retlw	255
  3640  06FF  34FF               	retlw	255
  3641  0700  34F8               	retlw	248
  3642  0701  34FF               	retlw	255
  3643  0702  343F               	retlw	63
  3644  0703  34C7               	retlw	199
  3645  0704  34C7               	retlw	199
  3646  0705  34FF               	retlw	255
  3647  0706  34FF               	retlw	255
  3648  0707  34FF               	retlw	255
  3649  0708  341E               	retlw	30
  3650  0709  347F               	retlw	127
  3651  070A  34FF               	retlw	255
  3652  070B  34FF               	retlw	255
  3653  070C  34FF               	retlw	255
  3654  070D  34FF               	retlw	255
  3655  070E  34FF               	retlw	255
  3656  070F  34FF               	retlw	255
  3657  0710  34FD               	retlw	253
  3658  0711  34FE               	retlw	254
  3659  0712  343F               	retlw	63
  3660  0713  3487               	retlw	135
  3661  0714  34C7               	retlw	199
  3662  0715  34FF               	retlw	255
  3663  0716  34F9               	retlw	249
  3664  0717  34FF               	retlw	255
  3665  0718  341F               	retlw	31
  3666  0719  34FF               	retlw	255
  3667  071A  34CF               	retlw	207
  3668  071B  34FF               	retlw	255
  3669  071C  34FF               	retlw	255
  3670  071D  34FF               	retlw	255
  3671  071E  34FF               	retlw	255
  3672  071F  34FF               	retlw	255
  3673  0720  34FF               	retlw	255
  3674  0721  34FC               	retlw	252
  3675  0722  341F               	retlw	31
  3676  0723  3407               	retlw	7
  3677  0724  34C7               	retlw	199
  3678  0725  34EF               	retlw	239
  3679  0726  34F0               	retlw	240
  3680  0727  34F9               	retlw	249
  3681  0728  341E               	retlw	30
  3682  0729  347F               	retlw	127
  3683  072A  3487               	retlw	135
  3684  072B  34FF               	retlw	255
  3685  072C  34FF               	retlw	255
  3686  072D  34FF               	retlw	255
  3687  072E  34FF               	retlw	255
  3688  072F  34FF               	retlw	255
  3689  0730  34FC               	retlw	252
  3690  0731  34F8               	retlw	248
  3691  0732  341E               	retlw	30
  3692  0733  3403               	retlw	3
  3693  0734  34C7               	retlw	199
  3694  0735  34EF               	retlw	239
  3695  0736  34E0               	retlw	224
  3696  0737  34F1               	retlw	241
  3697  0738  341E               	retlw	30
  3698  0739  343F               	retlw	63
  3699  073A  3483               	retlw	131
  3700  073B  34FF               	retlw	255
  3701  073C  34FF               	retlw	255
  3702  073D  34FF               	retlw	255
  3703  073E  34FF               	retlw	255
  3704  073F  34FF               	retlw	255
  3705  0740  34F8               	retlw	248
  3706  0741  34F8               	retlw	248
  3707  0742  341E               	retlw	30
  3708  0743  3400               	retlw	0
  3709  0744  3447               	retlw	71
  3710  0745  34CF               	retlw	207
  3711  0746  34C0               	retlw	192
  3712  0747  34F1               	retlw	241
  3713  0748  341E               	retlw	30
  3714  0749  343F               	retlw	63
  3715  074A  3401               	retlw	1
  3716  074B  34FF               	retlw	255
  3717  074C  34FF               	retlw	255
  3718  074D  34FF               	retlw	255
  3719  074E  34FF               	retlw	255
  3720  074F  3470               	retlw	112
  3721  0750  3400               	retlw	0
  3722  0751  3400               	retlw	0
  3723  0752  3400               	retlw	0
  3724  0753  3400               	retlw	0
  3725  0754  3447               	retlw	71
  3726  0755  34C0               	retlw	192
  3727  0756  3400               	retlw	0
  3728  0757  3401               	retlw	1
  3729  0758  3400               	retlw	0
  3730  0759  343E               	retlw	62
  3731  075A  3401               	retlw	1
  3732  075B  34FF               	retlw	255
  3733  075C  34FF               	retlw	255
  3734  075D  34FF               	retlw	255
  3735  075E  34FF               	retlw	255
  3736  075F  3470               	retlw	112
  3737  0760  3400               	retlw	0
  3738  0761  3400               	retlw	0
  3739  0762  3400               	retlw	0
  3740  0763  3400               	retlw	0
  3741  0764  34C7               	retlw	199
  3742  0765  34C0               	retlw	192
  3743  0766  3400               	retlw	0
  3744  0767  3401               	retlw	1
  3745  0768  3400               	retlw	0
  3746  0769  343E               	retlw	62
  3747  076A  3401               	retlw	1
  3748  076B  34FF               	retlw	255
  3749  076C  34FF               	retlw	255
  3750  076D  34FF               	retlw	255
  3751  076E  34FE               	retlw	254
  3752  076F  3460               	retlw	96
  3753  0770  3400               	retlw	0
  3754  0771  3400               	retlw	0
  3755  0772  3400               	retlw	0
  3756  0773  340F               	retlw	15
  3757  0774  34CF               	retlw	207
  3758  0775  34C0               	retlw	192
  3759  0776  3400               	retlw	0
  3760  0777  3403               	retlw	3
  3761  0778  3400               	retlw	0
  3762  0779  347E               	retlw	126
  3763  077A  3403               	retlw	3
  3764  077B  34FF               	retlw	255
  3765  077C  34FF               	retlw	255
  3766  077D  34FF               	retlw	255
  3767  077E  34FE               	retlw	254
  3768  077F  3470               	retlw	112
  3769  0780  3426               	retlw	38
  3770  0781  3400               	retlw	0
  3771  0782  3400               	retlw	0
  3772  0783  343F               	retlw	63
  3773  0784  34CF               	retlw	207
  3774  0785  34F0               	retlw	240
  3775  0786  340C               	retlw	12
  3776  0787  3407               	retlw	7
  3777  0788  3488               	retlw	136
  3778  0789  34FC               	retlw	252
  3779  078A  3407               	retlw	7
  3780  078B  34FF               	retlw	255
  3781  078C  34FF               	retlw	255
  3782  078D  34FF               	retlw	255
  3783  078E  34FE               	retlw	254
  3784  078F  3400               	retlw	0
  3785  0790  34FF               	retlw	255
  3786  0791  34E0               	retlw	224
  3787  0792  341F               	retlw	31
  3788  0793  34C7               	retlw	199
  3789  0794  34FF               	retlw	255
  3790  0795  34FF               	retlw	255
  3791  0796  34FF               	retlw	255
  3792  0797  34C3               	retlw	195
  3793  0798  34FF               	retlw	255
  3794  0799  34FC               	retlw	252
  3795  079A  347F               	retlw	127
  3796  079B  34FF               	retlw	255
  3797  079C  34FF               	retlw	255
  3798  079D  34FF               	retlw	255
  3799  079E  34FE               	retlw	254
  3800  079F  3400               	retlw	0
  3801  07A0  34FF               	retlw	255
  3802  07A1  34E0               	retlw	224
  3803  07A2  343F               	retlw	63
  3804  07A3  34C3               	retlw	195
  3805  07A4  34FF               	retlw	255
  3806  07A5  34FF               	retlw	255
  3807  07A6  34FF               	retlw	255
  3808  07A7  34C1               	retlw	193
  3809  07A8  34FF               	retlw	255
  3810  07A9  34FC               	retlw	252
  3811  07AA  347F               	retlw	127
  3812  07AB  34FF               	retlw	255
  3813  07AC  34FF               	retlw	255
  3814  07AD  34FF               	retlw	255
  3815  07AE  34FF               	retlw	255
  3816  07AF  3401               	retlw	1
  3817  07B0  34FF               	retlw	255
  3818  07B1  34F0               	retlw	240
  3819  07B2  347F               	retlw	127
  3820  07B3  34E7               	retlw	231
  3821  07B4  34FF               	retlw	255
  3822  07B5  34FF               	retlw	255
  3823  07B6  34FF               	retlw	255
  3824  07B7  34C1               	retlw	193
  3825  07B8  34FF               	retlw	255
  3826  07B9  34FC               	retlw	252
  3827  07BA  347F               	retlw	127
  3828  07BB  34FF               	retlw	255
  3829  07BC  34FF               	retlw	255
  3830  07BD  34FF               	retlw	255
  3831  07BE  34FF               	retlw	255
  3832  07BF  3487               	retlw	135
  3833  07C0  34FF               	retlw	255
  3834  07C1  34FD               	retlw	253
  3835  07C2  34FF               	retlw	255
  3836  07C3  34FF               	retlw	255
  3837  07C4  34FF               	retlw	255
  3838  07C5  34FF               	retlw	255
  3839  07C6  34FF               	retlw	255
  3840  07C7  34FF               	retlw	255
  3841  07C8  34FF               	retlw	255
  3842  07C9  34FC               	retlw	252
  3843  07CA  34FF               	retlw	255
  3844  07CB  34FF               	retlw	255
  3845  07CC  34FF               	retlw	255
  3846  07CD  34FF               	retlw	255
  3847  07CE  34FF               	retlw	255
  3848  07CF  3487               	retlw	135
  3849  07D0  34FF               	retlw	255
  3850  07D1  34FF               	retlw	255
  3851  07D2  34FF               	retlw	255
  3852  07D3  34FF               	retlw	255
  3853  07D4  34FF               	retlw	255
  3854  07D5  34FF               	retlw	255
  3855  07D6  34FF               	retlw	255
  3856  07D7  34FF               	retlw	255
  3857  07D8  34FF               	retlw	255
  3858  07D9  34FE               	retlw	254
  3859  07DA  34FF               	retlw	255
  3860  07DB  34FF               	retlw	255
  3861  07DC  34FF               	retlw	255
  3862  07DD  34FF               	retlw	255
  3863  07DE  34FF               	retlw	255
  3864  07DF  3483               	retlw	131
  3865  07E0  34FF               	retlw	255
  3866  07E1  34FF               	retlw	255
  3867  07E2  34FF               	retlw	255
  3868  07E3  34FF               	retlw	255
  3869  07E4  34FF               	retlw	255
  3870  07E5  34FF               	retlw	255
  3871  07E6  34FF               	retlw	255
  3872  07E7  34FF               	retlw	255
  3873  07E8  34FF               	retlw	255
  3874  07E9  34FF               	retlw	255
  3875  07EA  34FF               	retlw	255
  3876  07EB  34FF               	retlw	255
  3877  07EC  34FF               	retlw	255
  3878  07ED  34FF               	retlw	255
  3879  07EE  34FF               	retlw	255
  3880  07EF  3483               	retlw	131
  3881  07F0  34FF               	retlw	255
  3882  07F1  34FF               	retlw	255
  3883  07F2  34FF               	retlw	255
  3884  07F3  34FF               	retlw	255
  3885  07F4  34FF               	retlw	255
  3886  07F5  34FF               	retlw	255
  3887  07F6  34FF               	retlw	255
  3888  07F7  34FF               	retlw	255
  3889  07F8  34FF               	retlw	255
  3890  07F9  34FF               	retlw	255
  3891  07FA  34FF               	retlw	255
  3892  07FB  34FF               	retlw	255
  3893  07FC  34FF               	retlw	255
  3894  07FD  34FF               	retlw	255
  3895  07FE  34FF               	retlw	255
  3896  07FF  34FF               	retlw	255
  3897  0800  34FF               	retlw	255
  3898  0801  34FF               	retlw	255
  3899  0802  34FF               	retlw	255
  3900  0803  34FF               	retlw	255
  3901  0804  34FF               	retlw	255
  3902  0805  34FF               	retlw	255
  3903  0806  34FF               	retlw	255
  3904  0807  34FF               	retlw	255
  3905  0808  34FF               	retlw	255
  3906  0809  34FF               	retlw	255
  3907  080A  34FF               	retlw	255
  3908  080B  34FF               	retlw	255
  3909  080C  34FF               	retlw	255
  3910  080D  34FF               	retlw	255
  3911  080E  34FF               	retlw	255
  3912  080F  34FF               	retlw	255
  3913  0810  34FF               	retlw	255
  3914  0811  34FF               	retlw	255
  3915  0812  34FF               	retlw	255
  3916  0813  34FF               	retlw	255
  3917  0814  34FF               	retlw	255
  3918  0815  34FF               	retlw	255
  3919  0816  34FF               	retlw	255
  3920  0817  34FF               	retlw	255
  3921  0818  34FF               	retlw	255
  3922  0819  34FF               	retlw	255
  3923  081A  34FF               	retlw	255
  3924  081B  34FF               	retlw	255
  3925  081C  34FF               	retlw	255
  3926  081D  34FF               	retlw	255
  3927  081E  34FF               	retlw	255
  3928  081F  34FF               	retlw	255
  3929  0820  34FF               	retlw	255
  3930  0821  34FF               	retlw	255
  3931  0822  34FF               	retlw	255
  3932  0823  34FF               	retlw	255
  3933  0824  34FF               	retlw	255
  3934  0825  34FF               	retlw	255
  3935  0826  34FF               	retlw	255
  3936  0827  34FF               	retlw	255
  3937  0828  34FF               	retlw	255
  3938  0829  34FF               	retlw	255
  3939  082A  34FF               	retlw	255
  3940  082B  34FF               	retlw	255
  3941  082C  34FF               	retlw	255
  3942  082D  34FF               	retlw	255
  3943  082E  34FF               	retlw	255
  3944  082F  34FF               	retlw	255
  3945  0830  34FF               	retlw	255
  3946  0831  34FF               	retlw	255
  3947  0832  34FF               	retlw	255
  3948  0833  34FF               	retlw	255
  3949  0834  34FF               	retlw	255
  3950  0835  34FF               	retlw	255
  3951  0836  34FF               	retlw	255
  3952  0837  34FF               	retlw	255
  3953  0838  34FF               	retlw	255
  3954  0839  34FF               	retlw	255
  3955  083A  34FF               	retlw	255
  3956  083B  34FF               	retlw	255
  3957  083C  34FF               	retlw	255
  3958  083D  34FF               	retlw	255
  3959  083E  34FF               	retlw	255
  3960  083F  34FF               	retlw	255
  3961  0840  34FF               	retlw	255
  3962  0841  34FF               	retlw	255
  3963  0842  34FF               	retlw	255
  3964  0843  34FF               	retlw	255
  3965  0844  34FF               	retlw	255
  3966  0845  34FF               	retlw	255
  3967  0846  34FF               	retlw	255
  3968  0847  34FF               	retlw	255
  3969  0848  34FF               	retlw	255
  3970  0849  34FF               	retlw	255
  3971  084A  34FF               	retlw	255
  3972  084B  34FF               	retlw	255
  3973  084C  34FF               	retlw	255
  3974  084D  34FF               	retlw	255
  3975  084E  34FF               	retlw	255
  3976  084F  34FF               	retlw	255
  3977  0850  34FF               	retlw	255
  3978  0851  34FF               	retlw	255
  3979  0852  34F8               	retlw	248
  3980  0853  34E3               	retlw	227
  3981  0854  34FF               	retlw	255
  3982  0855  34FF               	retlw	255
  3983  0856  34FF               	retlw	255
  3984  0857  34FF               	retlw	255
  3985  0858  34FF               	retlw	255
  3986  0859  34FF               	retlw	255
  3987  085A  34FF               	retlw	255
  3988  085B  34FF               	retlw	255
  3989  085C  34FF               	retlw	255
  3990  085D  34FF               	retlw	255
  3991  085E  34FF               	retlw	255
  3992  085F  34FF               	retlw	255
  3993  0860  34FF               	retlw	255
  3994  0861  34FF               	retlw	255
  3995  0862  34F8               	retlw	248
  3996  0863  34E3               	retlw	227
  3997  0864  34E1               	retlw	225
  3998  0865  34FC               	retlw	252
  3999  0866  34FF               	retlw	255
  4000  0867  34FF               	retlw	255
  4001  0868  34FF               	retlw	255
  4002  0869  34FF               	retlw	255
  4003  086A  34FF               	retlw	255
  4004  086B  34FF               	retlw	255
  4005  086C  34FF               	retlw	255
  4006  086D  34FF               	retlw	255
  4007  086E  34FF               	retlw	255
  4008  086F  34FF               	retlw	255
  4009  0870  34FF               	retlw	255
  4010  0871  34FF               	retlw	255
  4011  0872  34FC               	retlw	252
  4012  0873  3467               	retlw	103
  4013  0874  34C0               	retlw	192
  4014  0875  34F0               	retlw	240
  4015  0876  34FF               	retlw	255
  4016  0877  34FF               	retlw	255
  4017  0878  34FF               	retlw	255
  4018  0879  34FF               	retlw	255
  4019  087A  34FF               	retlw	255
  4020  087B  34FF               	retlw	255
  4021  087C  34FF               	retlw	255
  4022  087D  34FF               	retlw	255
  4023  087E  34FF               	retlw	255
  4024  087F  34FF               	retlw	255
  4025  0880  34FF               	retlw	255
  4026  0881  34FF               	retlw	255
  4027  0882  34FC               	retlw	252
  4028  0883  3447               	retlw	71
  4029  0884  34C0               	retlw	192
  4030  0885  34E0               	retlw	224
  4031  0886  34FF               	retlw	255
  4032  0887  34FF               	retlw	255
  4033  0888  34FF               	retlw	255
  4034  0889  34FF               	retlw	255
  4035  088A  34FF               	retlw	255
  4036  088B  34FF               	retlw	255
  4037  088C  34FF               	retlw	255
  4038  088D  34FF               	retlw	255
  4039  088E  34FF               	retlw	255
  4040  088F  34FF               	retlw	255
  4041  0890  34FF               	retlw	255
  4042  0891  34FF               	retlw	255
  4043  0892  34FC               	retlw	252
  4044  0893  3447               	retlw	71
  4045  0894  34C4               	retlw	196
  4046  0895  3470               	retlw	112
  4047  0896  34FF               	retlw	255
  4048  0897  34FF               	retlw	255
  4049  0898  34FF               	retlw	255
  4050  0899  34FF               	retlw	255
  4051  089A  34FF               	retlw	255
  4052  089B  34FF               	retlw	255
  4053  089C  34FF               	retlw	255
  4054  089D  34FF               	retlw	255
  4055  089E  34FF               	retlw	255
  4056  089F  34FF               	retlw	255
  4057  08A0  34FF               	retlw	255
  4058  08A1  34FF               	retlw	255
  4059  08A2  34FE               	retlw	254
  4060  08A3  344F               	retlw	79
  4061  08A4  3484               	retlw	132
  4062  08A5  3478               	retlw	120
  4063  08A6  34FF               	retlw	255
  4064  08A7  34FF               	retlw	255
  4065  08A8  34FF               	retlw	255
  4066  08A9  34FF               	retlw	255
  4067  08AA  34FF               	retlw	255
  4068  08AB  34FF               	retlw	255
  4069  08AC  34FF               	retlw	255
  4070  08AD  34FF               	retlw	255
  4071  08AE  34FF               	retlw	255
  4072  08AF  34FF               	retlw	255
  4073  08B0  34FF               	retlw	255
  4074  08B1  34FF               	retlw	255
  4075  08B2  34FE               	retlw	254
  4076  08B3  340F               	retlw	15
  4077  08B4  34C4               	retlw	196
  4078  08B5  3478               	retlw	120
  4079  08B6  34FF               	retlw	255
  4080  08B7  34FF               	retlw	255
  4081  08B8  34FF               	retlw	255
  4082  08B9  34FF               	retlw	255
  4083  08BA  34FF               	retlw	255
  4084  08BB  34FF               	retlw	255
  4085  08BC  34FF               	retlw	255
  4086  08BD  34FF               	retlw	255
  4087  08BE  34FF               	retlw	255
  4088  08BF  34FF               	retlw	255
  4089  08C0  34FF               	retlw	255
  4090  08C1  34FF               	retlw	255
  4091  08C2  34FE               	retlw	254
  4092  08C3  340F               	retlw	15
  4093  08C4  34C0               	retlw	192
  4094  08C5  34F8               	retlw	248
  4095  08C6  34FF               	retlw	255
  4096  08C7  34FF               	retlw	255
  4097  08C8  34FF               	retlw	255
  4098  08C9  34FF               	retlw	255
  4099  08CA  34FF               	retlw	255
  4100  08CB  34FF               	retlw	255
  4101  08CC  34FF               	retlw	255
  4102  08CD  34FF               	retlw	255
  4103  08CE  34FF               	retlw	255
  4104  08CF  34FF               	retlw	255
  4105  08D0  34FF               	retlw	255
  4106  08D1  34FF               	retlw	255
  4107  08D2  34FF               	retlw	255
  4108  08D3  341F               	retlw	31
  4109  08D4  34C0               	retlw	192
  4110  08D5  3498               	retlw	152
  4111  08D6  34FF               	retlw	255
  4112  08D7  34FF               	retlw	255
  4113  08D8  34FF               	retlw	255
  4114  08D9  34FF               	retlw	255
  4115  08DA  34FF               	retlw	255
  4116  08DB  34FF               	retlw	255
  4117  08DC  34FF               	retlw	255
  4118  08DD  34FF               	retlw	255
  4119  08DE  34FF               	retlw	255
  4120  08DF  34FF               	retlw	255
  4121  08E0  34FF               	retlw	255
  4122  08E1  34FF               	retlw	255
  4123  08E2  34FF               	retlw	255
  4124  08E3  341F               	retlw	31
  4125  08E4  34E0               	retlw	224
  4126  08E5  3498               	retlw	152
  4127  08E6  34FF               	retlw	255
  4128  08E7  34FF               	retlw	255
  4129  08E8  34FF               	retlw	255
  4130  08E9  34FF               	retlw	255
  4131  08EA  34FF               	retlw	255
  4132  08EB  34FF               	retlw	255
  4133  08EC  34FF               	retlw	255
  4134  08ED  34FF               	retlw	255
  4135  08EE  34FF               	retlw	255
  4136  08EF  34FF               	retlw	255
  4137  08F0  34FF               	retlw	255
  4138  08F1  34FF               	retlw	255
  4139  08F2  34FF               	retlw	255
  4140  08F3  34BF               	retlw	191
  4141  08F4  34F3               	retlw	243
  4142  08F5  34FD               	retlw	253
  4143  08F6  34FF               	retlw	255
  4144  08F7  34FF               	retlw	255
  4145  08F8  34FF               	retlw	255
  4146  08F9  34FF               	retlw	255
  4147  08FA  34FF               	retlw	255
  4148  08FB  34FF               	retlw	255
  4149  08FC  34FF               	retlw	255
  4150  08FD  34FF               	retlw	255
  4151  08FE  34FF               	retlw	255
  4152  08FF  34FF               	retlw	255
  4153  0900  34FF               	retlw	255
  4154  0901  34FF               	retlw	255
  4155  0902  34FF               	retlw	255
  4156  0903  34FF               	retlw	255
  4157  0904  34FF               	retlw	255
  4158  0905  34FF               	retlw	255
  4159  0906  34FF               	retlw	255
  4160  0907  34FF               	retlw	255
  4161  0908  34FF               	retlw	255
  4162  0909  34FF               	retlw	255
  4163  090A  34FF               	retlw	255
  4164  090B  34FF               	retlw	255
  4165  090C  34FF               	retlw	255
  4166  090D  34FF               	retlw	255
  4167  090E  34FF               	retlw	255
  4168  090F  34FF               	retlw	255
  4169  0910  34FF               	retlw	255
  4170  0911  34FF               	retlw	255
  4171  0912  34FF               	retlw	255
  4172  0913  34FF               	retlw	255
  4173  0914  34FF               	retlw	255
  4174  0915  34FF               	retlw	255
  4175  0916  34FF               	retlw	255
  4176  0917  34FF               	retlw	255
  4177  0918  34FF               	retlw	255
  4178  0919  34FF               	retlw	255
  4179  091A  34FF               	retlw	255
  4180  091B  34FF               	retlw	255
  4181  091C  34FF               	retlw	255
  4182  091D  34FF               	retlw	255
  4183  091E  34FF               	retlw	255
  4184  091F  34FF               	retlw	255
  4185  0920  34FF               	retlw	255
  4186  0921  34FF               	retlw	255
  4187  0922  34FF               	retlw	255
  4188  0923  34FF               	retlw	255
  4189  0924  34FF               	retlw	255
  4190  0925  34FF               	retlw	255
  4191  0926  34FF               	retlw	255
  4192  0927  34FF               	retlw	255
  4193  0928  34FF               	retlw	255
  4194  0929  34FF               	retlw	255
  4195  092A  34FF               	retlw	255
  4196  092B  34FF               	retlw	255
  4197  092C  34FF               	retlw	255
  4198  092D  34FF               	retlw	255
  4199  092E  34FF               	retlw	255
  4200  092F  34FF               	retlw	255
  4201  0930  34FF               	retlw	255
  4202  0931  34FF               	retlw	255
  4203  0932  34FF               	retlw	255
  4204  0933  34FF               	retlw	255
  4205  0934  34FF               	retlw	255
  4206  0935  34FF               	retlw	255
  4207  0936  34FF               	retlw	255
  4208  0937  34FF               	retlw	255
  4209  0938  34FF               	retlw	255
  4210  0939  34FF               	retlw	255
  4211  093A  34FF               	retlw	255
  4212  093B  34FF               	retlw	255
  4213  093C  34FF               	retlw	255
  4214  093D                     __end_of_des:	
  4215  000C                     _PORTAbits	set	12
  4216  000F                     _PORTDbits	set	15
  4217  005B                     _IOCIE	set	91
  4218  005F                     _GIE	set	95
  4219  008D                     _TRISB	set	141
  4220  008C                     _TRISA	set	140
  4221  008E                     _TRISC	set	142
  4222  008F                     _TRISD	set	143
  4223  0097                     _OPTION_REGbits	set	151
  4224  009D                     _BORCON	set	157
  4225  009A                     _OSCTUNE	set	154
  4226  009C                     _OSCSTAT	set	156
  4227  009B                     _OSCCON	set	155
  4228  010F                     _LATDbits	set	271
  4229  010D                     _LATBbits	set	269
  4230  018D                     _ANSELB	set	397
  4231  018C                     _ANSELA	set	396
  4232  018E                     _ANSELC	set	398
  4233  018F                     _ANSELD	set	399
  4234  020E                     _WPUC	set	526
  4235  020F                     _WPUD	set	527
  4236  028D                     _ODCONB	set	653
  4237  028E                     _ODCONC	set	654
  4238  030D                     _SLRCONB	set	781
  4239  030E                     _SLRCONC	set	782
  4240  038C                     _INLVLA	set	908
  4241  038E                     _INLVLC	set	910
  4242  1C9B                     _IOCAF3	set	7323
  4243  1C8B                     _IOCAP3	set	7307
  4244  0490                     _ADCON0bits	set	1168
  4245  0490                     _ADCON0	set	1168
  4246  048F                     _ADRESH	set	1167
  4247  048E                     _ADRESL	set	1166
  4248  0492                     _ADCON2	set	1170
  4249  0491                     _ADCON1	set	1169
  4250  0518                     _OPA3PCHS	set	1304
  4251  0517                     _OPA3NCHS	set	1303
  4252  051A                     _OPA3ORS	set	1306
  4253  0519                     _OPA3CON	set	1305
  4254  0598                     _DAC5CON0bits	set	1432
  4255  058D                     _DACLDbits	set	1421
  4256  0599                     _DAC5REFL	set	1433
  4257  059A                     _DAC5REFH	set	1434
  4258  0598                     _DAC5CON0	set	1432
  4259  093D                     STR_2:	
  4260  093D  3443               	retlw	67	;'C'
  4261  093E  3475               	retlw	117	;'u'
  4262  093F  3472               	retlw	114	;'r'
  4263  0940  3472               	retlw	114	;'r'
  4264  0941  3465               	retlw	101	;'e'
  4265  0942  346E               	retlw	110	;'n'
  4266  0943  3474               	retlw	116	;'t'
  4267  0944  3420               	retlw	32	;' '
  4268  0945  3420               	retlw	32	;' '
  4269  0946  3420               	retlw	32	;' '
  4270  0947  3469               	retlw	105	;'i'
  4271  0948  346E               	retlw	110	;'n'
  4272  0949  3420               	retlw	32	;' '
  4273  094A  346D               	retlw	109	;'m'
  4274  094B  3441               	retlw	65	;'A'
  4275  094C  343A               	retlw	58	;':'
  4276  094D  3400               	retlw	0
  4277                           
  4278                           	psect	stringtext8
  4279  2076                     __pstringtext8:	
  4280  2076                     STR_4:	
  4281  2076  3444               	retlw	68	;'D'
  4282  2077  3441               	retlw	65	;'A'
  4283  2078  3443               	retlw	67	;'C'
  4284  2079  3420               	retlw	32	;' '
  4285  207A  346F               	retlw	111	;'o'
  4286  207B  3475               	retlw	117	;'u'
  4287  207C  3474               	retlw	116	;'t'
  4288  207D  3420               	retlw	32	;' '
  4289  207E  3420               	retlw	32	;' '
  4290  207F  3420               	retlw	32	;' '
  4291  2080  3420               	retlw	32	;' '
  4292  2081  3420               	retlw	32	;' '
  4293  2082  3420               	retlw	32	;' '
  4294  2083  3420               	retlw	32	;' '
  4295  2084  3456               	retlw	86	;'V'
  4296  2085  343A               	retlw	58	;':'
  4297  2086  3400               	retlw	0
  4298                           
  4299                           	psect	stringtext9
  4300  2087                     __pstringtext9:	
  4301  2087                     STR_1:	
  4302  2087  3425               	retlw	37	;'%'
  4303  2088  342E               	retlw	46	;'.'
  4304  2089  3432               	retlw	50	;'2'
  4305  208A  3466               	retlw	102	;'f'
  4306  208B  3400               	retlw	0
  4307                           
  4308                           	psect	stringtext10
  4309  0000                     __pstringtext10:	
  4310  2087                     
  4311                           ; #config settings
  4312  0000                     
  4313                           	psect	cinit
  4314  0017                     start_initialization:	
  4315  0017                     __initialization:	
  4316                           
  4317                           ; Initialize objects allocated to COMMON
  4318  0017  3190  2000  3180   	fcall	__pidataCOMMON	;fetch initializer
  4319  001A  00FC               	movwf	__pdataCOMMON& (0+127)
  4320                           
  4321                           ; Initialize objects allocated to BANK0
  4322  001B  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  4323  001E  00E9               	movwf	__pdataBANK0& (0+127)
  4324  001F  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  4325  0022  00EA               	movwf	(__pdataBANK0+1)& (0+127)
  4326                           
  4327                           ; Initialize objects allocated to BANK1
  4328  0023  308C               	movlw	low __pidataBANK1
  4329  0024  0084               	movwf	4
  4330  0025  309B               	movlw	(high __pidataBANK1)| (0+128)
  4331  0026  0085               	movwf	5
  4332  0027  30A0               	movlw	low __pdataBANK1
  4333  0028  0086               	movwf	6
  4334  0029  3000               	movlw	high __pdataBANK1
  4335  002A  0087               	movwf	7
  4336  002B  3023               	movlw	35
  4337  002C  319A  2292  3180   	fcall	init_ram
  4338                           
  4339                           ; Initialize objects allocated to BANK2
  4340  002F  3018               	movlw	low __pidataBANK2
  4341  0030  0084               	movwf	4
  4342  0031  309B               	movlw	(high __pidataBANK2)| (0+128)
  4343  0032  0085               	movwf	5
  4344  0033  3020               	movlw	low __pdataBANK2
  4345  0034  0086               	movwf	6
  4346  0035  3001               	movlw	high __pdataBANK2
  4347  0036  0087               	movwf	7
  4348  0037  3019               	movlw	25
  4349  0038  319A  2292         	fcall	init_ram
  4350                           
  4351                           ; Clear objects allocated to BANK1
  4352  003A  0021               	movlb	1	; select bank1
  4353  003B  01E0               	clrf	__pbssBANK1& (0+127)
  4354  003C  01E1               	clrf	(__pbssBANK1+1)& (0+127)
  4355  003D  01E2               	clrf	(__pbssBANK1+2)& (0+127)
  4356  003E  01E3               	clrf	(__pbssBANK1+3)& (0+127)
  4357  003F  01E4               	clrf	(__pbssBANK1+4)& (0+127)
  4358  0040  01E5               	clrf	(__pbssBANK1+5)& (0+127)
  4359  0041  01E6               	clrf	(__pbssBANK1+6)& (0+127)
  4360  0042  01E7               	clrf	(__pbssBANK1+7)& (0+127)
  4361  0043  01E8               	clrf	(__pbssBANK1+8)& (0+127)
  4362  0044  01E9               	clrf	(__pbssBANK1+9)& (0+127)
  4363  0045  01EA               	clrf	(__pbssBANK1+10)& (0+127)
  4364  0046                     end_of_initialization:	
  4365                           ;End of C runtime variable initialization code
  4366                           
  4367  0046                     __end_of__initialization:	
  4368  0046  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4369  0047  0020               	movlb	0
  4370  0048  3196  2E5C         	ljmp	_main	;jump to C main() function
  4371                           
  4372                           	psect	dataCOMMON
  4373  007C                     __pdataCOMMON:	
  4374  007C                     _Key:	
  4375  007C                     	ds	1
  4376                           
  4377                           	psect	dataBANK0
  4378  0069                     __pdataBANK0:	
  4379  0069                     _count:	
  4380  0069                     	ds	2
  4381                           
  4382                           	psect	bssBANK1
  4383  00E0                     __pbssBANK1:	
  4384  00E0                     _current:	
  4385  00E0                     	ds	3
  4386  00E3                     _ADC_InterruptHandler:	
  4387  00E3                     	ds	2
  4388  00E5                     _previousStateCLK:	
  4389  00E5                     	ds	2
  4390  00E7                     _currentStateCLK:	
  4391  00E7                     	ds	2
  4392  00E9                     _dac_out:	
  4393  00E9                     	ds	2
  4394                           
  4395                           	psect	dataBANK1
  4396  00A0                     __pdataBANK1:	
  4397  00A0                     _UPDOWN:	
  4398  00A0                     	ds	17
  4399  00B1                     _print_line:	
  4400  00B1                     	ds	1
  4401  00B2                     _naif:	
  4402  00B2                     	ds	17
  4403                           
  4404                           	psect	dataBANK2
  4405  0120                     __pdataBANK2:	
  4406  0120                     _hello:	
  4407  0120                     	ds	25
  4408                           
  4409                           	psect	inittext
  4410  1A92                     init_ram:	
  4411  1A92  00FE               	movwf	126
  4412  1A93                     initloop:	
  4413  1A93  0012               	moviw fsr0++
  4414  1A94  001E               	movwi fsr1++
  4415  1A95  0BFE               	decfsz	126,f
  4416  1A96  2A93               	goto	initloop
  4417  1A97  3400               	retlw	0
  4418                           
  4419                           	psect	cstackBANK1
  4420  00C3                     __pcstackBANK1:	
  4421  00C3                     _sprintf$921:	
  4422                           
  4423                           ; 3 bytes @ 0x0
  4424  00C3                     	ds	3
  4425  00C6                     sprintf@ap:	
  4426                           
  4427                           ; 1 bytes @ 0x3
  4428  00C6                     	ds	1
  4429  00C7                     sprintf@flag:	
  4430                           
  4431                           ; 2 bytes @ 0x4
  4432  00C7                     	ds	2
  4433  00C9                     sprintf@val:	
  4434                           
  4435                           ; 4 bytes @ 0x6
  4436  00C9                     	ds	4
  4437  00CD                     sprintf@exp:	
  4438                           
  4439                           ; 2 bytes @ 0xA
  4440  00CD                     	ds	2
  4441  00CF                     sprintf@tmpval:	
  4442                           
  4443                           ; 4 bytes @ 0xC
  4444  00CF                     	ds	4
  4445  00D3                     sprintf@sp:	
  4446                           
  4447                           ; 1 bytes @ 0x10
  4448  00D3                     	ds	1
  4449  00D4                     sprintf@prec:	
  4450                           
  4451                           ; 2 bytes @ 0x11
  4452  00D4                     	ds	2
  4453  00D6                     sprintf@fval:	
  4454                           
  4455                           ; 3 bytes @ 0x13
  4456  00D6                     	ds	3
  4457  00D9                     sprintf@c:	
  4458                           
  4459                           ; 1 bytes @ 0x16
  4460  00D9                     	ds	1
  4461  00DA                     _main$916:	
  4462                           
  4463                           ; 3 bytes @ 0x17
  4464  00DA                     	ds	3
  4465  00DD                     _main$917:	
  4466                           
  4467                           ; 3 bytes @ 0x1A
  4468  00DD                     	ds	3
  4469                           
  4470                           	psect	cstackCOMMON
  4471  0070                     __pcstackCOMMON:	
  4472  0070                     ?_isdigit:	
  4473  0070                     ?_LCD_WriteCommand:	
  4474                           ; 1 bit 
  4475                           
  4476  0070                     ?_ADC_Initialize:	
  4477                           ; 1 bytes @ 0x0
  4478                           
  4479  0070                     ?_switch_press_scan:	
  4480                           ; 1 bytes @ 0x0
  4481                           
  4482  0070                     ?_DAC_CONFIG:	
  4483                           ; 1 bytes @ 0x0
  4484                           
  4485  0070                     ?_OSCILLATOR_Initialize:	
  4486                           ; 1 bytes @ 0x0
  4487                           
  4488  0070                     ?_LCD_Init:	
  4489                           ; 1 bytes @ 0x0
  4490                           
  4491  0070                     ?_LCD_WriteByte:	
  4492                           ; 1 bytes @ 0x0
  4493                           
  4494  0070                     ?_LCD_WriteData:	
  4495                           ; 1 bytes @ 0x0
  4496                           
  4497  0070                     ?_LCD_EnableGraphics:	
  4498                           ; 1 bytes @ 0x0
  4499                           
  4500  0070                     ?_LCD_DisableGraphics:	
  4501                           ; 1 bytes @ 0x0
  4502                           
  4503  0070                     ?_LCD_ClearGraphics:	
  4504                           ; 1 bytes @ 0x0
  4505                           
  4506  0070                     ?_keypad_scanner:	
  4507                           ; 1 bytes @ 0x0
  4508                           
  4509  0070                     ?_InitKeypad:	
  4510                           ; 1 bytes @ 0x0
  4511                           
  4512  0070                     ?_OP_AMP_init:	
  4513                           ; 1 bytes @ 0x0
  4514                           
  4515  0070                     ?_isr:	
  4516                           ; 1 bytes @ 0x0
  4517                           
  4518  0070                     ??_isr:	
  4519                           ; 1 bytes @ 0x0
  4520                           
  4521  0070                     ?_main:	
  4522                           ; 1 bytes @ 0x0
  4523                           
  4524                           
  4525                           ; 1 bytes @ 0x0
  4526  0070                     	ds	1
  4527  0071                     ?___ftge:	
  4528  0071                     ??_ADC_Initialize:	
  4529                           ; 1 bit 
  4530                           
  4531  0071                     ??_isdigit:	
  4532                           ; 1 bytes @ 0x1
  4533                           
  4534  0071                     ??_DAC_CONFIG:	
  4535                           ; 1 bytes @ 0x1
  4536                           
  4537  0071                     ?_DAC5_Load10bitInputData:	
  4538                           ; 1 bytes @ 0x1
  4539                           
  4540  0071                     ??_OSCILLATOR_Initialize:	
  4541                           ; 1 bytes @ 0x1
  4542                           
  4543  0071                     ??_LCD_WriteByte:	
  4544                           ; 1 bytes @ 0x1
  4545                           
  4546  0071                     ??_keypad_scanner:	
  4547                           ; 1 bytes @ 0x1
  4548                           
  4549  0071                     ??_InitKeypad:	
  4550                           ; 1 bytes @ 0x1
  4551                           
  4552  0071                     ??_OP_AMP_init:	
  4553                           ; 1 bytes @ 0x1
  4554                           
  4555  0071                     ?_ADC_GetConversion:	
  4556                           ; 1 bytes @ 0x1
  4557                           
  4558  0071                     ?___awmod:	
  4559                           ; 2 bytes @ 0x1
  4560                           
  4561  0071                     ?___ftpack:	
  4562                           ; 2 bytes @ 0x1
  4563                           
  4564  0071                     ?___ftneg:	
  4565                           ; 3 bytes @ 0x1
  4566                           
  4567  0071                     ?__tdiv_to_l_:	
  4568                           ; 3 bytes @ 0x1
  4569                           
  4570  0071                     ?__div_to_l_:	
  4571                           ; 4 bytes @ 0x1
  4572                           
  4573  0071                     ?___lldiv:	
  4574                           ; 4 bytes @ 0x1
  4575                           
  4576  0071                     ?___llmod:	
  4577                           ; 4 bytes @ 0x1
  4578                           
  4579  0071                     _isdigit$696:	
  4580                           ; 4 bytes @ 0x1
  4581                           
  4582  0071                     DAC5_Load10bitInputData@input16BitData:	
  4583                           ; 1 bytes @ 0x1
  4584                           
  4585  0071                     ___awmod@divisor:	
  4586                           ; 2 bytes @ 0x1
  4587                           
  4588  0071                     __div_to_l_@f1:	
  4589                           ; 2 bytes @ 0x1
  4590                           
  4591  0071                     ___ftpack@arg:	
  4592                           ; 3 bytes @ 0x1
  4593                           
  4594  0071                     __tdiv_to_l_@f1:	
  4595                           ; 3 bytes @ 0x1
  4596                           
  4597  0071                     ___ftge@ff1:	
  4598                           ; 3 bytes @ 0x1
  4599                           
  4600  0071                     ___ftneg@f1:	
  4601                           ; 3 bytes @ 0x1
  4602                           
  4603  0071                     ___lldiv@divisor:	
  4604                           ; 3 bytes @ 0x1
  4605                           
  4606  0071                     ___llmod@divisor:	
  4607                           ; 4 bytes @ 0x1
  4608                           
  4609                           
  4610                           ; 4 bytes @ 0x1
  4611  0071                     	ds	1
  4612  0072                     isdigit@c:	
  4613                           
  4614                           ; 1 bytes @ 0x2
  4615  0072                     	ds	1
  4616  0073                     ??_ADC_GetConversion:	
  4617  0073                     ??_switch_press_scan:	
  4618                           ; 1 bytes @ 0x3
  4619                           
  4620  0073                     ??_DAC5_Load10bitInputData:	
  4621                           ; 1 bytes @ 0x3
  4622                           
  4623  0073                     LCD_WriteByte@command:	
  4624                           ; 1 bytes @ 0x3
  4625                           
  4626  0073                     ___awmod@dividend:	
  4627                           ; 1 bytes @ 0x3
  4628                           
  4629                           
  4630                           ; 2 bytes @ 0x3
  4631  0073                     	ds	1
  4632  0074                     ??_LCD_WriteCommand:	
  4633  0074                     ??_LCD_WriteData:	
  4634                           ; 1 bytes @ 0x4
  4635                           
  4636  0074                     ??___ftneg:	
  4637                           ; 1 bytes @ 0x4
  4638                           
  4639  0074                     LCD_WriteData@data:	
  4640                           ; 1 bytes @ 0x4
  4641                           
  4642  0074                     LCD_WriteCommand@command:	
  4643                           ; 1 bytes @ 0x4
  4644                           
  4645  0074                     switch_press_scan@key:	
  4646                           ; 1 bytes @ 0x4
  4647                           
  4648  0074                     ADC_GetConversion@channel:	
  4649                           ; 1 bytes @ 0x4
  4650                           
  4651  0074                     ___ftpack@exp:	
  4652                           ; 1 bytes @ 0x4
  4653                           
  4654  0074                     __div_to_l_@f2:	
  4655                           ; 1 bytes @ 0x4
  4656                           
  4657  0074                     __tdiv_to_l_@f2:	
  4658                           ; 3 bytes @ 0x4
  4659                           
  4660  0074                     ___ftge@ff2:	
  4661                           ; 3 bytes @ 0x4
  4662                           
  4663                           
  4664                           ; 3 bytes @ 0x4
  4665  0074                     	ds	1
  4666  0075                     ??_LCD_Init:	
  4667  0075                     ?_LCD_TextDisplayString:	
  4668                           ; 1 bytes @ 0x5
  4669                           
  4670  0075                     ??_LCD_EnableGraphics:	
  4671                           ; 1 bytes @ 0x5
  4672                           
  4673  0075                     ??_LCD_DisableGraphics:	
  4674                           ; 1 bytes @ 0x5
  4675                           
  4676  0075                     ?_LCD_FillScreenGraphics:	
  4677                           ; 1 bytes @ 0x5
  4678                           
  4679  0075                     ??_LCD_ClearGraphics:	
  4680                           ; 1 bytes @ 0x5
  4681                           
  4682  0075                     ??___awmod:	
  4683                           ; 1 bytes @ 0x5
  4684                           
  4685  0075                     ___ftpack@sign:	
  4686                           ; 1 bytes @ 0x5
  4687                           
  4688  0075                     LCD_TextDisplayString@string:	
  4689                           ; 1 bytes @ 0x5
  4690                           
  4691  0075                     LCD_FillScreenGraphics@graphic:	
  4692                           ; 2 bytes @ 0x5
  4693                           
  4694  0075                     ___lldiv@dividend:	
  4695                           ; 2 bytes @ 0x5
  4696                           
  4697  0075                     ___llmod@dividend:	
  4698                           ; 4 bytes @ 0x5
  4699                           
  4700                           
  4701                           ; 4 bytes @ 0x5
  4702  0075                     	ds	1
  4703  0076                     ??___ftpack:	
  4704  0076                     LCD_ClearGraphics@x:	
  4705                           ; 1 bytes @ 0x6
  4706                           
  4707  0076                     ___awmod@counter:	
  4708                           ; 1 bytes @ 0x6
  4709                           
  4710                           
  4711                           ; 1 bytes @ 0x6
  4712  0076                     	ds	1
  4713  0077                     ??__tdiv_to_l_:	
  4714  0077                     ??_LCD_TextDisplayString:	
  4715                           ; 1 bytes @ 0x7
  4716                           
  4717  0077                     ??___ftge:	
  4718                           ; 1 bytes @ 0x7
  4719                           
  4720  0077                     LCD_FillScreenGraphics@y:	
  4721                           ; 1 bytes @ 0x7
  4722                           
  4723  0077                     LCD_ClearGraphics@y:	
  4724                           ; 1 bytes @ 0x7
  4725                           
  4726  0077                     ___awmod@sign:	
  4727                           ; 1 bytes @ 0x7
  4728                           
  4729                           
  4730                           ; 1 bytes @ 0x7
  4731  0077                     	ds	1
  4732  0078                     ?___awdiv:	
  4733  0078                     LCD_TextDisplayString@addr:	
  4734                           ; 2 bytes @ 0x8
  4735                           
  4736  0078                     LCD_FillScreenGraphics@x:	
  4737                           ; 1 bytes @ 0x8
  4738                           
  4739  0078                     ___awdiv@divisor:	
  4740                           ; 1 bytes @ 0x8
  4741                           
  4742                           
  4743                           ; 2 bytes @ 0x8
  4744  0078                     	ds	1
  4745  0079                     ??___lldiv:	
  4746  0079                     ??___llmod:	
  4747                           ; 1 bytes @ 0x9
  4748                           
  4749  0079                     ??___lltoft:	
  4750                           ; 1 bytes @ 0x9
  4751                           
  4752  0079                     ?___awtoft:	
  4753                           ; 1 bytes @ 0x9
  4754                           
  4755  0079                     ?___lwtoft:	
  4756                           ; 3 bytes @ 0x9
  4757                           
  4758  0079                     LCD_TextDisplayString@i:	
  4759                           ; 3 bytes @ 0x9
  4760                           
  4761  0079                     ___awtoft@c:	
  4762                           ; 1 bytes @ 0x9
  4763                           
  4764  0079                     ___lwtoft@c:	
  4765                           ; 2 bytes @ 0x9
  4766                           
  4767                           
  4768                           ; 2 bytes @ 0x9
  4769  0079                     	ds	1
  4770  007A                     LCD_TextDisplayString@line:	
  4771  007A                     ___llmod@counter:	
  4772                           ; 1 bytes @ 0xA
  4773                           
  4774  007A                     ___lltoft@exp:	
  4775                           ; 1 bytes @ 0xA
  4776                           
  4777  007A                     ___awdiv@dividend:	
  4778                           ; 1 bytes @ 0xA
  4779                           
  4780                           
  4781                           ; 2 bytes @ 0xA
  4782  007A                     	ds	2
  4783  007C                     ??___wmul:	
  4784  007C                     ??___ftsub:	
  4785                           ; 1 bytes @ 0xC
  4786                           
  4787                           
  4788                           	psect	cstackBANK0
  4789  0020                     __pcstackBANK0:	
  4790                           ; 1 bytes @ 0xC
  4791                           
  4792  0020                     ??__div_to_l_:	
  4793  0020                     ??_LCD_FillScreenGraphics:	
  4794                           ; 1 bytes @ 0x0
  4795                           
  4796  0020                     ??___awdiv:	
  4797                           ; 1 bytes @ 0x0
  4798                           
  4799  0020                     ??___awtoft:	
  4800                           ; 1 bytes @ 0x0
  4801                           
  4802  0020                     ??___lwtoft:	
  4803                           ; 1 bytes @ 0x0
  4804                           
  4805  0020                     ?___lltoft:	
  4806                           ; 1 bytes @ 0x0
  4807                           
  4808  0020                     __tdiv_to_l_@quot:	
  4809                           ; 3 bytes @ 0x0
  4810                           
  4811  0020                     ___lldiv@quotient:	
  4812                           ; 4 bytes @ 0x0
  4813                           
  4814  0020                     ___lltoft@c:	
  4815                           ; 4 bytes @ 0x0
  4816                           
  4817                           
  4818                           ; 4 bytes @ 0x0
  4819  0020                     	ds	1
  4820  0021                     ___awdiv@counter:	
  4821                           
  4822                           ; 1 bytes @ 0x1
  4823  0021                     	ds	1
  4824  0022                     ___awdiv@sign:	
  4825  0022                     ___awtoft@sign:	
  4826                           ; 1 bytes @ 0x2
  4827                           
  4828                           
  4829                           ; 1 bytes @ 0x2
  4830  0022                     	ds	1
  4831  0023                     ___awdiv@quotient:	
  4832                           
  4833                           ; 2 bytes @ 0x3
  4834  0023                     	ds	1
  4835  0024                     __tdiv_to_l_@cntr:	
  4836  0024                     ___lldiv@counter:	
  4837                           ; 1 bytes @ 0x4
  4838                           
  4839                           
  4840                           ; 1 bytes @ 0x4
  4841  0024                     	ds	1
  4842  0025                     ?___wmul:	
  4843  0025                     __tdiv_to_l_@exp1:	
  4844                           ; 2 bytes @ 0x5
  4845                           
  4846  0025                     ___wmul@multiplier:	
  4847                           ; 1 bytes @ 0x5
  4848                           
  4849                           
  4850                           ; 2 bytes @ 0x5
  4851  0025                     	ds	2
  4852  0027                     ___wmul@multiplicand:	
  4853                           
  4854                           ; 2 bytes @ 0x7
  4855  0027                     	ds	1
  4856  0028                     __div_to_l_@quot:	
  4857                           
  4858                           ; 4 bytes @ 0x8
  4859  0028                     	ds	1
  4860  0029                     ___wmul@product:	
  4861                           
  4862                           ; 2 bytes @ 0x9
  4863  0029                     	ds	2
  4864  002B                     ?___ftmul:	
  4865  002B                     ___ftmul@f1:	
  4866                           ; 3 bytes @ 0xB
  4867                           
  4868                           
  4869                           ; 3 bytes @ 0xB
  4870  002B                     	ds	1
  4871  002C                     __div_to_l_@cntr:	
  4872                           
  4873                           ; 1 bytes @ 0xC
  4874  002C                     	ds	1
  4875  002D                     __div_to_l_@exp1:	
  4876                           
  4877                           ; 1 bytes @ 0xD
  4878  002D                     	ds	1
  4879  002E                     ___ftmul@f2:	
  4880                           
  4881                           ; 3 bytes @ 0xE
  4882  002E                     	ds	3
  4883  0031                     ??___ftmul:	
  4884                           
  4885                           ; 1 bytes @ 0x11
  4886  0031                     	ds	4
  4887  0035                     ___ftmul@exp:	
  4888                           
  4889                           ; 1 bytes @ 0x15
  4890  0035                     	ds	1
  4891  0036                     ___ftmul@f3_as_product:	
  4892                           
  4893                           ; 3 bytes @ 0x16
  4894  0036                     	ds	3
  4895  0039                     ___ftmul@cntr:	
  4896                           
  4897                           ; 1 bytes @ 0x19
  4898  0039                     	ds	1
  4899  003A                     ___ftmul@sign:	
  4900                           
  4901                           ; 1 bytes @ 0x1A
  4902  003A                     	ds	1
  4903  003B                     ?_fround:	
  4904  003B                     ?_scale:	
  4905                           ; 3 bytes @ 0x1B
  4906                           
  4907                           
  4908                           ; 3 bytes @ 0x1B
  4909  003B                     	ds	3
  4910  003E                     ??_fround:	
  4911  003E                     ??_scale:	
  4912                           ; 1 bytes @ 0x1E
  4913                           
  4914                           
  4915                           ; 1 bytes @ 0x1E
  4916  003E                     	ds	2
  4917  0040                     _scale$920:	
  4918                           
  4919                           ; 3 bytes @ 0x20
  4920  0040                     	ds	2
  4921  0042                     _fround$919:	
  4922                           
  4923                           ; 3 bytes @ 0x22
  4924  0042                     	ds	1
  4925  0043                     scale@scl:	
  4926                           
  4927                           ; 1 bytes @ 0x23
  4928  0043                     	ds	1
  4929  0044                     ?___fttol:	
  4930  0044                     ___fttol@f1:	
  4931                           ; 4 bytes @ 0x24
  4932                           
  4933                           
  4934                           ; 3 bytes @ 0x24
  4935  0044                     	ds	1
  4936  0045                     _fround$918:	
  4937                           
  4938                           ; 3 bytes @ 0x25
  4939  0045                     	ds	3
  4940  0048                     ??___fttol:	
  4941  0048                     fround@prec:	
  4942                           ; 1 bytes @ 0x28
  4943                           
  4944                           
  4945                           ; 1 bytes @ 0x28
  4946  0048                     	ds	1
  4947  0049                     ?___ftadd:	
  4948  0049                     ___ftadd@f1:	
  4949                           ; 3 bytes @ 0x29
  4950                           
  4951                           
  4952                           ; 3 bytes @ 0x29
  4953  0049                     	ds	3
  4954  004C                     ___fttol@sign1:	
  4955  004C                     ___ftadd@f2:	
  4956                           ; 1 bytes @ 0x2C
  4957                           
  4958                           
  4959                           ; 3 bytes @ 0x2C
  4960  004C                     	ds	1
  4961  004D                     ___fttol@lval:	
  4962                           
  4963                           ; 4 bytes @ 0x2D
  4964  004D                     	ds	2
  4965  004F                     ??___ftadd:	
  4966                           
  4967                           ; 1 bytes @ 0x2F
  4968  004F                     	ds	2
  4969  0051                     ___fttol@exp1:	
  4970                           
  4971                           ; 1 bytes @ 0x31
  4972  0051                     	ds	2
  4973  0053                     ___ftadd@sign:	
  4974                           
  4975                           ; 1 bytes @ 0x33
  4976  0053                     	ds	1
  4977  0054                     ___ftadd@exp2:	
  4978                           
  4979                           ; 1 bytes @ 0x34
  4980  0054                     	ds	1
  4981  0055                     ___ftadd@exp1:	
  4982                           
  4983                           ; 1 bytes @ 0x35
  4984  0055                     	ds	1
  4985  0056                     ?___ftsub:	
  4986  0056                     ___ftsub@f2:	
  4987                           ; 3 bytes @ 0x36
  4988                           
  4989                           
  4990                           ; 3 bytes @ 0x36
  4991  0056                     	ds	3
  4992  0059                     ___ftsub@f1:	
  4993                           
  4994                           ; 3 bytes @ 0x39
  4995  0059                     	ds	3
  4996  005C                     ?_sprintf:	
  4997  005C                     sprintf@f:	
  4998                           ; 2 bytes @ 0x3C
  4999                           
  5000                           
  5001                           ; 2 bytes @ 0x3C
  5002  005C                     	ds	5
  5003  0061                     ??_sprintf:	
  5004                           
  5005                           ; 1 bytes @ 0x41
  5006  0061                     	ds	6
  5007  0067                     ??_main:	
  5008                           
  5009                           ; 1 bytes @ 0x47
  5010  0067                     	ds	2
  5011                           
  5012                           	psect	maintext
  5013  165C                     __pmaintext:	
  5014 ;;
  5015 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5016 ;;
  5017 ;; *************** function _main *****************
  5018 ;; Defined at:
  5019 ;;		line 126 in file "LOAD20210.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;		None
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;		None
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      void 
  5026 ;; Registers used:
  5027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : B1F/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5034 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5036 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5037 ;;Total ram usage:        8 bytes
  5038 ;; Hardware stack levels required when called:    5
  5039 ;; This function calls:
  5040 ;;		_ADC_GetConversion
  5041 ;;		_ADC_Initialize
  5042 ;;		_DAC5_Load10bitInputData
  5043 ;;		_DAC_CONFIG
  5044 ;;		_InitKeypad
  5045 ;;		_LCD_ClearGraphics
  5046 ;;		_LCD_DisableGraphics
  5047 ;;		_LCD_EnableGraphics
  5048 ;;		_LCD_FillScreenGraphics
  5049 ;;		_LCD_Init
  5050 ;;		_LCD_TextDisplayString
  5051 ;;		_OP_AMP_init
  5052 ;;		_OSCILLATOR_Initialize
  5053 ;;		___awtoft
  5054 ;;		___ftadd
  5055 ;;		___ftmul
  5056 ;;		___lwtoft
  5057 ;;		_sprintf
  5058 ;;		_switch_press_scan
  5059 ;; This function is called by:
  5060 ;;		Startup code after reset
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function _main
  5066  165C                     _main:	
  5067                           
  5068                           ;LOAD20210.c: 129: OSCILLATOR_Initialize();
  5069                           
  5070                           ;incstack = 0
  5071                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5072  165C  319A  22A6  3196   	fcall	_OSCILLATOR_Initialize
  5073                           
  5074                           ;LOAD20210.c: 131: DAC_CONFIG();
  5075  165F  319A  22B5  3196   	fcall	_DAC_CONFIG
  5076                           
  5077                           ;LOAD20210.c: 132: OP_AMP_init();
  5078  1662  319A  22BD  3196   	fcall	_OP_AMP_init
  5079                           
  5080                           ;LOAD20210.c: 134: TRISC = 0xBF;
  5081  1665  30BF               	movlw	191
  5082  1666  0021               	movlb	1	; select bank1
  5083  1667  008E               	movwf	14	;volatile
  5084                           
  5085                           ;LOAD20210.c: 135: ANSELC = 0xFC;
  5086  1668  30FC               	movlw	252
  5087  1669  0023               	movlb	3	; select bank3
  5088  166A  008E               	movwf	14	;volatile
  5089                           
  5090                           ;LOAD20210.c: 136: WPUC = 0x00;
  5091  166B  0024               	movlb	4	; select bank4
  5092  166C  018E               	clrf	14	;volatile
  5093                           
  5094                           ;LOAD20210.c: 137: ODCONC = 0x00;
  5095  166D  0025               	movlb	5	; select bank5
  5096  166E  018E               	clrf	14	;volatile
  5097                           
  5098                           ;LOAD20210.c: 138: SLRCONC = 0xFF;
  5099  166F  30FF               	movlw	255
  5100  1670  0026               	movlb	6	; select bank6
  5101  1671  008E               	movwf	14	;volatile
  5102                           
  5103                           ;LOAD20210.c: 139: INLVLC = 0xFF;
  5104  1672  30FF               	movlw	255
  5105  1673  0027               	movlb	7	; select bank7
  5106  1674  008E               	movwf	14	;volatile
  5107                           
  5108                           ;LOAD20210.c: 142: TRISA=0b00001011;
  5109  1675  300B               	movlw	11
  5110  1676  0021               	movlb	1	; select bank1
  5111  1677  008C               	movwf	12	;volatile
  5112                           
  5113                           ;LOAD20210.c: 143: ANSELA=0;
  5114  1678  0023               	movlb	3	; select bank3
  5115  1679  018C               	clrf	12	;volatile
  5116                           
  5117                           ;LOAD20210.c: 144: INLVLA=0;
  5118  167A  0027               	movlb	7	; select bank7
  5119  167B  018C               	clrf	12	;volatile
  5120                           
  5121                           ;LOAD20210.c: 146: ADC_Initialize();
  5122  167C  319A  22CD  3196   	fcall	_ADC_Initialize
  5123                           
  5124                           ;LOAD20210.c: 150: TRISB=0;
  5125  167F  0021               	movlb	1	; select bank1
  5126  1680  018D               	clrf	13	;volatile
  5127                           
  5128                           ;LOAD20210.c: 151: ANSELB=0;
  5129  1681  0023               	movlb	3	; select bank3
  5130  1682  018D               	clrf	13	;volatile
  5131                           
  5132                           ;LOAD20210.c: 152: ODCONB=0;
  5133  1683  0025               	movlb	5	; select bank5
  5134  1684  018D               	clrf	13	;volatile
  5135                           
  5136                           ;LOAD20210.c: 153: SLRCONB=0;
  5137  1685  0026               	movlb	6	; select bank6
  5138  1686  018D               	clrf	13	;volatile
  5139                           
  5140                           ;LOAD20210.c: 156: InitKeypad();
  5141  1687  318D  254E  3196   	fcall	_InitKeypad
  5142                           
  5143                           ;LOAD20210.c: 158: LCD_Init( );
  5144  168A  319D  25CE  3196   	fcall	_LCD_Init
  5145                           
  5146                           ;LOAD20210.c: 159: LCD_EnableGraphics();
  5147  168D  319B  23AF  3196   	fcall	_LCD_EnableGraphics
  5148                           
  5149                           ;LOAD20210.c: 160: LCD_ClearGraphics();
  5150  1690  319B  23FF  3196   	fcall	_LCD_ClearGraphics
  5151                           
  5152                           ;LOAD20210.c: 161: LCD_FillScreenGraphics(des);
  5153  1693  303D               	movlw	low (_des| (0+32768))
  5154  1694  00F5               	movwf	LCD_FillScreenGraphics@graphic
  5155  1695  3085               	movlw	high (_des| (0+32768))
  5156  1696  00F6               	movwf	LCD_FillScreenGraphics@graphic+1
  5157  1697  3190  20CB  3196   	fcall	_LCD_FillScreenGraphics
  5158                           
  5159                           ;LOAD20210.c: 162: _delay((unsigned long)((1000)*(16000000/4000.0)));
  5160  169A  3015               	movlw	21
  5161  169B  0020               	movlb	0	; select bank0
  5162  169C  00E8               	movwf	??_main+1
  5163  169D  304B               	movlw	75
  5164  169E  00E7               	movwf	??_main
  5165  169F  30BE               	movlw	190
  5166  16A0                     u7717:	
  5167  16A0  0B89               	decfsz	9,f
  5168  16A1  2EA0               	goto	u7717
  5169  16A2  0BE7               	decfsz	??_main,f
  5170  16A3  2EA0               	goto	u7717
  5171  16A4  0BE8               	decfsz	??_main+1,f
  5172  16A5  2EA0               	goto	u7717
  5173  16A6  0000               	nop
  5174                           
  5175                           ;LOAD20210.c: 163: LCD_ClearGraphics();
  5176  16A7  319B  23FF  3196   	fcall	_LCD_ClearGraphics
  5177                           
  5178                           ;LOAD20210.c: 164: LCD_DisableGraphics();
  5179  16AA  319A  22D6  3196   	fcall	_LCD_DisableGraphics
  5180                           
  5181                           ;LOAD20210.c: 167: previousStateCLK = PORTAbits.RA1;
  5182  16AD  0020               	movlb	0	; select bank0
  5183  16AE  0C0C               	rrf	12,w	;volatile
  5184  16AF  3901               	andlw	1
  5185  16B0  00E7               	movwf	??_main
  5186  16B1  01E8               	clrf	??_main+1
  5187  16B2  0867               	movf	??_main,w
  5188  16B3  0021               	movlb	1	; select bank1
  5189  16B4  00E5               	movwf	_previousStateCLK^(0+128)
  5190  16B5  0020               	movlb	0	; select bank0
  5191  16B6  0868               	movf	??_main+1,w
  5192  16B7  0021               	movlb	1	; select bank1
  5193  16B8  00E6               	movwf	(_previousStateCLK+1)^(0+128)
  5194  16B9                     l4788:	
  5195                           ;LOAD20210.c: 171: while(1)
  5196                           
  5197                           
  5198                           ;LOAD20210.c: 172: {
  5199                           ;LOAD20210.c: 173: current= (ADC_GetConversion(channel_AN5)* 0.004882812);
  5200  16B9  3000               	movlw	0
  5201  16BA  0020               	movlb	0	; select bank0
  5202  16BB  00AB               	movwf	___ftmul@f1
  5203  16BC  30A0               	movlw	160
  5204  16BD  00AC               	movwf	___ftmul@f1+1
  5205  16BE  303B               	movlw	59
  5206  16BF  00AD               	movwf	___ftmul@f1+2
  5207  16C0  3005               	movlw	5
  5208  16C1  319A  22FF  3196   	fcall	_ADC_GetConversion
  5209  16C4  0872               	movf	?_ADC_GetConversion+1,w
  5210  16C5  00FA               	movwf	___lwtoft@c+1
  5211  16C6  0871               	movf	?_ADC_GetConversion,w
  5212  16C7  00F9               	movwf	___lwtoft@c
  5213  16C8  3190  2001  3196   	fcall	___lwtoft
  5214  16CB  0879               	movf	?___lwtoft,w
  5215  16CC  0020               	movlb	0	; select bank0
  5216  16CD  00AE               	movwf	___ftmul@f2
  5217  16CE  087A               	movf	?___lwtoft+1,w
  5218  16CF  00AF               	movwf	___ftmul@f2+1
  5219  16D0  087B               	movf	?___lwtoft+2,w
  5220  16D1  00B0               	movwf	___ftmul@f2+2
  5221  16D2  319F  274C  3196   	fcall	___ftmul
  5222  16D5  0020               	movlb	0	; select bank0
  5223  16D6  082B               	movf	?___ftmul,w
  5224  16D7  0021               	movlb	1	; select bank1
  5225  16D8  00E0               	movwf	_current^(0+128)
  5226  16D9  0020               	movlb	0	; select bank0
  5227  16DA  082C               	movf	?___ftmul+1,w
  5228  16DB  0021               	movlb	1	; select bank1
  5229  16DC  00E1               	movwf	(_current+1)^(0+128)
  5230  16DD  0020               	movlb	0	; select bank0
  5231  16DE  082D               	movf	?___ftmul+2,w
  5232  16DF  0021               	movlb	1	; select bank1
  5233  16E0  00E2               	movwf	(_current+2)^(0+128)
  5234                           
  5235                           ;LOAD20210.c: 177: naif[3]=' ';
  5236  16E1  3020               	movlw	32
  5237  16E2  0020               	movlb	0	; select bank0
  5238  16E3  00E7               	movwf	??_main
  5239  16E4  0867               	movf	??_main,w
  5240  16E5  0021               	movlb	1	; select bank1
  5241  16E6  00B5               	movwf	(_naif^(0+128)+3)
  5242                           
  5243                           ;LOAD20210.c: 181: sprintf(naif,"%.2f", (current-0.11));
  5244  16E7  3048               	movlw	72
  5245  16E8  0020               	movlb	0	; select bank0
  5246  16E9  00C9               	movwf	___ftadd@f1
  5247  16EA  30E1               	movlw	225
  5248  16EB  00CA               	movwf	___ftadd@f1+1
  5249  16EC  30BD               	movlw	189
  5250  16ED  00CB               	movwf	___ftadd@f1+2
  5251  16EE  0021               	movlb	1	; select bank1
  5252  16EF  0860               	movf	_current^(0+128),w
  5253  16F0  0020               	movlb	0	; select bank0
  5254  16F1  00CC               	movwf	___ftadd@f2
  5255  16F2  0021               	movlb	1	; select bank1
  5256  16F3  0861               	movf	(_current+1)^(0+128),w
  5257  16F4  0020               	movlb	0	; select bank0
  5258  16F5  00CD               	movwf	___ftadd@f2+1
  5259  16F6  0021               	movlb	1	; select bank1
  5260  16F7  0862               	movf	(_current+2)^(0+128),w
  5261  16F8  0020               	movlb	0	; select bank0
  5262  16F9  00CE               	movwf	___ftadd@f2+2
  5263  16FA  3191  219C  3196   	fcall	___ftadd
  5264  16FD  0020               	movlb	0	; select bank0
  5265  16FE  0849               	movf	?___ftadd,w
  5266  16FF  0021               	movlb	1	; select bank1
  5267  1700  00DA               	movwf	_main$916^(0+128)
  5268  1701  0020               	movlb	0	; select bank0
  5269  1702  084A               	movf	?___ftadd+1,w
  5270  1703  0021               	movlb	1	; select bank1
  5271  1704  00DB               	movwf	(_main$916+1)^(0+128)
  5272  1705  0020               	movlb	0	; select bank0
  5273  1706  084B               	movf	?___ftadd+2,w
  5274  1707  0021               	movlb	1	; select bank1
  5275  1708  00DC               	movwf	(_main$916+2)^(0+128)
  5276                           
  5277                           ;LOAD20210.c: 181: sprintf(naif,"%.2f", (current-0.11));
  5278  1709  3087               	movlw	low (STR_1| (0+32768))
  5279  170A  0020               	movlb	0	; select bank0
  5280  170B  00DC               	movwf	sprintf@f
  5281  170C  30A0               	movlw	high (STR_1| (0+32768))
  5282  170D  00DD               	movwf	sprintf@f+1
  5283  170E  0021               	movlb	1	; select bank1
  5284  170F  085A               	movf	_main$916^(0+128),w
  5285  1710  0020               	movlb	0	; select bank0
  5286  1711  00DE               	movwf	?_sprintf+2
  5287  1712  0021               	movlb	1	; select bank1
  5288  1713  085B               	movf	(_main$916+1)^(0+128),w
  5289  1714  0020               	movlb	0	; select bank0
  5290  1715  00DF               	movwf	?_sprintf+3
  5291  1716  0021               	movlb	1	; select bank1
  5292  1717  085C               	movf	(_main$916+2)^(0+128),w
  5293  1718  0020               	movlb	0	; select bank0
  5294  1719  00E0               	movwf	?_sprintf+4
  5295  171A  30B2               	movlw	(low (_naif| 0))& (0+255)
  5296  171B  3180  204A  3196   	fcall	_sprintf
  5297                           
  5298                           ;LOAD20210.c: 183: LCD_TextDisplayString( 3, "Current   in mA:");
  5299  171E  303D               	movlw	low (STR_2| (0+32768))
  5300  171F  00F5               	movwf	LCD_TextDisplayString@string
  5301  1720  3089               	movlw	high (STR_2| (0+32768))
  5302  1721  00F6               	movwf	LCD_TextDisplayString@string+1
  5303  1722  3003               	movlw	3
  5304  1723  319C  2433  3196   	fcall	_LCD_TextDisplayString
  5305                           
  5306                           ;LOAD20210.c: 184: LCD_TextDisplayString( 4, naif);
  5307  1726  30B2               	movlw	low _naif
  5308  1727  00F5               	movwf	LCD_TextDisplayString@string
  5309  1728  3000               	movlw	high _naif
  5310  1729  00F6               	movwf	LCD_TextDisplayString@string+1
  5311  172A  3004               	movlw	4
  5312  172B  319C  2433  3196   	fcall	_LCD_TextDisplayString
  5313                           
  5314                           ;LOAD20210.c: 188: if(PORTAbits.RA3==0)
  5315  172E  0020               	movlb	0	; select bank0
  5316  172F  198C               	btfsc	12,3	;volatile
  5317  1730  2F35               	goto	l4804
  5318                           
  5319                           ;LOAD20210.c: 189: {
  5320                           ;LOAD20210.c: 190: count =520;
  5321  1731  3008               	movlw	8
  5322  1732  00E9               	movwf	_count
  5323  1733  3002               	movlw	2
  5324  1734  00EA               	movwf	_count+1
  5325  1735                     l4804:	
  5326                           
  5327                           ;LOAD20210.c: 193: }
  5328                           ;LOAD20210.c: 195: if (PORTAbits.RA1 == 0)
  5329  1735  188C               	btfsc	12,1	;volatile
  5330  1736  2F7A               	goto	l296
  5331                           
  5332                           ;LOAD20210.c: 196: {
  5333                           ;LOAD20210.c: 197: _delay((unsigned long)((10)*(16000000/4000.0)));
  5334  1737  3034               	movlw	52
  5335  1738  0020               	movlb	0	; select bank0
  5336  1739  00E7               	movwf	??_main
  5337  173A  30F1               	movlw	241
  5338  173B                     u7727:	
  5339  173B  0B89               	decfsz	9,f
  5340  173C  2F3B               	goto	u7727
  5341  173D  0BE7               	decfsz	??_main,f
  5342  173E  2F3B               	goto	u7727
  5343  173F  3200               	nop2
  5344                           
  5345                           ;LOAD20210.c: 198: currentStateCLK = PORTAbits.RA1;
  5346  1740  0020               	movlb	0	; select bank0
  5347  1741  0C0C               	rrf	12,w	;volatile
  5348  1742  3901               	andlw	1
  5349  1743  00E7               	movwf	??_main
  5350  1744  01E8               	clrf	??_main+1
  5351  1745  0867               	movf	??_main,w
  5352  1746  0021               	movlb	1	; select bank1
  5353  1747  00E7               	movwf	_currentStateCLK^(0+128)
  5354  1748  0020               	movlb	0	; select bank0
  5355  1749  0868               	movf	??_main+1,w
  5356  174A  0021               	movlb	1	; select bank1
  5357  174B  00E8               	movwf	(_currentStateCLK+1)^(0+128)
  5358                           
  5359                           ;LOAD20210.c: 203: if (PORTAbits.RA0 != currentStateCLK) {
  5360  174C  0020               	movlb	0	; select bank0
  5361  174D  080C               	movf	12,w	;volatile
  5362  174E  3901               	andlw	1
  5363  174F  00E7               	movwf	??_main
  5364  1750  01E8               	clrf	??_main+1
  5365  1751  0021               	movlb	1	; select bank1
  5366  1752  0868               	movf	(_currentStateCLK+1)^(0+128),w
  5367  1753  0020               	movlb	0	; select bank0
  5368  1754  0668               	xorwf	??_main+1,w
  5369  1755  1D03               	skipz
  5370  1756  2F5B               	goto	u7665
  5371  1757  0021               	movlb	1	; select bank1
  5372  1758  0867               	movf	_currentStateCLK^(0+128),w
  5373  1759  0020               	movlb	0	; select bank0
  5374  175A  0667               	xorwf	??_main,w
  5375  175B                     u7665:	
  5376  175B  1903               	skipnz
  5377  175C  2F71               	goto	l4816
  5378                           
  5379                           ;LOAD20210.c: 204: count --;
  5380  175D  30FF               	movlw	255
  5381  175E  07E9               	addwf	_count,f
  5382  175F  30FF               	movlw	255
  5383  1760  3DEA               	addwfc	_count+1,f
  5384                           
  5385                           ;LOAD20210.c: 205: if (count <520)
  5386  1761  086A               	movf	_count+1,w
  5387  1762  3A80               	xorlw	128
  5388  1763  00E7               	movwf	??_main
  5389  1764  3082               	movlw	130
  5390  1765  0267               	subwf	??_main,w
  5391  1766  3008               	movlw	8
  5392  1767  1903               	btfsc	3,2
  5393  1768  0269               	subwf	_count,w
  5394  1769  1803               	skipnc
  5395  176A  2F75               	goto	l299
  5396                           
  5397                           ;LOAD20210.c: 206: {
  5398                           ;LOAD20210.c: 207: count =520;
  5399  176B  3008               	movlw	8
  5400  176C  0020               	movlb	0	; select bank0
  5401  176D  00E9               	movwf	_count
  5402  176E  3002               	movlw	2
  5403  176F  00EA               	movwf	_count+1
  5404                           
  5405                           ;LOAD20210.c: 208: }
  5406                           ;LOAD20210.c: 211: } else {
  5407  1770  2F75               	goto	l299
  5408  1771                     l4816:	
  5409                           
  5410                           ;LOAD20210.c: 213: count ++;
  5411  1771  3001               	movlw	1
  5412  1772  07E9               	addwf	_count,f
  5413  1773  3000               	movlw	0
  5414  1774  3DEA               	addwfc	_count+1,f
  5415  1775                     l299:	
  5416                           
  5417                           ;LOAD20210.c: 217: }
  5418                           ;LOAD20210.c: 218: previousStateCLK = currentStateCLK;
  5419  1775  0021               	movlb	1	; select bank1
  5420  1776  0868               	movf	(_currentStateCLK+1)^(0+128),w
  5421  1777  00E6               	movwf	(_previousStateCLK+1)^(0+128)
  5422  1778  0867               	movf	_currentStateCLK^(0+128),w
  5423  1779  00E5               	movwf	_previousStateCLK^(0+128)
  5424  177A                     l296:	
  5425                           
  5426                           ;LOAD20210.c: 220: }
  5427                           ;LOAD20210.c: 223: naif[3]=' ';
  5428  177A  3020               	movlw	32
  5429  177B  0020               	movlb	0	; select bank0
  5430  177C  00E7               	movwf	??_main
  5431  177D  0867               	movf	??_main,w
  5432  177E  0021               	movlb	1	; select bank1
  5433  177F  00B5               	movwf	(_naif^(0+128)+3)
  5434                           
  5435                           ;LOAD20210.c: 224: sprintf(naif,"%.2f", (count*0.004882812) );
  5436  1780  3000               	movlw	0
  5437  1781  0020               	movlb	0	; select bank0
  5438  1782  00AB               	movwf	___ftmul@f1
  5439  1783  30A0               	movlw	160
  5440  1784  00AC               	movwf	___ftmul@f1+1
  5441  1785  303B               	movlw	59
  5442  1786  00AD               	movwf	___ftmul@f1+2
  5443  1787  086A               	movf	_count+1,w
  5444  1788  00FA               	movwf	___awtoft@c+1
  5445  1789  0869               	movf	_count,w
  5446  178A  00F9               	movwf	___awtoft@c
  5447  178B  319B  236B  3196   	fcall	___awtoft
  5448  178E  0879               	movf	?___awtoft,w
  5449  178F  0020               	movlb	0	; select bank0
  5450  1790  00AE               	movwf	___ftmul@f2
  5451  1791  087A               	movf	?___awtoft+1,w
  5452  1792  00AF               	movwf	___ftmul@f2+1
  5453  1793  087B               	movf	?___awtoft+2,w
  5454  1794  00B0               	movwf	___ftmul@f2+2
  5455  1795  319F  274C  3196   	fcall	___ftmul
  5456  1798  0020               	movlb	0	; select bank0
  5457  1799  082B               	movf	?___ftmul,w
  5458  179A  0021               	movlb	1	; select bank1
  5459  179B  00DD               	movwf	_main$917^(0+128)
  5460  179C  0020               	movlb	0	; select bank0
  5461  179D  082C               	movf	?___ftmul+1,w
  5462  179E  0021               	movlb	1	; select bank1
  5463  179F  00DE               	movwf	(_main$917+1)^(0+128)
  5464  17A0  0020               	movlb	0	; select bank0
  5465  17A1  082D               	movf	?___ftmul+2,w
  5466  17A2  0021               	movlb	1	; select bank1
  5467  17A3  00DF               	movwf	(_main$917+2)^(0+128)
  5468                           
  5469                           ;LOAD20210.c: 224: sprintf(naif,"%.2f", (count*0.004882812) );
  5470  17A4  3087               	movlw	low (STR_1| (0+32768))
  5471  17A5  0020               	movlb	0	; select bank0
  5472  17A6  00DC               	movwf	sprintf@f
  5473  17A7  30A0               	movlw	high (STR_1| (0+32768))
  5474  17A8  00DD               	movwf	sprintf@f+1
  5475  17A9  0021               	movlb	1	; select bank1
  5476  17AA  085D               	movf	_main$917^(0+128),w
  5477  17AB  0020               	movlb	0	; select bank0
  5478  17AC  00DE               	movwf	?_sprintf+2
  5479  17AD  0021               	movlb	1	; select bank1
  5480  17AE  085E               	movf	(_main$917+1)^(0+128),w
  5481  17AF  0020               	movlb	0	; select bank0
  5482  17B0  00DF               	movwf	?_sprintf+3
  5483  17B1  0021               	movlb	1	; select bank1
  5484  17B2  085F               	movf	(_main$917+2)^(0+128),w
  5485  17B3  0020               	movlb	0	; select bank0
  5486  17B4  00E0               	movwf	?_sprintf+4
  5487  17B5  30B2               	movlw	(low (_naif| 0))& (0+255)
  5488  17B6  3180  204A  3196   	fcall	_sprintf
  5489                           
  5490                           ;LOAD20210.c: 225: LCD_TextDisplayString( 1, "DAC out       V:");
  5491  17B9  3076               	movlw	low (STR_4| (0+32768))
  5492  17BA  00F5               	movwf	LCD_TextDisplayString@string
  5493  17BB  30A0               	movlw	high (STR_4| (0+32768))
  5494  17BC  00F6               	movwf	LCD_TextDisplayString@string+1
  5495  17BD  3001               	movlw	1
  5496  17BE  319C  2433  3196   	fcall	_LCD_TextDisplayString
  5497                           
  5498                           ;LOAD20210.c: 226: LCD_TextDisplayString( 2, naif);
  5499  17C1  30B2               	movlw	low _naif
  5500  17C2  00F5               	movwf	LCD_TextDisplayString@string
  5501  17C3  3000               	movlw	high _naif
  5502  17C4  00F6               	movwf	LCD_TextDisplayString@string+1
  5503  17C5  3002               	movlw	2
  5504  17C6  319C  2433  3196   	fcall	_LCD_TextDisplayString
  5505                           
  5506                           ;LOAD20210.c: 230: UPDOWN[1]=switch_press_scan();
  5507  17C9  319A  22F1  3196   	fcall	_switch_press_scan
  5508  17CC  0020               	movlb	0	; select bank0
  5509  17CD  00E7               	movwf	??_main
  5510  17CE  0867               	movf	??_main,w
  5511  17CF  0021               	movlb	1	; select bank1
  5512  17D0  00A1               	movwf	(_UPDOWN^(0+128)+1)
  5513                           
  5514                           ;LOAD20210.c: 235: DAC5_Load10bitInputData(count*64);
  5515  17D1  0020               	movlb	0	; select bank0
  5516  17D2  086A               	movf	_count+1,w
  5517  17D3  00E8               	movwf	??_main+1
  5518  17D4  0869               	movf	_count,w
  5519  17D5  00E7               	movwf	??_main
  5520  17D6  3006               	movlw	6
  5521  17D7                     u7685:	
  5522  17D7  35E7               	lslf	??_main,f
  5523  17D8  0DE8               	rlf	??_main+1,f
  5524  17D9  0B89               	decfsz	9,f
  5525  17DA  2FD7               	goto	u7685
  5526  17DB  0867               	movf	??_main,w
  5527  17DC  00F1               	movwf	DAC5_Load10bitInputData@input16BitData
  5528  17DD  0868               	movf	??_main+1,w
  5529  17DE  00F2               	movwf	DAC5_Load10bitInputData@input16BitData+1
  5530  17DF  319A  22AD  3196   	fcall	_DAC5_Load10bitInputData
  5531                           
  5532                           ;LOAD20210.c: 240: if ( UPDOWN[1] == 'A')
  5533  17E2  3041               	movlw	65
  5534  17E3  0021               	movlb	1	; select bank1
  5535  17E4  0621               	xorwf	(_UPDOWN^(0+128)+1),w
  5536  17E5  1D03               	btfss	3,2
  5537  17E6  2FF1               	goto	l4834
  5538                           
  5539                           ;LOAD20210.c: 241: {
  5540                           ;LOAD20210.c: 242: count++;
  5541  17E7  3001               	movlw	1
  5542  17E8  0020               	movlb	0	; select bank0
  5543  17E9  07E9               	addwf	_count,f
  5544  17EA  3000               	movlw	0
  5545  17EB  3DEA               	addwfc	_count+1,f
  5546                           
  5547                           ;LOAD20210.c: 243: UPDOWN[1]=' ';
  5548  17EC  3020               	movlw	32
  5549  17ED  00E7               	movwf	??_main
  5550  17EE  0867               	movf	??_main,w
  5551  17EF  0021               	movlb	1	; select bank1
  5552  17F0  00A1               	movwf	(_UPDOWN^(0+128)+1)
  5553  17F1                     l4834:	
  5554                           
  5555                           ;LOAD20210.c: 244: }
  5556                           ;LOAD20210.c: 245: if (UPDOWN[1] == 'B')
  5557  17F1  3042               	movlw	66
  5558  17F2  0621               	xorwf	(_UPDOWN^(0+128)+1),w
  5559  17F3  1D03               	btfss	3,2
  5560  17F4  2EB9               	goto	l4788
  5561                           
  5562                           ;LOAD20210.c: 246: {
  5563                           ;LOAD20210.c: 247: count--;
  5564  17F5  30FF               	movlw	255
  5565  17F6  0020               	movlb	0	; select bank0
  5566  17F7  07E9               	addwf	_count,f
  5567  17F8  30FF               	movlw	255
  5568  17F9  3DEA               	addwfc	_count+1,f
  5569                           
  5570                           ;LOAD20210.c: 248: UPDOWN[1]=' ';
  5571  17FA  3020               	movlw	32
  5572  17FB  00E7               	movwf	??_main
  5573  17FC  0867               	movf	??_main,w
  5574  17FD  0021               	movlb	1	; select bank1
  5575  17FE  00A1               	movwf	(_UPDOWN^(0+128)+1)
  5576  17FF  2EB9               	goto	l4788
  5577  1800                     __end_of_main:	
  5578                           
  5579                           	psect	text1
  5580  1AF1                     __ptext1:	
  5581 ;; *************** function _switch_press_scan *****************
  5582 ;; Defined at:
  5583 ;;		line 267 in file "LOAD20210.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;		None
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  key             1    4[COMMON] unsigned char 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  1    wreg      unsigned char 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0, pclath, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5601 ;;Total ram usage:        2 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    2
  5604 ;; This function calls:
  5605 ;;		_keypad_scanner
  5606 ;; This function is called by:
  5607 ;;		_main
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           
  5612                           ;psect for function _switch_press_scan
  5613  1AF1                     _switch_press_scan:	
  5614                           
  5615                           ;LOAD20210.c: 269: char key = 'n';
  5616                           
  5617                           ;incstack = 0
  5618                           ; Regs used in _switch_press_scan: [wreg+status,2+status,0+pclath+cstack]
  5619  1AF1  306E               	movlw	110
  5620  1AF2                     L1:	
  5621  1AF2  00F3               	movwf	??_switch_press_scan
  5622  1AF3  0873               	movf	??_switch_press_scan,w
  5623  1AF4  00F4               	movwf	switch_press_scan@key
  5624  1AF5  306E               	movlw	110
  5625  1AF6  0674               	xorwf	switch_press_scan@key,w
  5626  1AF7  1D03               	btfss	3,2
  5627  1AF8  2AFD               	goto	l4626
  5628                           
  5629                           ;LOAD20210.c: 271: key = keypad_scanner();
  5630                           
  5631                           ;LOAD20210.c: 270: while(key=='n')
  5632  1AF9  3193  23AF  319A   	fcall	_keypad_scanner
  5633  1AFC  2AF2               	goto	L1
  5634  1AFD                     l4626:	
  5635                           
  5636                           ;LOAD20210.c: 272: return key;
  5637  1AFD  0874               	movf	switch_press_scan@key,w
  5638  1AFE  0008               	return
  5639  1AFF                     __end_of_switch_press_scan:	
  5640                           
  5641                           	psect	text2
  5642  13AF                     __ptext2:	
  5643 ;; *************** function _keypad_scanner *****************
  5644 ;; Defined at:
  5645 ;;		line 55 in file "LOAD20210.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;		None
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      unsigned char 
  5652 ;; Registers used:
  5653 ;;		wreg
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5661 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5663 ;;Total ram usage:        2 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    1
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_switch_press_scan
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           
  5674                           ;psect for function _keypad_scanner
  5675  13AF                     _keypad_scanner:	
  5676                           
  5677                           ;LOAD20210.c: 57: LATDbits.LATD0 = 0; LATDbits.LATD1 = 1; LATDbits.LATD2 = 1; LATDbits.L
      +                          ATD3 = 1;
  5678                           
  5679                           ;incstack = 0
  5680                           ; Regs used in _keypad_scanner: [wreg]
  5681  13AF  0022               	movlb	2	; select bank2
  5682  13B0  100F               	bcf	15,0	;volatile
  5683  13B1  148F               	bsf	15,1	;volatile
  5684  13B2  150F               	bsf	15,2	;volatile
  5685  13B3  158F               	bsf	15,3	;volatile
  5686                           
  5687                           ;LOAD20210.c: 58: if (PORTDbits.RD4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD4==0); return '1'; }
  5688  13B4  0020               	movlb	0	; select bank0
  5689  13B5  1A0F               	btfsc	15,4	;volatile
  5690  13B6  2BC8               	goto	l210
  5691  13B7  3003               	movlw	3
  5692  13B8  00F2               	movwf	??_keypad_scanner+1
  5693  13B9  3008               	movlw	8
  5694  13BA  00F1               	movwf	??_keypad_scanner
  5695  13BB  3077               	movlw	119
  5696  13BC                     u7737:	
  5697  13BC  0B89               	decfsz	9,f
  5698  13BD  2BBC               	goto	u7737
  5699  13BE  0BF1               	decfsz	??_keypad_scanner,f
  5700  13BF  2BBC               	goto	u7737
  5701  13C0  0BF2               	decfsz	??_keypad_scanner+1,f
  5702  13C1  2BBC               	goto	u7737
  5703  13C2  0000               	nop
  5704  13C3                     l211:	
  5705  13C3  0020               	movlb	0	; select bank0
  5706  13C4  1E0F               	btfss	15,4	;volatile
  5707  13C5  2BC3               	goto	l211
  5708  13C6  3031               	movlw	49
  5709  13C7  0008               	return
  5710  13C8                     l210:	
  5711                           
  5712                           ;LOAD20210.c: 59: if (PORTDbits.RD5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD5==0); return '2'; }
  5713  13C8  1A8F               	btfsc	15,5	;volatile
  5714  13C9  2BDB               	goto	l215
  5715  13CA  3003               	movlw	3
  5716  13CB  00F2               	movwf	??_keypad_scanner+1
  5717  13CC  3008               	movlw	8
  5718  13CD  00F1               	movwf	??_keypad_scanner
  5719  13CE  3077               	movlw	119
  5720  13CF                     u7747:	
  5721  13CF  0B89               	decfsz	9,f
  5722  13D0  2BCF               	goto	u7747
  5723  13D1  0BF1               	decfsz	??_keypad_scanner,f
  5724  13D2  2BCF               	goto	u7747
  5725  13D3  0BF2               	decfsz	??_keypad_scanner+1,f
  5726  13D4  2BCF               	goto	u7747
  5727  13D5  0000               	nop
  5728  13D6                     l216:	
  5729  13D6  0020               	movlb	0	; select bank0
  5730  13D7  1E8F               	btfss	15,5	;volatile
  5731  13D8  2BD6               	goto	l216
  5732  13D9  3032               	movlw	50
  5733  13DA  0008               	return
  5734  13DB                     l215:	
  5735                           
  5736                           ;LOAD20210.c: 60: if (PORTDbits.RD6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD6==0); return '3'; }
  5737  13DB  1B0F               	btfsc	15,6	;volatile
  5738  13DC  2BEE               	goto	l219
  5739  13DD  3003               	movlw	3
  5740  13DE  00F2               	movwf	??_keypad_scanner+1
  5741  13DF  3008               	movlw	8
  5742  13E0  00F1               	movwf	??_keypad_scanner
  5743  13E1  3077               	movlw	119
  5744  13E2                     u7757:	
  5745  13E2  0B89               	decfsz	9,f
  5746  13E3  2BE2               	goto	u7757
  5747  13E4  0BF1               	decfsz	??_keypad_scanner,f
  5748  13E5  2BE2               	goto	u7757
  5749  13E6  0BF2               	decfsz	??_keypad_scanner+1,f
  5750  13E7  2BE2               	goto	u7757
  5751  13E8  0000               	nop
  5752  13E9                     l220:	
  5753  13E9  0020               	movlb	0	; select bank0
  5754  13EA  1F0F               	btfss	15,6	;volatile
  5755  13EB  2BE9               	goto	l220
  5756  13EC  3033               	movlw	51
  5757  13ED  0008               	return
  5758  13EE                     l219:	
  5759                           
  5760                           ;LOAD20210.c: 61: if (PORTDbits.RD7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD7==0); return 'A'; }
  5761  13EE  1B8F               	btfsc	15,7	;volatile
  5762  13EF  2C01               	goto	l223
  5763  13F0  3003               	movlw	3
  5764  13F1  00F2               	movwf	??_keypad_scanner+1
  5765  13F2  3008               	movlw	8
  5766  13F3  00F1               	movwf	??_keypad_scanner
  5767  13F4  3077               	movlw	119
  5768  13F5                     u7767:	
  5769  13F5  0B89               	decfsz	9,f
  5770  13F6  2BF5               	goto	u7767
  5771  13F7  0BF1               	decfsz	??_keypad_scanner,f
  5772  13F8  2BF5               	goto	u7767
  5773  13F9  0BF2               	decfsz	??_keypad_scanner+1,f
  5774  13FA  2BF5               	goto	u7767
  5775  13FB  0000               	nop
  5776  13FC                     l224:	
  5777  13FC  0020               	movlb	0	; select bank0
  5778  13FD  1F8F               	btfss	15,7	;volatile
  5779  13FE  2BFC               	goto	l224
  5780  13FF  3041               	movlw	65
  5781  1400  0008               	return
  5782  1401                     l223:	
  5783                           
  5784                           ;LOAD20210.c: 63: LATDbits.LATD0 = 1; LATDbits.LATD1 = 0; LATDbits.LATD2 = 1; LATDbits.L
      +                          ATD3 = 1;
  5785  1401  0022               	movlb	2	; select bank2
  5786  1402  140F               	bsf	15,0	;volatile
  5787  1403  108F               	bcf	15,1	;volatile
  5788  1404  150F               	bsf	15,2	;volatile
  5789  1405  158F               	bsf	15,3	;volatile
  5790                           
  5791                           ;LOAD20210.c: 64: if (PORTDbits.RD4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD4==0); return '4'; }
  5792  1406  0020               	movlb	0	; select bank0
  5793  1407  1A0F               	btfsc	15,4	;volatile
  5794  1408  2C1A               	goto	l227
  5795  1409  3003               	movlw	3
  5796  140A  00F2               	movwf	??_keypad_scanner+1
  5797  140B  3008               	movlw	8
  5798  140C  00F1               	movwf	??_keypad_scanner
  5799  140D  3077               	movlw	119
  5800  140E                     u7777:	
  5801  140E  0B89               	decfsz	9,f
  5802  140F  2C0E               	goto	u7777
  5803  1410  0BF1               	decfsz	??_keypad_scanner,f
  5804  1411  2C0E               	goto	u7777
  5805  1412  0BF2               	decfsz	??_keypad_scanner+1,f
  5806  1413  2C0E               	goto	u7777
  5807  1414  0000               	nop
  5808  1415                     l228:	
  5809  1415  0020               	movlb	0	; select bank0
  5810  1416  1E0F               	btfss	15,4	;volatile
  5811  1417  2C15               	goto	l228
  5812  1418  3034               	movlw	52
  5813  1419  0008               	return
  5814  141A                     l227:	
  5815                           
  5816                           ;LOAD20210.c: 65: if (PORTDbits.RD5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD5==0); return '5'; }
  5817  141A  1A8F               	btfsc	15,5	;volatile
  5818  141B  2C2D               	goto	l231
  5819  141C  3003               	movlw	3
  5820  141D  00F2               	movwf	??_keypad_scanner+1
  5821  141E  3008               	movlw	8
  5822  141F  00F1               	movwf	??_keypad_scanner
  5823  1420  3077               	movlw	119
  5824  1421                     u7787:	
  5825  1421  0B89               	decfsz	9,f
  5826  1422  2C21               	goto	u7787
  5827  1423  0BF1               	decfsz	??_keypad_scanner,f
  5828  1424  2C21               	goto	u7787
  5829  1425  0BF2               	decfsz	??_keypad_scanner+1,f
  5830  1426  2C21               	goto	u7787
  5831  1427  0000               	nop
  5832  1428                     l232:	
  5833  1428  0020               	movlb	0	; select bank0
  5834  1429  1E8F               	btfss	15,5	;volatile
  5835  142A  2C28               	goto	l232
  5836  142B  3035               	movlw	53
  5837  142C  0008               	return
  5838  142D                     l231:	
  5839                           
  5840                           ;LOAD20210.c: 66: if (PORTDbits.RD6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD6==0); return '6'; }
  5841  142D  1B0F               	btfsc	15,6	;volatile
  5842  142E  2C40               	goto	l235
  5843  142F  3003               	movlw	3
  5844  1430  00F2               	movwf	??_keypad_scanner+1
  5845  1431  3008               	movlw	8
  5846  1432  00F1               	movwf	??_keypad_scanner
  5847  1433  3077               	movlw	119
  5848  1434                     u7797:	
  5849  1434  0B89               	decfsz	9,f
  5850  1435  2C34               	goto	u7797
  5851  1436  0BF1               	decfsz	??_keypad_scanner,f
  5852  1437  2C34               	goto	u7797
  5853  1438  0BF2               	decfsz	??_keypad_scanner+1,f
  5854  1439  2C34               	goto	u7797
  5855  143A  0000               	nop
  5856  143B                     l236:	
  5857  143B  0020               	movlb	0	; select bank0
  5858  143C  1F0F               	btfss	15,6	;volatile
  5859  143D  2C3B               	goto	l236
  5860  143E  3036               	movlw	54
  5861  143F  0008               	return
  5862  1440                     l235:	
  5863                           
  5864                           ;LOAD20210.c: 67: if (PORTDbits.RD7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD7==0); return 'B'; }
  5865  1440  1B8F               	btfsc	15,7	;volatile
  5866  1441  2C53               	goto	l239
  5867  1442  3003               	movlw	3
  5868  1443  00F2               	movwf	??_keypad_scanner+1
  5869  1444  3008               	movlw	8
  5870  1445  00F1               	movwf	??_keypad_scanner
  5871  1446  3077               	movlw	119
  5872  1447                     u7807:	
  5873  1447  0B89               	decfsz	9,f
  5874  1448  2C47               	goto	u7807
  5875  1449  0BF1               	decfsz	??_keypad_scanner,f
  5876  144A  2C47               	goto	u7807
  5877  144B  0BF2               	decfsz	??_keypad_scanner+1,f
  5878  144C  2C47               	goto	u7807
  5879  144D  0000               	nop
  5880  144E                     l240:	
  5881  144E  0020               	movlb	0	; select bank0
  5882  144F  1F8F               	btfss	15,7	;volatile
  5883  1450  2C4E               	goto	l240
  5884  1451  3042               	movlw	66
  5885  1452  0008               	return
  5886  1453                     l239:	
  5887                           
  5888                           ;LOAD20210.c: 69: LATDbits.LATD0 = 1; LATDbits.LATD1 = 1; LATDbits.LATD2 = 0; LATDbits.L
      +                          ATD3 = 1;
  5889  1453  0022               	movlb	2	; select bank2
  5890  1454  140F               	bsf	15,0	;volatile
  5891  1455  148F               	bsf	15,1	;volatile
  5892  1456  110F               	bcf	15,2	;volatile
  5893  1457  158F               	bsf	15,3	;volatile
  5894                           
  5895                           ;LOAD20210.c: 70: if (PORTDbits.RD4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD4==0); return '7'; }
  5896  1458  0020               	movlb	0	; select bank0
  5897  1459  1A0F               	btfsc	15,4	;volatile
  5898  145A  2C6C               	goto	l243
  5899  145B  3003               	movlw	3
  5900  145C  00F2               	movwf	??_keypad_scanner+1
  5901  145D  3008               	movlw	8
  5902  145E  00F1               	movwf	??_keypad_scanner
  5903  145F  3077               	movlw	119
  5904  1460                     u7817:	
  5905  1460  0B89               	decfsz	9,f
  5906  1461  2C60               	goto	u7817
  5907  1462  0BF1               	decfsz	??_keypad_scanner,f
  5908  1463  2C60               	goto	u7817
  5909  1464  0BF2               	decfsz	??_keypad_scanner+1,f
  5910  1465  2C60               	goto	u7817
  5911  1466  0000               	nop
  5912  1467                     l244:	
  5913  1467  0020               	movlb	0	; select bank0
  5914  1468  1E0F               	btfss	15,4	;volatile
  5915  1469  2C67               	goto	l244
  5916  146A  3037               	movlw	55
  5917  146B  0008               	return
  5918  146C                     l243:	
  5919                           
  5920                           ;LOAD20210.c: 71: if (PORTDbits.RD5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD5==0); return '8'; }
  5921  146C  1A8F               	btfsc	15,5	;volatile
  5922  146D  2C7F               	goto	l247
  5923  146E  3003               	movlw	3
  5924  146F  00F2               	movwf	??_keypad_scanner+1
  5925  1470  3008               	movlw	8
  5926  1471  00F1               	movwf	??_keypad_scanner
  5927  1472  3077               	movlw	119
  5928  1473                     u7827:	
  5929  1473  0B89               	decfsz	9,f
  5930  1474  2C73               	goto	u7827
  5931  1475  0BF1               	decfsz	??_keypad_scanner,f
  5932  1476  2C73               	goto	u7827
  5933  1477  0BF2               	decfsz	??_keypad_scanner+1,f
  5934  1478  2C73               	goto	u7827
  5935  1479  0000               	nop
  5936  147A                     l248:	
  5937  147A  0020               	movlb	0	; select bank0
  5938  147B  1E8F               	btfss	15,5	;volatile
  5939  147C  2C7A               	goto	l248
  5940  147D  3038               	movlw	56
  5941  147E  0008               	return
  5942  147F                     l247:	
  5943                           
  5944                           ;LOAD20210.c: 72: if (PORTDbits.RD6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD6==0); return '9'; }
  5945  147F  1B0F               	btfsc	15,6	;volatile
  5946  1480  2C92               	goto	l251
  5947  1481  3003               	movlw	3
  5948  1482  00F2               	movwf	??_keypad_scanner+1
  5949  1483  3008               	movlw	8
  5950  1484  00F1               	movwf	??_keypad_scanner
  5951  1485  3077               	movlw	119
  5952  1486                     u7837:	
  5953  1486  0B89               	decfsz	9,f
  5954  1487  2C86               	goto	u7837
  5955  1488  0BF1               	decfsz	??_keypad_scanner,f
  5956  1489  2C86               	goto	u7837
  5957  148A  0BF2               	decfsz	??_keypad_scanner+1,f
  5958  148B  2C86               	goto	u7837
  5959  148C  0000               	nop
  5960  148D                     l252:	
  5961  148D  0020               	movlb	0	; select bank0
  5962  148E  1F0F               	btfss	15,6	;volatile
  5963  148F  2C8D               	goto	l252
  5964  1490  3039               	movlw	57
  5965  1491  0008               	return
  5966  1492                     l251:	
  5967                           
  5968                           ;LOAD20210.c: 73: if (PORTDbits.RD7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD7==0); return 'C'; }
  5969  1492  1B8F               	btfsc	15,7	;volatile
  5970  1493  2CA5               	goto	l255
  5971  1494  3003               	movlw	3
  5972  1495  00F2               	movwf	??_keypad_scanner+1
  5973  1496  3008               	movlw	8
  5974  1497  00F1               	movwf	??_keypad_scanner
  5975  1498  3077               	movlw	119
  5976  1499                     u7847:	
  5977  1499  0B89               	decfsz	9,f
  5978  149A  2C99               	goto	u7847
  5979  149B  0BF1               	decfsz	??_keypad_scanner,f
  5980  149C  2C99               	goto	u7847
  5981  149D  0BF2               	decfsz	??_keypad_scanner+1,f
  5982  149E  2C99               	goto	u7847
  5983  149F  0000               	nop
  5984  14A0                     l256:	
  5985  14A0  0020               	movlb	0	; select bank0
  5986  14A1  1F8F               	btfss	15,7	;volatile
  5987  14A2  2CA0               	goto	l256
  5988  14A3  3043               	movlw	67
  5989  14A4  0008               	return
  5990  14A5                     l255:	
  5991                           
  5992                           ;LOAD20210.c: 75: LATDbits.LATD0 = 1; LATDbits.LATD1 = 1; LATDbits.LATD2 = 1; LATDbits.L
      +                          ATD3 = 0;
  5993  14A5  0022               	movlb	2	; select bank2
  5994  14A6  140F               	bsf	15,0	;volatile
  5995  14A7  148F               	bsf	15,1	;volatile
  5996  14A8  150F               	bsf	15,2	;volatile
  5997  14A9  118F               	bcf	15,3	;volatile
  5998                           
  5999                           ;LOAD20210.c: 76: if (PORTDbits.RD4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD4==0); return '*'; }
  6000  14AA  0020               	movlb	0	; select bank0
  6001  14AB  1A0F               	btfsc	15,4	;volatile
  6002  14AC  2CBE               	goto	l259
  6003  14AD  3003               	movlw	3
  6004  14AE  00F2               	movwf	??_keypad_scanner+1
  6005  14AF  3008               	movlw	8
  6006  14B0  00F1               	movwf	??_keypad_scanner
  6007  14B1  3077               	movlw	119
  6008  14B2                     u7857:	
  6009  14B2  0B89               	decfsz	9,f
  6010  14B3  2CB2               	goto	u7857
  6011  14B4  0BF1               	decfsz	??_keypad_scanner,f
  6012  14B5  2CB2               	goto	u7857
  6013  14B6  0BF2               	decfsz	??_keypad_scanner+1,f
  6014  14B7  2CB2               	goto	u7857
  6015  14B8  0000               	nop
  6016  14B9                     l260:	
  6017  14B9  0020               	movlb	0	; select bank0
  6018  14BA  1E0F               	btfss	15,4	;volatile
  6019  14BB  2CB9               	goto	l260
  6020  14BC  302A               	movlw	42
  6021  14BD  0008               	return
  6022  14BE                     l259:	
  6023                           
  6024                           ;LOAD20210.c: 77: if (PORTDbits.RD5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD5==0); return '0'; }
  6025  14BE  1A8F               	btfsc	15,5	;volatile
  6026  14BF  2CD1               	goto	l263
  6027  14C0  3003               	movlw	3
  6028  14C1  00F2               	movwf	??_keypad_scanner+1
  6029  14C2  3008               	movlw	8
  6030  14C3  00F1               	movwf	??_keypad_scanner
  6031  14C4  3077               	movlw	119
  6032  14C5                     u7867:	
  6033  14C5  0B89               	decfsz	9,f
  6034  14C6  2CC5               	goto	u7867
  6035  14C7  0BF1               	decfsz	??_keypad_scanner,f
  6036  14C8  2CC5               	goto	u7867
  6037  14C9  0BF2               	decfsz	??_keypad_scanner+1,f
  6038  14CA  2CC5               	goto	u7867
  6039  14CB  0000               	nop
  6040  14CC                     l264:	
  6041  14CC  0020               	movlb	0	; select bank0
  6042  14CD  1E8F               	btfss	15,5	;volatile
  6043  14CE  2CCC               	goto	l264
  6044  14CF  3030               	movlw	48
  6045  14D0  0008               	return
  6046  14D1                     l263:	
  6047                           
  6048                           ;LOAD20210.c: 78: if (PORTDbits.RD6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD6==0); return '#'; }
  6049  14D1  1B0F               	btfsc	15,6	;volatile
  6050  14D2  2CE4               	goto	l267
  6051  14D3  3003               	movlw	3
  6052  14D4  00F2               	movwf	??_keypad_scanner+1
  6053  14D5  3008               	movlw	8
  6054  14D6  00F1               	movwf	??_keypad_scanner
  6055  14D7  3077               	movlw	119
  6056  14D8                     u7877:	
  6057  14D8  0B89               	decfsz	9,f
  6058  14D9  2CD8               	goto	u7877
  6059  14DA  0BF1               	decfsz	??_keypad_scanner,f
  6060  14DB  2CD8               	goto	u7877
  6061  14DC  0BF2               	decfsz	??_keypad_scanner+1,f
  6062  14DD  2CD8               	goto	u7877
  6063  14DE  0000               	nop
  6064  14DF                     l268:	
  6065  14DF  0020               	movlb	0	; select bank0
  6066  14E0  1F0F               	btfss	15,6	;volatile
  6067  14E1  2CDF               	goto	l268
  6068  14E2  3023               	movlw	35
  6069  14E3  0008               	return
  6070  14E4                     l267:	
  6071                           
  6072                           ;LOAD20210.c: 79: if (PORTDbits.RD7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD7==0); return 'D'; }
  6073  14E4  1B8F               	btfsc	15,7	;volatile
  6074  14E5  0008               	return
  6075  14E6  3003               	movlw	3
  6076  14E7  00F2               	movwf	??_keypad_scanner+1
  6077  14E8  3008               	movlw	8
  6078  14E9  00F1               	movwf	??_keypad_scanner
  6079  14EA  3077               	movlw	119
  6080  14EB                     u7887:	
  6081  14EB  0B89               	decfsz	9,f
  6082  14EC  2CEB               	goto	u7887
  6083  14ED  0BF1               	decfsz	??_keypad_scanner,f
  6084  14EE  2CEB               	goto	u7887
  6085  14EF  0BF2               	decfsz	??_keypad_scanner+1,f
  6086  14F0  2CEB               	goto	u7887
  6087  14F1  0000               	nop
  6088  14F2                     l272:	
  6089  14F2  0020               	movlb	0	; select bank0
  6090  14F3  1F8F               	btfss	15,7	;volatile
  6091  14F4  2CF2               	goto	l272
  6092  14F5  3044               	movlw	68
  6093  14F6  0008               	return
  6094  14F7                     __end_of_keypad_scanner:	
  6095                           ;LOAD20210.c: 81: return ;
  6096                           
  6097                           
  6098                           	psect	text3
  6099  004A                     __ptext3:	
  6100 ;; *************** function _sprintf *****************
  6101 ;; Defined at:
  6102 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  sp              1    wreg     PTR unsigned char 
  6105 ;;		 -> naif(17), 
  6106 ;;  f               2   60[BANK0 ] PTR const unsigned char 
  6107 ;;		 -> STR_3(5), STR_1(5), 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  sp              1   16[BANK1 ] PTR unsigned char 
  6110 ;;		 -> naif(17), 
  6111 ;;  tmpval          4   12[BANK1 ] struct .
  6112 ;;  val             4    6[BANK1 ] unsigned long 
  6113 ;;  fval            3   19[BANK1 ] unsigned long 
  6114 ;;  prec            2   17[BANK1 ] int 
  6115 ;;  exp             2   10[BANK1 ] int 
  6116 ;;  flag            2    4[BANK1 ] unsigned short 
  6117 ;;  cp              2    0        PTR const unsigned char 
  6118 ;;  len             2    0        unsigned int 
  6119 ;;  width           2    0        int 
  6120 ;;  c               1   22[BANK1 ] char 
  6121 ;;  ap              1    3[BANK1 ] PTR void [1]
  6122 ;;		 -> ?_sprintf(2), 
  6123 ;;  d               1    0        unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  2   60[BANK0 ] int 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6133 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6134 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6135 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6136 ;;      Totals:         0      11      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6137 ;;Total ram usage:       34 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    4
  6140 ;; This function calls:
  6141 ;;		___awdiv
  6142 ;;		___ftadd
  6143 ;;		___ftge
  6144 ;;		___ftmul
  6145 ;;		___ftneg
  6146 ;;		___ftsub
  6147 ;;		___fttol
  6148 ;;		___lldiv
  6149 ;;		___llmod
  6150 ;;		___lltoft
  6151 ;;		___wmul
  6152 ;;		__div_to_l_
  6153 ;;		__tdiv_to_l_
  6154 ;;		_fround
  6155 ;;		_isdigit
  6156 ;;		_scale
  6157 ;; This function is called by:
  6158 ;;		_main
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           
  6163                           ;psect for function _sprintf
  6164  004A                     _sprintf:	
  6165                           
  6166                           ;incstack = 0
  6167                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6168                           ;sprintf@sp stored from wreg
  6169  004A  0021               	movlb	1	; select bank1
  6170  004B  00D3               	movwf	sprintf@sp^(0+128)
  6171                           
  6172                           ;doprnt.c: 494: va_list ap;
  6173                           ;doprnt.c: 499: signed char c;
  6174                           ;doprnt.c: 501: int width;
  6175                           ;doprnt.c: 504: int prec;
  6176                           ;doprnt.c: 508: unsigned short flag;
  6177                           ;doprnt.c: 515: char d;
  6178                           ;doprnt.c: 516: double fval;
  6179                           ;doprnt.c: 517: int exp;
  6180                           ;doprnt.c: 523: union {
  6181                           ;doprnt.c: 524: unsigned long vd;
  6182                           ;doprnt.c: 525: double integ;
  6183                           ;doprnt.c: 526: } tmpval;
  6184                           ;doprnt.c: 528: unsigned long val;
  6185                           ;doprnt.c: 529: unsigned len;
  6186                           ;doprnt.c: 530: const char * cp;
  6187                           ;doprnt.c: 533: *ap = __va_start();
  6188  004C  305E               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6189  004D  0020               	movlb	0	; select bank0
  6190  004E  00E1               	movwf	??_sprintf
  6191  004F  0861               	movf	??_sprintf,w
  6192  0050  0021               	movlb	1	; select bank1
  6193  0051  00C6               	movwf	sprintf@ap^(0+128)
  6194  0052                     l4614:	
  6195                           ;doprnt.c: 536: while(c = *f++) {
  6196                           
  6197  0052  0020               	movlb	0	; select bank0
  6198  0053  085D               	movf	sprintf@f+1,w
  6199  0054  00E2               	movwf	??_sprintf+1
  6200  0055  085C               	movf	sprintf@f,w
  6201  0056  00E1               	movwf	??_sprintf
  6202  0057  0ADC               	incf	sprintf@f,f
  6203  0058  1903               	skipnz
  6204  0059  0ADD               	incf	sprintf@f+1,f
  6205  005A  0861               	movf	??_sprintf,w
  6206  005B  0084               	movwf	4
  6207  005C  0862               	movf	??_sprintf+1,w
  6208  005D  0085               	movwf	5
  6209  005E  0800               	movf	0,w	;code access
  6210  005F  00E3               	movwf	??_sprintf+2
  6211  0060  0863               	movf	??_sprintf+2,w
  6212  0061  0021               	movlb	1	; select bank1
  6213  0062  00D9               	movwf	sprintf@c^(0+128)
  6214  0063  0859               	movf	sprintf@c^(0+128),w
  6215  0064  1903               	btfsc	3,2
  6216  0065  2D38               	goto	l4616
  6217                           
  6218                           ;doprnt.c: 538: if(c != '%')
  6219  0066  3025               	movlw	37
  6220  0067  0659               	xorwf	sprintf@c^(0+128),w
  6221  0068  1903               	btfsc	3,2
  6222  0069  286D               	goto	l4430
  6223                           
  6224                           ;doprnt.c: 540: {
  6225                           ;doprnt.c: 541: ((*sp++ = (c)));
  6226  006A  0859               	movf	sprintf@c^(0+128),w
  6227  006B  0020               	movlb	0	; select bank0
  6228  006C  2D2A               	goto	L6
  6229  006D                     l4430:	
  6230                           ;doprnt.c: 542: continue;
  6231                           
  6232                           
  6233                           ;doprnt.c: 543: }
  6234                           ;doprnt.c: 548: flag = 0;
  6235  006D  01C7               	clrf	sprintf@flag^(0+128)
  6236  006E  01C8               	clrf	(sprintf@flag+1)^(0+128)
  6237                           
  6238                           ;doprnt.c: 611: if(*f == '.') {
  6239  006F  0020               	movlb	0	; select bank0
  6240  0070  085C               	movf	sprintf@f,w
  6241  0071  0084               	movwf	4
  6242  0072  085D               	movf	sprintf@f+1,w
  6243  0073  0085               	movwf	5
  6244  0074  0012               	moviw fsr0++
  6245  0075  3A2E               	xorlw	46
  6246  0076  1D03               	btfss	3,2
  6247  0077  28BA               	goto	l4446
  6248                           
  6249                           ;doprnt.c: 612: flag |= 0x4000;
  6250  0078  0021               	movlb	1	; select bank1
  6251  0079  1748               	bsf	(sprintf@flag^(0+128)+1),6
  6252                           
  6253                           ;doprnt.c: 613: f++;
  6254  007A  3001               	movlw	1
  6255  007B  0020               	movlb	0	; select bank0
  6256  007C  07DC               	addwf	sprintf@f,f
  6257  007D  3000               	movlw	0
  6258  007E  3DDD               	addwfc	sprintf@f+1,f
  6259                           
  6260                           ;doprnt.c: 620: {
  6261                           ;doprnt.c: 621: prec = 0;
  6262  007F  0021               	movlb	1	; select bank1
  6263  0080  01D4               	clrf	sprintf@prec^(0+128)
  6264  0081  01D5               	clrf	(sprintf@prec+1)^(0+128)
  6265  0082                     l4444:	
  6266                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6267                           
  6268  0082  0020               	movlb	0	; select bank0
  6269  0083  085C               	movf	sprintf@f,w
  6270  0084  0084               	movwf	4
  6271  0085  085D               	movf	sprintf@f+1,w
  6272  0086  0085               	movwf	5
  6273  0087  0800               	movf	0,w	;code access
  6274  0088  319A  22E3  3180   	fcall	_isdigit
  6275  008B  1C03               	btfss	3,0
  6276  008C  28C1               	goto	l4452
  6277                           
  6278                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6279  008D  0020               	movlb	0	; select bank0
  6280  008E  085C               	movf	sprintf@f,w
  6281  008F  0084               	movwf	4
  6282  0090  085D               	movf	sprintf@f+1,w
  6283  0091  0085               	movwf	5
  6284  0092  0800               	movf	0,w	;code access
  6285  0093  00E1               	movwf	??_sprintf
  6286  0094  01E2               	clrf	??_sprintf+1
  6287  0095  0021               	movlb	1	; select bank1
  6288  0096  0855               	movf	(sprintf@prec+1)^(0+128),w
  6289  0097  0020               	movlb	0	; select bank0
  6290  0098  00A6               	movwf	___wmul@multiplier+1
  6291  0099  0021               	movlb	1	; select bank1
  6292  009A  0854               	movf	sprintf@prec^(0+128),w
  6293  009B  0020               	movlb	0	; select bank0
  6294  009C  00A5               	movwf	___wmul@multiplier
  6295  009D  300A               	movlw	10
  6296  009E  00A7               	movwf	___wmul@multiplicand
  6297  009F  3000               	movlw	0
  6298  00A0  00A8               	movwf	___wmul@multiplicand+1
  6299  00A1  319B  2331  3180   	fcall	___wmul
  6300  00A4  0020               	movlb	0	; select bank0
  6301  00A5  0861               	movf	??_sprintf,w
  6302  00A6  0725               	addwf	?___wmul,w
  6303  00A7  00E3               	movwf	??_sprintf+2
  6304  00A8  0862               	movf	??_sprintf+1,w
  6305  00A9  3D26               	addwfc	?___wmul+1,w
  6306  00AA  00E4               	movwf	??_sprintf+3
  6307  00AB  0863               	movf	??_sprintf+2,w
  6308  00AC  3ED0               	addlw	208
  6309  00AD  0021               	movlb	1	; select bank1
  6310  00AE  00D4               	movwf	sprintf@prec^(0+128)
  6311  00AF  30FF               	movlw	255
  6312  00B0  0020               	movlb	0	; select bank0
  6313  00B1  3D64               	addwfc	??_sprintf+3,w
  6314  00B2  0021               	movlb	1	; select bank1
  6315  00B3  00D5               	movwf	(sprintf@prec+1)^(0+128)
  6316  00B4  3001               	movlw	1
  6317  00B5  0020               	movlb	0	; select bank0
  6318  00B6  07DC               	addwf	sprintf@f,f
  6319  00B7  3000               	movlw	0
  6320  00B8  3DDD               	addwfc	sprintf@f+1,f
  6321  00B9  2882               	goto	l4444
  6322  00BA                     l4446:	
  6323                           ;doprnt.c: 624: }
  6324                           ;doprnt.c: 625: } else {
  6325                           
  6326                           
  6327                           ;doprnt.c: 626: prec = 0;
  6328  00BA  0021               	movlb	1	; select bank1
  6329  00BB  01D4               	clrf	sprintf@prec^(0+128)
  6330  00BC  01D5               	clrf	(sprintf@prec+1)^(0+128)
  6331                           
  6332                           ;doprnt.c: 628: flag |= 0x1000;
  6333  00BD  1648               	bsf	(sprintf@flag^(0+128)+1),4
  6334                           
  6335                           ;doprnt.c: 630: }
  6336                           ;doprnt.c: 635: switch(c = *f++) {
  6337  00BE  28C1               	goto	l4452
  6338  00BF                     l396:	
  6339                           ;doprnt.c: 662: case 'f':
  6340                           
  6341                           ;doprnt.c: 638: goto alldone;
  6342                           
  6343                           ;doprnt.c: 637: case 0:
  6344                           
  6345                           
  6346                           ;doprnt.c: 663: flag |= 0x400;
  6347  00BF  1548               	bsf	(sprintf@flag^(0+128)+1),2
  6348                           
  6349                           ;doprnt.c: 664: break;
  6350  00C0  28D7               	goto	l4454
  6351  00C1                     l4452:	
  6352                           ;doprnt.c: 822: }
  6353                           
  6354                           ;doprnt.c: 813: continue;
  6355                           
  6356                           ;doprnt.c: 802: default:
  6357                           
  6358  00C1  0020               	movlb	0	; select bank0
  6359  00C2  085D               	movf	sprintf@f+1,w
  6360  00C3  00E2               	movwf	??_sprintf+1
  6361  00C4  085C               	movf	sprintf@f,w
  6362  00C5  00E1               	movwf	??_sprintf
  6363  00C6  0ADC               	incf	sprintf@f,f
  6364  00C7  1903               	skipnz
  6365  00C8  0ADD               	incf	sprintf@f+1,f
  6366  00C9  0861               	movf	??_sprintf,w
  6367  00CA  0084               	movwf	4
  6368  00CB  0862               	movf	??_sprintf+1,w
  6369  00CC  0085               	movwf	5
  6370  00CD  0800               	movf	0,w	;code access
  6371  00CE  0021               	movlb	1	; select bank1
  6372  00CF  00D9               	movwf	sprintf@c^(0+128)
  6373                           
  6374                           ; Switch size 1, requested type "space"
  6375                           ; Number of cases is 2, Range of values is 0 to 102
  6376                           ; switch strategies available:
  6377                           ; Name         Instructions Cycles
  6378                           ; simple_byte            7     4 (average)
  6379                           ; direct_byte          212     6 (fixed)
  6380                           ; jumptable            260     6 (fixed)
  6381                           ;	Chosen strategy is simple_byte
  6382  00D0  3A00               	xorlw	0	; case 0
  6383  00D1  1903               	skipnz
  6384  00D2  2D38               	goto	l4616
  6385  00D3  3A66               	xorlw	102	; case 102
  6386  00D4  1903               	skipnz
  6387  00D5  28BF               	goto	l396
  6388  00D6  2852               	goto	l4614
  6389  00D7                     l4454:	
  6390                           
  6391                           ;doprnt.c: 825: if(flag & (0x700)) {
  6392  00D7  3000               	movlw	0
  6393  00D8  0547               	andwf	sprintf@flag^(0+128),w
  6394  00D9  0020               	movlb	0	; select bank0
  6395  00DA  00E1               	movwf	??_sprintf
  6396  00DB  3007               	movlw	7
  6397  00DC  0021               	movlb	1	; select bank1
  6398  00DD  0548               	andwf	(sprintf@flag+1)^(0+128),w
  6399  00DE  0020               	movlb	0	; select bank0
  6400  00DF  00E2               	movwf	??_sprintf+1
  6401  00E0  0861               	movf	??_sprintf,w
  6402  00E1  0462               	iorwf	??_sprintf+1,w
  6403  00E2  1903               	btfsc	3,2
  6404  00E3  2CD2               	goto	l4598
  6405                           
  6406                           ;doprnt.c: 827: if(flag & 0x1000)
  6407  00E4  0021               	movlb	1	; select bank1
  6408  00E5  1E48               	btfss	(sprintf@flag+1)^(0+128),4
  6409  00E6  28EB               	goto	l4460
  6410                           
  6411                           ;doprnt.c: 829: prec = 6;
  6412  00E7  3006               	movlw	6
  6413  00E8  00D4               	movwf	sprintf@prec^(0+128)
  6414  00E9  3000               	movlw	0
  6415  00EA  00D5               	movwf	(sprintf@prec^(0+128)+1)
  6416  00EB                     l4460:	
  6417                           
  6418                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6419  00EB  0846               	movf	sprintf@ap^(0+128),w
  6420  00EC  0086               	movwf	6
  6421  00ED  0187               	clrf	7
  6422  00EE  3F40               	moviw [0]fsr1
  6423  00EF  00D6               	movwf	sprintf@fval^(0+128)
  6424  00F0  3F41               	moviw [1]fsr1
  6425  00F1  00D7               	movwf	(sprintf@fval+1)^(0+128)
  6426  00F2  3F42               	moviw [2]fsr1
  6427  00F3  00D8               	movwf	(sprintf@fval+2)^(0+128)
  6428  00F4  3003               	movlw	3
  6429  00F5  0020               	movlb	0	; select bank0
  6430  00F6  00E1               	movwf	??_sprintf
  6431  00F7  0861               	movf	??_sprintf,w
  6432  00F8  0021               	movlb	1	; select bank1
  6433  00F9  07C6               	addwf	sprintf@ap^(0+128),f
  6434                           
  6435                           ;doprnt.c: 831: if(fval < 0.0) {
  6436  00FA  0856               	movf	sprintf@fval^(0+128),w
  6437  00FB  00F1               	movwf	___ftge@ff1
  6438  00FC  0857               	movf	(sprintf@fval+1)^(0+128),w
  6439  00FD  00F2               	movwf	___ftge@ff1+1
  6440  00FE  0858               	movf	(sprintf@fval+2)^(0+128),w
  6441  00FF  00F3               	movwf	___ftge@ff1+2
  6442  0100  3000               	movlw	0
  6443  0101  00F4               	movwf	___ftge@ff2
  6444  0102  3000               	movlw	0
  6445  0103  00F5               	movwf	___ftge@ff2+1
  6446  0104  3000               	movlw	0
  6447  0105  00F6               	movwf	___ftge@ff2+2
  6448  0106  319C  2467  3180   	fcall	___ftge
  6449  0109  1803               	btfsc	3,0
  6450  010A  2920               	goto	l4470
  6451                           
  6452                           ;doprnt.c: 832: fval = -fval;
  6453  010B  0021               	movlb	1	; select bank1
  6454  010C  0856               	movf	sprintf@fval^(0+128),w
  6455  010D  00F1               	movwf	___ftneg@f1
  6456  010E  0857               	movf	(sprintf@fval+1)^(0+128),w
  6457  010F  00F2               	movwf	___ftneg@f1+1
  6458  0110  0858               	movf	(sprintf@fval+2)^(0+128),w
  6459  0111  00F3               	movwf	___ftneg@f1+2
  6460  0112  319A  22C5  3180   	fcall	___ftneg
  6461  0115  0871               	movf	?___ftneg,w
  6462  0116  0021               	movlb	1	; select bank1
  6463  0117  00D6               	movwf	sprintf@fval^(0+128)
  6464  0118  0872               	movf	?___ftneg+1,w
  6465  0119  00D7               	movwf	(sprintf@fval+1)^(0+128)
  6466  011A  0873               	movf	?___ftneg+2,w
  6467  011B  00D8               	movwf	(sprintf@fval+2)^(0+128)
  6468                           
  6469                           ;doprnt.c: 833: flag |= 0x03;
  6470  011C  3003               	movlw	3
  6471  011D  04C7               	iorwf	sprintf@flag^(0+128),f
  6472  011E  3000               	movlw	0
  6473  011F  04C8               	iorwf	(sprintf@flag+1)^(0+128),f
  6474  0120                     l4470:	
  6475                           
  6476                           ;doprnt.c: 834: }
  6477                           ;doprnt.c: 835: exp = 0;
  6478  0120  0021               	movlb	1	; select bank1
  6479  0121  01CD               	clrf	sprintf@exp^(0+128)
  6480  0122  01CE               	clrf	(sprintf@exp+1)^(0+128)
  6481                           
  6482                           ;doprnt.c: 836: if( fval!=0) {
  6483  0123  0858               	movf	(sprintf@fval+2)^(0+128),w
  6484  0124  0457               	iorwf	(sprintf@fval+1)^(0+128),w
  6485  0125  0456               	iorwf	sprintf@fval^(0+128),w
  6486  0126  1903               	skipnz
  6487  0127  29E0               	goto	l402
  6488                           
  6489                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6490  0128  30D6               	movlw	low (sprintf@fval| 0)
  6491  0129  0086               	movwf	6
  6492  012A  0187               	clrf	7
  6493  012B  3F40               	moviw [0]fsr1
  6494  012C  0020               	movlb	0	; select bank0
  6495  012D  00E1               	movwf	??_sprintf
  6496  012E  3F41               	moviw [1]fsr1
  6497  012F  00E2               	movwf	??_sprintf+1
  6498  0130  3F42               	moviw [2]fsr1
  6499  0131  00E3               	movwf	??_sprintf+2
  6500  0132  3F43               	moviw [3]fsr1
  6501  0133  00E4               	movwf	??_sprintf+3
  6502  0134  300F               	movlw	15
  6503  0135                     u7135:	
  6504  0135  36E4               	lsrf	??_sprintf+3,f
  6505  0136  0CE3               	rrf	??_sprintf+2,f
  6506  0137  0CE2               	rrf	??_sprintf+1,f
  6507  0138  0CE1               	rrf	??_sprintf,f
  6508  0139  0B89               	decfsz	9,f
  6509  013A  2935               	goto	u7135
  6510  013B  30FF               	movlw	255
  6511  013C  0561               	andwf	??_sprintf,w
  6512  013D  00E5               	movwf	??_sprintf+4
  6513  013E  3000               	movlw	0
  6514  013F  0562               	andwf	??_sprintf+1,w
  6515  0140  00E6               	movwf	??_sprintf+5
  6516  0141  0865               	movf	??_sprintf+4,w
  6517  0142  3E82               	addlw	130
  6518  0143  0021               	movlb	1	; select bank1
  6519  0144  00CD               	movwf	sprintf@exp^(0+128)
  6520  0145  30FF               	movlw	255
  6521  0146  0020               	movlb	0	; select bank0
  6522  0147  3D66               	addwfc	??_sprintf+5,w
  6523  0148  0021               	movlb	1	; select bank1
  6524  0149  00CE               	movwf	(sprintf@exp+1)^(0+128)
  6525                           
  6526                           ;doprnt.c: 838: exp--;
  6527  014A  30FF               	movlw	255
  6528  014B  07CD               	addwf	sprintf@exp^(0+128),f
  6529  014C  30FF               	movlw	255
  6530  014D  3DCE               	addwfc	(sprintf@exp+1)^(0+128),f
  6531                           
  6532                           ;doprnt.c: 839: exp *= 3;
  6533  014E  3003               	movlw	3
  6534  014F  0020               	movlb	0	; select bank0
  6535  0150  00A5               	movwf	___wmul@multiplier
  6536  0151  3000               	movlw	0
  6537  0152  00A6               	movwf	___wmul@multiplier+1
  6538  0153  0021               	movlb	1	; select bank1
  6539  0154  084E               	movf	(sprintf@exp+1)^(0+128),w
  6540  0155  0020               	movlb	0	; select bank0
  6541  0156  00A8               	movwf	___wmul@multiplicand+1
  6542  0157  0021               	movlb	1	; select bank1
  6543  0158  084D               	movf	sprintf@exp^(0+128),w
  6544  0159  0020               	movlb	0	; select bank0
  6545  015A  00A7               	movwf	___wmul@multiplicand
  6546  015B  319B  2331  3180   	fcall	___wmul
  6547  015E  0020               	movlb	0	; select bank0
  6548  015F  0826               	movf	?___wmul+1,w
  6549  0160  0021               	movlb	1	; select bank1
  6550  0161  00CE               	movwf	(sprintf@exp+1)^(0+128)
  6551  0162  0020               	movlb	0	; select bank0
  6552  0163  0825               	movf	?___wmul,w
  6553  0164  0021               	movlb	1	; select bank1
  6554  0165  00CD               	movwf	sprintf@exp^(0+128)
  6555                           
  6556                           ;doprnt.c: 840: exp /= 10;
  6557  0166  300A               	movlw	10
  6558  0167  00F8               	movwf	___awdiv@divisor
  6559  0168  3000               	movlw	0
  6560  0169  00F9               	movwf	___awdiv@divisor+1
  6561  016A  084E               	movf	(sprintf@exp+1)^(0+128),w
  6562  016B  00FB               	movwf	___awdiv@dividend+1
  6563  016C  084D               	movf	sprintf@exp^(0+128),w
  6564  016D  00FA               	movwf	___awdiv@dividend
  6565  016E  319D  2529  3180   	fcall	___awdiv
  6566  0171  0879               	movf	?___awdiv+1,w
  6567  0172  0021               	movlb	1	; select bank1
  6568  0173  00CE               	movwf	(sprintf@exp+1)^(0+128)
  6569  0174  0878               	movf	?___awdiv,w
  6570  0175  00CD               	movwf	sprintf@exp^(0+128)
  6571                           
  6572                           ;doprnt.c: 841: if(exp < 0)
  6573  0176  1FCE               	btfss	(sprintf@exp+1)^(0+128),7
  6574  0177  297C               	goto	l4486
  6575                           
  6576                           ;doprnt.c: 842: exp--;
  6577  0178  30FF               	movlw	255
  6578  0179  07CD               	addwf	sprintf@exp^(0+128),f
  6579  017A  30FF               	movlw	255
  6580  017B  3DCE               	addwfc	(sprintf@exp+1)^(0+128),f
  6581  017C                     l4486:	
  6582                           
  6583                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6584  017C  034D               	decf	sprintf@exp^(0+128),w
  6585  017D  3AFF               	xorlw	255
  6586  017E  318D  25BC  3180   	fcall	_scale
  6587  0181  0020               	movlb	0	; select bank0
  6588  0182  083B               	movf	?_scale,w
  6589  0183  0021               	movlb	1	; select bank1
  6590  0184  00CF               	movwf	sprintf@tmpval^(0+128)
  6591  0185  0020               	movlb	0	; select bank0
  6592  0186  083C               	movf	?_scale+1,w
  6593  0187  0021               	movlb	1	; select bank1
  6594  0188  00D0               	movwf	(sprintf@tmpval+1)^(0+128)
  6595  0189  0020               	movlb	0	; select bank0
  6596  018A  083D               	movf	?_scale+2,w
  6597  018B  0021               	movlb	1	; select bank1
  6598  018C  00D1               	movwf	(sprintf@tmpval+2)^(0+128)
  6599                           
  6600                           ;doprnt.c: 847: tmpval.integ *= fval;
  6601  018D  0856               	movf	sprintf@fval^(0+128),w
  6602  018E  0020               	movlb	0	; select bank0
  6603  018F  00AB               	movwf	___ftmul@f1
  6604  0190  0021               	movlb	1	; select bank1
  6605  0191  0857               	movf	(sprintf@fval+1)^(0+128),w
  6606  0192  0020               	movlb	0	; select bank0
  6607  0193  00AC               	movwf	___ftmul@f1+1
  6608  0194  0021               	movlb	1	; select bank1
  6609  0195  0858               	movf	(sprintf@fval+2)^(0+128),w
  6610  0196  0020               	movlb	0	; select bank0
  6611  0197  00AD               	movwf	___ftmul@f1+2
  6612  0198  0021               	movlb	1	; select bank1
  6613  0199  084F               	movf	sprintf@tmpval^(0+128),w
  6614  019A  0020               	movlb	0	; select bank0
  6615  019B  00AE               	movwf	___ftmul@f2
  6616  019C  0021               	movlb	1	; select bank1
  6617  019D  0850               	movf	(sprintf@tmpval+1)^(0+128),w
  6618  019E  0020               	movlb	0	; select bank0
  6619  019F  00AF               	movwf	___ftmul@f2+1
  6620  01A0  0021               	movlb	1	; select bank1
  6621  01A1  0851               	movf	(sprintf@tmpval+2)^(0+128),w
  6622  01A2  0020               	movlb	0	; select bank0
  6623  01A3  00B0               	movwf	___ftmul@f2+2
  6624  01A4  319F  274C  3180   	fcall	___ftmul
  6625  01A7  0020               	movlb	0	; select bank0
  6626  01A8  082B               	movf	?___ftmul,w
  6627  01A9  0021               	movlb	1	; select bank1
  6628  01AA  00CF               	movwf	sprintf@tmpval^(0+128)
  6629  01AB  0020               	movlb	0	; select bank0
  6630  01AC  082C               	movf	?___ftmul+1,w
  6631  01AD  0021               	movlb	1	; select bank1
  6632  01AE  00D0               	movwf	(sprintf@tmpval+1)^(0+128)
  6633  01AF  0020               	movlb	0	; select bank0
  6634  01B0  082D               	movf	?___ftmul+2,w
  6635  01B1  0021               	movlb	1	; select bank1
  6636  01B2  00D1               	movwf	(sprintf@tmpval+2)^(0+128)
  6637                           
  6638                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6639  01B3  084F               	movf	sprintf@tmpval^(0+128),w
  6640  01B4  00F1               	movwf	___ftge@ff1
  6641  01B5  0850               	movf	(sprintf@tmpval+1)^(0+128),w
  6642  01B6  00F2               	movwf	___ftge@ff1+1
  6643  01B7  0851               	movf	(sprintf@tmpval+2)^(0+128),w
  6644  01B8  00F3               	movwf	___ftge@ff1+2
  6645  01B9  3000               	movlw	0
  6646  01BA  00F4               	movwf	___ftge@ff2
  6647  01BB  3080               	movlw	128
  6648  01BC  00F5               	movwf	___ftge@ff2+1
  6649  01BD  303F               	movlw	63
  6650  01BE  00F6               	movwf	___ftge@ff2+2
  6651  01BF  319C  2467  3180   	fcall	___ftge
  6652  01C2  1803               	btfsc	3,0
  6653  01C3  29C9               	goto	l4494
  6654                           
  6655                           ;doprnt.c: 849: exp--;
  6656  01C4  30FF               	movlw	255
  6657  01C5  0021               	movlb	1	; select bank1
  6658  01C6  07CD               	addwf	sprintf@exp^(0+128),f
  6659  01C7  30FF               	movlw	255
  6660  01C8  29DF               	goto	L2
  6661  01C9                     l4494:	
  6662                           
  6663                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6664  01C9  0021               	movlb	1	; select bank1
  6665  01CA  084F               	movf	sprintf@tmpval^(0+128),w
  6666  01CB  00F1               	movwf	___ftge@ff1
  6667  01CC  0850               	movf	(sprintf@tmpval+1)^(0+128),w
  6668  01CD  00F2               	movwf	___ftge@ff1+1
  6669  01CE  0851               	movf	(sprintf@tmpval+2)^(0+128),w
  6670  01CF  00F3               	movwf	___ftge@ff1+2
  6671  01D0  3000               	movlw	0
  6672  01D1  00F4               	movwf	___ftge@ff2
  6673  01D2  3020               	movlw	32
  6674  01D3  00F5               	movwf	___ftge@ff2+1
  6675  01D4  3041               	movlw	65
  6676  01D5  00F6               	movwf	___ftge@ff2+2
  6677  01D6  319C  2467  3180   	fcall	___ftge
  6678  01D9  1C03               	btfss	3,0
  6679  01DA  29E0               	goto	l402
  6680                           
  6681                           ;doprnt.c: 851: exp++;
  6682  01DB  3001               	movlw	1
  6683  01DC  0021               	movlb	1	; select bank1
  6684  01DD  07CD               	addwf	sprintf@exp^(0+128),f
  6685  01DE  3000               	movlw	0
  6686  01DF                     L2:	
  6687  01DF  3DCE               	addwfc	(sprintf@exp+1)^(0+128),f
  6688  01E0                     l402:	
  6689                           
  6690                           ;doprnt.c: 852: }
  6691                           ;doprnt.c: 1112: if(prec <= 12)
  6692  01E0  0021               	movlb	1	; select bank1
  6693  01E1  0855               	movf	(sprintf@prec+1)^(0+128),w
  6694  01E2  3A80               	xorlw	128
  6695  01E3  0020               	movlb	0	; select bank0
  6696  01E4  00E1               	movwf	??_sprintf
  6697  01E5  3080               	movlw	128
  6698  01E6  0261               	subwf	??_sprintf,w
  6699  01E7  1D03               	skipz
  6700  01E8  29EC               	goto	u7175
  6701  01E9  300D               	movlw	13
  6702  01EA  0021               	movlb	1	; select bank1
  6703  01EB  0254               	subwf	sprintf@prec^(0+128),w
  6704  01EC                     u7175:	
  6705  01EC  1803               	skipnc
  6706  01ED  2A15               	goto	l4500
  6707                           
  6708                           ;doprnt.c: 1113: fval += fround(prec);
  6709  01EE  0021               	movlb	1	; select bank1
  6710  01EF  0854               	movf	sprintf@prec^(0+128),w
  6711  01F0  3194  24F7  3180   	fcall	_fround
  6712  01F3  0020               	movlb	0	; select bank0
  6713  01F4  083B               	movf	?_fround,w
  6714  01F5  00C9               	movwf	___ftadd@f1
  6715  01F6  083C               	movf	?_fround+1,w
  6716  01F7  00CA               	movwf	___ftadd@f1+1
  6717  01F8  083D               	movf	?_fround+2,w
  6718  01F9  00CB               	movwf	___ftadd@f1+2
  6719  01FA  0021               	movlb	1	; select bank1
  6720  01FB  0856               	movf	sprintf@fval^(0+128),w
  6721  01FC  0020               	movlb	0	; select bank0
  6722  01FD  00CC               	movwf	___ftadd@f2
  6723  01FE  0021               	movlb	1	; select bank1
  6724  01FF  0857               	movf	(sprintf@fval+1)^(0+128),w
  6725  0200  0020               	movlb	0	; select bank0
  6726  0201  00CD               	movwf	___ftadd@f2+1
  6727  0202  0021               	movlb	1	; select bank1
  6728  0203  0858               	movf	(sprintf@fval+2)^(0+128),w
  6729  0204  0020               	movlb	0	; select bank0
  6730  0205  00CE               	movwf	___ftadd@f2+2
  6731  0206  3191  219C  3180   	fcall	___ftadd
  6732  0209  0020               	movlb	0	; select bank0
  6733  020A  0849               	movf	?___ftadd,w
  6734  020B  0021               	movlb	1	; select bank1
  6735  020C  00D6               	movwf	sprintf@fval^(0+128)
  6736  020D  0020               	movlb	0	; select bank0
  6737  020E  084A               	movf	?___ftadd+1,w
  6738  020F  0021               	movlb	1	; select bank1
  6739  0210  00D7               	movwf	(sprintf@fval+1)^(0+128)
  6740  0211  0020               	movlb	0	; select bank0
  6741  0212  084B               	movf	?___ftadd+2,w
  6742  0213  0021               	movlb	1	; select bank1
  6743  0214  00D8               	movwf	(sprintf@fval+2)^(0+128)
  6744  0215                     l4500:	
  6745                           
  6746                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6747  0215  0021               	movlb	1	; select bank1
  6748  0216  084E               	movf	(sprintf@exp+1)^(0+128),w
  6749  0217  3A80               	xorlw	128
  6750  0218  0020               	movlb	0	; select bank0
  6751  0219  00E1               	movwf	??_sprintf
  6752  021A  3080               	movlw	128
  6753  021B  0261               	subwf	??_sprintf,w
  6754  021C  1D03               	skipz
  6755  021D  2A21               	goto	u7185
  6756  021E  300A               	movlw	10
  6757  021F  0021               	movlb	1	; select bank1
  6758  0220  024D               	subwf	sprintf@exp^(0+128),w
  6759  0221                     u7185:	
  6760  0221  1803               	skipnc
  6761  0222  2A4C               	goto	l4508
  6762  0223  0021               	movlb	1	; select bank1
  6763  0224  0858               	movf	(sprintf@fval+2)^(0+128),w
  6764  0225  0457               	iorwf	(sprintf@fval+1)^(0+128),w
  6765  0226  0456               	iorwf	sprintf@fval^(0+128),w
  6766  0227  1903               	skipnz
  6767  0228  2A94               	goto	l4522
  6768  0229  0856               	movf	sprintf@fval^(0+128),w
  6769  022A  0020               	movlb	0	; select bank0
  6770  022B  00C4               	movwf	___fttol@f1
  6771  022C  0021               	movlb	1	; select bank1
  6772  022D  0857               	movf	(sprintf@fval+1)^(0+128),w
  6773  022E  0020               	movlb	0	; select bank0
  6774  022F  00C5               	movwf	___fttol@f1+1
  6775  0230  0021               	movlb	1	; select bank1
  6776  0231  0858               	movf	(sprintf@fval+2)^(0+128),w
  6777  0232  0020               	movlb	0	; select bank0
  6778  0233  00C6               	movwf	___fttol@f1+2
  6779  0234  319E  2630  3180   	fcall	___fttol
  6780  0237  0020               	movlb	0	; select bank0
  6781  0238  0847               	movf	?___fttol+3,w
  6782  0239  0446               	iorwf	?___fttol+2,w
  6783  023A  0445               	iorwf	?___fttol+1,w
  6784  023B  0444               	iorwf	?___fttol,w
  6785  023C  1D03               	skipz
  6786  023D  2A94               	goto	l4522
  6787  023E  0021               	movlb	1	; select bank1
  6788  023F  084E               	movf	(sprintf@exp+1)^(0+128),w
  6789  0240  3A80               	xorlw	128
  6790  0241  0020               	movlb	0	; select bank0
  6791  0242  00E1               	movwf	??_sprintf
  6792  0243  3080               	movlw	128
  6793  0244  0261               	subwf	??_sprintf,w
  6794  0245  1D03               	skipz
  6795  0246  2A4A               	goto	u7215
  6796  0247  3002               	movlw	2
  6797  0248  0021               	movlb	1	; select bank1
  6798  0249  024D               	subwf	sprintf@exp^(0+128),w
  6799  024A                     u7215:	
  6800  024A  1C03               	skipc
  6801  024B  2A94               	goto	l4522
  6802  024C                     l4508:	
  6803                           
  6804                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6805  024C  0021               	movlb	1	; select bank1
  6806  024D  084F               	movf	sprintf@tmpval^(0+128),w
  6807  024E  00F1               	movwf	___ftge@ff1
  6808  024F  0850               	movf	(sprintf@tmpval+1)^(0+128),w
  6809  0250  00F2               	movwf	___ftge@ff1+1
  6810  0251  0851               	movf	(sprintf@tmpval+2)^(0+128),w
  6811  0252  00F3               	movwf	___ftge@ff1+2
  6812  0253  3070               	movlw	112
  6813  0254  00F4               	movwf	___ftge@ff2
  6814  0255  3089               	movlw	137
  6815  0256  00F5               	movwf	___ftge@ff2+1
  6816  0257  3040               	movlw	64
  6817  0258  00F6               	movwf	___ftge@ff2+2
  6818  0259  319C  2467  3180   	fcall	___ftge
  6819  025C  1803               	btfsc	3,0
  6820  025D  2A60               	goto	l4512
  6821                           
  6822                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6823  025E  30F7               	movlw	247
  6824  025F  2A61               	goto	L3
  6825  0260                     l4512:	
  6826                           ;doprnt.c: 1122: }else{
  6827                           
  6828                           
  6829                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6830  0260  30F8               	movlw	248
  6831  0261                     L3:	
  6832  0261  0021               	movlb	1	; select bank1
  6833  0262  07CD               	addwf	sprintf@exp^(0+128),f
  6834  0263  30FF               	movlw	255
  6835  0264  3DCE               	addwfc	(sprintf@exp+1)^(0+128),f
  6836                           
  6837                           ;doprnt.c: 1124: }
  6838                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  6839  0265  084D               	movf	sprintf@exp^(0+128),w
  6840  0266  318D  25BC  3180   	fcall	_scale
  6841  0269  0020               	movlb	0	; select bank0
  6842  026A  083B               	movf	?_scale,w
  6843  026B  0021               	movlb	1	; select bank1
  6844  026C  00CF               	movwf	sprintf@tmpval^(0+128)
  6845  026D  0020               	movlb	0	; select bank0
  6846  026E  083C               	movf	?_scale+1,w
  6847  026F  0021               	movlb	1	; select bank1
  6848  0270  00D0               	movwf	(sprintf@tmpval+1)^(0+128)
  6849  0271  0020               	movlb	0	; select bank0
  6850  0272  083D               	movf	?_scale+2,w
  6851  0273  0021               	movlb	1	; select bank1
  6852  0274  00D1               	movwf	(sprintf@tmpval+2)^(0+128)
  6853                           
  6854                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6855  0275  0856               	movf	sprintf@fval^(0+128),w
  6856  0276  00F1               	movwf	__tdiv_to_l_@f1
  6857  0277  0857               	movf	(sprintf@fval+1)^(0+128),w
  6858  0278  00F2               	movwf	__tdiv_to_l_@f1+1
  6859  0279  0858               	movf	(sprintf@fval+2)^(0+128),w
  6860  027A  00F3               	movwf	__tdiv_to_l_@f1+2
  6861  027B  084F               	movf	sprintf@tmpval^(0+128),w
  6862  027C  00F4               	movwf	__tdiv_to_l_@f2
  6863  027D  0850               	movf	(sprintf@tmpval+1)^(0+128),w
  6864  027E  00F5               	movwf	__tdiv_to_l_@f2+1
  6865  027F  0851               	movf	(sprintf@tmpval+2)^(0+128),w
  6866  0280  00F6               	movwf	__tdiv_to_l_@f2+2
  6867  0281  3190  2015  3180   	fcall	__tdiv_to_l_
  6868  0284  0874               	movf	?__tdiv_to_l_+3,w
  6869  0285  0021               	movlb	1	; select bank1
  6870  0286  00CC               	movwf	(sprintf@val+3)^(0+128)
  6871  0287  0873               	movf	?__tdiv_to_l_+2,w
  6872  0288  00CB               	movwf	(sprintf@val+2)^(0+128)
  6873  0289  0872               	movf	?__tdiv_to_l_+1,w
  6874  028A  00CA               	movwf	(sprintf@val+1)^(0+128)
  6875  028B  0871               	movf	?__tdiv_to_l_,w
  6876  028C  00C9               	movwf	sprintf@val^(0+128)
  6877                           
  6878                           ;doprnt.c: 1129: fval = 0.0;
  6879  028D  3000               	movlw	0
  6880  028E  00D6               	movwf	sprintf@fval^(0+128)
  6881  028F  3000               	movlw	0
  6882  0290  00D7               	movwf	(sprintf@fval+1)^(0+128)
  6883  0291  3000               	movlw	0
  6884  0292  00D8               	movwf	(sprintf@fval+2)^(0+128)
  6885                           
  6886                           ;doprnt.c: 1130: } else {
  6887  0293  2AE9               	goto	l4526
  6888  0294                     l4522:	
  6889                           
  6890                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6891  0294  0021               	movlb	1	; select bank1
  6892  0295  0856               	movf	sprintf@fval^(0+128),w
  6893  0296  0020               	movlb	0	; select bank0
  6894  0297  00C4               	movwf	___fttol@f1
  6895  0298  0021               	movlb	1	; select bank1
  6896  0299  0857               	movf	(sprintf@fval+1)^(0+128),w
  6897  029A  0020               	movlb	0	; select bank0
  6898  029B  00C5               	movwf	___fttol@f1+1
  6899  029C  0021               	movlb	1	; select bank1
  6900  029D  0858               	movf	(sprintf@fval+2)^(0+128),w
  6901  029E  0020               	movlb	0	; select bank0
  6902  029F  00C6               	movwf	___fttol@f1+2
  6903  02A0  319E  2630  3180   	fcall	___fttol
  6904  02A3  0020               	movlb	0	; select bank0
  6905  02A4  0847               	movf	?___fttol+3,w
  6906  02A5  0021               	movlb	1	; select bank1
  6907  02A6  00CC               	movwf	(sprintf@val+3)^(0+128)
  6908  02A7  0020               	movlb	0	; select bank0
  6909  02A8  0846               	movf	?___fttol+2,w
  6910  02A9  0021               	movlb	1	; select bank1
  6911  02AA  00CB               	movwf	(sprintf@val+2)^(0+128)
  6912  02AB  0020               	movlb	0	; select bank0
  6913  02AC  0845               	movf	?___fttol+1,w
  6914  02AD  0021               	movlb	1	; select bank1
  6915  02AE  00CA               	movwf	(sprintf@val+1)^(0+128)
  6916  02AF  0020               	movlb	0	; select bank0
  6917  02B0  0844               	movf	?___fttol,w
  6918  02B1  0021               	movlb	1	; select bank1
  6919  02B2  00C9               	movwf	sprintf@val^(0+128)
  6920                           
  6921                           ;doprnt.c: 1132: fval -= (double)val;
  6922  02B3  084C               	movf	(sprintf@val+3)^(0+128),w
  6923  02B4  0020               	movlb	0	; select bank0
  6924  02B5  00A3               	movwf	___lltoft@c+3
  6925  02B6  0021               	movlb	1	; select bank1
  6926  02B7  084B               	movf	(sprintf@val+2)^(0+128),w
  6927  02B8  0020               	movlb	0	; select bank0
  6928  02B9  00A2               	movwf	___lltoft@c+2
  6929  02BA  0021               	movlb	1	; select bank1
  6930  02BB  084A               	movf	(sprintf@val+1)^(0+128),w
  6931  02BC  0020               	movlb	0	; select bank0
  6932  02BD  00A1               	movwf	___lltoft@c+1
  6933  02BE  0021               	movlb	1	; select bank1
  6934  02BF  0849               	movf	sprintf@val^(0+128),w
  6935  02C0  0020               	movlb	0	; select bank0
  6936  02C1  00A0               	movwf	___lltoft@c
  6937  02C2  319B  23D4  3180   	fcall	___lltoft
  6938  02C5  0020               	movlb	0	; select bank0
  6939  02C6  0820               	movf	?___lltoft,w
  6940  02C7  00D6               	movwf	___ftsub@f2
  6941  02C8  0821               	movf	?___lltoft+1,w
  6942  02C9  00D7               	movwf	___ftsub@f2+1
  6943  02CA  0822               	movf	?___lltoft+2,w
  6944  02CB  00D8               	movwf	___ftsub@f2+2
  6945  02CC  0021               	movlb	1	; select bank1
  6946  02CD  0856               	movf	sprintf@fval^(0+128),w
  6947  02CE  0020               	movlb	0	; select bank0
  6948  02CF  00D9               	movwf	___ftsub@f1
  6949  02D0  0021               	movlb	1	; select bank1
  6950  02D1  0857               	movf	(sprintf@fval+1)^(0+128),w
  6951  02D2  0020               	movlb	0	; select bank0
  6952  02D3  00DA               	movwf	___ftsub@f1+1
  6953  02D4  0021               	movlb	1	; select bank1
  6954  02D5  0858               	movf	(sprintf@fval+2)^(0+128),w
  6955  02D6  0020               	movlb	0	; select bank0
  6956  02D7  00DB               	movwf	___ftsub@f1+2
  6957  02D8  319B  234D  3180   	fcall	___ftsub
  6958  02DB  0020               	movlb	0	; select bank0
  6959  02DC  0856               	movf	?___ftsub,w
  6960  02DD  0021               	movlb	1	; select bank1
  6961  02DE  00D6               	movwf	sprintf@fval^(0+128)
  6962  02DF  0020               	movlb	0	; select bank0
  6963  02E0  0857               	movf	?___ftsub+1,w
  6964  02E1  0021               	movlb	1	; select bank1
  6965  02E2  00D7               	movwf	(sprintf@fval+1)^(0+128)
  6966  02E3  0020               	movlb	0	; select bank0
  6967  02E4  0858               	movf	?___ftsub+2,w
  6968  02E5  0021               	movlb	1	; select bank1
  6969  02E6  00D8               	movwf	(sprintf@fval+2)^(0+128)
  6970                           
  6971                           ;doprnt.c: 1133: exp = 0;
  6972  02E7  01CD               	clrf	sprintf@exp^(0+128)
  6973  02E8  01CE               	clrf	(sprintf@exp+1)^(0+128)
  6974  02E9                     l4526:	
  6975                           
  6976                           ;doprnt.c: 1134: }
  6977                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6978  02E9  01D9               	clrf	sprintf@c^(0+128)
  6979  02EA  0AD9               	incf	sprintf@c^(0+128),f
  6980  02EB  300A               	movlw	10
  6981  02EC  0659               	xorwf	sprintf@c^(0+128),w
  6982  02ED  1903               	btfsc	3,2
  6983  02EE  2B26               	goto	l4538
  6984  02EF                     l4532:	
  6985                           
  6986                           ;doprnt.c: 1137: if(val < dpowers[c])
  6987  02EF  0859               	movf	sprintf@c^(0+128),w
  6988  02F0  0020               	movlb	0	; select bank0
  6989  02F1  00E1               	movwf	??_sprintf
  6990  02F2  01E2               	clrf	??_sprintf+1
  6991  02F3  35E1               	lslf	??_sprintf,f
  6992  02F4  0DE2               	rlf	??_sprintf+1,f
  6993  02F5  35E1               	lslf	??_sprintf,f
  6994  02F6  0DE2               	rlf	??_sprintf+1,f
  6995  02F7  3000               	movlw	low (_dpowers| (0+32768))
  6996  02F8  0761               	addwf	??_sprintf,w
  6997  02F9  0084               	movwf	4
  6998  02FA  30A0               	movlw	high (_dpowers| (0+32768))
  6999  02FB  3D62               	addwfc	??_sprintf+1,w
  7000  02FC  0085               	movwf	5
  7001  02FD  3F00               	moviw [0]fsr0
  7002  02FE  00E3               	movwf	??_sprintf+2
  7003  02FF  3F01               	moviw [1]fsr0
  7004  0300  00E4               	movwf	??_sprintf+3
  7005  0301  3F02               	moviw [2]fsr0
  7006  0302  00E5               	movwf	??_sprintf+4
  7007  0303  3F03               	moviw [3]fsr0
  7008  0304  00E6               	movwf	??_sprintf+5
  7009  0305  0866               	movf	??_sprintf+5,w
  7010  0306  0021               	movlb	1	; select bank1
  7011  0307  024C               	subwf	(sprintf@val+3)^(0+128),w
  7012  0308  1D03               	skipz
  7013  0309  2B1A               	goto	u7245
  7014  030A  0020               	movlb	0	; select bank0
  7015  030B  0865               	movf	??_sprintf+4,w
  7016  030C  0021               	movlb	1	; select bank1
  7017  030D  024B               	subwf	(sprintf@val+2)^(0+128),w
  7018  030E  1D03               	skipz
  7019  030F  2B1A               	goto	u7245
  7020  0310  0020               	movlb	0	; select bank0
  7021  0311  0864               	movf	??_sprintf+3,w
  7022  0312  0021               	movlb	1	; select bank1
  7023  0313  024A               	subwf	(sprintf@val+1)^(0+128),w
  7024  0314  1D03               	skipz
  7025  0315  2B1A               	goto	u7245
  7026  0316  0020               	movlb	0	; select bank0
  7027  0317  0863               	movf	??_sprintf+2,w
  7028  0318  0021               	movlb	1	; select bank1
  7029  0319  0249               	subwf	sprintf@val^(0+128),w
  7030  031A                     u7245:	
  7031  031A  1C03               	btfss	3,0
  7032  031B  2B26               	goto	l4538
  7033                           
  7034                           ;doprnt.c: 1138: break;
  7035  031C  3001               	movlw	1
  7036  031D  0020               	movlb	0	; select bank0
  7037  031E  00E1               	movwf	??_sprintf
  7038  031F  0861               	movf	??_sprintf,w
  7039  0320  0021               	movlb	1	; select bank1
  7040  0321  07D9               	addwf	sprintf@c^(0+128),f
  7041  0322  300A               	movlw	10
  7042  0323  0659               	xorwf	sprintf@c^(0+128),w
  7043  0324  1D03               	btfss	3,2
  7044  0325  2AEF               	goto	l4532
  7045  0326                     l4538:	
  7046                           
  7047                           ;doprnt.c: 1175: {
  7048                           ;doprnt.c: 1188: if(flag & 0x03)
  7049  0326  3003               	movlw	3
  7050  0327  0547               	andwf	sprintf@flag^(0+128),w
  7051  0328  0020               	movlb	0	; select bank0
  7052  0329  00E1               	movwf	??_sprintf
  7053  032A  3000               	movlw	0
  7054  032B  0021               	movlb	1	; select bank1
  7055  032C  0548               	andwf	(sprintf@flag+1)^(0+128),w
  7056  032D  0020               	movlb	0	; select bank0
  7057  032E  00E2               	movwf	??_sprintf+1
  7058  032F  0861               	movf	??_sprintf,w
  7059  0330  0462               	iorwf	??_sprintf+1,w
  7060  0331  1903               	btfsc	3,2
  7061  0332  2B41               	goto	l4552
  7062                           
  7063                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7064  0333  302D               	movlw	45
  7065  0334                     L7:	
  7066  0334  00E1               	movwf	??_sprintf
  7067  0335  0021               	movlb	1	; select bank1
  7068  0336  0853               	movf	sprintf@sp^(0+128),w
  7069  0337  0086               	movwf	6
  7070  0338  0187               	clrf	7
  7071  0339  0020               	movlb	0	; select bank0
  7072  033A  0861               	movf	??_sprintf,w
  7073  033B  0081               	movwf	1
  7074  033C  3001               	movlw	1
  7075  033D  00E1               	movwf	??_sprintf
  7076  033E  0861               	movf	??_sprintf,w
  7077  033F  0021               	movlb	1	; select bank1
  7078  0340  07D3               	addwf	sprintf@sp^(0+128),f
  7079  0341                     l4552:	
  7080  0341  30FF               	movlw	255
  7081  0342  0020               	movlb	0	; select bank0
  7082  0343  00E1               	movwf	??_sprintf
  7083  0344  0861               	movf	??_sprintf,w
  7084  0345  0021               	movlb	1	; select bank1
  7085  0346  07D9               	addwf	sprintf@c^(0+128),f
  7086  0347  0A59               	incf	sprintf@c^(0+128),w
  7087  0348  1903               	btfsc	3,2
  7088  0349  2BA8               	goto	l4560
  7089                           
  7090                           ;doprnt.c: 1200: {
  7091                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7092                           
  7093                           ;doprnt.c: 1195: }
  7094                           ;doprnt.c: 1196: while(c--) {
  7095  034A  0859               	movf	sprintf@c^(0+128),w
  7096  034B  0020               	movlb	0	; select bank0
  7097  034C  00E1               	movwf	??_sprintf
  7098  034D  01E2               	clrf	??_sprintf+1
  7099  034E  35E1               	lslf	??_sprintf,f
  7100  034F  0DE2               	rlf	??_sprintf+1,f
  7101  0350  35E1               	lslf	??_sprintf,f
  7102  0351  0DE2               	rlf	??_sprintf+1,f
  7103  0352  3000               	movlw	low (_dpowers| (0+32768))
  7104  0353  0761               	addwf	??_sprintf,w
  7105  0354  0084               	movwf	4
  7106  0355  30A0               	movlw	high (_dpowers| (0+32768))
  7107  0356  3D62               	addwfc	??_sprintf+1,w
  7108  0357  0085               	movwf	5
  7109  0358  3F00               	moviw [0]fsr0
  7110  0359  00F1               	movwf	___lldiv@divisor
  7111  035A  3F01               	moviw [1]fsr0
  7112  035B  00F2               	movwf	___lldiv@divisor+1
  7113  035C  3F02               	moviw [2]fsr0
  7114  035D  00F3               	movwf	___lldiv@divisor+2
  7115  035E  3F03               	moviw [3]fsr0
  7116  035F  00F4               	movwf	___lldiv@divisor+3
  7117  0360  0021               	movlb	1	; select bank1
  7118  0361  084C               	movf	(sprintf@val+3)^(0+128),w
  7119  0362  00F8               	movwf	___lldiv@dividend+3
  7120  0363  084B               	movf	(sprintf@val+2)^(0+128),w
  7121  0364  00F7               	movwf	___lldiv@dividend+2
  7122  0365  084A               	movf	(sprintf@val+1)^(0+128),w
  7123  0366  00F6               	movwf	___lldiv@dividend+1
  7124  0367  0849               	movf	sprintf@val^(0+128),w
  7125  0368  00F5               	movwf	___lldiv@dividend
  7126  0369  319D  257B  3180   	fcall	___lldiv
  7127  036C  0874               	movf	?___lldiv+3,w
  7128  036D  0021               	movlb	1	; select bank1
  7129  036E  00D2               	movwf	(sprintf@tmpval+3)^(0+128)
  7130  036F  0873               	movf	?___lldiv+2,w
  7131  0370  00D1               	movwf	(sprintf@tmpval+2)^(0+128)
  7132  0371  0872               	movf	?___lldiv+1,w
  7133  0372  00D0               	movwf	(sprintf@tmpval+1)^(0+128)
  7134  0373  0871               	movf	?___lldiv,w
  7135  0374  00CF               	movwf	sprintf@tmpval^(0+128)
  7136                           
  7137                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7138  0375  3000               	movlw	0
  7139  0376  00F4               	movwf	___llmod@divisor+3
  7140  0377  3000               	movlw	0
  7141  0378  00F3               	movwf	___llmod@divisor+2
  7142  0379  3000               	movlw	0
  7143  037A  00F2               	movwf	___llmod@divisor+1
  7144  037B  300A               	movlw	10
  7145  037C  00F1               	movwf	___llmod@divisor
  7146  037D  0852               	movf	(sprintf@tmpval+3)^(0+128),w
  7147  037E  00F8               	movwf	___llmod@dividend+3
  7148  037F  0851               	movf	(sprintf@tmpval+2)^(0+128),w
  7149  0380  00F7               	movwf	___llmod@dividend+2
  7150  0381  0850               	movf	(sprintf@tmpval+1)^(0+128),w
  7151  0382  00F6               	movwf	___llmod@dividend+1
  7152  0383  084F               	movf	sprintf@tmpval^(0+128),w
  7153  0384  00F5               	movwf	___llmod@dividend
  7154  0385  319C  24A2  3180   	fcall	___llmod
  7155  0388  0874               	movf	?___llmod+3,w
  7156  0389  0021               	movlb	1	; select bank1
  7157  038A  00D2               	movwf	(sprintf@tmpval+3)^(0+128)
  7158  038B  0873               	movf	?___llmod+2,w
  7159  038C  00D1               	movwf	(sprintf@tmpval+2)^(0+128)
  7160  038D  0872               	movf	?___llmod+1,w
  7161  038E  00D0               	movwf	(sprintf@tmpval+1)^(0+128)
  7162  038F  0871               	movf	?___llmod,w
  7163  0390  00CF               	movwf	sprintf@tmpval^(0+128)
  7164                           
  7165                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7166  0391  084F               	movf	sprintf@tmpval^(0+128),w
  7167  0392  3E30               	addlw	48
  7168  0393  0020               	movlb	0	; select bank0
  7169  0394  2B34               	goto	L7
  7170  0395                     l4554:	
  7171                           ;doprnt.c: 1204: }
  7172                           ;doprnt.c: 1206: }
  7173                           ;doprnt.c: 1207: while(exp > 0) {
  7174                           
  7175                           
  7176                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7177  0395  3030               	movlw	48
  7178  0396  0020               	movlb	0	; select bank0
  7179  0397  00E1               	movwf	??_sprintf
  7180  0398  0021               	movlb	1	; select bank1
  7181  0399  0853               	movf	sprintf@sp^(0+128),w
  7182  039A  0086               	movwf	6
  7183  039B  0187               	clrf	7
  7184  039C  0020               	movlb	0	; select bank0
  7185  039D  0861               	movf	??_sprintf,w
  7186  039E  0081               	movwf	1
  7187  039F  3001               	movlw	1
  7188  03A0  00E1               	movwf	??_sprintf
  7189  03A1  0861               	movf	??_sprintf,w
  7190  03A2  0021               	movlb	1	; select bank1
  7191  03A3  07D3               	addwf	sprintf@sp^(0+128),f
  7192                           
  7193                           ;doprnt.c: 1209: exp--;
  7194  03A4  30FF               	movlw	255
  7195  03A5  07CD               	addwf	sprintf@exp^(0+128),f
  7196  03A6  30FF               	movlw	255
  7197  03A7  3DCE               	addwfc	(sprintf@exp+1)^(0+128),f
  7198  03A8                     l4560:	
  7199  03A8  084E               	movf	(sprintf@exp+1)^(0+128),w
  7200  03A9  3A80               	xorlw	128
  7201  03AA  0020               	movlb	0	; select bank0
  7202  03AB  00E1               	movwf	??_sprintf
  7203  03AC  3080               	movlw	128
  7204  03AD  0261               	subwf	??_sprintf,w
  7205  03AE  1D03               	skipz
  7206  03AF  2BB3               	goto	u7285
  7207  03B0  3001               	movlw	1
  7208  03B1  0021               	movlb	1	; select bank1
  7209  03B2  024D               	subwf	sprintf@exp^(0+128),w
  7210  03B3                     u7285:	
  7211  03B3  1803               	skipnc
  7212  03B4  2B95               	goto	l4554
  7213                           
  7214                           ;doprnt.c: 1210: }
  7215                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7216  03B5  0021               	movlb	1	; select bank1
  7217  03B6  0855               	movf	(sprintf@prec+1)^(0+128),w
  7218  03B7  3A80               	xorlw	128
  7219  03B8  0020               	movlb	0	; select bank0
  7220  03B9  00E1               	movwf	??_sprintf
  7221  03BA  3080               	movlw	128
  7222  03BB  0261               	subwf	??_sprintf,w
  7223  03BC  1D03               	skipz
  7224  03BD  2BC1               	goto	u7295
  7225  03BE  3009               	movlw	9
  7226  03BF  0021               	movlb	1	; select bank1
  7227  03C0  0254               	subwf	sprintf@prec^(0+128),w
  7228  03C1                     u7295:	
  7229  03C1  1C03               	skipc
  7230  03C2  2BC5               	goto	l4566
  7231                           
  7232                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7233  03C3  3008               	movlw	8
  7234  03C4  2BC7               	goto	L4
  7235  03C5                     l4566:	
  7236                           
  7237                           ;doprnt.c: 1213: else
  7238                           ;doprnt.c: 1214: c = prec;
  7239  03C5  0021               	movlb	1	; select bank1
  7240  03C6  0854               	movf	sprintf@prec^(0+128),w
  7241  03C7                     L4:	
  7242  03C7  0020               	movlb	0	; select bank0
  7243  03C8  00E1               	movwf	??_sprintf
  7244  03C9  0861               	movf	??_sprintf,w
  7245  03CA  0021               	movlb	1	; select bank1
  7246  03CB  00D9               	movwf	sprintf@c^(0+128)
  7247                           
  7248                           ;doprnt.c: 1215: prec -= c;
  7249  03CC  0859               	movf	sprintf@c^(0+128),w
  7250  03CD  0020               	movlb	0	; select bank0
  7251  03CE  00E1               	movwf	??_sprintf
  7252  03CF  01E2               	clrf	??_sprintf+1
  7253  03D0  1BE1               	btfsc	??_sprintf,7
  7254  03D1  03E2               	decf	??_sprintf+1,f
  7255  03D2  0861               	movf	??_sprintf,w
  7256  03D3  0021               	movlb	1	; select bank1
  7257  03D4  02D4               	subwf	sprintf@prec^(0+128),f
  7258  03D5  0020               	movlb	0	; select bank0
  7259  03D6  0862               	movf	??_sprintf+1,w
  7260  03D7  0021               	movlb	1	; select bank1
  7261  03D8  3BD5               	subwfb	(sprintf@prec+1)^(0+128),f
  7262                           
  7263                           ;doprnt.c: 1219: if(c)
  7264  03D9  0859               	movf	sprintf@c^(0+128),w
  7265  03DA  1903               	btfsc	3,2
  7266  03DB  2BEB               	goto	l4574
  7267                           
  7268                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7269  03DC  302E               	movlw	46
  7270  03DD  0020               	movlb	0	; select bank0
  7271  03DE  00E1               	movwf	??_sprintf
  7272  03DF  0021               	movlb	1	; select bank1
  7273  03E0  0853               	movf	sprintf@sp^(0+128),w
  7274  03E1  0086               	movwf	6
  7275  03E2  0187               	clrf	7
  7276  03E3  0020               	movlb	0	; select bank0
  7277  03E4  0861               	movf	??_sprintf,w
  7278  03E5  0081               	movwf	1
  7279  03E6  3001               	movlw	1
  7280  03E7  00E1               	movwf	??_sprintf
  7281  03E8  0861               	movf	??_sprintf,w
  7282  03E9  0021               	movlb	1	; select bank1
  7283  03EA  07D3               	addwf	sprintf@sp^(0+128),f
  7284  03EB                     l4574:	
  7285                           
  7286                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7287  03EB  0859               	movf	sprintf@c^(0+128),w
  7288  03EC  318D  25BC  3180   	fcall	_scale
  7289  03EF  0020               	movlb	0	; select bank0
  7290  03F0  083B               	movf	?_scale,w
  7291  03F1  0021               	movlb	1	; select bank1
  7292  03F2  00C3               	movwf	_sprintf$921^(0+128)
  7293  03F3  0020               	movlb	0	; select bank0
  7294  03F4  083C               	movf	?_scale+1,w
  7295  03F5  0021               	movlb	1	; select bank1
  7296  03F6  00C4               	movwf	(_sprintf$921+1)^(0+128)
  7297  03F7  0020               	movlb	0	; select bank0
  7298  03F8  083D               	movf	?_scale+2,w
  7299  03F9  0021               	movlb	1	; select bank1
  7300  03FA  00C5               	movwf	(_sprintf$921+2)^(0+128)
  7301                           
  7302                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7303  03FB  0843               	movf	_sprintf$921^(0+128),w
  7304  03FC  0020               	movlb	0	; select bank0
  7305  03FD  00AE               	movwf	___ftmul@f2
  7306  03FE  0021               	movlb	1	; select bank1
  7307  03FF  0844               	movf	(_sprintf$921+1)^(0+128),w
  7308  0400  0020               	movlb	0	; select bank0
  7309  0401  00AF               	movwf	___ftmul@f2+1
  7310  0402  0021               	movlb	1	; select bank1
  7311  0403  0845               	movf	(_sprintf$921+2)^(0+128),w
  7312  0404  0020               	movlb	0	; select bank0
  7313  0405  00B0               	movwf	___ftmul@f2+2
  7314  0406  0021               	movlb	1	; select bank1
  7315  0407  0856               	movf	sprintf@fval^(0+128),w
  7316  0408  0020               	movlb	0	; select bank0
  7317  0409  00AB               	movwf	___ftmul@f1
  7318  040A  0021               	movlb	1	; select bank1
  7319  040B  0857               	movf	(sprintf@fval+1)^(0+128),w
  7320  040C  0020               	movlb	0	; select bank0
  7321  040D  00AC               	movwf	___ftmul@f1+1
  7322  040E  0021               	movlb	1	; select bank1
  7323  040F  0858               	movf	(sprintf@fval+2)^(0+128),w
  7324  0410  0020               	movlb	0	; select bank0
  7325  0411  00AD               	movwf	___ftmul@f1+2
  7326  0412  319F  274C  3180   	fcall	___ftmul
  7327  0415  0020               	movlb	0	; select bank0
  7328  0416  082B               	movf	?___ftmul,w
  7329  0417  00C4               	movwf	___fttol@f1
  7330  0418  082C               	movf	?___ftmul+1,w
  7331  0419  00C5               	movwf	___fttol@f1+1
  7332  041A  082D               	movf	?___ftmul+2,w
  7333  041B  00C6               	movwf	___fttol@f1+2
  7334  041C  319E  2630  3180   	fcall	___fttol
  7335  041F  0020               	movlb	0	; select bank0
  7336  0420  0847               	movf	?___fttol+3,w
  7337  0421  0021               	movlb	1	; select bank1
  7338  0422  00CC               	movwf	(sprintf@val+3)^(0+128)
  7339  0423  0020               	movlb	0	; select bank0
  7340  0424  0846               	movf	?___fttol+2,w
  7341  0425  0021               	movlb	1	; select bank1
  7342  0426  00CB               	movwf	(sprintf@val+2)^(0+128)
  7343  0427  0020               	movlb	0	; select bank0
  7344  0428  0845               	movf	?___fttol+1,w
  7345  0429  0021               	movlb	1	; select bank1
  7346  042A  00CA               	movwf	(sprintf@val+1)^(0+128)
  7347  042B  0020               	movlb	0	; select bank0
  7348  042C  0844               	movf	?___fttol,w
  7349  042D  0021               	movlb	1	; select bank1
  7350  042E                     L5:	
  7351  042E  00C9               	movwf	sprintf@val^(0+128)
  7352  042F  30FF               	movlw	255
  7353  0430  0020               	movlb	0	; select bank0
  7354  0431  00E1               	movwf	??_sprintf
  7355  0432  0861               	movf	??_sprintf,w
  7356  0433  0021               	movlb	1	; select bank1
  7357  0434  07D9               	addwf	sprintf@c^(0+128),f
  7358  0435  0A59               	incf	sprintf@c^(0+128),w
  7359  0436  1903               	btfsc	3,2
  7360  0437  2CCD               	goto	l4596
  7361                           
  7362                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7363                           
  7364                           ;doprnt.c: 1228: while(c--) {
  7365  0438  0859               	movf	sprintf@c^(0+128),w
  7366  0439  0020               	movlb	0	; select bank0
  7367  043A  00E1               	movwf	??_sprintf
  7368  043B  01E2               	clrf	??_sprintf+1
  7369  043C  35E1               	lslf	??_sprintf,f
  7370  043D  0DE2               	rlf	??_sprintf+1,f
  7371  043E  35E1               	lslf	??_sprintf,f
  7372  043F  0DE2               	rlf	??_sprintf+1,f
  7373  0440  3000               	movlw	low (_dpowers| (0+32768))
  7374  0441  0761               	addwf	??_sprintf,w
  7375  0442  0084               	movwf	4
  7376  0443  30A0               	movlw	high (_dpowers| (0+32768))
  7377  0444  3D62               	addwfc	??_sprintf+1,w
  7378  0445  0085               	movwf	5
  7379  0446  3F00               	moviw [0]fsr0
  7380  0447  00F1               	movwf	___lldiv@divisor
  7381  0448  3F01               	moviw [1]fsr0
  7382  0449  00F2               	movwf	___lldiv@divisor+1
  7383  044A  3F02               	moviw [2]fsr0
  7384  044B  00F3               	movwf	___lldiv@divisor+2
  7385  044C  3F03               	moviw [3]fsr0
  7386  044D  00F4               	movwf	___lldiv@divisor+3
  7387  044E  0021               	movlb	1	; select bank1
  7388  044F  084C               	movf	(sprintf@val+3)^(0+128),w
  7389  0450  00F8               	movwf	___lldiv@dividend+3
  7390  0451  084B               	movf	(sprintf@val+2)^(0+128),w
  7391  0452  00F7               	movwf	___lldiv@dividend+2
  7392  0453  084A               	movf	(sprintf@val+1)^(0+128),w
  7393  0454  00F6               	movwf	___lldiv@dividend+1
  7394  0455  0849               	movf	sprintf@val^(0+128),w
  7395  0456  00F5               	movwf	___lldiv@dividend
  7396  0457  319D  257B  3180   	fcall	___lldiv
  7397  045A  0874               	movf	?___lldiv+3,w
  7398  045B  0021               	movlb	1	; select bank1
  7399  045C  00D2               	movwf	(sprintf@tmpval+3)^(0+128)
  7400  045D  0873               	movf	?___lldiv+2,w
  7401  045E  00D1               	movwf	(sprintf@tmpval+2)^(0+128)
  7402  045F  0872               	movf	?___lldiv+1,w
  7403  0460  00D0               	movwf	(sprintf@tmpval+1)^(0+128)
  7404  0461  0871               	movf	?___lldiv,w
  7405  0462  00CF               	movwf	sprintf@tmpval^(0+128)
  7406                           
  7407                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7408  0463  3000               	movlw	0
  7409  0464  00F4               	movwf	___llmod@divisor+3
  7410  0465  3000               	movlw	0
  7411  0466  00F3               	movwf	___llmod@divisor+2
  7412  0467  3000               	movlw	0
  7413  0468  00F2               	movwf	___llmod@divisor+1
  7414  0469  300A               	movlw	10
  7415  046A  00F1               	movwf	___llmod@divisor
  7416  046B  0852               	movf	(sprintf@tmpval+3)^(0+128),w
  7417  046C  00F8               	movwf	___llmod@dividend+3
  7418  046D  0851               	movf	(sprintf@tmpval+2)^(0+128),w
  7419  046E  00F7               	movwf	___llmod@dividend+2
  7420  046F  0850               	movf	(sprintf@tmpval+1)^(0+128),w
  7421  0470  00F6               	movwf	___llmod@dividend+1
  7422  0471  084F               	movf	sprintf@tmpval^(0+128),w
  7423  0472  00F5               	movwf	___llmod@dividend
  7424  0473  319C  24A2  3180   	fcall	___llmod
  7425  0476  0874               	movf	?___llmod+3,w
  7426  0477  0021               	movlb	1	; select bank1
  7427  0478  00D2               	movwf	(sprintf@tmpval+3)^(0+128)
  7428  0479  0873               	movf	?___llmod+2,w
  7429  047A  00D1               	movwf	(sprintf@tmpval+2)^(0+128)
  7430  047B  0872               	movf	?___llmod+1,w
  7431  047C  00D0               	movwf	(sprintf@tmpval+1)^(0+128)
  7432  047D  0871               	movf	?___llmod,w
  7433  047E  00CF               	movwf	sprintf@tmpval^(0+128)
  7434                           
  7435                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7436  047F  084F               	movf	sprintf@tmpval^(0+128),w
  7437  0480  3E30               	addlw	48
  7438  0481  0020               	movlb	0	; select bank0
  7439  0482  00E1               	movwf	??_sprintf
  7440  0483  0021               	movlb	1	; select bank1
  7441  0484  0853               	movf	sprintf@sp^(0+128),w
  7442  0485  0086               	movwf	6
  7443  0486  0187               	clrf	7
  7444  0487  0020               	movlb	0	; select bank0
  7445  0488  0861               	movf	??_sprintf,w
  7446  0489  0081               	movwf	1
  7447  048A  3001               	movlw	1
  7448  048B  00E1               	movwf	??_sprintf
  7449  048C  0861               	movf	??_sprintf,w
  7450  048D  0021               	movlb	1	; select bank1
  7451  048E  07D3               	addwf	sprintf@sp^(0+128),f
  7452                           
  7453                           ;doprnt.c: 1232: val %= dpowers[c];
  7454  048F  0859               	movf	sprintf@c^(0+128),w
  7455  0490  0020               	movlb	0	; select bank0
  7456  0491  00E1               	movwf	??_sprintf
  7457  0492  01E2               	clrf	??_sprintf+1
  7458  0493  35E1               	lslf	??_sprintf,f
  7459  0494  0DE2               	rlf	??_sprintf+1,f
  7460  0495  35E1               	lslf	??_sprintf,f
  7461  0496  0DE2               	rlf	??_sprintf+1,f
  7462  0497  3000               	movlw	low (_dpowers| (0+32768))
  7463  0498  0761               	addwf	??_sprintf,w
  7464  0499  0084               	movwf	4
  7465  049A  30A0               	movlw	high (_dpowers| (0+32768))
  7466  049B  3D62               	addwfc	??_sprintf+1,w
  7467  049C  0085               	movwf	5
  7468  049D  3F00               	moviw [0]fsr0
  7469  049E  00F1               	movwf	___llmod@divisor
  7470  049F  3F01               	moviw [1]fsr0
  7471  04A0  00F2               	movwf	___llmod@divisor+1
  7472  04A1  3F02               	moviw [2]fsr0
  7473  04A2  00F3               	movwf	___llmod@divisor+2
  7474  04A3  3F03               	moviw [3]fsr0
  7475  04A4  00F4               	movwf	___llmod@divisor+3
  7476  04A5  0021               	movlb	1	; select bank1
  7477  04A6  084C               	movf	(sprintf@val+3)^(0+128),w
  7478  04A7  00F8               	movwf	___llmod@dividend+3
  7479  04A8  084B               	movf	(sprintf@val+2)^(0+128),w
  7480  04A9  00F7               	movwf	___llmod@dividend+2
  7481  04AA  084A               	movf	(sprintf@val+1)^(0+128),w
  7482  04AB  00F6               	movwf	___llmod@dividend+1
  7483  04AC  0849               	movf	sprintf@val^(0+128),w
  7484  04AD  00F5               	movwf	___llmod@dividend
  7485  04AE  319C  24A2  3180   	fcall	___llmod
  7486  04B1  0874               	movf	?___llmod+3,w
  7487  04B2  0021               	movlb	1	; select bank1
  7488  04B3  00CC               	movwf	(sprintf@val+3)^(0+128)
  7489  04B4  0873               	movf	?___llmod+2,w
  7490  04B5  00CB               	movwf	(sprintf@val+2)^(0+128)
  7491  04B6  0872               	movf	?___llmod+1,w
  7492  04B7  00CA               	movwf	(sprintf@val+1)^(0+128)
  7493  04B8  0871               	movf	?___llmod,w
  7494  04B9  2C2E               	goto	L5
  7495  04BA                     l4590:	
  7496                           ;doprnt.c: 1233: }
  7497                           ;doprnt.c: 1235: while(prec) {
  7498                           
  7499                           
  7500                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7501  04BA  3030               	movlw	48
  7502  04BB  0020               	movlb	0	; select bank0
  7503  04BC  00E1               	movwf	??_sprintf
  7504  04BD  0021               	movlb	1	; select bank1
  7505  04BE  0853               	movf	sprintf@sp^(0+128),w
  7506  04BF  0086               	movwf	6
  7507  04C0  0187               	clrf	7
  7508  04C1  0020               	movlb	0	; select bank0
  7509  04C2  0861               	movf	??_sprintf,w
  7510  04C3  0081               	movwf	1
  7511  04C4  3001               	movlw	1
  7512  04C5  00E1               	movwf	??_sprintf
  7513  04C6  0861               	movf	??_sprintf,w
  7514  04C7  0021               	movlb	1	; select bank1
  7515  04C8  07D3               	addwf	sprintf@sp^(0+128),f
  7516                           
  7517                           ;doprnt.c: 1237: prec--;
  7518  04C9  30FF               	movlw	255
  7519  04CA  07D4               	addwf	sprintf@prec^(0+128),f
  7520  04CB  30FF               	movlw	255
  7521  04CC  3DD5               	addwfc	(sprintf@prec+1)^(0+128),f
  7522  04CD                     l4596:	
  7523  04CD  0854               	movf	sprintf@prec^(0+128),w
  7524  04CE  0455               	iorwf	(sprintf@prec+1)^(0+128),w
  7525  04CF  1903               	btfsc	3,2
  7526  04D0  2852               	goto	l4614
  7527  04D1  2CBA               	goto	l4590
  7528  04D2                     l4598:	
  7529                           ;doprnt.c: 1238: }
  7530                           ;doprnt.c: 1245: continue;
  7531                           
  7532                           
  7533                           ;doprnt.c: 1246: }
  7534                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7535  04D2  0021               	movlb	1	; select bank1
  7536  04D3  0854               	movf	sprintf@prec^(0+128),w
  7537  04D4  0455               	iorwf	(sprintf@prec+1)^(0+128),w
  7538  04D5  1D03               	btfss	3,2
  7539  04D6  2CE1               	goto	l437
  7540  04D7  084C               	movf	(sprintf@val+3)^(0+128),w
  7541  04D8  044B               	iorwf	(sprintf@val+2)^(0+128),w
  7542  04D9  044A               	iorwf	(sprintf@val+1)^(0+128),w
  7543  04DA  0449               	iorwf	sprintf@val^(0+128),w
  7544  04DB  1D03               	skipz
  7545  04DC  2CE1               	goto	l437
  7546                           
  7547                           ;doprnt.c: 1291: prec++;
  7548  04DD  3001               	movlw	1
  7549  04DE  07D4               	addwf	sprintf@prec^(0+128),f
  7550  04DF  3000               	movlw	0
  7551  04E0  3DD5               	addwfc	(sprintf@prec+1)^(0+128),f
  7552  04E1                     l437:	
  7553                           
  7554                           ;doprnt.c: 1339: if(c < prec)
  7555  04E1  0859               	movf	sprintf@c^(0+128),w
  7556  04E2  0020               	movlb	0	; select bank0
  7557  04E3  00E1               	movwf	??_sprintf
  7558  04E4  01E2               	clrf	??_sprintf+1
  7559  04E5  1BE1               	btfsc	??_sprintf,7
  7560  04E6  03E2               	decf	??_sprintf+1,f
  7561  04E7  0862               	movf	??_sprintf+1,w
  7562  04E8  3A80               	xorlw	128
  7563  04E9  00E3               	movwf	??_sprintf+2
  7564  04EA  0021               	movlb	1	; select bank1
  7565  04EB  0855               	movf	(sprintf@prec+1)^(0+128),w
  7566  04EC  3A80               	xorlw	128
  7567  04ED  0020               	movlb	0	; select bank0
  7568  04EE  0263               	subwf	??_sprintf+2,w
  7569  04EF  1D03               	skipz
  7570  04F0  2CF5               	goto	u7355
  7571  04F1  0021               	movlb	1	; select bank1
  7572  04F2  0854               	movf	sprintf@prec^(0+128),w
  7573  04F3  0020               	movlb	0	; select bank0
  7574  04F4  0261               	subwf	??_sprintf,w
  7575  04F5                     u7355:	
  7576  04F5  1803               	skipnc
  7577  04F6  2CFF               	goto	l4606
  7578                           
  7579                           ;doprnt.c: 1340: c = prec;
  7580  04F7  0021               	movlb	1	; select bank1
  7581  04F8  0854               	movf	sprintf@prec^(0+128),w
  7582  04F9  0020               	movlb	0	; select bank0
  7583  04FA  00E1               	movwf	??_sprintf
  7584  04FB  0861               	movf	??_sprintf,w
  7585  04FC  0021               	movlb	1	; select bank1
  7586  04FD  00D9               	movwf	sprintf@c^(0+128)
  7587  04FE  2D1B               	goto	l439
  7588  04FF                     l4606:	
  7589                           
  7590                           ;doprnt.c: 1341: else if(prec < c)
  7591  04FF  0021               	movlb	1	; select bank1
  7592  0500  0859               	movf	sprintf@c^(0+128),w
  7593  0501  0020               	movlb	0	; select bank0
  7594  0502  00E1               	movwf	??_sprintf
  7595  0503  01E2               	clrf	??_sprintf+1
  7596  0504  1BE1               	btfsc	??_sprintf,7
  7597  0505  03E2               	decf	??_sprintf+1,f
  7598  0506  0021               	movlb	1	; select bank1
  7599  0507  0855               	movf	(sprintf@prec+1)^(0+128),w
  7600  0508  3A80               	xorlw	128
  7601  0509  0020               	movlb	0	; select bank0
  7602  050A  00E3               	movwf	??_sprintf+2
  7603  050B  0862               	movf	??_sprintf+1,w
  7604  050C  3A80               	xorlw	128
  7605  050D  0263               	subwf	??_sprintf+2,w
  7606  050E  1D03               	skipz
  7607  050F  2D13               	goto	u7365
  7608  0510  0861               	movf	??_sprintf,w
  7609  0511  0021               	movlb	1	; select bank1
  7610  0512  0254               	subwf	sprintf@prec^(0+128),w
  7611  0513                     u7365:	
  7612  0513  1803               	skipnc
  7613  0514  2D1B               	goto	l439
  7614                           
  7615                           ;doprnt.c: 1342: prec = c;
  7616  0515  0021               	movlb	1	; select bank1
  7617  0516  0859               	movf	sprintf@c^(0+128),w
  7618  0517  00D4               	movwf	sprintf@prec^(0+128)
  7619  0518  01D5               	clrf	(sprintf@prec+1)^(0+128)
  7620  0519  1BD4               	btfsc	sprintf@prec^(0+128),7
  7621  051A  03D5               	decf	(sprintf@prec+1)^(0+128),f
  7622  051B                     l439:	
  7623                           
  7624                           ;doprnt.c: 1422: {
  7625                           ;doprnt.c: 1438: if(flag & 0x03)
  7626  051B  3003               	movlw	3
  7627  051C  0021               	movlb	1	; select bank1
  7628  051D  0547               	andwf	sprintf@flag^(0+128),w
  7629  051E  0020               	movlb	0	; select bank0
  7630  051F  00E1               	movwf	??_sprintf
  7631  0520  3000               	movlw	0
  7632  0521  0021               	movlb	1	; select bank1
  7633  0522  0548               	andwf	(sprintf@flag+1)^(0+128),w
  7634  0523  0020               	movlb	0	; select bank0
  7635  0524  00E2               	movwf	??_sprintf+1
  7636  0525  0861               	movf	??_sprintf,w
  7637  0526  0462               	iorwf	??_sprintf+1,w
  7638  0527  1903               	btfsc	3,2
  7639  0528  2852               	goto	l4614
  7640                           
  7641                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7642  0529  302D               	movlw	45
  7643  052A                     L6:	
  7644  052A  00E1               	movwf	??_sprintf
  7645  052B  0021               	movlb	1	; select bank1
  7646  052C  0853               	movf	sprintf@sp^(0+128),w
  7647  052D  0086               	movwf	6
  7648  052E  0187               	clrf	7
  7649  052F  0020               	movlb	0	; select bank0
  7650  0530  0861               	movf	??_sprintf,w
  7651  0531  0081               	movwf	1
  7652  0532  3001               	movlw	1
  7653  0533  00E1               	movwf	??_sprintf
  7654  0534  0861               	movf	??_sprintf,w
  7655  0535  0021               	movlb	1	; select bank1
  7656  0536  07D3               	addwf	sprintf@sp^(0+128),f
  7657  0537  2852               	goto	l4614
  7658  0538                     l4616:	
  7659                           ;doprnt.c: 1469: }
  7660                           ;doprnt.c: 1533: }
  7661                           ;doprnt.c: 1535: alldone:
  7662                           
  7663                           
  7664                           ;doprnt.c: 1538: *sp = 0;
  7665  0538  0853               	movf	sprintf@sp^(0+128),w
  7666  0539  0086               	movwf	6
  7667  053A  0187               	clrf	7
  7668  053B  0181               	clrf	1
  7669  053C  0008               	return
  7670  053D                     __end_of_sprintf:	
  7671                           ;doprnt.c: 1540: return 0;
  7672                           ;	Return value of _sprintf is never used
  7673                           
  7674                           
  7675                           	psect	text4
  7676  0DBC                     __ptext4:	
  7677 ;; *************** function _scale *****************
  7678 ;; Defined at:
  7679 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  scl             1    wreg     char 
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;  scl             1   35[BANK0 ] char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  3   27[BANK0 ] char 
  7686 ;; Registers used:
  7687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7693 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7694 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7695 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7696 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7697 ;;Total ram usage:        9 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    3
  7700 ;; This function calls:
  7701 ;;		___awdiv
  7702 ;;		___awmod
  7703 ;;		___ftmul
  7704 ;;		___wmul
  7705 ;; This function is called by:
  7706 ;;		_sprintf
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           
  7711                           ;psect for function _scale
  7712  0DBC                     _scale:	
  7713                           
  7714                           ;incstack = 0
  7715                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7716                           ;scale@scl stored from wreg
  7717  0DBC  0020               	movlb	0	; select bank0
  7718  0DBD  00C3               	movwf	scale@scl
  7719                           
  7720                           ;doprnt.c: 428: if(scl < 0) {
  7721  0DBE  1FC3               	btfss	scale@scl,7
  7722  0DBF  2EE1               	goto	l3956
  7723                           
  7724                           ;doprnt.c: 429: scl = -scl;
  7725  0DC0  09C3               	comf	scale@scl,f
  7726  0DC1  0AC3               	incf	scale@scl,f
  7727                           
  7728                           ;doprnt.c: 430: if(scl>=110)
  7729  0DC2  0843               	movf	scale@scl,w
  7730  0DC3  3A80               	xorlw	128
  7731  0DC4  3E12               	addlw	-238
  7732  0DC5  1C03               	skipc
  7733  0DC6  2E65               	goto	l3946
  7734                           
  7735                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7736  0DC7  300A               	movlw	10
  7737  0DC8  00F8               	movwf	___awdiv@divisor
  7738  0DC9  3000               	movlw	0
  7739  0DCA  00F9               	movwf	___awdiv@divisor+1
  7740  0DCB  0843               	movf	scale@scl,w
  7741  0DCC  00F3               	movwf	___awmod@dividend
  7742  0DCD  01F4               	clrf	___awmod@dividend+1
  7743  0DCE  1BF3               	btfsc	___awmod@dividend,7
  7744  0DCF  03F4               	decf	___awmod@dividend+1,f
  7745  0DD0  3064               	movlw	100
  7746  0DD1  00F1               	movwf	___awmod@divisor
  7747  0DD2  3000               	movlw	0
  7748  0DD3  00F2               	movwf	___awmod@divisor+1
  7749  0DD4  319C  24E4  318D   	fcall	___awmod
  7750  0DD7  0872               	movf	?___awmod+1,w
  7751  0DD8  00FB               	movwf	___awdiv@dividend+1
  7752  0DD9  0871               	movf	?___awmod,w
  7753  0DDA  00FA               	movwf	___awdiv@dividend
  7754  0DDB  319D  2529  318D   	fcall	___awdiv
  7755  0DDE  0878               	movf	?___awdiv,w
  7756  0DDF  3E09               	addlw	9
  7757  0DE0  0020               	movlb	0	; select bank0
  7758  0DE1  00A5               	movwf	___wmul@multiplier
  7759  0DE2  3000               	movlw	0
  7760  0DE3  3D79               	addwfc	?___awdiv+1,w
  7761  0DE4  00A6               	movwf	___wmul@multiplier+1
  7762  0DE5  3003               	movlw	3
  7763  0DE6  00A7               	movwf	___wmul@multiplicand
  7764  0DE7  3000               	movlw	0
  7765  0DE8  00A8               	movwf	___wmul@multiplicand+1
  7766  0DE9  319B  2331  318D   	fcall	___wmul
  7767  0DEC  0020               	movlb	0	; select bank0
  7768  0DED  0826               	movf	?___wmul+1,w
  7769  0DEE  0085               	movwf	5
  7770  0DEF  0825               	movf	?___wmul,w
  7771  0DF0  0084               	movwf	4
  7772  0DF1  304F               	movlw	low (__npowers_| (0+32768))
  7773  0DF2  0784               	addwf	4,f
  7774  0DF3  30A0               	movlw	high (__npowers_| (0+32768))
  7775  0DF4  3D85               	addwfc	5,f
  7776  0DF5  3F00               	moviw [0]fsr0
  7777  0DF6  00AB               	movwf	___ftmul@f1
  7778  0DF7  3F01               	moviw [1]fsr0
  7779  0DF8  00AC               	movwf	___ftmul@f1+1
  7780  0DF9  3F02               	moviw [2]fsr0
  7781  0DFA  00AD               	movwf	___ftmul@f1+2
  7782  0DFB  3064               	movlw	100
  7783  0DFC  00F8               	movwf	___awdiv@divisor
  7784  0DFD  3000               	movlw	0
  7785  0DFE  00F9               	movwf	___awdiv@divisor+1
  7786  0DFF  0843               	movf	scale@scl,w
  7787  0E00  00FA               	movwf	___awdiv@dividend
  7788  0E01  01FB               	clrf	___awdiv@dividend+1
  7789  0E02  1BFA               	btfsc	___awdiv@dividend,7
  7790  0E03  03FB               	decf	___awdiv@dividend+1,f
  7791  0E04  319D  2529  318D   	fcall	___awdiv
  7792  0E07  0878               	movf	?___awdiv,w
  7793  0E08  3E12               	addlw	18
  7794  0E09  0020               	movlb	0	; select bank0
  7795  0E0A  00A5               	movwf	___wmul@multiplier
  7796  0E0B  3000               	movlw	0
  7797  0E0C  3D79               	addwfc	?___awdiv+1,w
  7798  0E0D  00A6               	movwf	___wmul@multiplier+1
  7799  0E0E  3003               	movlw	3
  7800  0E0F  00A7               	movwf	___wmul@multiplicand
  7801  0E10  3000               	movlw	0
  7802  0E11  00A8               	movwf	___wmul@multiplicand+1
  7803  0E12  319B  2331  318D   	fcall	___wmul
  7804  0E15  0020               	movlb	0	; select bank0
  7805  0E16  0826               	movf	?___wmul+1,w
  7806  0E17  0085               	movwf	5
  7807  0E18  0825               	movf	?___wmul,w
  7808  0E19  0084               	movwf	4
  7809  0E1A  304F               	movlw	low (__npowers_| (0+32768))
  7810  0E1B  0784               	addwf	4,f
  7811  0E1C  30A0               	movlw	high (__npowers_| (0+32768))
  7812  0E1D  3D85               	addwfc	5,f
  7813  0E1E  3F00               	moviw [0]fsr0
  7814  0E1F  00AE               	movwf	___ftmul@f2
  7815  0E20  3F01               	moviw [1]fsr0
  7816  0E21  00AF               	movwf	___ftmul@f2+1
  7817  0E22  3F02               	moviw [2]fsr0
  7818  0E23  00B0               	movwf	___ftmul@f2+2
  7819  0E24  319F  274C  318D   	fcall	___ftmul
  7820  0E27  0020               	movlb	0	; select bank0
  7821  0E28  082B               	movf	?___ftmul,w
  7822  0E29  00C0               	movwf	_scale$920
  7823  0E2A  082C               	movf	?___ftmul+1,w
  7824  0E2B  00C1               	movwf	_scale$920+1
  7825  0E2C  082D               	movf	?___ftmul+2,w
  7826  0E2D  00C2               	movwf	_scale$920+2
  7827                           
  7828                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7829  0E2E  0843               	movf	scale@scl,w
  7830  0E2F  00F3               	movwf	___awmod@dividend
  7831  0E30  01F4               	clrf	___awmod@dividend+1
  7832  0E31  1BF3               	btfsc	___awmod@dividend,7
  7833  0E32  03F4               	decf	___awmod@dividend+1,f
  7834  0E33  300A               	movlw	10
  7835  0E34  00F1               	movwf	___awmod@divisor
  7836  0E35  3000               	movlw	0
  7837  0E36  00F2               	movwf	___awmod@divisor+1
  7838  0E37  319C  24E4  318D   	fcall	___awmod
  7839  0E3A  0872               	movf	?___awmod+1,w
  7840  0E3B  0020               	movlb	0	; select bank0
  7841  0E3C  00A6               	movwf	___wmul@multiplier+1
  7842  0E3D  0871               	movf	?___awmod,w
  7843  0E3E  00A5               	movwf	___wmul@multiplier
  7844  0E3F  3003               	movlw	3
  7845  0E40  00A7               	movwf	___wmul@multiplicand
  7846  0E41  3000               	movlw	0
  7847  0E42  00A8               	movwf	___wmul@multiplicand+1
  7848  0E43  319B  2331  318D   	fcall	___wmul
  7849  0E46  0020               	movlb	0	; select bank0
  7850  0E47  0826               	movf	?___wmul+1,w
  7851  0E48  0085               	movwf	5
  7852  0E49  0825               	movf	?___wmul,w
  7853  0E4A  0084               	movwf	4
  7854  0E4B  304F               	movlw	low (__npowers_| (0+32768))
  7855  0E4C  0784               	addwf	4,f
  7856  0E4D  30A0               	movlw	high (__npowers_| (0+32768))
  7857  0E4E  3D85               	addwfc	5,f
  7858  0E4F  3F00               	moviw [0]fsr0
  7859  0E50  00AB               	movwf	___ftmul@f1
  7860  0E51  3F01               	moviw [1]fsr0
  7861  0E52  00AC               	movwf	___ftmul@f1+1
  7862  0E53  3F02               	moviw [2]fsr0
  7863  0E54  00AD               	movwf	___ftmul@f1+2
  7864  0E55  0840               	movf	_scale$920,w
  7865  0E56  00AE               	movwf	___ftmul@f2
  7866  0E57  0841               	movf	_scale$920+1,w
  7867  0E58  00AF               	movwf	___ftmul@f2+1
  7868  0E59  0842               	movf	_scale$920+2,w
  7869  0E5A  00B0               	movwf	___ftmul@f2+2
  7870  0E5B  319F  274C         	fcall	___ftmul
  7871  0E5D  0020               	movlb	0	; select bank0
  7872  0E5E  082B               	movf	?___ftmul,w
  7873  0E5F  00BB               	movwf	?_scale
  7874  0E60  082C               	movf	?___ftmul+1,w
  7875  0E61  00BC               	movwf	?_scale+1
  7876  0E62  082D               	movf	?___ftmul+2,w
  7877  0E63  00BD               	movwf	?_scale+2
  7878  0E64  0008               	return
  7879  0E65                     l3946:	
  7880                           
  7881                           ;doprnt.c: 432: else if(scl > 10)
  7882  0E65  0843               	movf	scale@scl,w
  7883  0E66  3A80               	xorlw	128
  7884  0E67  3E75               	addlw	-139
  7885  0E68  1C03               	skipc
  7886  0E69  2EC4               	goto	l3952
  7887                           
  7888                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7889  0E6A  0843               	movf	scale@scl,w
  7890  0E6B  00F3               	movwf	___awmod@dividend
  7891  0E6C  01F4               	clrf	___awmod@dividend+1
  7892  0E6D  1BF3               	btfsc	___awmod@dividend,7
  7893  0E6E  03F4               	decf	___awmod@dividend+1,f
  7894  0E6F  300A               	movlw	10
  7895  0E70  00F1               	movwf	___awmod@divisor
  7896  0E71  3000               	movlw	0
  7897  0E72  00F2               	movwf	___awmod@divisor+1
  7898  0E73  319C  24E4  318D   	fcall	___awmod
  7899  0E76  0872               	movf	?___awmod+1,w
  7900  0E77  0020               	movlb	0	; select bank0
  7901  0E78  00A6               	movwf	___wmul@multiplier+1
  7902  0E79  0871               	movf	?___awmod,w
  7903  0E7A  00A5               	movwf	___wmul@multiplier
  7904  0E7B  3003               	movlw	3
  7905  0E7C  00A7               	movwf	___wmul@multiplicand
  7906  0E7D  3000               	movlw	0
  7907  0E7E  00A8               	movwf	___wmul@multiplicand+1
  7908  0E7F  319B  2331  318D   	fcall	___wmul
  7909  0E82  0020               	movlb	0	; select bank0
  7910  0E83  0826               	movf	?___wmul+1,w
  7911  0E84  0085               	movwf	5
  7912  0E85  0825               	movf	?___wmul,w
  7913  0E86  0084               	movwf	4
  7914  0E87  304F               	movlw	low (__npowers_| (0+32768))
  7915  0E88  0784               	addwf	4,f
  7916  0E89  30A0               	movlw	high (__npowers_| (0+32768))
  7917  0E8A  3D85               	addwfc	5,f
  7918  0E8B  3F00               	moviw [0]fsr0
  7919  0E8C  00AB               	movwf	___ftmul@f1
  7920  0E8D  3F01               	moviw [1]fsr0
  7921  0E8E  00AC               	movwf	___ftmul@f1+1
  7922  0E8F  3F02               	moviw [2]fsr0
  7923  0E90  00AD               	movwf	___ftmul@f1+2
  7924  0E91  300A               	movlw	10
  7925  0E92  00F8               	movwf	___awdiv@divisor
  7926  0E93  3000               	movlw	0
  7927  0E94  00F9               	movwf	___awdiv@divisor+1
  7928  0E95  0843               	movf	scale@scl,w
  7929  0E96  00FA               	movwf	___awdiv@dividend
  7930  0E97  01FB               	clrf	___awdiv@dividend+1
  7931  0E98  1BFA               	btfsc	___awdiv@dividend,7
  7932  0E99  03FB               	decf	___awdiv@dividend+1,f
  7933  0E9A  319D  2529  318D   	fcall	___awdiv
  7934  0E9D  0878               	movf	?___awdiv,w
  7935  0E9E  3E09               	addlw	9
  7936  0E9F  0020               	movlb	0	; select bank0
  7937  0EA0  00A5               	movwf	___wmul@multiplier
  7938  0EA1  3000               	movlw	0
  7939  0EA2  3D79               	addwfc	?___awdiv+1,w
  7940  0EA3  00A6               	movwf	___wmul@multiplier+1
  7941  0EA4  3003               	movlw	3
  7942  0EA5  00A7               	movwf	___wmul@multiplicand
  7943  0EA6  3000               	movlw	0
  7944  0EA7  00A8               	movwf	___wmul@multiplicand+1
  7945  0EA8  319B  2331  318D   	fcall	___wmul
  7946  0EAB  0020               	movlb	0	; select bank0
  7947  0EAC  0826               	movf	?___wmul+1,w
  7948  0EAD  0085               	movwf	5
  7949  0EAE  0825               	movf	?___wmul,w
  7950  0EAF  0084               	movwf	4
  7951  0EB0  304F               	movlw	low (__npowers_| (0+32768))
  7952  0EB1  0784               	addwf	4,f
  7953  0EB2  30A0               	movlw	high (__npowers_| (0+32768))
  7954  0EB3  3D85               	addwfc	5,f
  7955  0EB4  3F00               	moviw [0]fsr0
  7956  0EB5  00AE               	movwf	___ftmul@f2
  7957  0EB6  3F01               	moviw [1]fsr0
  7958  0EB7  00AF               	movwf	___ftmul@f2+1
  7959  0EB8  3F02               	moviw [2]fsr0
  7960  0EB9  00B0               	movwf	___ftmul@f2+2
  7961  0EBA  319F  274C         	fcall	___ftmul
  7962  0EBC  0020               	movlb	0	; select bank0
  7963  0EBD  082B               	movf	?___ftmul,w
  7964  0EBE  00BB               	movwf	?_scale
  7965  0EBF  082C               	movf	?___ftmul+1,w
  7966  0EC0  00BC               	movwf	?_scale+1
  7967  0EC1  082D               	movf	?___ftmul+2,w
  7968  0EC2  00BD               	movwf	?_scale+2
  7969  0EC3  0008               	return
  7970  0EC4                     l3952:	
  7971                           
  7972                           ;doprnt.c: 434: return _npowers_[scl];
  7973  0EC4  0843               	movf	scale@scl,w
  7974  0EC5  00BE               	movwf	??_scale
  7975  0EC6  01BF               	clrf	??_scale+1
  7976  0EC7  083E               	movf	??_scale,w
  7977  0EC8  00A5               	movwf	___wmul@multiplier
  7978  0EC9  083F               	movf	??_scale+1,w
  7979  0ECA  00A6               	movwf	___wmul@multiplier+1
  7980  0ECB  3003               	movlw	3
  7981  0ECC  00A7               	movwf	___wmul@multiplicand
  7982  0ECD  3000               	movlw	0
  7983  0ECE  00A8               	movwf	___wmul@multiplicand+1
  7984  0ECF  319B  2331         	fcall	___wmul
  7985  0ED1  0020               	movlb	0	; select bank0
  7986  0ED2  0826               	movf	?___wmul+1,w
  7987  0ED3  0085               	movwf	5
  7988  0ED4  0825               	movf	?___wmul,w
  7989  0ED5  0084               	movwf	4
  7990  0ED6  304F               	movlw	low (__npowers_| (0+32768))
  7991  0ED7  0784               	addwf	4,f
  7992  0ED8  30A0               	movlw	high (__npowers_| (0+32768))
  7993  0ED9  3D85               	addwfc	5,f
  7994  0EDA  3F00               	moviw [0]fsr0
  7995  0EDB  00BB               	movwf	?_scale
  7996  0EDC  3F01               	moviw [1]fsr0
  7997  0EDD  00BC               	movwf	?_scale+1
  7998  0EDE  3F02               	moviw [2]fsr0
  7999  0EDF  00BD               	movwf	?_scale+2
  8000  0EE0  0008               	return
  8001  0EE1                     l3956:	
  8002                           
  8003                           ;doprnt.c: 435: }
  8004                           ;doprnt.c: 436: if(scl>=110)
  8005  0EE1  0843               	movf	scale@scl,w
  8006  0EE2  3A80               	xorlw	128
  8007  0EE3  3E12               	addlw	-238
  8008  0EE4  1C03               	skipc
  8009  0EE5  2F84               	goto	l3964
  8010                           
  8011                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8012  0EE6  300A               	movlw	10
  8013  0EE7  00F8               	movwf	___awdiv@divisor
  8014  0EE8  3000               	movlw	0
  8015  0EE9  00F9               	movwf	___awdiv@divisor+1
  8016  0EEA  0843               	movf	scale@scl,w
  8017  0EEB  00F3               	movwf	___awmod@dividend
  8018  0EEC  01F4               	clrf	___awmod@dividend+1
  8019  0EED  1BF3               	btfsc	___awmod@dividend,7
  8020  0EEE  03F4               	decf	___awmod@dividend+1,f
  8021  0EEF  3064               	movlw	100
  8022  0EF0  00F1               	movwf	___awmod@divisor
  8023  0EF1  3000               	movlw	0
  8024  0EF2  00F2               	movwf	___awmod@divisor+1
  8025  0EF3  319C  24E4  318D   	fcall	___awmod
  8026  0EF6  0872               	movf	?___awmod+1,w
  8027  0EF7  00FB               	movwf	___awdiv@dividend+1
  8028  0EF8  0871               	movf	?___awmod,w
  8029  0EF9  00FA               	movwf	___awdiv@dividend
  8030  0EFA  319D  2529  318D   	fcall	___awdiv
  8031  0EFD  0878               	movf	?___awdiv,w
  8032  0EFE  3E09               	addlw	9
  8033  0EFF  0020               	movlb	0	; select bank0
  8034  0F00  00A5               	movwf	___wmul@multiplier
  8035  0F01  3000               	movlw	0
  8036  0F02  3D79               	addwfc	?___awdiv+1,w
  8037  0F03  00A6               	movwf	___wmul@multiplier+1
  8038  0F04  3003               	movlw	3
  8039  0F05  00A7               	movwf	___wmul@multiplicand
  8040  0F06  3000               	movlw	0
  8041  0F07  00A8               	movwf	___wmul@multiplicand+1
  8042  0F08  319B  2331  318D   	fcall	___wmul
  8043  0F0B  0020               	movlb	0	; select bank0
  8044  0F0C  0826               	movf	?___wmul+1,w
  8045  0F0D  0085               	movwf	5
  8046  0F0E  0825               	movf	?___wmul,w
  8047  0F0F  0084               	movwf	4
  8048  0F10  3028               	movlw	low (__powers_| (0+32768))
  8049  0F11  0784               	addwf	4,f
  8050  0F12  30A0               	movlw	high (__powers_| (0+32768))
  8051  0F13  3D85               	addwfc	5,f
  8052  0F14  3F00               	moviw [0]fsr0
  8053  0F15  00AB               	movwf	___ftmul@f1
  8054  0F16  3F01               	moviw [1]fsr0
  8055  0F17  00AC               	movwf	___ftmul@f1+1
  8056  0F18  3F02               	moviw [2]fsr0
  8057  0F19  00AD               	movwf	___ftmul@f1+2
  8058  0F1A  3064               	movlw	100
  8059  0F1B  00F8               	movwf	___awdiv@divisor
  8060  0F1C  3000               	movlw	0
  8061  0F1D  00F9               	movwf	___awdiv@divisor+1
  8062  0F1E  0843               	movf	scale@scl,w
  8063  0F1F  00FA               	movwf	___awdiv@dividend
  8064  0F20  01FB               	clrf	___awdiv@dividend+1
  8065  0F21  1BFA               	btfsc	___awdiv@dividend,7
  8066  0F22  03FB               	decf	___awdiv@dividend+1,f
  8067  0F23  319D  2529  318D   	fcall	___awdiv
  8068  0F26  0878               	movf	?___awdiv,w
  8069  0F27  3E12               	addlw	18
  8070  0F28  0020               	movlb	0	; select bank0
  8071  0F29  00A5               	movwf	___wmul@multiplier
  8072  0F2A  3000               	movlw	0
  8073  0F2B  3D79               	addwfc	?___awdiv+1,w
  8074  0F2C  00A6               	movwf	___wmul@multiplier+1
  8075  0F2D  3003               	movlw	3
  8076  0F2E  00A7               	movwf	___wmul@multiplicand
  8077  0F2F  3000               	movlw	0
  8078  0F30  00A8               	movwf	___wmul@multiplicand+1
  8079  0F31  319B  2331  318D   	fcall	___wmul
  8080  0F34  0020               	movlb	0	; select bank0
  8081  0F35  0826               	movf	?___wmul+1,w
  8082  0F36  0085               	movwf	5
  8083  0F37  0825               	movf	?___wmul,w
  8084  0F38  0084               	movwf	4
  8085  0F39  3028               	movlw	low (__powers_| (0+32768))
  8086  0F3A  0784               	addwf	4,f
  8087  0F3B  30A0               	movlw	high (__powers_| (0+32768))
  8088  0F3C  3D85               	addwfc	5,f
  8089  0F3D  3F00               	moviw [0]fsr0
  8090  0F3E  00AE               	movwf	___ftmul@f2
  8091  0F3F  3F01               	moviw [1]fsr0
  8092  0F40  00AF               	movwf	___ftmul@f2+1
  8093  0F41  3F02               	moviw [2]fsr0
  8094  0F42  00B0               	movwf	___ftmul@f2+2
  8095  0F43  319F  274C  318D   	fcall	___ftmul
  8096  0F46  0020               	movlb	0	; select bank0
  8097  0F47  082B               	movf	?___ftmul,w
  8098  0F48  00C0               	movwf	_scale$920
  8099  0F49  082C               	movf	?___ftmul+1,w
  8100  0F4A  00C1               	movwf	_scale$920+1
  8101  0F4B  082D               	movf	?___ftmul+2,w
  8102  0F4C  00C2               	movwf	_scale$920+2
  8103                           
  8104                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8105  0F4D  0843               	movf	scale@scl,w
  8106  0F4E  00F3               	movwf	___awmod@dividend
  8107  0F4F  01F4               	clrf	___awmod@dividend+1
  8108  0F50  1BF3               	btfsc	___awmod@dividend,7
  8109  0F51  03F4               	decf	___awmod@dividend+1,f
  8110  0F52  300A               	movlw	10
  8111  0F53  00F1               	movwf	___awmod@divisor
  8112  0F54  3000               	movlw	0
  8113  0F55  00F2               	movwf	___awmod@divisor+1
  8114  0F56  319C  24E4  318D   	fcall	___awmod
  8115  0F59  0872               	movf	?___awmod+1,w
  8116  0F5A  0020               	movlb	0	; select bank0
  8117  0F5B  00A6               	movwf	___wmul@multiplier+1
  8118  0F5C  0871               	movf	?___awmod,w
  8119  0F5D  00A5               	movwf	___wmul@multiplier
  8120  0F5E  3003               	movlw	3
  8121  0F5F  00A7               	movwf	___wmul@multiplicand
  8122  0F60  3000               	movlw	0
  8123  0F61  00A8               	movwf	___wmul@multiplicand+1
  8124  0F62  319B  2331  318D   	fcall	___wmul
  8125  0F65  0020               	movlb	0	; select bank0
  8126  0F66  0826               	movf	?___wmul+1,w
  8127  0F67  0085               	movwf	5
  8128  0F68  0825               	movf	?___wmul,w
  8129  0F69  0084               	movwf	4
  8130  0F6A  3028               	movlw	low (__powers_| (0+32768))
  8131  0F6B  0784               	addwf	4,f
  8132  0F6C  30A0               	movlw	high (__powers_| (0+32768))
  8133  0F6D  3D85               	addwfc	5,f
  8134  0F6E  3F00               	moviw [0]fsr0
  8135  0F6F  00AB               	movwf	___ftmul@f1
  8136  0F70  3F01               	moviw [1]fsr0
  8137  0F71  00AC               	movwf	___ftmul@f1+1
  8138  0F72  3F02               	moviw [2]fsr0
  8139  0F73  00AD               	movwf	___ftmul@f1+2
  8140  0F74  0840               	movf	_scale$920,w
  8141  0F75  00AE               	movwf	___ftmul@f2
  8142  0F76  0841               	movf	_scale$920+1,w
  8143  0F77  00AF               	movwf	___ftmul@f2+1
  8144  0F78  0842               	movf	_scale$920+2,w
  8145  0F79  00B0               	movwf	___ftmul@f2+2
  8146  0F7A  319F  274C         	fcall	___ftmul
  8147  0F7C  0020               	movlb	0	; select bank0
  8148  0F7D  082B               	movf	?___ftmul,w
  8149  0F7E  00BB               	movwf	?_scale
  8150  0F7F  082C               	movf	?___ftmul+1,w
  8151  0F80  00BC               	movwf	?_scale+1
  8152  0F81  082D               	movf	?___ftmul+2,w
  8153  0F82  00BD               	movwf	?_scale+2
  8154  0F83  0008               	return
  8155  0F84                     l3964:	
  8156                           
  8157                           ;doprnt.c: 438: else if(scl > 10)
  8158  0F84  0843               	movf	scale@scl,w
  8159  0F85  3A80               	xorlw	128
  8160  0F86  3E75               	addlw	-139
  8161  0F87  1C03               	skipc
  8162  0F88  2FE3               	goto	l3970
  8163                           
  8164                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8165  0F89  0843               	movf	scale@scl,w
  8166  0F8A  00F3               	movwf	___awmod@dividend
  8167  0F8B  01F4               	clrf	___awmod@dividend+1
  8168  0F8C  1BF3               	btfsc	___awmod@dividend,7
  8169  0F8D  03F4               	decf	___awmod@dividend+1,f
  8170  0F8E  300A               	movlw	10
  8171  0F8F  00F1               	movwf	___awmod@divisor
  8172  0F90  3000               	movlw	0
  8173  0F91  00F2               	movwf	___awmod@divisor+1
  8174  0F92  319C  24E4  318D   	fcall	___awmod
  8175  0F95  0872               	movf	?___awmod+1,w
  8176  0F96  0020               	movlb	0	; select bank0
  8177  0F97  00A6               	movwf	___wmul@multiplier+1
  8178  0F98  0871               	movf	?___awmod,w
  8179  0F99  00A5               	movwf	___wmul@multiplier
  8180  0F9A  3003               	movlw	3
  8181  0F9B  00A7               	movwf	___wmul@multiplicand
  8182  0F9C  3000               	movlw	0
  8183  0F9D  00A8               	movwf	___wmul@multiplicand+1
  8184  0F9E  319B  2331  318D   	fcall	___wmul
  8185  0FA1  0020               	movlb	0	; select bank0
  8186  0FA2  0826               	movf	?___wmul+1,w
  8187  0FA3  0085               	movwf	5
  8188  0FA4  0825               	movf	?___wmul,w
  8189  0FA5  0084               	movwf	4
  8190  0FA6  3028               	movlw	low (__powers_| (0+32768))
  8191  0FA7  0784               	addwf	4,f
  8192  0FA8  30A0               	movlw	high (__powers_| (0+32768))
  8193  0FA9  3D85               	addwfc	5,f
  8194  0FAA  3F00               	moviw [0]fsr0
  8195  0FAB  00AB               	movwf	___ftmul@f1
  8196  0FAC  3F01               	moviw [1]fsr0
  8197  0FAD  00AC               	movwf	___ftmul@f1+1
  8198  0FAE  3F02               	moviw [2]fsr0
  8199  0FAF  00AD               	movwf	___ftmul@f1+2
  8200  0FB0  300A               	movlw	10
  8201  0FB1  00F8               	movwf	___awdiv@divisor
  8202  0FB2  3000               	movlw	0
  8203  0FB3  00F9               	movwf	___awdiv@divisor+1
  8204  0FB4  0843               	movf	scale@scl,w
  8205  0FB5  00FA               	movwf	___awdiv@dividend
  8206  0FB6  01FB               	clrf	___awdiv@dividend+1
  8207  0FB7  1BFA               	btfsc	___awdiv@dividend,7
  8208  0FB8  03FB               	decf	___awdiv@dividend+1,f
  8209  0FB9  319D  2529  318D   	fcall	___awdiv
  8210  0FBC  0878               	movf	?___awdiv,w
  8211  0FBD  3E09               	addlw	9
  8212  0FBE  0020               	movlb	0	; select bank0
  8213  0FBF  00A5               	movwf	___wmul@multiplier
  8214  0FC0  3000               	movlw	0
  8215  0FC1  3D79               	addwfc	?___awdiv+1,w
  8216  0FC2  00A6               	movwf	___wmul@multiplier+1
  8217  0FC3  3003               	movlw	3
  8218  0FC4  00A7               	movwf	___wmul@multiplicand
  8219  0FC5  3000               	movlw	0
  8220  0FC6  00A8               	movwf	___wmul@multiplicand+1
  8221  0FC7  319B  2331  318D   	fcall	___wmul
  8222  0FCA  0020               	movlb	0	; select bank0
  8223  0FCB  0826               	movf	?___wmul+1,w
  8224  0FCC  0085               	movwf	5
  8225  0FCD  0825               	movf	?___wmul,w
  8226  0FCE  0084               	movwf	4
  8227  0FCF  3028               	movlw	low (__powers_| (0+32768))
  8228  0FD0  0784               	addwf	4,f
  8229  0FD1  30A0               	movlw	high (__powers_| (0+32768))
  8230  0FD2  3D85               	addwfc	5,f
  8231  0FD3  3F00               	moviw [0]fsr0
  8232  0FD4  00AE               	movwf	___ftmul@f2
  8233  0FD5  3F01               	moviw [1]fsr0
  8234  0FD6  00AF               	movwf	___ftmul@f2+1
  8235  0FD7  3F02               	moviw [2]fsr0
  8236  0FD8  00B0               	movwf	___ftmul@f2+2
  8237  0FD9  319F  274C         	fcall	___ftmul
  8238  0FDB  0020               	movlb	0	; select bank0
  8239  0FDC  082B               	movf	?___ftmul,w
  8240  0FDD  00BB               	movwf	?_scale
  8241  0FDE  082C               	movf	?___ftmul+1,w
  8242  0FDF  00BC               	movwf	?_scale+1
  8243  0FE0  082D               	movf	?___ftmul+2,w
  8244  0FE1  00BD               	movwf	?_scale+2
  8245  0FE2  0008               	return
  8246  0FE3                     l3970:	
  8247                           
  8248                           ;doprnt.c: 440: return _powers_[scl];
  8249  0FE3  0843               	movf	scale@scl,w
  8250  0FE4  00BE               	movwf	??_scale
  8251  0FE5  01BF               	clrf	??_scale+1
  8252  0FE6  083E               	movf	??_scale,w
  8253  0FE7  00A5               	movwf	___wmul@multiplier
  8254  0FE8  083F               	movf	??_scale+1,w
  8255  0FE9  00A6               	movwf	___wmul@multiplier+1
  8256  0FEA  3003               	movlw	3
  8257  0FEB  00A7               	movwf	___wmul@multiplicand
  8258  0FEC  3000               	movlw	0
  8259  0FED  00A8               	movwf	___wmul@multiplicand+1
  8260  0FEE  319B  2331         	fcall	___wmul
  8261  0FF0  0020               	movlb	0	; select bank0
  8262  0FF1  0826               	movf	?___wmul+1,w
  8263  0FF2  0085               	movwf	5
  8264  0FF3  0825               	movf	?___wmul,w
  8265  0FF4  0084               	movwf	4
  8266  0FF5  3028               	movlw	low (__powers_| (0+32768))
  8267  0FF6  0784               	addwf	4,f
  8268  0FF7  30A0               	movlw	high (__powers_| (0+32768))
  8269  0FF8  3D85               	addwfc	5,f
  8270  0FF9  3F00               	moviw [0]fsr0
  8271  0FFA  00BB               	movwf	?_scale
  8272  0FFB  3F01               	moviw [1]fsr0
  8273  0FFC  00BC               	movwf	?_scale+1
  8274  0FFD  3F02               	moviw [2]fsr0
  8275  0FFE  00BD               	movwf	?_scale+2
  8276  0FFF  0008               	return
  8277  1000                     __end_of_scale:	
  8278                           
  8279                           	psect	text5
  8280  1AE3                     __ptext5:	
  8281 ;; *************** function _isdigit *****************
  8282 ;; Defined at:
  8283 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  c               1    wreg     unsigned char 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  c               1    2[COMMON] unsigned char 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;		None               void
  8290 ;; Registers used:
  8291 ;;		wreg, status,2, status,0
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8298 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8301 ;;Total ram usage:        2 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:    1
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_sprintf
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           
  8312                           ;psect for function _isdigit
  8313  1AE3                     _isdigit:	
  8314                           
  8315                           ;incstack = 0
  8316                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8317                           ;isdigit@c stored from wreg
  8318  1AE3  00F2               	movwf	isdigit@c
  8319  1AE4  01F1               	clrf	_isdigit$696
  8320  1AE5  303A               	movlw	58
  8321  1AE6  0272               	subwf	isdigit@c,w
  8322  1AE7  1803               	skipnc
  8323  1AE8  2AEF               	goto	l3982
  8324  1AE9  3030               	movlw	48
  8325  1AEA  0272               	subwf	isdigit@c,w
  8326  1AEB  1C03               	skipc
  8327  1AEC  2AEF               	goto	l3982
  8328  1AED  01F1               	clrf	_isdigit$696
  8329  1AEE  0AF1               	incf	_isdigit$696,f
  8330  1AEF                     l3982:	
  8331  1AEF  0C71               	rrf	_isdigit$696,w
  8332  1AF0  0008               	return
  8333  1AF1                     __end_of_isdigit:	
  8334                           
  8335                           	psect	text6
  8336  14F7                     __ptext6:	
  8337 ;; *************** function _fround *****************
  8338 ;; Defined at:
  8339 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  prec            1    wreg     unsigned char 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;  prec            1   40[BANK0 ] unsigned char 
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  3   27[BANK0 ] unsigned char 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8353 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8354 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8355 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8356 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8357 ;;Total ram usage:       14 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:    3
  8360 ;; This function calls:
  8361 ;;		___awdiv
  8362 ;;		___awmod
  8363 ;;		___ftmul
  8364 ;;		___wmul
  8365 ;; This function is called by:
  8366 ;;		_sprintf
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           
  8371                           ;psect for function _fround
  8372  14F7                     _fround:	
  8373                           
  8374                           ;incstack = 0
  8375                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8376                           ;fround@prec stored from wreg
  8377  14F7  0020               	movlb	0	; select bank0
  8378  14F8  00C8               	movwf	fround@prec
  8379                           
  8380                           ;doprnt.c: 413: if(prec>=110)
  8381  14F9  306E               	movlw	110
  8382  14FA  0248               	subwf	fround@prec,w
  8383  14FB  1C03               	skipc
  8384  14FC  2DB7               	goto	l3922
  8385                           
  8386                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8387  14FD  300A               	movlw	10
  8388  14FE  00F8               	movwf	___awdiv@divisor
  8389  14FF  3000               	movlw	0
  8390  1500  00F9               	movwf	___awdiv@divisor+1
  8391  1501  0848               	movf	fround@prec,w
  8392  1502  00BE               	movwf	??_fround
  8393  1503  01BF               	clrf	??_fround+1
  8394  1504  083E               	movf	??_fround,w
  8395  1505  00F3               	movwf	___awmod@dividend
  8396  1506  083F               	movf	??_fround+1,w
  8397  1507  00F4               	movwf	___awmod@dividend+1
  8398  1508  3064               	movlw	100
  8399  1509  00F1               	movwf	___awmod@divisor
  8400  150A  3000               	movlw	0
  8401  150B  00F2               	movwf	___awmod@divisor+1
  8402  150C  319C  24E4  3194   	fcall	___awmod
  8403  150F  0872               	movf	?___awmod+1,w
  8404  1510  00FB               	movwf	___awdiv@dividend+1
  8405  1511  0871               	movf	?___awmod,w
  8406  1512  00FA               	movwf	___awdiv@dividend
  8407  1513  319D  2529  3194   	fcall	___awdiv
  8408  1516  0878               	movf	?___awdiv,w
  8409  1517  3E09               	addlw	9
  8410  1518  0020               	movlb	0	; select bank0
  8411  1519  00A5               	movwf	___wmul@multiplier
  8412  151A  3000               	movlw	0
  8413  151B  3D79               	addwfc	?___awdiv+1,w
  8414  151C  00A6               	movwf	___wmul@multiplier+1
  8415  151D  3003               	movlw	3
  8416  151E  00A7               	movwf	___wmul@multiplicand
  8417  151F  3000               	movlw	0
  8418  1520  00A8               	movwf	___wmul@multiplicand+1
  8419  1521  319B  2331  3194   	fcall	___wmul
  8420  1524  0020               	movlb	0	; select bank0
  8421  1525  0826               	movf	?___wmul+1,w
  8422  1526  0085               	movwf	5
  8423  1527  0825               	movf	?___wmul,w
  8424  1528  0084               	movwf	4
  8425  1529  304F               	movlw	low (__npowers_| (0+32768))
  8426  152A  0784               	addwf	4,f
  8427  152B  30A0               	movlw	high (__npowers_| (0+32768))
  8428  152C  3D85               	addwfc	5,f
  8429  152D  3F00               	moviw [0]fsr0
  8430  152E  00AB               	movwf	___ftmul@f1
  8431  152F  3F01               	moviw [1]fsr0
  8432  1530  00AC               	movwf	___ftmul@f1+1
  8433  1531  3F02               	moviw [2]fsr0
  8434  1532  00AD               	movwf	___ftmul@f1+2
  8435  1533  3064               	movlw	100
  8436  1534  00F8               	movwf	___awdiv@divisor
  8437  1535  3000               	movlw	0
  8438  1536  00F9               	movwf	___awdiv@divisor+1
  8439  1537  0848               	movf	fround@prec,w
  8440  1538  00C0               	movwf	??_fround+2
  8441  1539  01C1               	clrf	??_fround+3
  8442  153A  0840               	movf	??_fround+2,w
  8443  153B  00FA               	movwf	___awdiv@dividend
  8444  153C  0841               	movf	??_fround+3,w
  8445  153D  00FB               	movwf	___awdiv@dividend+1
  8446  153E  319D  2529  3194   	fcall	___awdiv
  8447  1541  0878               	movf	?___awdiv,w
  8448  1542  3E12               	addlw	18
  8449  1543  0020               	movlb	0	; select bank0
  8450  1544  00A5               	movwf	___wmul@multiplier
  8451  1545  3000               	movlw	0
  8452  1546  3D79               	addwfc	?___awdiv+1,w
  8453  1547  00A6               	movwf	___wmul@multiplier+1
  8454  1548  3003               	movlw	3
  8455  1549  00A7               	movwf	___wmul@multiplicand
  8456  154A  3000               	movlw	0
  8457  154B  00A8               	movwf	___wmul@multiplicand+1
  8458  154C  319B  2331  3194   	fcall	___wmul
  8459  154F  0020               	movlb	0	; select bank0
  8460  1550  0826               	movf	?___wmul+1,w
  8461  1551  0085               	movwf	5
  8462  1552  0825               	movf	?___wmul,w
  8463  1553  0084               	movwf	4
  8464  1554  304F               	movlw	low (__npowers_| (0+32768))
  8465  1555  0784               	addwf	4,f
  8466  1556  30A0               	movlw	high (__npowers_| (0+32768))
  8467  1557  3D85               	addwfc	5,f
  8468  1558  3F00               	moviw [0]fsr0
  8469  1559  00AE               	movwf	___ftmul@f2
  8470  155A  3F01               	moviw [1]fsr0
  8471  155B  00AF               	movwf	___ftmul@f2+1
  8472  155C  3F02               	moviw [2]fsr0
  8473  155D  00B0               	movwf	___ftmul@f2+2
  8474  155E  319F  274C  3194   	fcall	___ftmul
  8475  1561  0020               	movlb	0	; select bank0
  8476  1562  082B               	movf	?___ftmul,w
  8477  1563  00C5               	movwf	_fround$918
  8478  1564  082C               	movf	?___ftmul+1,w
  8479  1565  00C6               	movwf	_fround$918+1
  8480  1566  082D               	movf	?___ftmul+2,w
  8481  1567  00C7               	movwf	_fround$918+2
  8482                           
  8483                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8484  1568  0848               	movf	fround@prec,w
  8485  1569  00BE               	movwf	??_fround
  8486  156A  01BF               	clrf	??_fround+1
  8487  156B  083E               	movf	??_fround,w
  8488  156C  00F3               	movwf	___awmod@dividend
  8489  156D  083F               	movf	??_fround+1,w
  8490  156E  00F4               	movwf	___awmod@dividend+1
  8491  156F  300A               	movlw	10
  8492  1570  00F1               	movwf	___awmod@divisor
  8493  1571  3000               	movlw	0
  8494  1572  00F2               	movwf	___awmod@divisor+1
  8495  1573  319C  24E4  3194   	fcall	___awmod
  8496  1576  0872               	movf	?___awmod+1,w
  8497  1577  0020               	movlb	0	; select bank0
  8498  1578  00A6               	movwf	___wmul@multiplier+1
  8499  1579  0871               	movf	?___awmod,w
  8500  157A  00A5               	movwf	___wmul@multiplier
  8501  157B  3003               	movlw	3
  8502  157C  00A7               	movwf	___wmul@multiplicand
  8503  157D  3000               	movlw	0
  8504  157E  00A8               	movwf	___wmul@multiplicand+1
  8505  157F  319B  2331  3194   	fcall	___wmul
  8506  1582  0020               	movlb	0	; select bank0
  8507  1583  0826               	movf	?___wmul+1,w
  8508  1584  0085               	movwf	5
  8509  1585  0825               	movf	?___wmul,w
  8510  1586  0084               	movwf	4
  8511  1587  304F               	movlw	low (__npowers_| (0+32768))
  8512  1588  0784               	addwf	4,f
  8513  1589  30A0               	movlw	high (__npowers_| (0+32768))
  8514  158A  3D85               	addwfc	5,f
  8515  158B  3F00               	moviw [0]fsr0
  8516  158C  00AB               	movwf	___ftmul@f1
  8517  158D  3F01               	moviw [1]fsr0
  8518  158E  00AC               	movwf	___ftmul@f1+1
  8519  158F  3F02               	moviw [2]fsr0
  8520  1590  00AD               	movwf	___ftmul@f1+2
  8521  1591  0845               	movf	_fround$918,w
  8522  1592  00AE               	movwf	___ftmul@f2
  8523  1593  0846               	movf	_fround$918+1,w
  8524  1594  00AF               	movwf	___ftmul@f2+1
  8525  1595  0847               	movf	_fround$918+2,w
  8526  1596  00B0               	movwf	___ftmul@f2+2
  8527  1597  319F  274C  3194   	fcall	___ftmul
  8528  159A  0020               	movlb	0	; select bank0
  8529  159B  082B               	movf	?___ftmul,w
  8530  159C  00C2               	movwf	_fround$919
  8531  159D  082C               	movf	?___ftmul+1,w
  8532  159E  00C3               	movwf	_fround$919+1
  8533  159F  082D               	movf	?___ftmul+2,w
  8534  15A0  00C4               	movwf	_fround$919+2
  8535                           
  8536                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8537  15A1  3000               	movlw	0
  8538  15A2  00AB               	movwf	___ftmul@f1
  8539  15A3  3000               	movlw	0
  8540  15A4  00AC               	movwf	___ftmul@f1+1
  8541  15A5  303F               	movlw	63
  8542  15A6  00AD               	movwf	___ftmul@f1+2
  8543  15A7  0842               	movf	_fround$919,w
  8544  15A8  00AE               	movwf	___ftmul@f2
  8545  15A9  0843               	movf	_fround$919+1,w
  8546  15AA  00AF               	movwf	___ftmul@f2+1
  8547  15AB  0844               	movf	_fround$919+2,w
  8548  15AC  00B0               	movwf	___ftmul@f2+2
  8549  15AD  319F  274C         	fcall	___ftmul
  8550  15AF  0020               	movlb	0	; select bank0
  8551  15B0  082B               	movf	?___ftmul,w
  8552  15B1  00BB               	movwf	?_fround
  8553  15B2  082C               	movf	?___ftmul+1,w
  8554  15B3  00BC               	movwf	?_fround+1
  8555  15B4  082D               	movf	?___ftmul+2,w
  8556  15B5  00BD               	movwf	?_fround+2
  8557  15B6  0008               	return
  8558  15B7                     l3922:	
  8559                           
  8560                           ;doprnt.c: 415: else if(prec > 10)
  8561  15B7  300B               	movlw	11
  8562  15B8  0248               	subwf	fround@prec,w
  8563  15B9  1C03               	skipc
  8564  15BA  2E2F               	goto	l3930
  8565                           
  8566                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8567  15BB  0848               	movf	fround@prec,w
  8568  15BC  00BE               	movwf	??_fround
  8569  15BD  01BF               	clrf	??_fround+1
  8570  15BE  083E               	movf	??_fround,w
  8571  15BF  00F3               	movwf	___awmod@dividend
  8572  15C0  083F               	movf	??_fround+1,w
  8573  15C1  00F4               	movwf	___awmod@dividend+1
  8574  15C2  300A               	movlw	10
  8575  15C3  00F1               	movwf	___awmod@divisor
  8576  15C4  3000               	movlw	0
  8577  15C5  00F2               	movwf	___awmod@divisor+1
  8578  15C6  319C  24E4  3194   	fcall	___awmod
  8579  15C9  0872               	movf	?___awmod+1,w
  8580  15CA  0020               	movlb	0	; select bank0
  8581  15CB  00A6               	movwf	___wmul@multiplier+1
  8582  15CC  0871               	movf	?___awmod,w
  8583  15CD  00A5               	movwf	___wmul@multiplier
  8584  15CE  3003               	movlw	3
  8585  15CF  00A7               	movwf	___wmul@multiplicand
  8586  15D0  3000               	movlw	0
  8587  15D1  00A8               	movwf	___wmul@multiplicand+1
  8588  15D2  319B  2331  3194   	fcall	___wmul
  8589  15D5  0020               	movlb	0	; select bank0
  8590  15D6  0826               	movf	?___wmul+1,w
  8591  15D7  0085               	movwf	5
  8592  15D8  0825               	movf	?___wmul,w
  8593  15D9  0084               	movwf	4
  8594  15DA  304F               	movlw	low (__npowers_| (0+32768))
  8595  15DB  0784               	addwf	4,f
  8596  15DC  30A0               	movlw	high (__npowers_| (0+32768))
  8597  15DD  3D85               	addwfc	5,f
  8598  15DE  3F00               	moviw [0]fsr0
  8599  15DF  00AB               	movwf	___ftmul@f1
  8600  15E0  3F01               	moviw [1]fsr0
  8601  15E1  00AC               	movwf	___ftmul@f1+1
  8602  15E2  3F02               	moviw [2]fsr0
  8603  15E3  00AD               	movwf	___ftmul@f1+2
  8604  15E4  300A               	movlw	10
  8605  15E5  00F8               	movwf	___awdiv@divisor
  8606  15E6  3000               	movlw	0
  8607  15E7  00F9               	movwf	___awdiv@divisor+1
  8608  15E8  0848               	movf	fround@prec,w
  8609  15E9  00C0               	movwf	??_fround+2
  8610  15EA  01C1               	clrf	??_fround+3
  8611  15EB  0840               	movf	??_fround+2,w
  8612  15EC  00FA               	movwf	___awdiv@dividend
  8613  15ED  0841               	movf	??_fround+3,w
  8614  15EE  00FB               	movwf	___awdiv@dividend+1
  8615  15EF  319D  2529  3194   	fcall	___awdiv
  8616  15F2  0878               	movf	?___awdiv,w
  8617  15F3  3E09               	addlw	9
  8618  15F4  0020               	movlb	0	; select bank0
  8619  15F5  00A5               	movwf	___wmul@multiplier
  8620  15F6  3000               	movlw	0
  8621  15F7  3D79               	addwfc	?___awdiv+1,w
  8622  15F8  00A6               	movwf	___wmul@multiplier+1
  8623  15F9  3003               	movlw	3
  8624  15FA  00A7               	movwf	___wmul@multiplicand
  8625  15FB  3000               	movlw	0
  8626  15FC  00A8               	movwf	___wmul@multiplicand+1
  8627  15FD  319B  2331  3194   	fcall	___wmul
  8628  1600  0020               	movlb	0	; select bank0
  8629  1601  0826               	movf	?___wmul+1,w
  8630  1602  0085               	movwf	5
  8631  1603  0825               	movf	?___wmul,w
  8632  1604  0084               	movwf	4
  8633  1605  304F               	movlw	low (__npowers_| (0+32768))
  8634  1606  0784               	addwf	4,f
  8635  1607  30A0               	movlw	high (__npowers_| (0+32768))
  8636  1608  3D85               	addwfc	5,f
  8637  1609  3F00               	moviw [0]fsr0
  8638  160A  00AE               	movwf	___ftmul@f2
  8639  160B  3F01               	moviw [1]fsr0
  8640  160C  00AF               	movwf	___ftmul@f2+1
  8641  160D  3F02               	moviw [2]fsr0
  8642  160E  00B0               	movwf	___ftmul@f2+2
  8643  160F  319F  274C  3194   	fcall	___ftmul
  8644  1612  0020               	movlb	0	; select bank0
  8645  1613  082B               	movf	?___ftmul,w
  8646  1614  00C5               	movwf	_fround$918
  8647  1615  082C               	movf	?___ftmul+1,w
  8648  1616  00C6               	movwf	_fround$918+1
  8649  1617  082D               	movf	?___ftmul+2,w
  8650  1618  00C7               	movwf	_fround$918+2
  8651                           
  8652                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8653  1619  3000               	movlw	0
  8654  161A  00AB               	movwf	___ftmul@f1
  8655  161B  3000               	movlw	0
  8656  161C  00AC               	movwf	___ftmul@f1+1
  8657  161D  303F               	movlw	63
  8658  161E  00AD               	movwf	___ftmul@f1+2
  8659  161F  0845               	movf	_fround$918,w
  8660  1620  00AE               	movwf	___ftmul@f2
  8661  1621  0846               	movf	_fround$918+1,w
  8662  1622  00AF               	movwf	___ftmul@f2+1
  8663  1623  0847               	movf	_fround$918+2,w
  8664  1624  00B0               	movwf	___ftmul@f2+2
  8665  1625  319F  274C         	fcall	___ftmul
  8666  1627  0020               	movlb	0	; select bank0
  8667  1628  082B               	movf	?___ftmul,w
  8668  1629  00BB               	movwf	?_fround
  8669  162A  082C               	movf	?___ftmul+1,w
  8670  162B  00BC               	movwf	?_fround+1
  8671  162C  082D               	movf	?___ftmul+2,w
  8672  162D  00BD               	movwf	?_fround+2
  8673  162E  0008               	return
  8674  162F                     l3930:	
  8675                           
  8676                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8677  162F  3000               	movlw	0
  8678  1630  00AB               	movwf	___ftmul@f1
  8679  1631  3000               	movlw	0
  8680  1632  00AC               	movwf	___ftmul@f1+1
  8681  1633  303F               	movlw	63
  8682  1634  00AD               	movwf	___ftmul@f1+2
  8683  1635  0848               	movf	fround@prec,w
  8684  1636  00BE               	movwf	??_fround
  8685  1637  01BF               	clrf	??_fround+1
  8686  1638  083E               	movf	??_fround,w
  8687  1639  00A5               	movwf	___wmul@multiplier
  8688  163A  083F               	movf	??_fround+1,w
  8689  163B  00A6               	movwf	___wmul@multiplier+1
  8690  163C  3003               	movlw	3
  8691  163D  00A7               	movwf	___wmul@multiplicand
  8692  163E  3000               	movlw	0
  8693  163F  00A8               	movwf	___wmul@multiplicand+1
  8694  1640  319B  2331  3194   	fcall	___wmul
  8695  1643  0020               	movlb	0	; select bank0
  8696  1644  0826               	movf	?___wmul+1,w
  8697  1645  0085               	movwf	5
  8698  1646  0825               	movf	?___wmul,w
  8699  1647  0084               	movwf	4
  8700  1648  304F               	movlw	low (__npowers_| (0+32768))
  8701  1649  0784               	addwf	4,f
  8702  164A  30A0               	movlw	high (__npowers_| (0+32768))
  8703  164B  3D85               	addwfc	5,f
  8704  164C  3F00               	moviw [0]fsr0
  8705  164D  00AE               	movwf	___ftmul@f2
  8706  164E  3F01               	moviw [1]fsr0
  8707  164F  00AF               	movwf	___ftmul@f2+1
  8708  1650  3F02               	moviw [2]fsr0
  8709  1651  00B0               	movwf	___ftmul@f2+2
  8710  1652  319F  274C         	fcall	___ftmul
  8711  1654  0020               	movlb	0	; select bank0
  8712  1655  082B               	movf	?___ftmul,w
  8713  1656  00BB               	movwf	?_fround
  8714  1657  082C               	movf	?___ftmul+1,w
  8715  1658  00BC               	movwf	?_fround+1
  8716  1659  082D               	movf	?___ftmul+2,w
  8717  165A  00BD               	movwf	?_fround+2
  8718  165B  0008               	return
  8719  165C                     __end_of_fround:	
  8720                           
  8721                           	psect	text7
  8722  1B31                     __ptext7:	
  8723 ;; *************** function ___wmul *****************
  8724 ;; Defined at:
  8725 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;  multiplier      2    5[BANK0 ] unsigned int 
  8728 ;;  multiplicand    2    7[BANK0 ] unsigned int 
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;  product         2    9[BANK0 ] unsigned int 
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  2    5[BANK0 ] unsigned int 
  8733 ;; Registers used:
  8734 ;;		wreg, status,2, status,0
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8740 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8741 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8743 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8744 ;;Total ram usage:        6 bytes
  8745 ;; Hardware stack levels used:    1
  8746 ;; Hardware stack levels required when called:    1
  8747 ;; This function calls:
  8748 ;;		Nothing
  8749 ;; This function is called by:
  8750 ;;		_fround
  8751 ;;		_scale
  8752 ;;		_sprintf
  8753 ;;		_LCD_GraphicsDisplayString
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           
  8758                           ;psect for function ___wmul
  8759  1B31                     ___wmul:	
  8760                           
  8761                           ;incstack = 0
  8762                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8763  1B31  0020               	movlb	0	; select bank0
  8764  1B32  01A9               	clrf	___wmul@product
  8765  1B33  01AA               	clrf	___wmul@product+1
  8766  1B34                     l3592:	
  8767  1B34  1C25               	btfss	___wmul@multiplier,0
  8768  1B35  2B3A               	goto	l447
  8769  1B36  0827               	movf	___wmul@multiplicand,w
  8770  1B37  07A9               	addwf	___wmul@product,f
  8771  1B38  0828               	movf	___wmul@multiplicand+1,w
  8772  1B39  3DAA               	addwfc	___wmul@product+1,f
  8773  1B3A                     l447:	
  8774  1B3A  3001               	movlw	1
  8775  1B3B                     u5345:	
  8776  1B3B  35A7               	lslf	___wmul@multiplicand,f
  8777  1B3C  0DA8               	rlf	___wmul@multiplicand+1,f
  8778  1B3D  0B89               	decfsz	9,f
  8779  1B3E  2B3B               	goto	u5345
  8780  1B3F  3001               	movlw	1
  8781  1B40                     u5355:	
  8782  1B40  36A6               	lsrf	___wmul@multiplier+1,f
  8783  1B41  0CA5               	rrf	___wmul@multiplier,f
  8784  1B42  0B89               	decfsz	9,f
  8785  1B43  2B40               	goto	u5355
  8786  1B44  0825               	movf	___wmul@multiplier,w
  8787  1B45  0426               	iorwf	___wmul@multiplier+1,w
  8788  1B46  1D03               	btfss	3,2
  8789  1B47  2B34               	goto	l3592
  8790  1B48  082A               	movf	___wmul@product+1,w
  8791  1B49  00A6               	movwf	?___wmul+1
  8792  1B4A  0829               	movf	___wmul@product,w
  8793  1B4B  00A5               	movwf	?___wmul
  8794  1B4C  0008               	return
  8795  1B4D                     __end_of___wmul:	
  8796                           
  8797                           	psect	text8
  8798  1F4C                     __ptext8:	
  8799 ;; *************** function ___ftmul *****************
  8800 ;; Defined at:
  8801 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  f1              3   11[BANK0 ] float 
  8804 ;;  f2              3   14[BANK0 ] float 
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  8807 ;;  sign            1   26[BANK0 ] unsigned char 
  8808 ;;  cntr            1   25[BANK0 ] unsigned char 
  8809 ;;  exp             1   21[BANK0 ] unsigned char 
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  3   11[BANK0 ] float 
  8812 ;; Registers used:
  8813 ;;		wreg, status,2, status,0, pclath, cstack
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8819 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8820 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8821 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8822 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8823 ;;Total ram usage:       16 bytes
  8824 ;; Hardware stack levels used:    1
  8825 ;; Hardware stack levels required when called:    2
  8826 ;; This function calls:
  8827 ;;		___ftpack
  8828 ;; This function is called by:
  8829 ;;		_main
  8830 ;;		_fround
  8831 ;;		_scale
  8832 ;;		_sprintf
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           
  8837                           ;psect for function ___ftmul
  8838  1F4C                     ___ftmul:	
  8839                           
  8840                           ;incstack = 0
  8841                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8842  1F4C  0020               	movlb	0	; select bank0
  8843  1F4D  082B               	movf	___ftmul@f1,w
  8844  1F4E  00B1               	movwf	??___ftmul
  8845  1F4F  082C               	movf	___ftmul@f1+1,w
  8846  1F50  00B2               	movwf	??___ftmul+1
  8847  1F51  082D               	movf	___ftmul@f1+2,w
  8848  1F52  00B3               	movwf	??___ftmul+2
  8849  1F53  1003               	clrc
  8850  1F54  0D32               	rlf	??___ftmul+1,w
  8851  1F55  0D33               	rlf	??___ftmul+2,w
  8852  1F56  00B4               	movwf	??___ftmul+3
  8853  1F57  0834               	movf	??___ftmul+3,w
  8854  1F58  00B5               	movwf	___ftmul@exp
  8855  1F59  0835               	movf	___ftmul@exp,w
  8856  1F5A  1D03               	btfss	3,2
  8857  1F5B  2F63               	goto	l3762
  8858  1F5C  3000               	movlw	0
  8859  1F5D  00AB               	movwf	?___ftmul
  8860  1F5E  3000               	movlw	0
  8861  1F5F  00AC               	movwf	?___ftmul+1
  8862  1F60  3000               	movlw	0
  8863  1F61  00AD               	movwf	?___ftmul+2
  8864  1F62  0008               	return
  8865  1F63                     l3762:	
  8866  1F63  082E               	movf	___ftmul@f2,w
  8867  1F64  00B1               	movwf	??___ftmul
  8868  1F65  082F               	movf	___ftmul@f2+1,w
  8869  1F66  00B2               	movwf	??___ftmul+1
  8870  1F67  0830               	movf	___ftmul@f2+2,w
  8871  1F68  00B3               	movwf	??___ftmul+2
  8872  1F69  1003               	clrc
  8873  1F6A  0D32               	rlf	??___ftmul+1,w
  8874  1F6B  0D33               	rlf	??___ftmul+2,w
  8875  1F6C  00B4               	movwf	??___ftmul+3
  8876  1F6D  0834               	movf	??___ftmul+3,w
  8877  1F6E  00BA               	movwf	___ftmul@sign
  8878  1F6F  083A               	movf	___ftmul@sign,w
  8879  1F70  1D03               	btfss	3,2
  8880  1F71  2F79               	goto	l3768
  8881  1F72  3000               	movlw	0
  8882  1F73  00AB               	movwf	?___ftmul
  8883  1F74  3000               	movlw	0
  8884  1F75  00AC               	movwf	?___ftmul+1
  8885  1F76  3000               	movlw	0
  8886  1F77  00AD               	movwf	?___ftmul+2
  8887  1F78  0008               	return
  8888  1F79                     l3768:	
  8889  1F79  083A               	movf	___ftmul@sign,w
  8890  1F7A  3E7B               	addlw	123
  8891  1F7B  00B1               	movwf	??___ftmul
  8892  1F7C  0831               	movf	??___ftmul,w
  8893  1F7D  07B5               	addwf	___ftmul@exp,f
  8894  1F7E  082B               	movf	___ftmul@f1,w
  8895  1F7F  00B1               	movwf	??___ftmul
  8896  1F80  082C               	movf	___ftmul@f1+1,w
  8897  1F81  00B2               	movwf	??___ftmul+1
  8898  1F82  082D               	movf	___ftmul@f1+2,w
  8899  1F83  00B3               	movwf	??___ftmul+2
  8900  1F84  3010               	movlw	16
  8901  1F85                     u5815:	
  8902  1F85  36B3               	lsrf	??___ftmul+2,f
  8903  1F86  0CB2               	rrf	??___ftmul+1,f
  8904  1F87  0CB1               	rrf	??___ftmul,f
  8905  1F88  0B89               	decfsz	9,f
  8906  1F89  2F85               	goto	u5815
  8907  1F8A  0831               	movf	??___ftmul,w
  8908  1F8B  00B4               	movwf	??___ftmul+3
  8909  1F8C  0834               	movf	??___ftmul+3,w
  8910  1F8D  00BA               	movwf	___ftmul@sign
  8911  1F8E  082E               	movf	___ftmul@f2,w
  8912  1F8F  00B1               	movwf	??___ftmul
  8913  1F90  082F               	movf	___ftmul@f2+1,w
  8914  1F91  00B2               	movwf	??___ftmul+1
  8915  1F92  0830               	movf	___ftmul@f2+2,w
  8916  1F93  00B3               	movwf	??___ftmul+2
  8917  1F94  3010               	movlw	16
  8918  1F95                     u5825:	
  8919  1F95  36B3               	lsrf	??___ftmul+2,f
  8920  1F96  0CB2               	rrf	??___ftmul+1,f
  8921  1F97  0CB1               	rrf	??___ftmul,f
  8922  1F98  0B89               	decfsz	9,f
  8923  1F99  2F95               	goto	u5825
  8924  1F9A  0831               	movf	??___ftmul,w
  8925  1F9B  00B4               	movwf	??___ftmul+3
  8926  1F9C  0834               	movf	??___ftmul+3,w
  8927  1F9D  06BA               	xorwf	___ftmul@sign,f
  8928  1F9E  3080               	movlw	128
  8929  1F9F  00B1               	movwf	??___ftmul
  8930  1FA0  0831               	movf	??___ftmul,w
  8931  1FA1  05BA               	andwf	___ftmul@sign,f
  8932  1FA2  17AC               	bsf	___ftmul@f1+1,7
  8933  1FA3  17AF               	bsf	___ftmul@f2+1,7
  8934  1FA4  30FF               	movlw	255
  8935  1FA5  05AE               	andwf	___ftmul@f2,f
  8936  1FA6  30FF               	movlw	255
  8937  1FA7  05AF               	andwf	___ftmul@f2+1,f
  8938  1FA8  3000               	movlw	0
  8939  1FA9  05B0               	andwf	___ftmul@f2+2,f
  8940  1FAA  3000               	movlw	0
  8941  1FAB  00B6               	movwf	___ftmul@f3_as_product
  8942  1FAC  3000               	movlw	0
  8943  1FAD  00B7               	movwf	___ftmul@f3_as_product+1
  8944  1FAE  3000               	movlw	0
  8945  1FAF  00B8               	movwf	___ftmul@f3_as_product+2
  8946  1FB0  3007               	movlw	7
  8947  1FB1  00B1               	movwf	??___ftmul
  8948  1FB2  0831               	movf	??___ftmul,w
  8949  1FB3  00B9               	movwf	___ftmul@cntr
  8950  1FB4                     l3780:	
  8951  1FB4  1C2B               	btfss	___ftmul@f1,0
  8952  1FB5  2FBC               	goto	l3784
  8953  1FB6  082E               	movf	___ftmul@f2,w
  8954  1FB7  07B6               	addwf	___ftmul@f3_as_product,f
  8955  1FB8  082F               	movf	___ftmul@f2+1,w
  8956  1FB9  3DB7               	addwfc	___ftmul@f3_as_product+1,f
  8957  1FBA  0830               	movf	___ftmul@f2+2,w
  8958  1FBB  3DB8               	addwfc	___ftmul@f3_as_product+2,f
  8959  1FBC                     l3784:	
  8960  1FBC  3001               	movlw	1
  8961  1FBD                     u5845:	
  8962  1FBD  36AD               	lsrf	___ftmul@f1+2,f
  8963  1FBE  0CAC               	rrf	___ftmul@f1+1,f
  8964  1FBF  0CAB               	rrf	___ftmul@f1,f
  8965  1FC0  0B89               	decfsz	9,f
  8966  1FC1  2FBD               	goto	u5845
  8967  1FC2  3001               	movlw	1
  8968  1FC3                     u5855:	
  8969  1FC3  35AE               	lslf	___ftmul@f2,f
  8970  1FC4  0DAF               	rlf	___ftmul@f2+1,f
  8971  1FC5  0DB0               	rlf	___ftmul@f2+2,f
  8972  1FC6  0B89               	decfsz	9,f
  8973  1FC7  2FC3               	goto	u5855
  8974  1FC8  3001               	movlw	1
  8975  1FC9  02B9               	subwf	___ftmul@cntr,f
  8976  1FCA  1D03               	btfss	3,2
  8977  1FCB  2FB4               	goto	l3780
  8978  1FCC  3009               	movlw	9
  8979  1FCD  00B1               	movwf	??___ftmul
  8980  1FCE  0831               	movf	??___ftmul,w
  8981  1FCF  00B9               	movwf	___ftmul@cntr
  8982  1FD0                     l3792:	
  8983  1FD0  1C2B               	btfss	___ftmul@f1,0
  8984  1FD1  2FD8               	goto	l3796
  8985  1FD2  082E               	movf	___ftmul@f2,w
  8986  1FD3  07B6               	addwf	___ftmul@f3_as_product,f
  8987  1FD4  082F               	movf	___ftmul@f2+1,w
  8988  1FD5  3DB7               	addwfc	___ftmul@f3_as_product+1,f
  8989  1FD6  0830               	movf	___ftmul@f2+2,w
  8990  1FD7  3DB8               	addwfc	___ftmul@f3_as_product+2,f
  8991  1FD8                     l3796:	
  8992  1FD8  3001               	movlw	1
  8993  1FD9                     u5885:	
  8994  1FD9  36AD               	lsrf	___ftmul@f1+2,f
  8995  1FDA  0CAC               	rrf	___ftmul@f1+1,f
  8996  1FDB  0CAB               	rrf	___ftmul@f1,f
  8997  1FDC  0B89               	decfsz	9,f
  8998  1FDD  2FD9               	goto	u5885
  8999  1FDE  3001               	movlw	1
  9000  1FDF                     u5895:	
  9001  1FDF  36B8               	lsrf	___ftmul@f3_as_product+2,f
  9002  1FE0  0CB7               	rrf	___ftmul@f3_as_product+1,f
  9003  1FE1  0CB6               	rrf	___ftmul@f3_as_product,f
  9004  1FE2  0B89               	decfsz	9,f
  9005  1FE3  2FDF               	goto	u5895
  9006  1FE4  3001               	movlw	1
  9007  1FE5  02B9               	subwf	___ftmul@cntr,f
  9008  1FE6  1D03               	btfss	3,2
  9009  1FE7  2FD0               	goto	l3792
  9010  1FE8  0836               	movf	___ftmul@f3_as_product,w
  9011  1FE9  00F1               	movwf	___ftpack@arg
  9012  1FEA  0837               	movf	___ftmul@f3_as_product+1,w
  9013  1FEB  00F2               	movwf	___ftpack@arg+1
  9014  1FEC  0838               	movf	___ftmul@f3_as_product+2,w
  9015  1FED  00F3               	movwf	___ftpack@arg+2
  9016  1FEE  0835               	movf	___ftmul@exp,w
  9017  1FEF  00B1               	movwf	??___ftmul
  9018  1FF0  0831               	movf	??___ftmul,w
  9019  1FF1  00F4               	movwf	___ftpack@exp
  9020  1FF2  083A               	movf	___ftmul@sign,w
  9021  1FF3  00B2               	movwf	??___ftmul+1
  9022  1FF4  0832               	movf	??___ftmul+1,w
  9023  1FF5  00F5               	movwf	___ftpack@sign
  9024  1FF6  318D  2558         	fcall	___ftpack
  9025  1FF8  0871               	movf	?___ftpack,w
  9026  1FF9  0020               	movlb	0	; select bank0
  9027  1FFA  00AB               	movwf	?___ftmul
  9028  1FFB  0872               	movf	?___ftpack+1,w
  9029  1FFC  00AC               	movwf	?___ftmul+1
  9030  1FFD  0873               	movf	?___ftpack+2,w
  9031  1FFE  00AD               	movwf	?___ftmul+2
  9032  1FFF  0008               	return
  9033  2000                     __end_of___ftmul:	
  9034                           
  9035                           	psect	text9
  9036  1CE4                     __ptext9:	
  9037 ;; *************** function ___awmod *****************
  9038 ;; Defined at:
  9039 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  divisor         2    1[COMMON] int 
  9042 ;;  dividend        2    3[COMMON] int 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  sign            1    7[COMMON] unsigned char 
  9045 ;;  counter         1    6[COMMON] unsigned char 
  9046 ;; Return value:  Size  Location     Type
  9047 ;;                  2    1[COMMON] int 
  9048 ;; Registers used:
  9049 ;;		wreg, status,2, status,0
  9050 ;; Tracked objects:
  9051 ;;		On entry : 0/0
  9052 ;;		On exit  : 0/0
  9053 ;;		Unchanged: 0/0
  9054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9058 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9059 ;;Total ram usage:        7 bytes
  9060 ;; Hardware stack levels used:    1
  9061 ;; Hardware stack levels required when called:    1
  9062 ;; This function calls:
  9063 ;;		Nothing
  9064 ;; This function is called by:
  9065 ;;		_fround
  9066 ;;		_scale
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           
  9071                           ;psect for function ___awmod
  9072  1CE4                     ___awmod:	
  9073                           
  9074                           ;incstack = 0
  9075                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9076  1CE4  01F7               	clrf	___awmod@sign
  9077  1CE5  1FF4               	btfss	___awmod@dividend+1,7
  9078  1CE6  2CEE               	goto	l3656
  9079  1CE7  09F3               	comf	___awmod@dividend,f
  9080  1CE8  09F4               	comf	___awmod@dividend+1,f
  9081  1CE9  0AF3               	incf	___awmod@dividend,f
  9082  1CEA  1903               	skipnz
  9083  1CEB  0AF4               	incf	___awmod@dividend+1,f
  9084  1CEC  01F7               	clrf	___awmod@sign
  9085  1CED  0AF7               	incf	___awmod@sign,f
  9086  1CEE                     l3656:	
  9087  1CEE  1FF2               	btfss	___awmod@divisor+1,7
  9088  1CEF  2CF5               	goto	l3660
  9089  1CF0  09F1               	comf	___awmod@divisor,f
  9090  1CF1  09F2               	comf	___awmod@divisor+1,f
  9091  1CF2  0AF1               	incf	___awmod@divisor,f
  9092  1CF3  1903               	skipnz
  9093  1CF4  0AF2               	incf	___awmod@divisor+1,f
  9094  1CF5                     l3660:	
  9095  1CF5  0871               	movf	___awmod@divisor,w
  9096  1CF6  0472               	iorwf	___awmod@divisor+1,w
  9097  1CF7  1903               	btfsc	3,2
  9098  1CF8  2D1C               	goto	l3678
  9099  1CF9  01F6               	clrf	___awmod@counter
  9100  1CFA  0AF6               	incf	___awmod@counter,f
  9101  1CFB                     l3668:	
  9102  1CFB  1BF2               	btfsc	___awmod@divisor+1,7
  9103  1CFC  2D07               	goto	l3670
  9104  1CFD  3001               	movlw	1
  9105  1CFE                     u5505:	
  9106  1CFE  35F1               	lslf	___awmod@divisor,f
  9107  1CFF  0DF2               	rlf	___awmod@divisor+1,f
  9108  1D00  0B89               	decfsz	9,f
  9109  1D01  2CFE               	goto	u5505
  9110  1D02  3001               	movlw	1
  9111  1D03  00F5               	movwf	??___awmod
  9112  1D04  0875               	movf	??___awmod,w
  9113  1D05  07F6               	addwf	___awmod@counter,f
  9114  1D06  2CFB               	goto	l3668
  9115  1D07                     l3670:	
  9116  1D07  0872               	movf	___awmod@divisor+1,w
  9117  1D08  0274               	subwf	___awmod@dividend+1,w
  9118  1D09  1D03               	skipz
  9119  1D0A  2D0D               	goto	u5525
  9120  1D0B  0871               	movf	___awmod@divisor,w
  9121  1D0C  0273               	subwf	___awmod@dividend,w
  9122  1D0D                     u5525:	
  9123  1D0D  1C03               	skipc
  9124  1D0E  2D13               	goto	l3674
  9125  1D0F  0871               	movf	___awmod@divisor,w
  9126  1D10  02F3               	subwf	___awmod@dividend,f
  9127  1D11  0872               	movf	___awmod@divisor+1,w
  9128  1D12  3BF4               	subwfb	___awmod@dividend+1,f
  9129  1D13                     l3674:	
  9130  1D13  3001               	movlw	1
  9131  1D14                     u5535:	
  9132  1D14  36F2               	lsrf	___awmod@divisor+1,f
  9133  1D15  0CF1               	rrf	___awmod@divisor,f
  9134  1D16  0B89               	decfsz	9,f
  9135  1D17  2D14               	goto	u5535
  9136  1D18  3001               	movlw	1
  9137  1D19  02F6               	subwf	___awmod@counter,f
  9138  1D1A  1D03               	btfss	3,2
  9139  1D1B  2D07               	goto	l3670
  9140  1D1C                     l3678:	
  9141  1D1C  0877               	movf	___awmod@sign,w
  9142  1D1D  1903               	btfsc	3,2
  9143  1D1E  2D24               	goto	l3682
  9144  1D1F  09F3               	comf	___awmod@dividend,f
  9145  1D20  09F4               	comf	___awmod@dividend+1,f
  9146  1D21  0AF3               	incf	___awmod@dividend,f
  9147  1D22  1903               	skipnz
  9148  1D23  0AF4               	incf	___awmod@dividend+1,f
  9149  1D24                     l3682:	
  9150  1D24  0874               	movf	___awmod@dividend+1,w
  9151  1D25  00F2               	movwf	?___awmod+1
  9152  1D26  0873               	movf	___awmod@dividend,w
  9153  1D27  00F1               	movwf	?___awmod
  9154  1D28  0008               	return
  9155  1D29                     __end_of___awmod:	
  9156                           
  9157                           	psect	text10
  9158  1D29                     __ptext10:	
  9159 ;; *************** function ___awdiv *****************
  9160 ;; Defined at:
  9161 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  divisor         2    8[COMMON] int 
  9164 ;;  dividend        2   10[COMMON] int 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  quotient        2    3[BANK0 ] int 
  9167 ;;  sign            1    2[BANK0 ] unsigned char 
  9168 ;;  counter         1    1[BANK0 ] unsigned char 
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  2    8[COMMON] int 
  9171 ;; Registers used:
  9172 ;;		wreg, status,2, status,0
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9179 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9181 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9182 ;;Total ram usage:        9 bytes
  9183 ;; Hardware stack levels used:    1
  9184 ;; Hardware stack levels required when called:    1
  9185 ;; This function calls:
  9186 ;;		Nothing
  9187 ;; This function is called by:
  9188 ;;		_fround
  9189 ;;		_scale
  9190 ;;		_sprintf
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194                           
  9195                           ;psect for function ___awdiv
  9196  1D29                     ___awdiv:	
  9197                           
  9198                           ;incstack = 0
  9199                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9200  1D29  0020               	movlb	0	; select bank0
  9201  1D2A  01A2               	clrf	___awdiv@sign
  9202  1D2B  1FF9               	btfss	___awdiv@divisor+1,7
  9203  1D2C  2D34               	goto	l3612
  9204  1D2D  09F8               	comf	___awdiv@divisor,f
  9205  1D2E  09F9               	comf	___awdiv@divisor+1,f
  9206  1D2F  0AF8               	incf	___awdiv@divisor,f
  9207  1D30  1903               	skipnz
  9208  1D31  0AF9               	incf	___awdiv@divisor+1,f
  9209  1D32  01A2               	clrf	___awdiv@sign
  9210  1D33  0AA2               	incf	___awdiv@sign,f
  9211  1D34                     l3612:	
  9212  1D34  1FFB               	btfss	___awdiv@dividend+1,7
  9213  1D35  2D3F               	goto	l3618
  9214  1D36  09FA               	comf	___awdiv@dividend,f
  9215  1D37  09FB               	comf	___awdiv@dividend+1,f
  9216  1D38  0AFA               	incf	___awdiv@dividend,f
  9217  1D39  1903               	skipnz
  9218  1D3A  0AFB               	incf	___awdiv@dividend+1,f
  9219  1D3B  3001               	movlw	1
  9220  1D3C  00A0               	movwf	??___awdiv
  9221  1D3D  0820               	movf	??___awdiv,w
  9222  1D3E  06A2               	xorwf	___awdiv@sign,f
  9223  1D3F                     l3618:	
  9224  1D3F  01A3               	clrf	___awdiv@quotient
  9225  1D40  01A4               	clrf	___awdiv@quotient+1
  9226  1D41  0878               	movf	___awdiv@divisor,w
  9227  1D42  0479               	iorwf	___awdiv@divisor+1,w
  9228  1D43  1903               	btfsc	3,2
  9229  1D44  2D6E               	goto	l3640
  9230  1D45  01A1               	clrf	___awdiv@counter
  9231  1D46  0AA1               	incf	___awdiv@counter,f
  9232  1D47                     l3628:	
  9233  1D47  1BF9               	btfsc	___awdiv@divisor+1,7
  9234  1D48  2D53               	goto	l3630
  9235  1D49  3001               	movlw	1
  9236  1D4A                     u5405:	
  9237  1D4A  35F8               	lslf	___awdiv@divisor,f
  9238  1D4B  0DF9               	rlf	___awdiv@divisor+1,f
  9239  1D4C  0B89               	decfsz	9,f
  9240  1D4D  2D4A               	goto	u5405
  9241  1D4E  3001               	movlw	1
  9242  1D4F  00A0               	movwf	??___awdiv
  9243  1D50  0820               	movf	??___awdiv,w
  9244  1D51  07A1               	addwf	___awdiv@counter,f
  9245  1D52  2D47               	goto	l3628
  9246  1D53                     l3630:	
  9247  1D53  3001               	movlw	1
  9248  1D54                     u5425:	
  9249  1D54  35A3               	lslf	___awdiv@quotient,f
  9250  1D55  0DA4               	rlf	___awdiv@quotient+1,f
  9251  1D56  0B89               	decfsz	9,f
  9252  1D57  2D54               	goto	u5425
  9253  1D58  0879               	movf	___awdiv@divisor+1,w
  9254  1D59  027B               	subwf	___awdiv@dividend+1,w
  9255  1D5A  1D03               	skipz
  9256  1D5B  2D5E               	goto	u5435
  9257  1D5C  0878               	movf	___awdiv@divisor,w
  9258  1D5D  027A               	subwf	___awdiv@dividend,w
  9259  1D5E                     u5435:	
  9260  1D5E  1C03               	skipc
  9261  1D5F  2D65               	goto	l3636
  9262  1D60  0878               	movf	___awdiv@divisor,w
  9263  1D61  02FA               	subwf	___awdiv@dividend,f
  9264  1D62  0879               	movf	___awdiv@divisor+1,w
  9265  1D63  3BFB               	subwfb	___awdiv@dividend+1,f
  9266  1D64  1423               	bsf	___awdiv@quotient,0
  9267  1D65                     l3636:	
  9268  1D65  3001               	movlw	1
  9269  1D66                     u5445:	
  9270  1D66  36F9               	lsrf	___awdiv@divisor+1,f
  9271  1D67  0CF8               	rrf	___awdiv@divisor,f
  9272  1D68  0B89               	decfsz	9,f
  9273  1D69  2D66               	goto	u5445
  9274  1D6A  3001               	movlw	1
  9275  1D6B  02A1               	subwf	___awdiv@counter,f
  9276  1D6C  1D03               	btfss	3,2
  9277  1D6D  2D53               	goto	l3630
  9278  1D6E                     l3640:	
  9279  1D6E  0822               	movf	___awdiv@sign,w
  9280  1D6F  1903               	btfsc	3,2
  9281  1D70  2D76               	goto	l3644
  9282  1D71  09A3               	comf	___awdiv@quotient,f
  9283  1D72  09A4               	comf	___awdiv@quotient+1,f
  9284  1D73  0AA3               	incf	___awdiv@quotient,f
  9285  1D74  1903               	skipnz
  9286  1D75  0AA4               	incf	___awdiv@quotient+1,f
  9287  1D76                     l3644:	
  9288  1D76  0824               	movf	___awdiv@quotient+1,w
  9289  1D77  00F9               	movwf	?___awdiv+1
  9290  1D78  0823               	movf	___awdiv@quotient,w
  9291  1D79  00F8               	movwf	?___awdiv
  9292  1D7A  0008               	return
  9293  1D7B                     __end_of___awdiv:	
  9294                           
  9295                           	psect	text11
  9296  1015                     __ptext11:	
  9297 ;; *************** function __tdiv_to_l_ *****************
  9298 ;; Defined at:
  9299 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;  f1              3    1[COMMON] float 
  9302 ;;  f2              3    4[COMMON] float 
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;  quot            4    0[BANK0 ] unsigned long 
  9305 ;;  exp1            1    5[BANK0 ] unsigned char 
  9306 ;;  cntr            1    4[BANK0 ] unsigned char 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  4    1[COMMON] unsigned long 
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, status,0
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9316 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9317 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9318 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9319 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9320 ;;Total ram usage:       16 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:    1
  9323 ;; This function calls:
  9324 ;;		Nothing
  9325 ;; This function is called by:
  9326 ;;		_sprintf
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330                           
  9331                           ;psect for function __tdiv_to_l_
  9332  1015                     __tdiv_to_l_:	
  9333                           
  9334                           ;incstack = 0
  9335                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  9336  1015  0871               	movf	__tdiv_to_l_@f1,w
  9337  1016  00F7               	movwf	??__tdiv_to_l_
  9338  1017  0872               	movf	__tdiv_to_l_@f1+1,w
  9339  1018  00F8               	movwf	??__tdiv_to_l_+1
  9340  1019  0873               	movf	__tdiv_to_l_@f1+2,w
  9341  101A  00F9               	movwf	??__tdiv_to_l_+2
  9342  101B  1003               	clrc
  9343  101C  0D78               	rlf	??__tdiv_to_l_+1,w
  9344  101D  0D79               	rlf	??__tdiv_to_l_+2,w
  9345  101E  00FA               	movwf	??__tdiv_to_l_+3
  9346  101F  087A               	movf	??__tdiv_to_l_+3,w
  9347  1020  0020               	movlb	0	; select bank0
  9348  1021  00A5               	movwf	__tdiv_to_l_@exp1
  9349  1022  0825               	movf	__tdiv_to_l_@exp1,w
  9350  1023  1D03               	btfss	3,2
  9351  1024  282E               	goto	l3992
  9352  1025  3000               	movlw	0
  9353  1026  00F4               	movwf	?__tdiv_to_l_+3
  9354  1027  3000               	movlw	0
  9355  1028  00F3               	movwf	?__tdiv_to_l_+2
  9356  1029  3000               	movlw	0
  9357  102A  00F2               	movwf	?__tdiv_to_l_+1
  9358  102B  3000               	movlw	0
  9359  102C  00F1               	movwf	?__tdiv_to_l_
  9360  102D  0008               	return
  9361  102E                     l3992:	
  9362  102E  0874               	movf	__tdiv_to_l_@f2,w
  9363  102F  00F7               	movwf	??__tdiv_to_l_
  9364  1030  0875               	movf	__tdiv_to_l_@f2+1,w
  9365  1031  00F8               	movwf	??__tdiv_to_l_+1
  9366  1032  0876               	movf	__tdiv_to_l_@f2+2,w
  9367  1033  00F9               	movwf	??__tdiv_to_l_+2
  9368  1034  1003               	clrc
  9369  1035  0D78               	rlf	??__tdiv_to_l_+1,w
  9370  1036  0D79               	rlf	??__tdiv_to_l_+2,w
  9371  1037  00FA               	movwf	??__tdiv_to_l_+3
  9372  1038  087A               	movf	??__tdiv_to_l_+3,w
  9373  1039  00A4               	movwf	__tdiv_to_l_@cntr
  9374  103A  0824               	movf	__tdiv_to_l_@cntr,w
  9375  103B  1D03               	btfss	3,2
  9376  103C  2846               	goto	l682
  9377  103D  3000               	movlw	0
  9378  103E  00F4               	movwf	?__tdiv_to_l_+3
  9379  103F  3000               	movlw	0
  9380  1040  00F3               	movwf	?__tdiv_to_l_+2
  9381  1041  3000               	movlw	0
  9382  1042  00F2               	movwf	?__tdiv_to_l_+1
  9383  1043  3000               	movlw	0
  9384  1044  00F1               	movwf	?__tdiv_to_l_
  9385  1045  0008               	return
  9386  1046                     l682:	
  9387  1046  17F2               	bsf	__tdiv_to_l_@f1+1,7
  9388  1047  30FF               	movlw	255
  9389  1048  05F1               	andwf	__tdiv_to_l_@f1,f
  9390  1049  30FF               	movlw	255
  9391  104A  05F2               	andwf	__tdiv_to_l_@f1+1,f
  9392  104B  3000               	movlw	0
  9393  104C  05F3               	andwf	__tdiv_to_l_@f1+2,f
  9394  104D  17F5               	bsf	__tdiv_to_l_@f2+1,7
  9395  104E  30FF               	movlw	255
  9396  104F  05F4               	andwf	__tdiv_to_l_@f2,f
  9397  1050  30FF               	movlw	255
  9398  1051  05F5               	andwf	__tdiv_to_l_@f2+1,f
  9399  1052  3000               	movlw	0
  9400  1053  05F6               	andwf	__tdiv_to_l_@f2+2,f
  9401  1054  3000               	movlw	0
  9402  1055  00A3               	movwf	__tdiv_to_l_@quot+3
  9403  1056  3000               	movlw	0
  9404  1057  00A2               	movwf	__tdiv_to_l_@quot+2
  9405  1058  3000               	movlw	0
  9406  1059  00A1               	movwf	__tdiv_to_l_@quot+1
  9407  105A  3000               	movlw	0
  9408  105B  00A0               	movwf	__tdiv_to_l_@quot
  9409  105C  307F               	movlw	127
  9410  105D  02A5               	subwf	__tdiv_to_l_@exp1,f
  9411  105E  3098               	movlw	152
  9412  105F  0724               	addwf	__tdiv_to_l_@cntr,w
  9413  1060  00F7               	movwf	??__tdiv_to_l_
  9414  1061  0877               	movf	??__tdiv_to_l_,w
  9415  1062  02A5               	subwf	__tdiv_to_l_@exp1,f
  9416  1063  3018               	movlw	24
  9417  1064  00F7               	movwf	??__tdiv_to_l_
  9418  1065  0877               	movf	??__tdiv_to_l_,w
  9419  1066  00A4               	movwf	__tdiv_to_l_@cntr
  9420  1067                     l4006:	
  9421  1067  3001               	movlw	1
  9422  1068                     u6345:	
  9423  1068  35A0               	lslf	__tdiv_to_l_@quot,f
  9424  1069  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  9425  106A  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  9426  106B  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  9427  106C  0B89               	decfsz	9,f
  9428  106D  2868               	goto	u6345
  9429  106E  0876               	movf	__tdiv_to_l_@f2+2,w
  9430  106F  0273               	subwf	__tdiv_to_l_@f1+2,w
  9431  1070  1D03               	skipz
  9432  1071  2878               	goto	u6355
  9433  1072  0875               	movf	__tdiv_to_l_@f2+1,w
  9434  1073  0272               	subwf	__tdiv_to_l_@f1+1,w
  9435  1074  1D03               	skipz
  9436  1075  2878               	goto	u6355
  9437  1076  0874               	movf	__tdiv_to_l_@f2,w
  9438  1077  0271               	subwf	__tdiv_to_l_@f1,w
  9439  1078                     u6355:	
  9440  1078  1C03               	skipc
  9441  1079  2881               	goto	l4014
  9442  107A  0874               	movf	__tdiv_to_l_@f2,w
  9443  107B  02F1               	subwf	__tdiv_to_l_@f1,f
  9444  107C  0875               	movf	__tdiv_to_l_@f2+1,w
  9445  107D  3BF2               	subwfb	__tdiv_to_l_@f1+1,f
  9446  107E  0876               	movf	__tdiv_to_l_@f2+2,w
  9447  107F  3BF3               	subwfb	__tdiv_to_l_@f1+2,f
  9448  1080  1420               	bsf	__tdiv_to_l_@quot,0
  9449  1081                     l4014:	
  9450  1081  3001               	movlw	1
  9451  1082                     u6365:	
  9452  1082  35F1               	lslf	__tdiv_to_l_@f1,f
  9453  1083  0DF2               	rlf	__tdiv_to_l_@f1+1,f
  9454  1084  0DF3               	rlf	__tdiv_to_l_@f1+2,f
  9455  1085  0B89               	decfsz	9,f
  9456  1086  2882               	goto	u6365
  9457  1087  3001               	movlw	1
  9458  1088  02A4               	subwf	__tdiv_to_l_@cntr,f
  9459  1089  1D03               	btfss	3,2
  9460  108A  2867               	goto	l4006
  9461  108B  1FA5               	btfss	__tdiv_to_l_@exp1,7
  9462  108C  28A9               	goto	l4026
  9463  108D  0825               	movf	__tdiv_to_l_@exp1,w
  9464  108E  3A80               	xorlw	128
  9465  108F  3E97               	addlw	151
  9466  1090  1803               	skipnc
  9467  1091  289B               	goto	l4024
  9468  1092  3000               	movlw	0
  9469  1093  00F4               	movwf	?__tdiv_to_l_+3
  9470  1094  3000               	movlw	0
  9471  1095  00F3               	movwf	?__tdiv_to_l_+2
  9472  1096  3000               	movlw	0
  9473  1097  00F2               	movwf	?__tdiv_to_l_+1
  9474  1098  3000               	movlw	0
  9475  1099  00F1               	movwf	?__tdiv_to_l_
  9476  109A  0008               	return
  9477  109B                     l4024:	
  9478  109B  3001               	movlw	1
  9479  109C                     u6405:	
  9480  109C  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  9481  109D  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  9482  109E  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  9483  109F  0CA0               	rrf	__tdiv_to_l_@quot,f
  9484  10A0  0B89               	decfsz	9,f
  9485  10A1  289C               	goto	u6405
  9486  10A2  3001               	movlw	1
  9487  10A3  00F7               	movwf	??__tdiv_to_l_
  9488  10A4  0877               	movf	??__tdiv_to_l_,w
  9489  10A5  07A5               	addwf	__tdiv_to_l_@exp1,f
  9490  10A6  1903               	btfsc	3,2
  9491  10A7  28C2               	goto	l4034
  9492  10A8  289B               	goto	l4024
  9493  10A9                     l4026:	
  9494  10A9  3018               	movlw	24
  9495  10AA  0225               	subwf	__tdiv_to_l_@exp1,w
  9496  10AB  1C03               	skipc
  9497  10AC  28BF               	goto	l692
  9498  10AD  3000               	movlw	0
  9499  10AE  00F4               	movwf	?__tdiv_to_l_+3
  9500  10AF  3000               	movlw	0
  9501  10B0  00F3               	movwf	?__tdiv_to_l_+2
  9502  10B1  3000               	movlw	0
  9503  10B2  00F2               	movwf	?__tdiv_to_l_+1
  9504  10B3  3000               	movlw	0
  9505  10B4  00F1               	movwf	?__tdiv_to_l_
  9506  10B5  0008               	return
  9507  10B6                     l4032:	
  9508  10B6  3001               	movlw	1
  9509  10B7                     u6435:	
  9510  10B7  35A0               	lslf	__tdiv_to_l_@quot,f
  9511  10B8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  9512  10B9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  9513  10BA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  9514  10BB  0B89               	decfsz	9,f
  9515  10BC  28B7               	goto	u6435
  9516  10BD  3001               	movlw	1
  9517  10BE  02A5               	subwf	__tdiv_to_l_@exp1,f
  9518  10BF                     l692:	
  9519  10BF  0825               	movf	__tdiv_to_l_@exp1,w
  9520  10C0  1D03               	btfss	3,2
  9521  10C1  28B6               	goto	l4032
  9522  10C2                     l4034:	
  9523  10C2  0823               	movf	__tdiv_to_l_@quot+3,w
  9524  10C3  00F4               	movwf	?__tdiv_to_l_+3
  9525  10C4  0822               	movf	__tdiv_to_l_@quot+2,w
  9526  10C5  00F3               	movwf	?__tdiv_to_l_+2
  9527  10C6  0821               	movf	__tdiv_to_l_@quot+1,w
  9528  10C7  00F2               	movwf	?__tdiv_to_l_+1
  9529  10C8  0820               	movf	__tdiv_to_l_@quot,w
  9530  10C9  00F1               	movwf	?__tdiv_to_l_
  9531  10CA  0008               	return
  9532  10CB                     __end_of__tdiv_to_l_:	
  9533                           
  9534                           	psect	text12
  9535  1292                     __ptext12:	
  9536 ;; *************** function __div_to_l_ *****************
  9537 ;; Defined at:
  9538 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  9539 ;; Parameters:    Size  Location     Type
  9540 ;;  f1              3    1[COMMON] unsigned long 
  9541 ;;  f2              3    4[COMMON] unsigned long 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;  quot            4    8[BANK0 ] unsigned long 
  9544 ;;  exp1            1   13[BANK0 ] unsigned char 
  9545 ;;  cntr            1   12[BANK0 ] unsigned char 
  9546 ;; Return value:  Size  Location     Type
  9547 ;;                  4    1[COMMON] unsigned long 
  9548 ;; Registers used:
  9549 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9550 ;; Tracked objects:
  9551 ;;		On entry : 0/0
  9552 ;;		On exit  : 0/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9555 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9556 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9557 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9558 ;;      Totals:         6      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9559 ;;Total ram usage:       20 bytes
  9560 ;; Hardware stack levels used:    1
  9561 ;; Hardware stack levels required when called:    1
  9562 ;; This function calls:
  9563 ;;		Nothing
  9564 ;; This function is called by:
  9565 ;;		_sprintf
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           
  9570                           ;psect for function __div_to_l_
  9571  1292                     __div_to_l_:	
  9572                           
  9573                           ;incstack = 0
  9574                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  9575  1292  3071               	movlw	low (__div_to_l_@f1| 0)
  9576  1293  0086               	movwf	6
  9577  1294  0187               	clrf	7
  9578  1295  3F40               	moviw [0]fsr1
  9579  1296  0020               	movlb	0	; select bank0
  9580  1297  00A0               	movwf	??__div_to_l_
  9581  1298  3F41               	moviw [1]fsr1
  9582  1299  00A1               	movwf	??__div_to_l_+1
  9583  129A  3F42               	moviw [2]fsr1
  9584  129B  00A2               	movwf	??__div_to_l_+2
  9585  129C  3F43               	moviw [3]fsr1
  9586  129D  00A3               	movwf	??__div_to_l_+3
  9587  129E  1003               	clrc
  9588  129F  0D22               	rlf	??__div_to_l_+2,w
  9589  12A0  0D23               	rlf	??__div_to_l_+3,w
  9590  12A1  00A4               	movwf	??__div_to_l_+4
  9591  12A2  0824               	movf	??__div_to_l_+4,w
  9592  12A3  00AD               	movwf	__div_to_l_@exp1
  9593  12A4  082D               	movf	__div_to_l_@exp1,w
  9594  12A5  1D03               	btfss	3,2
  9595  12A6  2AB0               	goto	l4044
  9596  12A7  3000               	movlw	0
  9597  12A8  00F4               	movwf	?__div_to_l_+3
  9598  12A9  3000               	movlw	0
  9599  12AA  00F3               	movwf	?__div_to_l_+2
  9600  12AB  3000               	movlw	0
  9601  12AC  00F2               	movwf	?__div_to_l_+1
  9602  12AD  3000               	movlw	0
  9603  12AE  00F1               	movwf	?__div_to_l_
  9604  12AF  0008               	return
  9605  12B0                     l4044:	
  9606  12B0  3074               	movlw	low (__div_to_l_@f2| 0)
  9607  12B1  0086               	movwf	6
  9608  12B2  0187               	clrf	7
  9609  12B3  3F40               	moviw [0]fsr1
  9610  12B4  00A0               	movwf	??__div_to_l_
  9611  12B5  3F41               	moviw [1]fsr1
  9612  12B6  00A1               	movwf	??__div_to_l_+1
  9613  12B7  3F42               	moviw [2]fsr1
  9614  12B8  00A2               	movwf	??__div_to_l_+2
  9615  12B9  3F43               	moviw [3]fsr1
  9616  12BA  00A3               	movwf	??__div_to_l_+3
  9617  12BB  1003               	clrc
  9618  12BC  0D22               	rlf	??__div_to_l_+2,w
  9619  12BD  0D23               	rlf	??__div_to_l_+3,w
  9620  12BE  00A4               	movwf	??__div_to_l_+4
  9621  12BF  0824               	movf	??__div_to_l_+4,w
  9622  12C0  00AC               	movwf	__div_to_l_@cntr
  9623  12C1  082C               	movf	__div_to_l_@cntr,w
  9624  12C2  1D03               	btfss	3,2
  9625  12C3  2ACD               	goto	l4050
  9626  12C4  3000               	movlw	0
  9627  12C5  00F4               	movwf	?__div_to_l_+3
  9628  12C6  3000               	movlw	0
  9629  12C7  00F3               	movwf	?__div_to_l_+2
  9630  12C8  3000               	movlw	0
  9631  12C9  00F2               	movwf	?__div_to_l_+1
  9632  12CA  3000               	movlw	0
  9633  12CB  00F1               	movwf	?__div_to_l_
  9634  12CC  0008               	return
  9635  12CD                     l4050:	
  9636  12CD  3071               	movlw	low (__div_to_l_@f1| 0)
  9637  12CE  0086               	movwf	6
  9638  12CF  0187               	clrf	7
  9639  12D0  3000               	movlw	0
  9640  12D1  0481               	iorwf	1,f
  9641  12D2  3141               	addfsr 1,1
  9642  12D3  3000               	movlw	0
  9643  12D4  0481               	iorwf	1,f
  9644  12D5  3141               	addfsr 1,1
  9645  12D6  3080               	movlw	128
  9646  12D7  0481               	iorwf	1,f
  9647  12D8  3141               	addfsr 1,1
  9648  12D9  3000               	movlw	0
  9649  12DA  0481               	iorwf	1,f
  9650  12DB  3071               	movlw	low (__div_to_l_@f1| 0)
  9651  12DC  0086               	movwf	6
  9652  12DD  0187               	clrf	7
  9653  12DE  30FF               	movlw	255
  9654  12DF  0581               	andwf	1,f
  9655  12E0  3141               	addfsr 1,1
  9656  12E1  30FF               	movlw	255
  9657  12E2  0581               	andwf	1,f
  9658  12E3  3141               	addfsr 1,1
  9659  12E4  30FF               	movlw	255
  9660  12E5  0581               	andwf	1,f
  9661  12E6  3141               	addfsr 1,1
  9662  12E7  3000               	movlw	0
  9663  12E8  0581               	andwf	1,f
  9664  12E9  3074               	movlw	low (__div_to_l_@f2| 0)
  9665  12EA  0086               	movwf	6
  9666  12EB  0187               	clrf	7
  9667  12EC  3000               	movlw	0
  9668  12ED  0481               	iorwf	1,f
  9669  12EE  3141               	addfsr 1,1
  9670  12EF  3000               	movlw	0
  9671  12F0  0481               	iorwf	1,f
  9672  12F1  3141               	addfsr 1,1
  9673  12F2  3080               	movlw	128
  9674  12F3  0481               	iorwf	1,f
  9675  12F4  3141               	addfsr 1,1
  9676  12F5  3000               	movlw	0
  9677  12F6  0481               	iorwf	1,f
  9678  12F7  3074               	movlw	low (__div_to_l_@f2| 0)
  9679  12F8  0086               	movwf	6
  9680  12F9  0187               	clrf	7
  9681  12FA  30FF               	movlw	255
  9682  12FB  0581               	andwf	1,f
  9683  12FC  3141               	addfsr 1,1
  9684  12FD  30FF               	movlw	255
  9685  12FE  0581               	andwf	1,f
  9686  12FF  3141               	addfsr 1,1
  9687  1300  30FF               	movlw	255
  9688  1301  0581               	andwf	1,f
  9689  1302  3141               	addfsr 1,1
  9690  1303  3000               	movlw	0
  9691  1304  0581               	andwf	1,f
  9692  1305  3000               	movlw	0
  9693  1306  00AB               	movwf	__div_to_l_@quot+3
  9694  1307  3000               	movlw	0
  9695  1308  00AA               	movwf	__div_to_l_@quot+2
  9696  1309  3000               	movlw	0
  9697  130A  00A9               	movwf	__div_to_l_@quot+1
  9698  130B  3000               	movlw	0
  9699  130C  00A8               	movwf	__div_to_l_@quot
  9700  130D  307F               	movlw	127
  9701  130E  02AD               	subwf	__div_to_l_@exp1,f
  9702  130F  30A0               	movlw	160
  9703  1310  072C               	addwf	__div_to_l_@cntr,w
  9704  1311  00A0               	movwf	??__div_to_l_
  9705  1312  0820               	movf	??__div_to_l_,w
  9706  1313  02AD               	subwf	__div_to_l_@exp1,f
  9707  1314  3020               	movlw	32
  9708  1315  00A0               	movwf	??__div_to_l_
  9709  1316  0820               	movf	??__div_to_l_,w
  9710  1317  00AC               	movwf	__div_to_l_@cntr
  9711  1318                     l4060:	
  9712  1318  3001               	movlw	1
  9713  1319                     u6475:	
  9714  1319  35A8               	lslf	__div_to_l_@quot,f
  9715  131A  0DA9               	rlf	__div_to_l_@quot+1,f
  9716  131B  0DAA               	rlf	__div_to_l_@quot+2,f
  9717  131C  0DAB               	rlf	__div_to_l_@quot+3,f
  9718  131D  0B89               	decfsz	9,f
  9719  131E  2B19               	goto	u6475
  9720  131F  3074               	movlw	low (__div_to_l_@f2| 0)
  9721  1320  0086               	movwf	6
  9722  1321  0187               	clrf	7
  9723  1322  3F40               	moviw [0]fsr1
  9724  1323  00A0               	movwf	??__div_to_l_
  9725  1324  3F41               	moviw [1]fsr1
  9726  1325  00A1               	movwf	??__div_to_l_+1
  9727  1326  3F42               	moviw [2]fsr1
  9728  1327  00A2               	movwf	??__div_to_l_+2
  9729  1328  3F43               	moviw [3]fsr1
  9730  1329  00A3               	movwf	??__div_to_l_+3
  9731  132A  3071               	movlw	low (__div_to_l_@f1| 0)
  9732  132B  0086               	movwf	6
  9733  132C  0187               	clrf	7
  9734  132D  3F40               	moviw [0]fsr1
  9735  132E  00A4               	movwf	??__div_to_l_+4
  9736  132F  3F41               	moviw [1]fsr1
  9737  1330  00A5               	movwf	??__div_to_l_+5
  9738  1331  3F42               	moviw [2]fsr1
  9739  1332  00A6               	movwf	??__div_to_l_+6
  9740  1333  3F43               	moviw [3]fsr1
  9741  1334  00A7               	movwf	??__div_to_l_+7
  9742  1335  0823               	movf	??__div_to_l_+3,w
  9743  1336  0227               	subwf	??__div_to_l_+7,w
  9744  1337  1D03               	skipz
  9745  1338  2B43               	goto	u6485
  9746  1339  0822               	movf	??__div_to_l_+2,w
  9747  133A  0226               	subwf	??__div_to_l_+6,w
  9748  133B  1D03               	skipz
  9749  133C  2B43               	goto	u6485
  9750  133D  0821               	movf	??__div_to_l_+1,w
  9751  133E  0225               	subwf	??__div_to_l_+5,w
  9752  133F  1D03               	skipz
  9753  1340  2B43               	goto	u6485
  9754  1341  0820               	movf	??__div_to_l_,w
  9755  1342  0224               	subwf	??__div_to_l_+4,w
  9756  1343                     u6485:	
  9757  1343  1C03               	skipc
  9758  1344  2B60               	goto	l4068
  9759  1345  3074               	movlw	low (__div_to_l_@f2| 0)
  9760  1346  0086               	movwf	6
  9761  1347  0187               	clrf	7
  9762  1348  3F40               	moviw [0]fsr1
  9763  1349  00A0               	movwf	??__div_to_l_
  9764  134A  3F41               	moviw [1]fsr1
  9765  134B  00A1               	movwf	??__div_to_l_+1
  9766  134C  3F42               	moviw [2]fsr1
  9767  134D  00A2               	movwf	??__div_to_l_+2
  9768  134E  3F43               	moviw [3]fsr1
  9769  134F  00A3               	movwf	??__div_to_l_+3
  9770  1350  3071               	movlw	low (__div_to_l_@f1| 0)
  9771  1351  0086               	movwf	6
  9772  1352  0187               	clrf	7
  9773  1353  0820               	movf	??__div_to_l_,w
  9774  1354  0281               	subwf	1,f
  9775  1355  3141               	addfsr 1,1
  9776  1356  0821               	movf	??__div_to_l_+1,w
  9777  1357  3B81               	subwfb	1,f
  9778  1358  3141               	addfsr 1,1
  9779  1359  0822               	movf	??__div_to_l_+2,w
  9780  135A  3B81               	subwfb	1,f
  9781  135B  3141               	addfsr 1,1
  9782  135C  0823               	movf	??__div_to_l_+3,w
  9783  135D  3B81               	subwfb	1,f
  9784  135E  317D               	addfsr 1,-3
  9785  135F  1428               	bsf	__div_to_l_@quot,0
  9786  1360                     l4068:	
  9787  1360  3071               	movlw	low (__div_to_l_@f1| 0)
  9788  1361  0086               	movwf	6
  9789  1362  0187               	clrf	7
  9790  1363  3581               	lslf	1,f
  9791  1364  3141               	addfsr 1,1
  9792  1365  0D81               	rlf	1,f
  9793  1366  3141               	addfsr 1,1
  9794  1367  0D81               	rlf	1,f
  9795  1368  3141               	addfsr 1,1
  9796  1369  0D81               	rlf	1,f
  9797  136A  317D               	addfsr 1,-3
  9798  136B  3001               	movlw	1
  9799  136C  02AC               	subwf	__div_to_l_@cntr,f
  9800  136D  1D03               	btfss	3,2
  9801  136E  2B18               	goto	l4060
  9802  136F  1FAD               	btfss	__div_to_l_@exp1,7
  9803  1370  2B8D               	goto	l4080
  9804  1371  082D               	movf	__div_to_l_@exp1,w
  9805  1372  3A80               	xorlw	128
  9806  1373  3E9F               	addlw	159
  9807  1374  1803               	skipnc
  9808  1375  2B7F               	goto	l4078
  9809  1376  3000               	movlw	0
  9810  1377  00F4               	movwf	?__div_to_l_+3
  9811  1378  3000               	movlw	0
  9812  1379  00F3               	movwf	?__div_to_l_+2
  9813  137A  3000               	movlw	0
  9814  137B  00F2               	movwf	?__div_to_l_+1
  9815  137C  3000               	movlw	0
  9816  137D  00F1               	movwf	?__div_to_l_
  9817  137E  0008               	return
  9818  137F                     l4078:	
  9819  137F  3001               	movlw	1
  9820  1380                     u6525:	
  9821  1380  36AB               	lsrf	__div_to_l_@quot+3,f
  9822  1381  0CAA               	rrf	__div_to_l_@quot+2,f
  9823  1382  0CA9               	rrf	__div_to_l_@quot+1,f
  9824  1383  0CA8               	rrf	__div_to_l_@quot,f
  9825  1384  0B89               	decfsz	9,f
  9826  1385  2B80               	goto	u6525
  9827  1386  3001               	movlw	1
  9828  1387  00A0               	movwf	??__div_to_l_
  9829  1388  0820               	movf	??__div_to_l_,w
  9830  1389  07AD               	addwf	__div_to_l_@exp1,f
  9831  138A  1903               	btfsc	3,2
  9832  138B  2BA6               	goto	l4088
  9833  138C  2B7F               	goto	l4078
  9834  138D                     l4080:	
  9835  138D  3020               	movlw	32
  9836  138E  022D               	subwf	__div_to_l_@exp1,w
  9837  138F  1C03               	skipc
  9838  1390  2BA3               	goto	l613
  9839  1391  3000               	movlw	0
  9840  1392  00F4               	movwf	?__div_to_l_+3
  9841  1393  3000               	movlw	0
  9842  1394  00F3               	movwf	?__div_to_l_+2
  9843  1395  3000               	movlw	0
  9844  1396  00F2               	movwf	?__div_to_l_+1
  9845  1397  3000               	movlw	0
  9846  1398  00F1               	movwf	?__div_to_l_
  9847  1399  0008               	return
  9848  139A                     l4086:	
  9849  139A  3001               	movlw	1
  9850  139B                     u6555:	
  9851  139B  35A8               	lslf	__div_to_l_@quot,f
  9852  139C  0DA9               	rlf	__div_to_l_@quot+1,f
  9853  139D  0DAA               	rlf	__div_to_l_@quot+2,f
  9854  139E  0DAB               	rlf	__div_to_l_@quot+3,f
  9855  139F  0B89               	decfsz	9,f
  9856  13A0  2B9B               	goto	u6555
  9857  13A1  3001               	movlw	1
  9858  13A2  02AD               	subwf	__div_to_l_@exp1,f
  9859  13A3                     l613:	
  9860  13A3  082D               	movf	__div_to_l_@exp1,w
  9861  13A4  1D03               	btfss	3,2
  9862  13A5  2B9A               	goto	l4086
  9863  13A6                     l4088:	
  9864  13A6  082B               	movf	__div_to_l_@quot+3,w
  9865  13A7  00F4               	movwf	?__div_to_l_+3
  9866  13A8  082A               	movf	__div_to_l_@quot+2,w
  9867  13A9  00F3               	movwf	?__div_to_l_+2
  9868  13AA  0829               	movf	__div_to_l_@quot+1,w
  9869  13AB  00F2               	movwf	?__div_to_l_+1
  9870  13AC  0828               	movf	__div_to_l_@quot,w
  9871  13AD  00F1               	movwf	?__div_to_l_
  9872  13AE  0008               	return
  9873  13AF                     __end_of__div_to_l_:	
  9874                           
  9875                           	psect	text13
  9876  1BD4                     __ptext13:	
  9877 ;; *************** function ___lltoft *****************
  9878 ;; Defined at:
  9879 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  9880 ;; Parameters:    Size  Location     Type
  9881 ;;  c               4    0[BANK0 ] unsigned long 
  9882 ;; Auto vars:     Size  Location     Type
  9883 ;;  exp             1   10[COMMON] unsigned char 
  9884 ;; Return value:  Size  Location     Type
  9885 ;;                  3    0[BANK0 ] float 
  9886 ;; Registers used:
  9887 ;;		wreg, status,2, status,0, pclath, cstack
  9888 ;; Tracked objects:
  9889 ;;		On entry : 0/0
  9890 ;;		On exit  : 0/0
  9891 ;;		Unchanged: 0/0
  9892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9893 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9896 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9897 ;;Total ram usage:        6 bytes
  9898 ;; Hardware stack levels used:    1
  9899 ;; Hardware stack levels required when called:    2
  9900 ;; This function calls:
  9901 ;;		___ftpack
  9902 ;; This function is called by:
  9903 ;;		_sprintf
  9904 ;; This function uses a non-reentrant model
  9905 ;;
  9906                           
  9907                           
  9908                           ;psect for function ___lltoft
  9909  1BD4                     ___lltoft:	
  9910                           
  9911                           ;incstack = 0
  9912                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  9913  1BD4  308E               	movlw	142
  9914  1BD5  00F9               	movwf	??___lltoft
  9915  1BD6  0879               	movf	??___lltoft,w
  9916  1BD7  00FA               	movwf	___lltoft@exp
  9917  1BD8                     l4218:	
  9918  1BD8  30FF               	movlw	255
  9919  1BD9  0020               	movlb	0	; select bank0
  9920  1BDA  0523               	andwf	___lltoft@c+3,w
  9921  1BDB  1903               	btfsc	3,2
  9922  1BDC  2BEA               	goto	l4220
  9923  1BDD  3001               	movlw	1
  9924  1BDE                     u6855:	
  9925  1BDE  0020               	movlb	0	; select bank0
  9926  1BDF  36A3               	lsrf	___lltoft@c+3,f
  9927  1BE0  0CA2               	rrf	___lltoft@c+2,f
  9928  1BE1  0CA1               	rrf	___lltoft@c+1,f
  9929  1BE2  0CA0               	rrf	___lltoft@c,f
  9930  1BE3  0B89               	decfsz	9,f
  9931  1BE4  2BDE               	goto	u6855
  9932  1BE5  3001               	movlw	1
  9933  1BE6  00F9               	movwf	??___lltoft
  9934  1BE7  0879               	movf	??___lltoft,w
  9935  1BE8  07FA               	addwf	___lltoft@exp,f
  9936  1BE9  2BD8               	goto	l4218
  9937  1BEA                     l4220:	
  9938  1BEA  0820               	movf	___lltoft@c,w
  9939  1BEB  00F1               	movwf	___ftpack@arg
  9940  1BEC  0821               	movf	___lltoft@c+1,w
  9941  1BED  00F2               	movwf	___ftpack@arg+1
  9942  1BEE  0822               	movf	___lltoft@c+2,w
  9943  1BEF  00F3               	movwf	___ftpack@arg+2
  9944  1BF0  087A               	movf	___lltoft@exp,w
  9945  1BF1  00F9               	movwf	??___lltoft
  9946  1BF2  0879               	movf	??___lltoft,w
  9947  1BF3  00F4               	movwf	___ftpack@exp
  9948  1BF4  01F5               	clrf	___ftpack@sign
  9949  1BF5  318D  2558         	fcall	___ftpack
  9950  1BF7  0871               	movf	?___ftpack,w
  9951  1BF8  0020               	movlb	0	; select bank0
  9952  1BF9  00A0               	movwf	?___lltoft
  9953  1BFA  0872               	movf	?___ftpack+1,w
  9954  1BFB  00A1               	movwf	?___lltoft+1
  9955  1BFC  0873               	movf	?___ftpack+2,w
  9956  1BFD  00A2               	movwf	?___lltoft+2
  9957  1BFE  0008               	return
  9958  1BFF                     __end_of___lltoft:	
  9959                           
  9960                           	psect	text14
  9961  1CA2                     __ptext14:	
  9962 ;; *************** function ___llmod *****************
  9963 ;; Defined at:
  9964 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;  divisor         4    1[COMMON] unsigned long 
  9967 ;;  dividend        4    5[COMMON] unsigned long 
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;  counter         1   10[COMMON] unsigned char 
  9970 ;; Return value:  Size  Location     Type
  9971 ;;                  4    1[COMMON] unsigned long 
  9972 ;; Registers used:
  9973 ;;		wreg, status,2, status,0
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9979 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9982 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9983 ;;Total ram usage:       10 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; Hardware stack levels required when called:    1
  9986 ;; This function calls:
  9987 ;;		Nothing
  9988 ;; This function is called by:
  9989 ;;		_sprintf
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           
  9994                           ;psect for function ___llmod
  9995  1CA2                     ___llmod:	
  9996                           
  9997                           ;incstack = 0
  9998                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  9999  1CA2  0874               	movf	___llmod@divisor+3,w
 10000  1CA3  0473               	iorwf	___llmod@divisor+2,w
 10001  1CA4  0472               	iorwf	___llmod@divisor+1,w
 10002  1CA5  0471               	iorwf	___llmod@divisor,w
 10003  1CA6  1903               	skipnz
 10004  1CA7  2CDB               	goto	l4210
 10005  1CA8  01FA               	clrf	___llmod@counter
 10006  1CA9  0AFA               	incf	___llmod@counter,f
 10007  1CAA                     l4200:	
 10008  1CAA  1BF4               	btfsc	___llmod@divisor+3,7
 10009  1CAB  2CB8               	goto	l4202
 10010  1CAC  3001               	movlw	1
 10011  1CAD                     u6805:	
 10012  1CAD  35F1               	lslf	___llmod@divisor,f
 10013  1CAE  0DF2               	rlf	___llmod@divisor+1,f
 10014  1CAF  0DF3               	rlf	___llmod@divisor+2,f
 10015  1CB0  0DF4               	rlf	___llmod@divisor+3,f
 10016  1CB1  0B89               	decfsz	9,f
 10017  1CB2  2CAD               	goto	u6805
 10018  1CB3  3001               	movlw	1
 10019  1CB4  00F9               	movwf	??___llmod
 10020  1CB5  0879               	movf	??___llmod,w
 10021  1CB6  07FA               	addwf	___llmod@counter,f
 10022  1CB7  2CAA               	goto	l4200
 10023  1CB8                     l4202:	
 10024  1CB8  0874               	movf	___llmod@divisor+3,w
 10025  1CB9  0278               	subwf	___llmod@dividend+3,w
 10026  1CBA  1D03               	skipz
 10027  1CBB  2CC6               	goto	u6825
 10028  1CBC  0873               	movf	___llmod@divisor+2,w
 10029  1CBD  0277               	subwf	___llmod@dividend+2,w
 10030  1CBE  1D03               	skipz
 10031  1CBF  2CC6               	goto	u6825
 10032  1CC0  0872               	movf	___llmod@divisor+1,w
 10033  1CC1  0276               	subwf	___llmod@dividend+1,w
 10034  1CC2  1D03               	skipz
 10035  1CC3  2CC6               	goto	u6825
 10036  1CC4  0871               	movf	___llmod@divisor,w
 10037  1CC5  0275               	subwf	___llmod@dividend,w
 10038  1CC6                     u6825:	
 10039  1CC6  1C03               	skipc
 10040  1CC7  2CD0               	goto	l4206
 10041  1CC8  0871               	movf	___llmod@divisor,w
 10042  1CC9  02F5               	subwf	___llmod@dividend,f
 10043  1CCA  0872               	movf	___llmod@divisor+1,w
 10044  1CCB  3BF6               	subwfb	___llmod@dividend+1,f
 10045  1CCC  0873               	movf	___llmod@divisor+2,w
 10046  1CCD  3BF7               	subwfb	___llmod@dividend+2,f
 10047  1CCE  0874               	movf	___llmod@divisor+3,w
 10048  1CCF  3BF8               	subwfb	___llmod@dividend+3,f
 10049  1CD0                     l4206:	
 10050  1CD0  3001               	movlw	1
 10051  1CD1                     u6835:	
 10052  1CD1  36F4               	lsrf	___llmod@divisor+3,f
 10053  1CD2  0CF3               	rrf	___llmod@divisor+2,f
 10054  1CD3  0CF2               	rrf	___llmod@divisor+1,f
 10055  1CD4  0CF1               	rrf	___llmod@divisor,f
 10056  1CD5  0B89               	decfsz	9,f
 10057  1CD6  2CD1               	goto	u6835
 10058  1CD7  3001               	movlw	1
 10059  1CD8  02FA               	subwf	___llmod@counter,f
 10060  1CD9  1D03               	btfss	3,2
 10061  1CDA  2CB8               	goto	l4202
 10062  1CDB                     l4210:	
 10063  1CDB  0878               	movf	___llmod@dividend+3,w
 10064  1CDC  00F4               	movwf	?___llmod+3
 10065  1CDD  0877               	movf	___llmod@dividend+2,w
 10066  1CDE  00F3               	movwf	?___llmod+2
 10067  1CDF  0876               	movf	___llmod@dividend+1,w
 10068  1CE0  00F2               	movwf	?___llmod+1
 10069  1CE1  0875               	movf	___llmod@dividend,w
 10070  1CE2  00F1               	movwf	?___llmod
 10071  1CE3  0008               	return
 10072  1CE4                     __end_of___llmod:	
 10073                           
 10074                           	psect	text15
 10075  1D7B                     __ptext15:	
 10076 ;; *************** function ___lldiv *****************
 10077 ;; Defined at:
 10078 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;  divisor         4    1[COMMON] unsigned long 
 10081 ;;  dividend        4    5[COMMON] unsigned long 
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;  quotient        4    0[BANK0 ] unsigned long 
 10084 ;;  counter         1    4[BANK0 ] unsigned char 
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  4    1[COMMON] unsigned long 
 10087 ;; Registers used:
 10088 ;;		wreg, status,2, status,0
 10089 ;; Tracked objects:
 10090 ;;		On entry : 0/0
 10091 ;;		On exit  : 0/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10094 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10095 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10097 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10098 ;;Total ram usage:       14 bytes
 10099 ;; Hardware stack levels used:    1
 10100 ;; Hardware stack levels required when called:    1
 10101 ;; This function calls:
 10102 ;;		Nothing
 10103 ;; This function is called by:
 10104 ;;		_sprintf
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           
 10109                           ;psect for function ___lldiv
 10110  1D7B                     ___lldiv:	
 10111                           
 10112                           ;incstack = 0
 10113                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10114  1D7B  3000               	movlw	0
 10115  1D7C  0020               	movlb	0	; select bank0
 10116  1D7D  00A3               	movwf	___lldiv@quotient+3
 10117  1D7E  3000               	movlw	0
 10118  1D7F  00A2               	movwf	___lldiv@quotient+2
 10119  1D80  3000               	movlw	0
 10120  1D81  00A1               	movwf	___lldiv@quotient+1
 10121  1D82  3000               	movlw	0
 10122  1D83  00A0               	movwf	___lldiv@quotient
 10123  1D84  0874               	movf	___lldiv@divisor+3,w
 10124  1D85  0473               	iorwf	___lldiv@divisor+2,w
 10125  1D86  0472               	iorwf	___lldiv@divisor+1,w
 10126  1D87  0471               	iorwf	___lldiv@divisor,w
 10127  1D88  1903               	skipnz
 10128  1D89  2DC5               	goto	l4190
 10129  1D8A  01A4               	clrf	___lldiv@counter
 10130  1D8B  0AA4               	incf	___lldiv@counter,f
 10131  1D8C                     l4176:	
 10132  1D8C  1BF4               	btfsc	___lldiv@divisor+3,7
 10133  1D8D  2D9A               	goto	l4178
 10134  1D8E  3001               	movlw	1
 10135  1D8F                     u6735:	
 10136  1D8F  35F1               	lslf	___lldiv@divisor,f
 10137  1D90  0DF2               	rlf	___lldiv@divisor+1,f
 10138  1D91  0DF3               	rlf	___lldiv@divisor+2,f
 10139  1D92  0DF4               	rlf	___lldiv@divisor+3,f
 10140  1D93  0B89               	decfsz	9,f
 10141  1D94  2D8F               	goto	u6735
 10142  1D95  3001               	movlw	1
 10143  1D96  00F9               	movwf	??___lldiv
 10144  1D97  0879               	movf	??___lldiv,w
 10145  1D98  07A4               	addwf	___lldiv@counter,f
 10146  1D99  2D8C               	goto	l4176
 10147  1D9A                     l4178:	
 10148  1D9A  3001               	movlw	1
 10149  1D9B                     u6755:	
 10150  1D9B  35A0               	lslf	___lldiv@quotient,f
 10151  1D9C  0DA1               	rlf	___lldiv@quotient+1,f
 10152  1D9D  0DA2               	rlf	___lldiv@quotient+2,f
 10153  1D9E  0DA3               	rlf	___lldiv@quotient+3,f
 10154  1D9F  0B89               	decfsz	9,f
 10155  1DA0  2D9B               	goto	u6755
 10156  1DA1  0874               	movf	___lldiv@divisor+3,w
 10157  1DA2  0278               	subwf	___lldiv@dividend+3,w
 10158  1DA3  1D03               	skipz
 10159  1DA4  2DAF               	goto	u6765
 10160  1DA5  0873               	movf	___lldiv@divisor+2,w
 10161  1DA6  0277               	subwf	___lldiv@dividend+2,w
 10162  1DA7  1D03               	skipz
 10163  1DA8  2DAF               	goto	u6765
 10164  1DA9  0872               	movf	___lldiv@divisor+1,w
 10165  1DAA  0276               	subwf	___lldiv@dividend+1,w
 10166  1DAB  1D03               	skipz
 10167  1DAC  2DAF               	goto	u6765
 10168  1DAD  0871               	movf	___lldiv@divisor,w
 10169  1DAE  0275               	subwf	___lldiv@dividend,w
 10170  1DAF                     u6765:	
 10171  1DAF  1C03               	skipc
 10172  1DB0  2DBA               	goto	l4186
 10173  1DB1  0871               	movf	___lldiv@divisor,w
 10174  1DB2  02F5               	subwf	___lldiv@dividend,f
 10175  1DB3  0872               	movf	___lldiv@divisor+1,w
 10176  1DB4  3BF6               	subwfb	___lldiv@dividend+1,f
 10177  1DB5  0873               	movf	___lldiv@divisor+2,w
 10178  1DB6  3BF7               	subwfb	___lldiv@dividend+2,f
 10179  1DB7  0874               	movf	___lldiv@divisor+3,w
 10180  1DB8  3BF8               	subwfb	___lldiv@dividend+3,f
 10181  1DB9  1420               	bsf	___lldiv@quotient,0
 10182  1DBA                     l4186:	
 10183  1DBA  3001               	movlw	1
 10184  1DBB                     u6775:	
 10185  1DBB  36F4               	lsrf	___lldiv@divisor+3,f
 10186  1DBC  0CF3               	rrf	___lldiv@divisor+2,f
 10187  1DBD  0CF2               	rrf	___lldiv@divisor+1,f
 10188  1DBE  0CF1               	rrf	___lldiv@divisor,f
 10189  1DBF  0B89               	decfsz	9,f
 10190  1DC0  2DBB               	goto	u6775
 10191  1DC1  3001               	movlw	1
 10192  1DC2  02A4               	subwf	___lldiv@counter,f
 10193  1DC3  1D03               	btfss	3,2
 10194  1DC4  2D9A               	goto	l4178
 10195  1DC5                     l4190:	
 10196  1DC5  0823               	movf	___lldiv@quotient+3,w
 10197  1DC6  00F4               	movwf	?___lldiv+3
 10198  1DC7  0822               	movf	___lldiv@quotient+2,w
 10199  1DC8  00F3               	movwf	?___lldiv+2
 10200  1DC9  0821               	movf	___lldiv@quotient+1,w
 10201  1DCA  00F2               	movwf	?___lldiv+1
 10202  1DCB  0820               	movf	___lldiv@quotient,w
 10203  1DCC  00F1               	movwf	?___lldiv
 10204  1DCD  0008               	return
 10205  1DCE                     __end_of___lldiv:	
 10206                           
 10207                           	psect	text16
 10208  1E30                     __ptext16:	
 10209 ;; *************** function ___fttol *****************
 10210 ;; Defined at:
 10211 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;  f1              3   36[BANK0 ] float 
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;  lval            4   45[BANK0 ] unsigned long 
 10216 ;;  exp1            1   49[BANK0 ] unsigned char 
 10217 ;;  sign1           1   44[BANK0 ] unsigned char 
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  4   36[BANK0 ] long 
 10220 ;; Registers used:
 10221 ;;		wreg, status,2, status,0
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10228 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10229 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10230 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10231 ;;Total ram usage:       14 bytes
 10232 ;; Hardware stack levels used:    1
 10233 ;; Hardware stack levels required when called:    1
 10234 ;; This function calls:
 10235 ;;		Nothing
 10236 ;; This function is called by:
 10237 ;;		_sprintf
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           
 10242                           ;psect for function ___fttol
 10243  1E30                     ___fttol:	
 10244                           
 10245                           ;incstack = 0
 10246                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10247  1E30  0020               	movlb	0	; select bank0
 10248  1E31  0844               	movf	___fttol@f1,w
 10249  1E32  00C8               	movwf	??___fttol
 10250  1E33  0845               	movf	___fttol@f1+1,w
 10251  1E34  00C9               	movwf	??___fttol+1
 10252  1E35  0846               	movf	___fttol@f1+2,w
 10253  1E36  00CA               	movwf	??___fttol+2
 10254  1E37  1003               	clrc
 10255  1E38  0D49               	rlf	??___fttol+1,w
 10256  1E39  0D4A               	rlf	??___fttol+2,w
 10257  1E3A  00CB               	movwf	??___fttol+3
 10258  1E3B  084B               	movf	??___fttol+3,w
 10259  1E3C  00D1               	movwf	___fttol@exp1
 10260  1E3D  0851               	movf	___fttol@exp1,w
 10261  1E3E  1D03               	btfss	3,2
 10262  1E3F  2E49               	goto	l4134
 10263  1E40  3000               	movlw	0
 10264  1E41  00C7               	movwf	?___fttol+3
 10265  1E42  3000               	movlw	0
 10266  1E43  00C6               	movwf	?___fttol+2
 10267  1E44  3000               	movlw	0
 10268  1E45  00C5               	movwf	?___fttol+1
 10269  1E46  3000               	movlw	0
 10270  1E47  00C4               	movwf	?___fttol
 10271  1E48  0008               	return
 10272  1E49                     l4134:	
 10273  1E49  0844               	movf	___fttol@f1,w
 10274  1E4A  00C8               	movwf	??___fttol
 10275  1E4B  0845               	movf	___fttol@f1+1,w
 10276  1E4C  00C9               	movwf	??___fttol+1
 10277  1E4D  0846               	movf	___fttol@f1+2,w
 10278  1E4E  00CA               	movwf	??___fttol+2
 10279  1E4F  3017               	movlw	23
 10280  1E50                     u6635:	
 10281  1E50  36CA               	lsrf	??___fttol+2,f
 10282  1E51  0CC9               	rrf	??___fttol+1,f
 10283  1E52  0CC8               	rrf	??___fttol,f
 10284  1E53  0B89               	decfsz	9,f
 10285  1E54  2E50               	goto	u6635
 10286  1E55  0848               	movf	??___fttol,w
 10287  1E56  00CB               	movwf	??___fttol+3
 10288  1E57  084B               	movf	??___fttol+3,w
 10289  1E58  00CC               	movwf	___fttol@sign1
 10290  1E59  17C5               	bsf	___fttol@f1+1,7
 10291  1E5A  30FF               	movlw	255
 10292  1E5B  05C4               	andwf	___fttol@f1,f
 10293  1E5C  30FF               	movlw	255
 10294  1E5D  05C5               	andwf	___fttol@f1+1,f
 10295  1E5E  3000               	movlw	0
 10296  1E5F  05C6               	andwf	___fttol@f1+2,f
 10297  1E60  0844               	movf	___fttol@f1,w
 10298  1E61  00CD               	movwf	___fttol@lval
 10299  1E62  0845               	movf	___fttol@f1+1,w
 10300  1E63  00CE               	movwf	___fttol@lval+1
 10301  1E64  0846               	movf	___fttol@f1+2,w
 10302  1E65  00CF               	movwf	___fttol@lval+2
 10303  1E66  01D0               	clrf	___fttol@lval+3
 10304  1E67  308E               	movlw	142
 10305  1E68  02D1               	subwf	___fttol@exp1,f
 10306  1E69  1FD1               	btfss	___fttol@exp1,7
 10307  1E6A  2E87               	goto	l4154
 10308  1E6B  0851               	movf	___fttol@exp1,w
 10309  1E6C  3A80               	xorlw	128
 10310  1E6D  3E8F               	addlw	143
 10311  1E6E  1803               	skipnc
 10312  1E6F  2E79               	goto	l4152
 10313  1E70  3000               	movlw	0
 10314  1E71  00C7               	movwf	?___fttol+3
 10315  1E72  3000               	movlw	0
 10316  1E73  00C6               	movwf	?___fttol+2
 10317  1E74  3000               	movlw	0
 10318  1E75  00C5               	movwf	?___fttol+1
 10319  1E76  3000               	movlw	0
 10320  1E77  00C4               	movwf	?___fttol
 10321  1E78  0008               	return
 10322  1E79                     l4152:	
 10323  1E79  3001               	movlw	1
 10324  1E7A                     u6665:	
 10325  1E7A  36D0               	lsrf	___fttol@lval+3,f
 10326  1E7B  0CCF               	rrf	___fttol@lval+2,f
 10327  1E7C  0CCE               	rrf	___fttol@lval+1,f
 10328  1E7D  0CCD               	rrf	___fttol@lval,f
 10329  1E7E  0B89               	decfsz	9,f
 10330  1E7F  2E7A               	goto	u6665
 10331  1E80  3001               	movlw	1
 10332  1E81  00C8               	movwf	??___fttol
 10333  1E82  0848               	movf	??___fttol,w
 10334  1E83  07D1               	addwf	___fttol@exp1,f
 10335  1E84  1903               	btfsc	3,2
 10336  1E85  2EA0               	goto	l4162
 10337  1E86  2E79               	goto	l4152
 10338  1E87                     l4154:	
 10339  1E87  3018               	movlw	24
 10340  1E88  0251               	subwf	___fttol@exp1,w
 10341  1E89  1C03               	skipc
 10342  1E8A  2E9D               	goto	l733
 10343  1E8B  3000               	movlw	0
 10344  1E8C  00C7               	movwf	?___fttol+3
 10345  1E8D  3000               	movlw	0
 10346  1E8E  00C6               	movwf	?___fttol+2
 10347  1E8F  3000               	movlw	0
 10348  1E90  00C5               	movwf	?___fttol+1
 10349  1E91  3000               	movlw	0
 10350  1E92  00C4               	movwf	?___fttol
 10351  1E93  0008               	return
 10352  1E94                     l4160:	
 10353  1E94  3001               	movlw	1
 10354  1E95                     u6695:	
 10355  1E95  35CD               	lslf	___fttol@lval,f
 10356  1E96  0DCE               	rlf	___fttol@lval+1,f
 10357  1E97  0DCF               	rlf	___fttol@lval+2,f
 10358  1E98  0DD0               	rlf	___fttol@lval+3,f
 10359  1E99  0B89               	decfsz	9,f
 10360  1E9A  2E95               	goto	u6695
 10361  1E9B  3001               	movlw	1
 10362  1E9C  02D1               	subwf	___fttol@exp1,f
 10363  1E9D                     l733:	
 10364  1E9D  0851               	movf	___fttol@exp1,w
 10365  1E9E  1D03               	btfss	3,2
 10366  1E9F  2E94               	goto	l4160
 10367  1EA0                     l4162:	
 10368  1EA0  084C               	movf	___fttol@sign1,w
 10369  1EA1  1903               	btfsc	3,2
 10370  1EA2  2EAE               	goto	l4166
 10371  1EA3  09CD               	comf	___fttol@lval,f
 10372  1EA4  09CE               	comf	___fttol@lval+1,f
 10373  1EA5  09CF               	comf	___fttol@lval+2,f
 10374  1EA6  09D0               	comf	___fttol@lval+3,f
 10375  1EA7  0ACD               	incf	___fttol@lval,f
 10376  1EA8  1903               	skipnz
 10377  1EA9  0ACE               	incf	___fttol@lval+1,f
 10378  1EAA  1903               	skipnz
 10379  1EAB  0ACF               	incf	___fttol@lval+2,f
 10380  1EAC  1903               	skipnz
 10381  1EAD  0AD0               	incf	___fttol@lval+3,f
 10382  1EAE                     l4166:	
 10383  1EAE  0850               	movf	___fttol@lval+3,w
 10384  1EAF  00C7               	movwf	?___fttol+3
 10385  1EB0  084F               	movf	___fttol@lval+2,w
 10386  1EB1  00C6               	movwf	?___fttol+2
 10387  1EB2  084E               	movf	___fttol@lval+1,w
 10388  1EB3  00C5               	movwf	?___fttol+1
 10389  1EB4  084D               	movf	___fttol@lval,w
 10390  1EB5  00C4               	movwf	?___fttol
 10391  1EB6  0008               	return
 10392  1EB7                     __end_of___fttol:	
 10393                           
 10394                           	psect	text17
 10395  1B4D                     __ptext17:	
 10396 ;; *************** function ___ftsub *****************
 10397 ;; Defined at:
 10398 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 10399 ;; Parameters:    Size  Location     Type
 10400 ;;  f2              3   54[BANK0 ] float 
 10401 ;;  f1              3   57[BANK0 ] float 
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;		None
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  3   54[BANK0 ] float 
 10406 ;; Registers used:
 10407 ;;		wreg, status,2, status,0, pclath, cstack
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10413 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10416 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10417 ;;Total ram usage:        6 bytes
 10418 ;; Hardware stack levels used:    1
 10419 ;; Hardware stack levels required when called:    3
 10420 ;; This function calls:
 10421 ;;		___ftadd
 10422 ;; This function is called by:
 10423 ;;		_sprintf
 10424 ;; This function uses a non-reentrant model
 10425 ;;
 10426                           
 10427                           
 10428                           ;psect for function ___ftsub
 10429  1B4D                     ___ftsub:	
 10430                           
 10431                           ;incstack = 0
 10432                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
 10433  1B4D  0020               	movlb	0	; select bank0
 10434  1B4E  0858               	movf	___ftsub@f2+2,w
 10435  1B4F  0457               	iorwf	___ftsub@f2+1,w
 10436  1B50  0456               	iorwf	___ftsub@f2,w
 10437  1B51  1903               	skipnz
 10438  1B52  2B55               	goto	l4124
 10439  1B53  3080               	movlw	128
 10440  1B54  06D8               	xorwf	___ftsub@f2+2,f
 10441  1B55                     l4124:	
 10442  1B55  0859               	movf	___ftsub@f1,w
 10443  1B56  00C9               	movwf	___ftadd@f1
 10444  1B57  085A               	movf	___ftsub@f1+1,w
 10445  1B58  00CA               	movwf	___ftadd@f1+1
 10446  1B59  085B               	movf	___ftsub@f1+2,w
 10447  1B5A  00CB               	movwf	___ftadd@f1+2
 10448  1B5B  0856               	movf	___ftsub@f2,w
 10449  1B5C  00CC               	movwf	___ftadd@f2
 10450  1B5D  0857               	movf	___ftsub@f2+1,w
 10451  1B5E  00CD               	movwf	___ftadd@f2+1
 10452  1B5F  0858               	movf	___ftsub@f2+2,w
 10453  1B60  00CE               	movwf	___ftadd@f2+2
 10454  1B61  3191  219C         	fcall	___ftadd
 10455  1B63  0020               	movlb	0	; select bank0
 10456  1B64  0849               	movf	?___ftadd,w
 10457  1B65  00D6               	movwf	?___ftsub
 10458  1B66  084A               	movf	?___ftadd+1,w
 10459  1B67  00D7               	movwf	?___ftsub+1
 10460  1B68  084B               	movf	?___ftadd+2,w
 10461  1B69  00D8               	movwf	?___ftsub+2
 10462  1B6A  0008               	return
 10463  1B6B                     __end_of___ftsub:	
 10464                           
 10465                           	psect	text18
 10466  119C                     __ptext18:	
 10467 ;; *************** function ___ftadd *****************
 10468 ;; Defined at:
 10469 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  f1              3   41[BANK0 ] float 
 10472 ;;  f2              3   44[BANK0 ] float 
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;  exp1            1   53[BANK0 ] unsigned char 
 10475 ;;  exp2            1   52[BANK0 ] unsigned char 
 10476 ;;  sign            1   51[BANK0 ] unsigned char 
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  3   41[BANK0 ] float 
 10479 ;; Registers used:
 10480 ;;		wreg, status,2, status,0, pclath, cstack
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10486 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10487 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10488 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10489 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10490 ;;Total ram usage:       13 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:    2
 10493 ;; This function calls:
 10494 ;;		___ftpack
 10495 ;; This function is called by:
 10496 ;;		_main
 10497 ;;		_sprintf
 10498 ;;		___ftsub
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           
 10503                           ;psect for function ___ftadd
 10504  119C                     ___ftadd:	
 10505                           
 10506                           ;incstack = 0
 10507                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 10508  119C  0020               	movlb	0	; select bank0
 10509  119D  0849               	movf	___ftadd@f1,w
 10510  119E  00CF               	movwf	??___ftadd
 10511  119F  084A               	movf	___ftadd@f1+1,w
 10512  11A0  00D0               	movwf	??___ftadd+1
 10513  11A1  084B               	movf	___ftadd@f1+2,w
 10514  11A2  00D1               	movwf	??___ftadd+2
 10515  11A3  1003               	clrc
 10516  11A4  0D50               	rlf	??___ftadd+1,w
 10517  11A5  0D51               	rlf	??___ftadd+2,w
 10518  11A6  00D2               	movwf	??___ftadd+3
 10519  11A7  0852               	movf	??___ftadd+3,w
 10520  11A8  00D5               	movwf	___ftadd@exp1
 10521  11A9  084C               	movf	___ftadd@f2,w
 10522  11AA  00CF               	movwf	??___ftadd
 10523  11AB  084D               	movf	___ftadd@f2+1,w
 10524  11AC  00D0               	movwf	??___ftadd+1
 10525  11AD  084E               	movf	___ftadd@f2+2,w
 10526  11AE  00D1               	movwf	??___ftadd+2
 10527  11AF  1003               	clrc
 10528  11B0  0D50               	rlf	??___ftadd+1,w
 10529  11B1  0D51               	rlf	??___ftadd+2,w
 10530  11B2  00D2               	movwf	??___ftadd+3
 10531  11B3  0852               	movf	??___ftadd+3,w
 10532  11B4  00D4               	movwf	___ftadd@exp2
 10533  11B5  0855               	movf	___ftadd@exp1,w
 10534  11B6  1903               	btfsc	3,2
 10535  11B7  29C4               	goto	l3692
 10536  11B8  0854               	movf	___ftadd@exp2,w
 10537  11B9  0255               	subwf	___ftadd@exp1,w
 10538  11BA  1803               	skipnc
 10539  11BB  29CB               	goto	l3696
 10540  11BC  0355               	decf	___ftadd@exp1,w
 10541  11BD  3AFF               	xorlw	255
 10542  11BE  0754               	addwf	___ftadd@exp2,w
 10543  11BF  00CF               	movwf	??___ftadd
 10544  11C0  3019               	movlw	25
 10545  11C1  024F               	subwf	??___ftadd,w
 10546  11C2  1C03               	skipc
 10547  11C3  29CB               	goto	l3696
 10548  11C4                     l3692:	
 10549  11C4  084C               	movf	___ftadd@f2,w
 10550  11C5  00C9               	movwf	?___ftadd
 10551  11C6  084D               	movf	___ftadd@f2+1,w
 10552  11C7  00CA               	movwf	?___ftadd+1
 10553  11C8  084E               	movf	___ftadd@f2+2,w
 10554  11C9  00CB               	movwf	?___ftadd+2
 10555  11CA  0008               	return
 10556  11CB                     l3696:	
 10557  11CB  0854               	movf	___ftadd@exp2,w
 10558  11CC  1903               	btfsc	3,2
 10559  11CD  0008               	return
 10560  11CE  0855               	movf	___ftadd@exp1,w
 10561  11CF  0254               	subwf	___ftadd@exp2,w
 10562  11D0  1803               	skipnc
 10563  11D1  29DA               	goto	l3702
 10564  11D2  0354               	decf	___ftadd@exp2,w
 10565  11D3  3AFF               	xorlw	255
 10566  11D4  0755               	addwf	___ftadd@exp1,w
 10567  11D5  00CF               	movwf	??___ftadd
 10568  11D6  3019               	movlw	25
 10569  11D7  024F               	subwf	??___ftadd,w
 10570  11D8  1803               	btfsc	3,0
 10571  11D9  0008               	return
 10572  11DA                     l3702:	
 10573  11DA  3006               	movlw	6
 10574  11DB  00CF               	movwf	??___ftadd
 10575  11DC  084F               	movf	??___ftadd,w
 10576  11DD  00D3               	movwf	___ftadd@sign
 10577  11DE  1BCB               	btfsc	___ftadd@f1+2,7
 10578  11DF  17D3               	bsf	___ftadd@sign,7
 10579  11E0  1BCE               	btfsc	___ftadd@f2+2,7
 10580  11E1  1753               	bsf	___ftadd@sign,6
 10581  11E2  17CA               	bsf	___ftadd@f1+1,7
 10582  11E3  30FF               	movlw	255
 10583  11E4  05C9               	andwf	___ftadd@f1,f
 10584  11E5  30FF               	movlw	255
 10585  11E6  05CA               	andwf	___ftadd@f1+1,f
 10586  11E7  3000               	movlw	0
 10587  11E8  05CB               	andwf	___ftadd@f1+2,f
 10588  11E9  17CD               	bsf	___ftadd@f2+1,7
 10589  11EA  30FF               	movlw	255
 10590  11EB  05CC               	andwf	___ftadd@f2,f
 10591  11EC  30FF               	movlw	255
 10592  11ED  05CD               	andwf	___ftadd@f2+1,f
 10593  11EE  3000               	movlw	0
 10594  11EF  05CE               	andwf	___ftadd@f2+2,f
 10595  11F0  0854               	movf	___ftadd@exp2,w
 10596  11F1  0255               	subwf	___ftadd@exp1,w
 10597  11F2  1803               	skipnc
 10598  11F3  2A16               	goto	l3724
 10599  11F4                     l3714:	
 10600  11F4  3001               	movlw	1
 10601  11F5                     u5655:	
 10602  11F5  35CC               	lslf	___ftadd@f2,f
 10603  11F6  0DCD               	rlf	___ftadd@f2+1,f
 10604  11F7  0DCE               	rlf	___ftadd@f2+2,f
 10605  11F8  0B89               	decfsz	9,f
 10606  11F9  29F5               	goto	u5655
 10607  11FA  3001               	movlw	1
 10608  11FB  02D4               	subwf	___ftadd@exp2,f
 10609  11FC  0854               	movf	___ftadd@exp2,w
 10610  11FD  0655               	xorwf	___ftadd@exp1,w
 10611  11FE  1903               	skipnz
 10612  11FF  2A11               	goto	l3722
 10613  1200  3001               	movlw	1
 10614  1201  02D3               	subwf	___ftadd@sign,f
 10615  1202  0853               	movf	___ftadd@sign,w
 10616  1203  3907               	andlw	7
 10617  1204  1903               	btfsc	3,2
 10618  1205  2A11               	goto	l3722
 10619  1206  29F4               	goto	l3714
 10620  1207                     l3720:	
 10621  1207  3001               	movlw	1
 10622  1208                     u5685:	
 10623  1208  36CB               	lsrf	___ftadd@f1+2,f
 10624  1209  0CCA               	rrf	___ftadd@f1+1,f
 10625  120A  0CC9               	rrf	___ftadd@f1,f
 10626  120B  0B89               	decfsz	9,f
 10627  120C  2A08               	goto	u5685
 10628  120D  3001               	movlw	1
 10629  120E  00CF               	movwf	??___ftadd
 10630  120F  084F               	movf	??___ftadd,w
 10631  1210  07D5               	addwf	___ftadd@exp1,f
 10632  1211                     l3722:	
 10633  1211  0855               	movf	___ftadd@exp1,w
 10634  1212  0654               	xorwf	___ftadd@exp2,w
 10635  1213  1903               	btfsc	3,2
 10636  1214  2A3B               	goto	l656
 10637  1215  2A07               	goto	l3720
 10638  1216                     l3724:	
 10639  1216  0855               	movf	___ftadd@exp1,w
 10640  1217  0254               	subwf	___ftadd@exp2,w
 10641  1218  1803               	skipnc
 10642  1219  2A3B               	goto	l656
 10643  121A                     l3726:	
 10644  121A  3001               	movlw	1
 10645  121B                     u5715:	
 10646  121B  35C9               	lslf	___ftadd@f1,f
 10647  121C  0DCA               	rlf	___ftadd@f1+1,f
 10648  121D  0DCB               	rlf	___ftadd@f1+2,f
 10649  121E  0B89               	decfsz	9,f
 10650  121F  2A1B               	goto	u5715
 10651  1220  3001               	movlw	1
 10652  1221  02D5               	subwf	___ftadd@exp1,f
 10653  1222  0854               	movf	___ftadd@exp2,w
 10654  1223  0655               	xorwf	___ftadd@exp1,w
 10655  1224  1903               	skipnz
 10656  1225  2A37               	goto	l3734
 10657  1226  3001               	movlw	1
 10658  1227  02D3               	subwf	___ftadd@sign,f
 10659  1228  0853               	movf	___ftadd@sign,w
 10660  1229  3907               	andlw	7
 10661  122A  1903               	btfsc	3,2
 10662  122B  2A37               	goto	l3734
 10663  122C  2A1A               	goto	l3726
 10664  122D                     l3732:	
 10665  122D  3001               	movlw	1
 10666  122E                     u5745:	
 10667  122E  36CE               	lsrf	___ftadd@f2+2,f
 10668  122F  0CCD               	rrf	___ftadd@f2+1,f
 10669  1230  0CCC               	rrf	___ftadd@f2,f
 10670  1231  0B89               	decfsz	9,f
 10671  1232  2A2E               	goto	u5745
 10672  1233  3001               	movlw	1
 10673  1234  00CF               	movwf	??___ftadd
 10674  1235  084F               	movf	??___ftadd,w
 10675  1236  07D4               	addwf	___ftadd@exp2,f
 10676  1237                     l3734:	
 10677  1237  0855               	movf	___ftadd@exp1,w
 10678  1238  0654               	xorwf	___ftadd@exp2,w
 10679  1239  1D03               	skipz
 10680  123A  2A2D               	goto	l3732
 10681  123B                     l656:	
 10682  123B  1FD3               	btfss	___ftadd@sign,7
 10683  123C  2A4D               	goto	l3738
 10684  123D  30FF               	movlw	255
 10685  123E  06C9               	xorwf	___ftadd@f1,f
 10686  123F  30FF               	movlw	255
 10687  1240  06CA               	xorwf	___ftadd@f1+1,f
 10688  1241  30FF               	movlw	255
 10689  1242  06CB               	xorwf	___ftadd@f1+2,f
 10690  1243  3001               	movlw	1
 10691  1244  07C9               	addwf	___ftadd@f1,f
 10692  1245  3000               	movlw	0
 10693  1246  1803               	skipnc
 10694  1247  3001               	movlw	1
 10695  1248  07CA               	addwf	___ftadd@f1+1,f
 10696  1249  3000               	movlw	0
 10697  124A  1803               	skipnc
 10698  124B  3001               	movlw	1
 10699  124C  07CB               	addwf	___ftadd@f1+2,f
 10700  124D                     l3738:	
 10701  124D  1F53               	btfss	___ftadd@sign,6
 10702  124E  2A5F               	goto	l3742
 10703  124F  30FF               	movlw	255
 10704  1250  06CC               	xorwf	___ftadd@f2,f
 10705  1251  30FF               	movlw	255
 10706  1252  06CD               	xorwf	___ftadd@f2+1,f
 10707  1253  30FF               	movlw	255
 10708  1254  06CE               	xorwf	___ftadd@f2+2,f
 10709  1255  3001               	movlw	1
 10710  1256  07CC               	addwf	___ftadd@f2,f
 10711  1257  3000               	movlw	0
 10712  1258  1803               	skipnc
 10713  1259  3001               	movlw	1
 10714  125A  07CD               	addwf	___ftadd@f2+1,f
 10715  125B  3000               	movlw	0
 10716  125C  1803               	skipnc
 10717  125D  3001               	movlw	1
 10718  125E  07CE               	addwf	___ftadd@f2+2,f
 10719  125F                     l3742:	
 10720  125F  01D3               	clrf	___ftadd@sign
 10721  1260  0849               	movf	___ftadd@f1,w
 10722  1261  07CC               	addwf	___ftadd@f2,f
 10723  1262  084A               	movf	___ftadd@f1+1,w
 10724  1263  3DCD               	addwfc	___ftadd@f2+1,f
 10725  1264  084B               	movf	___ftadd@f1+2,w
 10726  1265  3DCE               	addwfc	___ftadd@f2+2,f
 10727  1266  1FCE               	btfss	___ftadd@f2+2,7
 10728  1267  2A7A               	goto	l3752
 10729  1268  30FF               	movlw	255
 10730  1269  06CC               	xorwf	___ftadd@f2,f
 10731  126A  30FF               	movlw	255
 10732  126B  06CD               	xorwf	___ftadd@f2+1,f
 10733  126C  30FF               	movlw	255
 10734  126D  06CE               	xorwf	___ftadd@f2+2,f
 10735  126E  3001               	movlw	1
 10736  126F  07CC               	addwf	___ftadd@f2,f
 10737  1270  3000               	movlw	0
 10738  1271  1803               	skipnc
 10739  1272  3001               	movlw	1
 10740  1273  07CD               	addwf	___ftadd@f2+1,f
 10741  1274  3000               	movlw	0
 10742  1275  1803               	skipnc
 10743  1276  3001               	movlw	1
 10744  1277  07CE               	addwf	___ftadd@f2+2,f
 10745  1278  01D3               	clrf	___ftadd@sign
 10746  1279  0AD3               	incf	___ftadd@sign,f
 10747  127A                     l3752:	
 10748  127A  084C               	movf	___ftadd@f2,w
 10749  127B  00F1               	movwf	___ftpack@arg
 10750  127C  084D               	movf	___ftadd@f2+1,w
 10751  127D  00F2               	movwf	___ftpack@arg+1
 10752  127E  084E               	movf	___ftadd@f2+2,w
 10753  127F  00F3               	movwf	___ftpack@arg+2
 10754  1280  0855               	movf	___ftadd@exp1,w
 10755  1281  00CF               	movwf	??___ftadd
 10756  1282  084F               	movf	??___ftadd,w
 10757  1283  00F4               	movwf	___ftpack@exp
 10758  1284  0853               	movf	___ftadd@sign,w
 10759  1285  00D0               	movwf	??___ftadd+1
 10760  1286  0850               	movf	??___ftadd+1,w
 10761  1287  00F5               	movwf	___ftpack@sign
 10762  1288  318D  2558         	fcall	___ftpack
 10763  128A  0871               	movf	?___ftpack,w
 10764  128B  0020               	movlb	0	; select bank0
 10765  128C  00C9               	movwf	?___ftadd
 10766  128D  0872               	movf	?___ftpack+1,w
 10767  128E  00CA               	movwf	?___ftadd+1
 10768  128F  0873               	movf	?___ftpack+2,w
 10769  1290  00CB               	movwf	?___ftadd+2
 10770  1291  0008               	return
 10771  1292                     __end_of___ftadd:	
 10772                           
 10773                           	psect	text19
 10774  1AC5                     __ptext19:	
 10775 ;; *************** function ___ftneg *****************
 10776 ;; Defined at:
 10777 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  f1              3    1[COMMON] float 
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;		None
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  3    1[COMMON] float 
 10784 ;; Registers used:
 10785 ;;		wreg
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/0
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10791 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10795 ;;Total ram usage:        3 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:    1
 10798 ;; This function calls:
 10799 ;;		Nothing
 10800 ;; This function is called by:
 10801 ;;		_sprintf
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           
 10806                           ;psect for function ___ftneg
 10807  1AC5                     ___ftneg:	
 10808                           
 10809                           ;incstack = 0
 10810                           ; Regs used in ___ftneg: [wreg]
 10811  1AC5  0873               	movf	___ftneg@f1+2,w
 10812  1AC6  0472               	iorwf	___ftneg@f1+1,w
 10813  1AC7  0471               	iorwf	___ftneg@f1,w
 10814  1AC8  1903               	skipnz
 10815  1AC9  0008               	return
 10816  1ACA  3080               	movlw	128
 10817  1ACB  06F3               	xorwf	___ftneg@f1+2,f
 10818  1ACC  0008               	return
 10819  1ACD                     __end_of___ftneg:	
 10820                           
 10821                           	psect	text20
 10822  1C67                     __ptext20:	
 10823 ;; *************** function ___ftge *****************
 10824 ;; Defined at:
 10825 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;  ff1             3    1[COMMON] float 
 10828 ;;  ff2             3    4[COMMON] float 
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;		None
 10831 ;; Return value:  Size  Location     Type
 10832 ;;		None               void
 10833 ;; Registers used:
 10834 ;;		wreg, status,2, status,0
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10840 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10842 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10843 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10844 ;;Total ram usage:        9 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:    1
 10847 ;; This function calls:
 10848 ;;		Nothing
 10849 ;; This function is called by:
 10850 ;;		_sprintf
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           
 10855                           ;psect for function ___ftge
 10856  1C67                     ___ftge:	
 10857                           
 10858                           ;incstack = 0
 10859                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 10860  1C67  1FF3               	btfss	___ftge@ff1+2,7
 10861  1C68  2C7D               	goto	l4096
 10862  1C69  0971               	comf	___ftge@ff1,w
 10863  1C6A  00F7               	movwf	??___ftge
 10864  1C6B  0972               	comf	___ftge@ff1+1,w
 10865  1C6C  00F8               	movwf	??___ftge+1
 10866  1C6D  0973               	comf	___ftge@ff1+2,w
 10867  1C6E  00F9               	movwf	??___ftge+2
 10868  1C6F  0AF7               	incf	??___ftge,f
 10869  1C70  1903               	skipnz
 10870  1C71  0AF8               	incf	??___ftge+1,f
 10871  1C72  1903               	skipnz
 10872  1C73  0AF9               	incf	??___ftge+2,f
 10873  1C74  3000               	movlw	0
 10874  1C75  0777               	addwf	??___ftge,w
 10875  1C76  00F1               	movwf	___ftge@ff1
 10876  1C77  3000               	movlw	0
 10877  1C78  3D78               	addwfc	??___ftge+1,w
 10878  1C79  00F2               	movwf	___ftge@ff1+1
 10879  1C7A  3080               	movlw	128
 10880  1C7B  3D79               	addwfc	??___ftge+2,w
 10881  1C7C  00F3               	movwf	___ftge@ff1+2
 10882  1C7D                     l4096:	
 10883  1C7D  1FF6               	btfss	___ftge@ff2+2,7
 10884  1C7E  2C93               	goto	l4100
 10885  1C7F  0974               	comf	___ftge@ff2,w
 10886  1C80  00F7               	movwf	??___ftge
 10887  1C81  0975               	comf	___ftge@ff2+1,w
 10888  1C82  00F8               	movwf	??___ftge+1
 10889  1C83  0976               	comf	___ftge@ff2+2,w
 10890  1C84  00F9               	movwf	??___ftge+2
 10891  1C85  0AF7               	incf	??___ftge,f
 10892  1C86  1903               	skipnz
 10893  1C87  0AF8               	incf	??___ftge+1,f
 10894  1C88  1903               	skipnz
 10895  1C89  0AF9               	incf	??___ftge+2,f
 10896  1C8A  3000               	movlw	0
 10897  1C8B  0777               	addwf	??___ftge,w
 10898  1C8C  00F4               	movwf	___ftge@ff2
 10899  1C8D  3000               	movlw	0
 10900  1C8E  3D78               	addwfc	??___ftge+1,w
 10901  1C8F  00F5               	movwf	___ftge@ff2+1
 10902  1C90  3080               	movlw	128
 10903  1C91  3D79               	addwfc	??___ftge+2,w
 10904  1C92  00F6               	movwf	___ftge@ff2+2
 10905  1C93                     l4100:	
 10906  1C93  3080               	movlw	128
 10907  1C94  06F3               	xorwf	___ftge@ff1+2,f
 10908  1C95  3080               	movlw	128
 10909  1C96  06F6               	xorwf	___ftge@ff2+2,f
 10910  1C97  0876               	movf	___ftge@ff2+2,w
 10911  1C98  0273               	subwf	___ftge@ff1+2,w
 10912  1C99  1D03               	skipz
 10913  1C9A  0008               	return
 10914  1C9B  0875               	movf	___ftge@ff2+1,w
 10915  1C9C  0272               	subwf	___ftge@ff1+1,w
 10916  1C9D  1D03               	skipz
 10917  1C9E  0008               	return
 10918  1C9F  0874               	movf	___ftge@ff2,w
 10919  1CA0  0271               	subwf	___ftge@ff1,w
 10920  1CA1  0008               	return
 10921  1CA2                     __end_of___ftge:	
 10922                           
 10923                           	psect	text21
 10924  1001                     __ptext21:	
 10925 ;; *************** function ___lwtoft *****************
 10926 ;; Defined at:
 10927 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;  c               2    9[COMMON] unsigned int 
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;		None
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  3    9[COMMON] float 
 10934 ;; Registers used:
 10935 ;;		wreg, status,2, status,0, pclath, cstack
 10936 ;; Tracked objects:
 10937 ;;		On entry : 0/0
 10938 ;;		On exit  : 0/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10941 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10943 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10944 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10945 ;;Total ram usage:        4 bytes
 10946 ;; Hardware stack levels used:    1
 10947 ;; Hardware stack levels required when called:    2
 10948 ;; This function calls:
 10949 ;;		___ftpack
 10950 ;; This function is called by:
 10951 ;;		_main
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           
 10956                           ;psect for function ___lwtoft
 10957  1001                     ___lwtoft:	
 10958                           
 10959                           ;incstack = 0
 10960                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 10961  1001  0879               	movf	___lwtoft@c,w
 10962  1002  00F1               	movwf	___ftpack@arg
 10963  1003  087A               	movf	___lwtoft@c+1,w
 10964  1004  00F2               	movwf	___ftpack@arg+1
 10965  1005  01F3               	clrf	___ftpack@arg+2
 10966  1006  308E               	movlw	142
 10967  1007  0020               	movlb	0	; select bank0
 10968  1008  00A0               	movwf	??___lwtoft
 10969  1009  0820               	movf	??___lwtoft,w
 10970  100A  00F4               	movwf	___ftpack@exp
 10971  100B  01F5               	clrf	___ftpack@sign
 10972  100C  318D  2558         	fcall	___ftpack
 10973  100E  0871               	movf	?___ftpack,w
 10974  100F  00F9               	movwf	?___lwtoft
 10975  1010  0872               	movf	?___ftpack+1,w
 10976  1011  00FA               	movwf	?___lwtoft+1
 10977  1012  0873               	movf	?___ftpack+2,w
 10978  1013  00FB               	movwf	?___lwtoft+2
 10979  1014  0008               	return
 10980  1015                     __end_of___lwtoft:	
 10981                           
 10982                           	psect	text22
 10983  1B6B                     __ptext22:	
 10984 ;; *************** function ___awtoft *****************
 10985 ;; Defined at:
 10986 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;  c               2    9[COMMON] int 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;  sign            1    2[BANK0 ] unsigned char 
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  3    9[COMMON] float 
 10993 ;; Registers used:
 10994 ;;		wreg, status,2, status,0, pclath, cstack
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11000 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11001 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11002 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11003 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11004 ;;Total ram usage:        6 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    2
 11007 ;; This function calls:
 11008 ;;		___ftpack
 11009 ;; This function is called by:
 11010 ;;		_main
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           
 11015                           ;psect for function ___awtoft
 11016  1B6B                     ___awtoft:	
 11017                           
 11018                           ;incstack = 0
 11019                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11020  1B6B  0020               	movlb	0	; select bank0
 11021  1B6C  01A2               	clrf	___awtoft@sign
 11022  1B6D  1FFA               	btfss	___awtoft@c+1,7
 11023  1B6E  2B76               	goto	l4638
 11024  1B6F  09F9               	comf	___awtoft@c,f
 11025  1B70  09FA               	comf	___awtoft@c+1,f
 11026  1B71  0AF9               	incf	___awtoft@c,f
 11027  1B72  1903               	skipnz
 11028  1B73  0AFA               	incf	___awtoft@c+1,f
 11029  1B74  01A2               	clrf	___awtoft@sign
 11030  1B75  0AA2               	incf	___awtoft@sign,f
 11031  1B76                     l4638:	
 11032  1B76  0879               	movf	___awtoft@c,w
 11033  1B77  00F1               	movwf	___ftpack@arg
 11034  1B78  087A               	movf	___awtoft@c+1,w
 11035  1B79  00F2               	movwf	___ftpack@arg+1
 11036  1B7A  01F3               	clrf	___ftpack@arg+2
 11037  1B7B  308E               	movlw	142
 11038  1B7C  00A0               	movwf	??___awtoft
 11039  1B7D  0820               	movf	??___awtoft,w
 11040  1B7E  00F4               	movwf	___ftpack@exp
 11041  1B7F  0822               	movf	___awtoft@sign,w
 11042  1B80  00A1               	movwf	??___awtoft+1
 11043  1B81  0821               	movf	??___awtoft+1,w
 11044  1B82  00F5               	movwf	___ftpack@sign
 11045  1B83  318D  2558         	fcall	___ftpack
 11046  1B85  0871               	movf	?___ftpack,w
 11047  1B86  00F9               	movwf	?___awtoft
 11048  1B87  0872               	movf	?___ftpack+1,w
 11049  1B88  00FA               	movwf	?___awtoft+1
 11050  1B89  0873               	movf	?___ftpack+2,w
 11051  1B8A  00FB               	movwf	?___awtoft+2
 11052  1B8B  0008               	return
 11053  1B8C                     __end_of___awtoft:	
 11054                           
 11055                           	psect	text23
 11056  0D58                     __ptext23:	
 11057 ;; *************** function ___ftpack *****************
 11058 ;; Defined at:
 11059 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;  arg             3    1[COMMON] unsigned um
 11062 ;;  exp             1    4[COMMON] unsigned char 
 11063 ;;  sign            1    5[COMMON] unsigned char 
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;		None
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  3    1[COMMON] float 
 11068 ;; Registers used:
 11069 ;;		wreg, status,2, status,0
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11075 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11077 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11078 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11079 ;;Total ram usage:        8 bytes
 11080 ;; Hardware stack levels used:    1
 11081 ;; Hardware stack levels required when called:    1
 11082 ;; This function calls:
 11083 ;;		Nothing
 11084 ;; This function is called by:
 11085 ;;		___awtoft
 11086 ;;		___ftadd
 11087 ;;		___ftmul
 11088 ;;		___lltoft
 11089 ;;		___lwtoft
 11090 ;; This function uses a non-reentrant model
 11091 ;;
 11092                           
 11093                           
 11094                           ;psect for function ___ftpack
 11095  0D58                     ___ftpack:	
 11096                           
 11097                           ;incstack = 0
 11098                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11099  0D58  0874               	movf	___ftpack@exp,w
 11100  0D59  1903               	btfsc	3,2
 11101  0D5A  2D60               	goto	l3536
 11102  0D5B  0873               	movf	___ftpack@arg+2,w
 11103  0D5C  0472               	iorwf	___ftpack@arg+1,w
 11104  0D5D  0471               	iorwf	___ftpack@arg,w
 11105  0D5E  1D03               	skipz
 11106  0D5F  2D71               	goto	l3542
 11107  0D60                     l3536:	
 11108  0D60  3000               	movlw	0
 11109  0D61  00F1               	movwf	?___ftpack
 11110  0D62  3000               	movlw	0
 11111  0D63  00F2               	movwf	?___ftpack+1
 11112  0D64  3000               	movlw	0
 11113  0D65  00F3               	movwf	?___ftpack+2
 11114  0D66  0008               	return
 11115  0D67                     l3540:	
 11116  0D67  3001               	movlw	1
 11117  0D68  00F6               	movwf	??___ftpack
 11118  0D69  0876               	movf	??___ftpack,w
 11119  0D6A  07F4               	addwf	___ftpack@exp,f
 11120  0D6B  3001               	movlw	1
 11121  0D6C                     u5175:	
 11122  0D6C  36F3               	lsrf	___ftpack@arg+2,f
 11123  0D6D  0CF2               	rrf	___ftpack@arg+1,f
 11124  0D6E  0CF1               	rrf	___ftpack@arg,f
 11125  0D6F  0B89               	decfsz	9,f
 11126  0D70  2D6C               	goto	u5175
 11127  0D71                     l3542:	
 11128  0D71  30FE               	movlw	254
 11129  0D72  0573               	andwf	___ftpack@arg+2,w
 11130  0D73  1903               	btfsc	3,2
 11131  0D74  2D8A               	goto	l625
 11132  0D75  2D67               	goto	l3540
 11133  0D76                     l3544:	
 11134  0D76  3001               	movlw	1
 11135  0D77  00F6               	movwf	??___ftpack
 11136  0D78  0876               	movf	??___ftpack,w
 11137  0D79  07F4               	addwf	___ftpack@exp,f
 11138  0D7A  3001               	movlw	1
 11139  0D7B  07F1               	addwf	___ftpack@arg,f
 11140  0D7C  3000               	movlw	0
 11141  0D7D  1803               	skipnc
 11142  0D7E  3001               	movlw	1
 11143  0D7F  07F2               	addwf	___ftpack@arg+1,f
 11144  0D80  3000               	movlw	0
 11145  0D81  1803               	skipnc
 11146  0D82  3001               	movlw	1
 11147  0D83  07F3               	addwf	___ftpack@arg+2,f
 11148  0D84  3001               	movlw	1
 11149  0D85                     u5195:	
 11150  0D85  36F3               	lsrf	___ftpack@arg+2,f
 11151  0D86  0CF2               	rrf	___ftpack@arg+1,f
 11152  0D87  0CF1               	rrf	___ftpack@arg,f
 11153  0D88  0B89               	decfsz	9,f
 11154  0D89  2D85               	goto	u5195
 11155  0D8A                     l625:	
 11156  0D8A  30FF               	movlw	255
 11157  0D8B  0573               	andwf	___ftpack@arg+2,w
 11158  0D8C  1903               	btfsc	3,2
 11159  0D8D  2D97               	goto	l3552
 11160  0D8E  2D76               	goto	l3544
 11161  0D8F                     l3550:	
 11162  0D8F  3001               	movlw	1
 11163  0D90  02F4               	subwf	___ftpack@exp,f
 11164  0D91  3001               	movlw	1
 11165  0D92                     u5215:	
 11166  0D92  35F1               	lslf	___ftpack@arg,f
 11167  0D93  0DF2               	rlf	___ftpack@arg+1,f
 11168  0D94  0DF3               	rlf	___ftpack@arg+2,f
 11169  0D95  0B89               	decfsz	9,f
 11170  0D96  2D92               	goto	u5215
 11171  0D97                     l3552:	
 11172  0D97  1BF2               	btfsc	___ftpack@arg+1,7
 11173  0D98  2D9D               	goto	l632
 11174  0D99  3002               	movlw	2
 11175  0D9A  0274               	subwf	___ftpack@exp,w
 11176  0D9B  1803               	skipnc
 11177  0D9C  2D8F               	goto	l3550
 11178  0D9D                     l632:	
 11179  0D9D  1874               	btfsc	___ftpack@exp,0
 11180  0D9E  2DA5               	goto	l633
 11181  0D9F  30FF               	movlw	255
 11182  0DA0  05F1               	andwf	___ftpack@arg,f
 11183  0DA1  307F               	movlw	127
 11184  0DA2  05F2               	andwf	___ftpack@arg+1,f
 11185  0DA3  30FF               	movlw	255
 11186  0DA4  05F3               	andwf	___ftpack@arg+2,f
 11187  0DA5                     l633:	
 11188  0DA5  1003               	clrc
 11189  0DA6  0CF4               	rrf	___ftpack@exp,f
 11190  0DA7  0874               	movf	___ftpack@exp,w
 11191  0DA8  00F6               	movwf	??___ftpack
 11192  0DA9  01F7               	clrf	??___ftpack+1
 11193  0DAA  01F8               	clrf	??___ftpack+2
 11194  0DAB  3010               	movlw	16
 11195  0DAC                     u5255:	
 11196  0DAC  35F6               	lslf	??___ftpack,f
 11197  0DAD  0DF7               	rlf	??___ftpack+1,f
 11198  0DAE  0DF8               	rlf	??___ftpack+2,f
 11199  0DAF  0B89               	decfsz	9,f
 11200  0DB0  2DAC               	goto	u5255
 11201  0DB1  0876               	movf	??___ftpack,w
 11202  0DB2  04F1               	iorwf	___ftpack@arg,f
 11203  0DB3  0877               	movf	??___ftpack+1,w
 11204  0DB4  04F2               	iorwf	___ftpack@arg+1,f
 11205  0DB5  0878               	movf	??___ftpack+2,w
 11206  0DB6  04F3               	iorwf	___ftpack@arg+2,f
 11207  0DB7  0875               	movf	___ftpack@sign,w
 11208  0DB8  1903               	btfsc	3,2
 11209  0DB9  0008               	return
 11210  0DBA  17F3               	bsf	___ftpack@arg+2,7
 11211  0DBB  0008               	return
 11212  0DBC                     __end_of___ftpack:	
 11213                           
 11214                           	psect	text24
 11215  1AA6                     __ptext24:	
 11216 ;; *************** function _OSCILLATOR_Initialize *****************
 11217 ;; Defined at:
 11218 ;;		line 283 in file "LDC_ROT.h"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;		None
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;		None
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  1    wreg      void 
 11225 ;; Registers used:
 11226 ;;		wreg, status,2
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11236 ;;Total ram usage:        0 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; Hardware stack levels required when called:    1
 11239 ;; This function calls:
 11240 ;;		Nothing
 11241 ;; This function is called by:
 11242 ;;		_main
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           
 11247                           ;psect for function _OSCILLATOR_Initialize
 11248  1AA6                     _OSCILLATOR_Initialize:	
 11249                           
 11250                           ;LDC_ROT.h: 287: OSCCON = 0b01111011;
 11251                           
 11252                           ;incstack = 0
 11253                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11254  1AA6  307B               	movlw	123
 11255  1AA7  0021               	movlb	1	; select bank1
 11256  1AA8  009B               	movwf	27	;volatile
 11257                           
 11258                           ;LDC_ROT.h: 289: OSCSTAT = 0b100000000;
 11259  1AA9  019C               	clrf	28	;volatile
 11260                           
 11261                           ;LDC_ROT.h: 291: OSCTUNE = 0x00;
 11262  1AAA  019A               	clrf	26	;volatile
 11263                           
 11264                           ;LDC_ROT.h: 293: BORCON = 0x00;
 11265  1AAB  019D               	clrf	29	;volatile
 11266  1AAC  0008               	return
 11267  1AAD                     __end_of_OSCILLATOR_Initialize:	
 11268                           
 11269                           	psect	text25
 11270  1ABD                     __ptext25:	
 11271 ;; *************** function _OP_AMP_init *****************
 11272 ;; Defined at:
 11273 ;;		line 92 in file "LOAD20210.c"
 11274 ;; Parameters:    Size  Location     Type
 11275 ;;		None
 11276 ;; Auto vars:     Size  Location     Type
 11277 ;;		None
 11278 ;; Return value:  Size  Location     Type
 11279 ;;                  1    wreg      void 
 11280 ;; Registers used:
 11281 ;;		wreg, status,2
 11282 ;; Tracked objects:
 11283 ;;		On entry : 0/0
 11284 ;;		On exit  : 0/0
 11285 ;;		Unchanged: 0/0
 11286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11291 ;;Total ram usage:        0 bytes
 11292 ;; Hardware stack levels used:    1
 11293 ;; Hardware stack levels required when called:    1
 11294 ;; This function calls:
 11295 ;;		Nothing
 11296 ;; This function is called by:
 11297 ;;		_main
 11298 ;; This function uses a non-reentrant model
 11299 ;;
 11300                           
 11301                           
 11302                           ;psect for function _OP_AMP_init
 11303  1ABD                     _OP_AMP_init:	
 11304                           
 11305                           ;LOAD20210.c: 95: OPA3CON = 0x90;
 11306                           
 11307                           ;incstack = 0
 11308                           ; Regs used in _OP_AMP_init: [wreg+status,2]
 11309  1ABD  3090               	movlw	144
 11310  1ABE  002A               	movlb	10	; select bank10
 11311  1ABF  0099               	movwf	25	;volatile
 11312                           
 11313                           ;LOAD20210.c: 97: OPA3ORS = 0x00;
 11314  1AC0  019A               	clrf	26	;volatile
 11315                           
 11316                           ;LOAD20210.c: 99: OPA3NCHS = 0x00;
 11317  1AC1  0197               	clrf	23	;volatile
 11318                           
 11319                           ;LOAD20210.c: 101: OPA3PCHS = 0x02;
 11320  1AC2  3002               	movlw	2
 11321  1AC3  0098               	movwf	24	;volatile
 11322  1AC4  0008               	return
 11323  1AC5                     __end_of_OP_AMP_init:	
 11324                           
 11325                           	psect	text26
 11326  1C33                     __ptext26:	
 11327 ;; *************** function _LCD_TextDisplayString *****************
 11328 ;; Defined at:
 11329 ;;		line 367 in file "LDC_ROT.h"
 11330 ;; Parameters:    Size  Location     Type
 11331 ;;  line            1    wreg     unsigned char 
 11332 ;;  string          2    5[COMMON] PTR unsigned char 
 11333 ;;		 -> STR_4(17), STR_2(17), naif(17), 
 11334 ;; Auto vars:     Size  Location     Type
 11335 ;;  line            1   10[COMMON] unsigned char 
 11336 ;;  i               1    9[COMMON] unsigned char 
 11337 ;;  addr            1    8[COMMON] unsigned char 
 11338 ;; Return value:  Size  Location     Type
 11339 ;;                  1    wreg      void 
 11340 ;; Registers used:
 11341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11342 ;; Tracked objects:
 11343 ;;		On entry : 0/0
 11344 ;;		On exit  : 0/0
 11345 ;;		Unchanged: 0/0
 11346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11348 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11350 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11351 ;;Total ram usage:        6 bytes
 11352 ;; Hardware stack levels used:    1
 11353 ;; Hardware stack levels required when called:    3
 11354 ;; This function calls:
 11355 ;;		_LCD_WriteCommand
 11356 ;;		_LCD_WriteData
 11357 ;; This function is called by:
 11358 ;;		_main
 11359 ;; This function uses a non-reentrant model
 11360 ;;
 11361                           
 11362                           
 11363                           ;psect for function _LCD_TextDisplayString
 11364  1C33                     _LCD_TextDisplayString:	
 11365                           
 11366                           ;incstack = 0
 11367                           ; Regs used in _LCD_TextDisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11368                           ;LCD_TextDisplayString@line stored from wreg
 11369  1C33  00FA               	movwf	LCD_TextDisplayString@line
 11370                           
 11371                           ;LDC_ROT.h: 369: unsigned char addr,i;
 11372                           ;LDC_ROT.h: 370: if(line==1)
 11373  1C34  037A               	decf	LCD_TextDisplayString@line,w
 11374  1C35  1D03               	btfss	3,2
 11375  1C36  2C39               	goto	l4274
 11376                           
 11377                           ;LDC_ROT.h: 371: addr=0x80;
 11378  1C37  3080               	movlw	128
 11379  1C38  2C4A               	goto	L11
 11380  1C39                     l4274:	
 11381                           
 11382                           ;LDC_ROT.h: 372: else if(line==2)
 11383  1C39  3002               	movlw	2
 11384  1C3A  067A               	xorwf	LCD_TextDisplayString@line,w
 11385  1C3B  1D03               	btfss	3,2
 11386  1C3C  2C3F               	goto	l4278
 11387                           
 11388                           ;LDC_ROT.h: 373: addr=0x90;
 11389  1C3D  3090               	movlw	144
 11390  1C3E  2C4A               	goto	L11
 11391  1C3F                     l4278:	
 11392                           
 11393                           ;LDC_ROT.h: 374: else if(line==3)
 11394  1C3F  3003               	movlw	3
 11395  1C40  067A               	xorwf	LCD_TextDisplayString@line,w
 11396  1C41  1D03               	btfss	3,2
 11397  1C42  2C45               	goto	l4282
 11398                           
 11399                           ;LDC_ROT.h: 375: addr=0x88;
 11400  1C43  3088               	movlw	136
 11401  1C44  2C4A               	goto	L11
 11402  1C45                     l4282:	
 11403                           
 11404                           ;LDC_ROT.h: 376: else if(line==4)
 11405  1C45  3004               	movlw	4
 11406  1C46  067A               	xorwf	LCD_TextDisplayString@line,w
 11407  1C47  1D03               	btfss	3,2
 11408  1C48  2C4D               	goto	l4286
 11409                           
 11410                           ;LDC_ROT.h: 377: addr=0x98;
 11411  1C49  3098               	movlw	152
 11412  1C4A                     L11:	
 11413  1C4A  00F7               	movwf	??_LCD_TextDisplayString
 11414  1C4B  0877               	movf	??_LCD_TextDisplayString,w
 11415  1C4C  00F8               	movwf	LCD_TextDisplayString@addr
 11416  1C4D                     l4286:	
 11417                           
 11418                           ;LDC_ROT.h: 379: LCD_WriteCommand(addr);
 11419  1C4D  0878               	movf	LCD_TextDisplayString@addr,w
 11420  1C4E  319A  2298  319C   	fcall	_LCD_WriteCommand
 11421                           
 11422                           ;LDC_ROT.h: 381: for(i=0;i<16;i++)
 11423  1C51  01F9               	clrf	LCD_TextDisplayString@i
 11424  1C52                     L12:	
 11425  1C52  3010               	movlw	16
 11426  1C53  0279               	subwf	LCD_TextDisplayString@i,w
 11427  1C54  1803               	btfsc	3,0
 11428  1C55  0008               	return
 11429                           
 11430                           ;LDC_ROT.h: 382: LCD_WriteData(*string++);
 11431  1C56  0875               	movf	LCD_TextDisplayString@string,w
 11432  1C57  0084               	movwf	4
 11433  1C58  0876               	movf	LCD_TextDisplayString@string+1,w
 11434  1C59  0085               	movwf	5
 11435  1C5A  0800               	movf	0,w	;code access
 11436  1C5B  319A  229F  319C   	fcall	_LCD_WriteData
 11437  1C5E  3001               	movlw	1
 11438  1C5F  07F5               	addwf	LCD_TextDisplayString@string,f
 11439  1C60  3000               	movlw	0
 11440  1C61  3DF6               	addwfc	LCD_TextDisplayString@string+1,f
 11441  1C62  3001               	movlw	1
 11442  1C63  00F7               	movwf	??_LCD_TextDisplayString
 11443  1C64  0877               	movf	??_LCD_TextDisplayString,w
 11444  1C65  07F9               	addwf	LCD_TextDisplayString@i,f
 11445  1C66  2C52               	goto	L12
 11446  1C67                     __end_of_LCD_TextDisplayString:	
 11447                           
 11448                           	psect	text27
 11449  1DCE                     __ptext27:	
 11450 ;; *************** function _LCD_Init *****************
 11451 ;; Defined at:
 11452 ;;		line 303 in file "LDC_ROT.h"
 11453 ;; Parameters:    Size  Location     Type
 11454 ;;		None
 11455 ;; Auto vars:     Size  Location     Type
 11456 ;;		None
 11457 ;; Return value:  Size  Location     Type
 11458 ;;                  1    wreg      void 
 11459 ;; Registers used:
 11460 ;;		wreg, status,2, status,0, pclath, cstack
 11461 ;; Tracked objects:
 11462 ;;		On entry : 0/0
 11463 ;;		On exit  : 0/0
 11464 ;;		Unchanged: 0/0
 11465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11468 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11470 ;;Total ram usage:        2 bytes
 11471 ;; Hardware stack levels used:    1
 11472 ;; Hardware stack levels required when called:    3
 11473 ;; This function calls:
 11474 ;;		_LCD_WriteCommand
 11475 ;; This function is called by:
 11476 ;;		_main
 11477 ;; This function uses a non-reentrant model
 11478 ;;
 11479                           
 11480                           
 11481                           ;psect for function _LCD_Init
 11482  1DCE                     _LCD_Init:	
 11483                           
 11484                           ;LDC_ROT.h: 305: LATBbits.LATB2=1;
 11485                           
 11486                           ;incstack = 0
 11487                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 11488  1DCE  0022               	movlb	2	; select bank2
 11489  1DCF  150D               	bsf	13,2	;volatile
 11490                           
 11491                           ;LDC_ROT.h: 306: LATBbits.LATB2=0;
 11492  1DD0  110D               	bcf	13,2	;volatile
 11493                           
 11494                           ;LDC_ROT.h: 307: _delay((unsigned long)((5)*(16000000/4000.0)));
 11495  1DD1  301A               	movlw	26
 11496  1DD2  00F5               	movwf	??_LCD_Init
 11497  1DD3  30F8               	movlw	248
 11498  1DD4                     u7897:	
 11499  1DD4  0B89               	decfsz	9,f
 11500  1DD5  2DD4               	goto	u7897
 11501  1DD6  0BF5               	decfsz	??_LCD_Init,f
 11502  1DD7  2DD4               	goto	u7897
 11503  1DD8  3200               	nop2
 11504                           
 11505                           ;LDC_ROT.h: 308: LATBbits.LATB2=1;
 11506  1DD9  0022               	movlb	2	; select bank2
 11507  1DDA  150D               	bsf	13,2	;volatile
 11508                           
 11509                           ;LDC_ROT.h: 310: _delay((unsigned long)((50)*(16000000/4000.0)));
 11510  1DDB  3002               	movlw	2
 11511  1DDC  00F6               	movwf	??_LCD_Init+1
 11512  1DDD  3004               	movlw	4
 11513  1DDE  00F5               	movwf	??_LCD_Init
 11514  1DDF  30BA               	movlw	186
 11515  1DE0                     u7907:	
 11516  1DE0  0B89               	decfsz	9,f
 11517  1DE1  2DE0               	goto	u7907
 11518  1DE2  0BF5               	decfsz	??_LCD_Init,f
 11519  1DE3  2DE0               	goto	u7907
 11520  1DE4  0BF6               	decfsz	??_LCD_Init+1,f
 11521  1DE5  2DE0               	goto	u7907
 11522  1DE6  3200               	nop2
 11523                           
 11524                           ;LDC_ROT.h: 312: LCD_WriteCommand(0b00100000);
 11525  1DE7  3020               	movlw	32
 11526  1DE8  319A  2298  319D   	fcall	_LCD_WriteCommand
 11527                           
 11528                           ;LDC_ROT.h: 313: _delay((unsigned long)((5)*(16000000/4000.0)));
 11529  1DEB  301A               	movlw	26
 11530  1DEC  00F5               	movwf	??_LCD_Init
 11531  1DED  30F8               	movlw	248
 11532  1DEE                     u7917:	
 11533  1DEE  0B89               	decfsz	9,f
 11534  1DEF  2DEE               	goto	u7917
 11535  1DF0  0BF5               	decfsz	??_LCD_Init,f
 11536  1DF1  2DEE               	goto	u7917
 11537  1DF2  3200               	nop2
 11538                           
 11539                           ;LDC_ROT.h: 315: LCD_WriteCommand(0b00100000);
 11540  1DF3  3020               	movlw	32
 11541  1DF4  319A  2298  319D   	fcall	_LCD_WriteCommand
 11542                           
 11543                           ;LDC_ROT.h: 316: _delay((unsigned long)((5)*(16000000/4000.0)));
 11544  1DF7  301A               	movlw	26
 11545  1DF8  00F5               	movwf	??_LCD_Init
 11546  1DF9  30F8               	movlw	248
 11547  1DFA                     u7927:	
 11548  1DFA  0B89               	decfsz	9,f
 11549  1DFB  2DFA               	goto	u7927
 11550  1DFC  0BF5               	decfsz	??_LCD_Init,f
 11551  1DFD  2DFA               	goto	u7927
 11552  1DFE  3200               	nop2
 11553                           
 11554                           ;LDC_ROT.h: 318: LCD_WriteCommand(0b00001100);
 11555  1DFF  300C               	movlw	12
 11556  1E00  319A  2298  319D   	fcall	_LCD_WriteCommand
 11557                           
 11558                           ;LDC_ROT.h: 319: _delay((unsigned long)((5)*(16000000/4000.0)));
 11559  1E03  301A               	movlw	26
 11560  1E04  00F5               	movwf	??_LCD_Init
 11561  1E05  30F8               	movlw	248
 11562  1E06                     u7937:	
 11563  1E06  0B89               	decfsz	9,f
 11564  1E07  2E06               	goto	u7937
 11565  1E08  0BF5               	decfsz	??_LCD_Init,f
 11566  1E09  2E06               	goto	u7937
 11567  1E0A  3200               	nop2
 11568                           
 11569                           ;LDC_ROT.h: 321: LCD_WriteCommand(0x01);
 11570  1E0B  3001               	movlw	1
 11571  1E0C  319A  2298  319D   	fcall	_LCD_WriteCommand
 11572                           
 11573                           ;LDC_ROT.h: 322: _delay((unsigned long)((5)*(16000000/4000.0)));
 11574  1E0F  301A               	movlw	26
 11575  1E10  00F5               	movwf	??_LCD_Init
 11576  1E11  30F8               	movlw	248
 11577  1E12                     u7947:	
 11578  1E12  0B89               	decfsz	9,f
 11579  1E13  2E12               	goto	u7947
 11580  1E14  0BF5               	decfsz	??_LCD_Init,f
 11581  1E15  2E12               	goto	u7947
 11582  1E16  3200               	nop2
 11583                           
 11584                           ;LDC_ROT.h: 324: LCD_WriteCommand(0x06);
 11585  1E17  3006               	movlw	6
 11586  1E18  319A  2298  319D   	fcall	_LCD_WriteCommand
 11587                           
 11588                           ;LDC_ROT.h: 325: _delay((unsigned long)((5)*(16000000/4000.0)));
 11589  1E1B  301A               	movlw	26
 11590  1E1C  00F5               	movwf	??_LCD_Init
 11591  1E1D  30F8               	movlw	248
 11592  1E1E                     u7957:	
 11593  1E1E  0B89               	decfsz	9,f
 11594  1E1F  2E1E               	goto	u7957
 11595  1E20  0BF5               	decfsz	??_LCD_Init,f
 11596  1E21  2E1E               	goto	u7957
 11597  1E22  3200               	nop2
 11598                           
 11599                           ;LDC_ROT.h: 327: LCD_WriteCommand(0b00000010);
 11600  1E23  3002               	movlw	2
 11601  1E24  319A  2298  319D   	fcall	_LCD_WriteCommand
 11602                           
 11603                           ;LDC_ROT.h: 328: _delay((unsigned long)((5)*(16000000/4000.0)));
 11604  1E27  301A               	movlw	26
 11605  1E28  00F5               	movwf	??_LCD_Init
 11606  1E29  30F8               	movlw	248
 11607  1E2A                     u7967:	
 11608  1E2A  0B89               	decfsz	9,f
 11609  1E2B  2E2A               	goto	u7967
 11610  1E2C  0BF5               	decfsz	??_LCD_Init,f
 11611  1E2D  2E2A               	goto	u7967
 11612  1E2E  3200               	nop2
 11613  1E2F  0008               	return
 11614  1E30                     __end_of_LCD_Init:	
 11615                           
 11616                           	psect	text28
 11617  10CB                     __ptext28:	
 11618 ;; *************** function _LCD_FillScreenGraphics *****************
 11619 ;; Defined at:
 11620 ;;		line 401 in file "LDC_ROT.h"
 11621 ;; Parameters:    Size  Location     Type
 11622 ;;  graphic         2    5[COMMON] PTR const unsigned char 
 11623 ;;		 -> des(1024), 
 11624 ;; Auto vars:     Size  Location     Type
 11625 ;;  x               1    8[COMMON] unsigned char 
 11626 ;;  y               1    7[COMMON] unsigned char 
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  1    wreg      void 
 11629 ;; Registers used:
 11630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11638 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11639 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11640 ;;Total ram usage:       12 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:    3
 11643 ;; This function calls:
 11644 ;;		_LCD_WriteCommand
 11645 ;;		_LCD_WriteData
 11646 ;; This function is called by:
 11647 ;;		_main
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           
 11652                           ;psect for function _LCD_FillScreenGraphics
 11653  10CB                     _LCD_FillScreenGraphics:	
 11654                           
 11655                           ;LDC_ROT.h: 403: unsigned char x, y;
 11656                           ;LDC_ROT.h: 404: for(y = 0; y < 64; y++)
 11657                           
 11658                           ;incstack = 0
 11659                           ; Regs used in _LCD_FillScreenGraphics: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11660  10CB  01F7               	clrf	LCD_FillScreenGraphics@y
 11661  10CC                     L14:	
 11662  10CC  3040               	movlw	64
 11663  10CD  0277               	subwf	LCD_FillScreenGraphics@y,w
 11664  10CE  1803               	btfsc	3,0
 11665  10CF  0008               	return
 11666                           
 11667                           ;LDC_ROT.h: 405: {
 11668                           ;LDC_ROT.h: 406: if(y < 32)
 11669  10D0  3020               	movlw	32
 11670  10D1  0277               	subwf	LCD_FillScreenGraphics@y,w
 11671  10D2  1803               	skipnc
 11672  10D3  2933               	goto	l4340
 11673                           
 11674                           ;LDC_ROT.h: 407: {
 11675                           ;LDC_ROT.h: 408: for(x = 0; x < 8; x++)
 11676  10D4  01F8               	clrf	LCD_FillScreenGraphics@x
 11677  10D5                     L13:	
 11678  10D5  3008               	movlw	8
 11679  10D6  0278               	subwf	LCD_FillScreenGraphics@x,w
 11680  10D7  1803               	btfsc	3,0
 11681  10D8  2996               	goto	l4356
 11682                           
 11683                           ;LDC_ROT.h: 409: {
 11684                           ;LDC_ROT.h: 410: LCD_WriteCommand(0x80 | y);
 11685  10D9  0877               	movf	LCD_FillScreenGraphics@y,w
 11686  10DA  3880               	iorlw	128
 11687  10DB  319A  2298  3190   	fcall	_LCD_WriteCommand
 11688                           
 11689                           ;LDC_ROT.h: 411: LCD_WriteCommand(0x80 | x);
 11690  10DE  0878               	movf	LCD_FillScreenGraphics@x,w
 11691  10DF  3880               	iorlw	128
 11692  10E0  319A  2298  3190   	fcall	_LCD_WriteCommand
 11693                           
 11694                           ;LDC_ROT.h: 412: LCD_WriteData(graphic[2*x + 16*y]);
 11695  10E3  0877               	movf	LCD_FillScreenGraphics@y,w
 11696  10E4  0020               	movlb	0	; select bank0
 11697  10E5  00A0               	movwf	??_LCD_FillScreenGraphics
 11698  10E6  01A1               	clrf	??_LCD_FillScreenGraphics+1
 11699  10E7  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 11700  10E8  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 11701  10E9  30F0               	movlw	240
 11702  10EA  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 11703  10EB  0820               	movf	??_LCD_FillScreenGraphics,w
 11704  10EC  390F               	andlw	15
 11705  10ED  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 11706  10EE  30F0               	movlw	240
 11707  10EF  05A0               	andwf	??_LCD_FillScreenGraphics,f
 11708  10F0  0878               	movf	LCD_FillScreenGraphics@x,w
 11709  10F1  00A2               	movwf	??_LCD_FillScreenGraphics+2
 11710  10F2  01A3               	clrf	??_LCD_FillScreenGraphics+3
 11711  10F3  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 11712  10F4  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 11713  10F5  0820               	movf	??_LCD_FillScreenGraphics,w
 11714  10F6  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 11715  10F7  00A4               	movwf	??_LCD_FillScreenGraphics+4
 11716  10F8  0821               	movf	??_LCD_FillScreenGraphics+1,w
 11717  10F9  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 11718  10FA  00A5               	movwf	??_LCD_FillScreenGraphics+5
 11719  10FB  0875               	movf	LCD_FillScreenGraphics@graphic,w
 11720  10FC  0724               	addwf	??_LCD_FillScreenGraphics+4,w
 11721  10FD  0084               	movwf	4
 11722  10FE  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 11723  10FF  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 11724  1100  0085               	movwf	5
 11725  1101  0800               	movf	0,w	;code access
 11726  1102  319A  229F  3190   	fcall	_LCD_WriteData
 11727                           
 11728                           ;LDC_ROT.h: 413: LCD_WriteData(graphic[2*x+1 + 16*y]);
 11729  1105  0877               	movf	LCD_FillScreenGraphics@y,w
 11730  1106  0020               	movlb	0	; select bank0
 11731  1107  00A0               	movwf	??_LCD_FillScreenGraphics
 11732  1108  01A1               	clrf	??_LCD_FillScreenGraphics+1
 11733  1109  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 11734  110A  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 11735  110B  30F0               	movlw	240
 11736  110C  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 11737  110D  0820               	movf	??_LCD_FillScreenGraphics,w
 11738  110E  390F               	andlw	15
 11739  110F  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 11740  1110  30F0               	movlw	240
 11741  1111  05A0               	andwf	??_LCD_FillScreenGraphics,f
 11742  1112  0878               	movf	LCD_FillScreenGraphics@x,w
 11743  1113  00A2               	movwf	??_LCD_FillScreenGraphics+2
 11744  1114  01A3               	clrf	??_LCD_FillScreenGraphics+3
 11745  1115  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 11746  1116  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 11747  1117  0820               	movf	??_LCD_FillScreenGraphics,w
 11748  1118  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 11749  1119  00A4               	movwf	??_LCD_FillScreenGraphics+4
 11750  111A  0821               	movf	??_LCD_FillScreenGraphics+1,w
 11751  111B  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 11752  111C  00A5               	movwf	??_LCD_FillScreenGraphics+5
 11753  111D  0824               	movf	??_LCD_FillScreenGraphics+4,w
 11754  111E  3E01               	addlw	1
 11755  111F  00A6               	movwf	??_LCD_FillScreenGraphics+6
 11756  1120  3000               	movlw	0
 11757  1121  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 11758  1122  00A7               	movwf	??_LCD_FillScreenGraphics+7
 11759  1123  0875               	movf	LCD_FillScreenGraphics@graphic,w
 11760  1124  0726               	addwf	??_LCD_FillScreenGraphics+6,w
 11761  1125  0084               	movwf	4
 11762  1126  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 11763  1127  3D27               	addwfc	??_LCD_FillScreenGraphics+7,w
 11764  1128  0085               	movwf	5
 11765  1129  0800               	movf	0,w	;code access
 11766  112A  319A  229F  3190   	fcall	_LCD_WriteData
 11767  112D  3001               	movlw	1
 11768  112E  0020               	movlb	0	; select bank0
 11769  112F  00A0               	movwf	??_LCD_FillScreenGraphics
 11770  1130  0820               	movf	??_LCD_FillScreenGraphics,w
 11771  1131  07F8               	addwf	LCD_FillScreenGraphics@x,f
 11772  1132  28D5               	goto	L13
 11773  1133                     l4340:	
 11774                           ;LDC_ROT.h: 414: }
 11775                           ;LDC_ROT.h: 415: }
 11776                           
 11777                           
 11778                           ;LDC_ROT.h: 416: else
 11779                           ;LDC_ROT.h: 417: {
 11780                           ;LDC_ROT.h: 418: for(x = 0; x < 8; x++)
 11781  1133  01F8               	clrf	LCD_FillScreenGraphics@x
 11782  1134  3008               	movlw	8
 11783  1135  0278               	subwf	LCD_FillScreenGraphics@x,w
 11784  1136  1803               	btfsc	3,0
 11785  1137  2996               	goto	l4356
 11786  1138                     l4346:	
 11787                           
 11788                           ;LDC_ROT.h: 419: {
 11789                           ;LDC_ROT.h: 420: LCD_WriteCommand(0x80 | (y-32));
 11790  1138  0877               	movf	LCD_FillScreenGraphics@y,w
 11791  1139  3EE0               	addlw	224
 11792  113A  3880               	iorlw	128
 11793  113B  319A  2298  3190   	fcall	_LCD_WriteCommand
 11794                           
 11795                           ;LDC_ROT.h: 421: LCD_WriteCommand(0x88 | x);
 11796  113E  0878               	movf	LCD_FillScreenGraphics@x,w
 11797  113F  3888               	iorlw	136
 11798  1140  319A  2298  3190   	fcall	_LCD_WriteCommand
 11799                           
 11800                           ;LDC_ROT.h: 422: LCD_WriteData(graphic[2*x + 16*y]);
 11801  1143  0877               	movf	LCD_FillScreenGraphics@y,w
 11802  1144  0020               	movlb	0	; select bank0
 11803  1145  00A0               	movwf	??_LCD_FillScreenGraphics
 11804  1146  01A1               	clrf	??_LCD_FillScreenGraphics+1
 11805  1147  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 11806  1148  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 11807  1149  30F0               	movlw	240
 11808  114A  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 11809  114B  0820               	movf	??_LCD_FillScreenGraphics,w
 11810  114C  390F               	andlw	15
 11811  114D  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 11812  114E  30F0               	movlw	240
 11813  114F  05A0               	andwf	??_LCD_FillScreenGraphics,f
 11814  1150  0878               	movf	LCD_FillScreenGraphics@x,w
 11815  1151  00A2               	movwf	??_LCD_FillScreenGraphics+2
 11816  1152  01A3               	clrf	??_LCD_FillScreenGraphics+3
 11817  1153  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 11818  1154  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 11819  1155  0820               	movf	??_LCD_FillScreenGraphics,w
 11820  1156  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 11821  1157  00A4               	movwf	??_LCD_FillScreenGraphics+4
 11822  1158  0821               	movf	??_LCD_FillScreenGraphics+1,w
 11823  1159  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 11824  115A  00A5               	movwf	??_LCD_FillScreenGraphics+5
 11825  115B  0875               	movf	LCD_FillScreenGraphics@graphic,w
 11826  115C  0724               	addwf	??_LCD_FillScreenGraphics+4,w
 11827  115D  0084               	movwf	4
 11828  115E  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 11829  115F  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 11830  1160  0085               	movwf	5
 11831  1161  0800               	movf	0,w	;code access
 11832  1162  319A  229F  3190   	fcall	_LCD_WriteData
 11833                           
 11834                           ;LDC_ROT.h: 423: LCD_WriteData(graphic[2*x+1 + 16*y]);
 11835  1165  0877               	movf	LCD_FillScreenGraphics@y,w
 11836  1166  0020               	movlb	0	; select bank0
 11837  1167  00A0               	movwf	??_LCD_FillScreenGraphics
 11838  1168  01A1               	clrf	??_LCD_FillScreenGraphics+1
 11839  1169  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 11840  116A  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 11841  116B  30F0               	movlw	240
 11842  116C  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 11843  116D  0820               	movf	??_LCD_FillScreenGraphics,w
 11844  116E  390F               	andlw	15
 11845  116F  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 11846  1170  30F0               	movlw	240
 11847  1171  05A0               	andwf	??_LCD_FillScreenGraphics,f
 11848  1172  0878               	movf	LCD_FillScreenGraphics@x,w
 11849  1173  00A2               	movwf	??_LCD_FillScreenGraphics+2
 11850  1174  01A3               	clrf	??_LCD_FillScreenGraphics+3
 11851  1175  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 11852  1176  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 11853  1177  0820               	movf	??_LCD_FillScreenGraphics,w
 11854  1178  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 11855  1179  00A4               	movwf	??_LCD_FillScreenGraphics+4
 11856  117A  0821               	movf	??_LCD_FillScreenGraphics+1,w
 11857  117B  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 11858  117C  00A5               	movwf	??_LCD_FillScreenGraphics+5
 11859  117D  0824               	movf	??_LCD_FillScreenGraphics+4,w
 11860  117E  3E01               	addlw	1
 11861  117F  00A6               	movwf	??_LCD_FillScreenGraphics+6
 11862  1180  3000               	movlw	0
 11863  1181  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 11864  1182  00A7               	movwf	??_LCD_FillScreenGraphics+7
 11865  1183  0875               	movf	LCD_FillScreenGraphics@graphic,w
 11866  1184  0726               	addwf	??_LCD_FillScreenGraphics+6,w
 11867  1185  0084               	movwf	4
 11868  1186  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 11869  1187  3D27               	addwfc	??_LCD_FillScreenGraphics+7,w
 11870  1188  0085               	movwf	5
 11871  1189  0800               	movf	0,w	;code access
 11872  118A  319A  229F  3190   	fcall	_LCD_WriteData
 11873  118D  3001               	movlw	1
 11874  118E  0020               	movlb	0	; select bank0
 11875  118F  00A0               	movwf	??_LCD_FillScreenGraphics
 11876  1190  0820               	movf	??_LCD_FillScreenGraphics,w
 11877  1191  07F8               	addwf	LCD_FillScreenGraphics@x,f
 11878  1192  3008               	movlw	8
 11879  1193  0278               	subwf	LCD_FillScreenGraphics@x,w
 11880  1194  1C03               	skipc
 11881  1195  2938               	goto	l4346
 11882  1196                     l4356:	
 11883  1196  3001               	movlw	1
 11884  1197  0020               	movlb	0	; select bank0
 11885  1198  00A0               	movwf	??_LCD_FillScreenGraphics
 11886  1199  0820               	movf	??_LCD_FillScreenGraphics,w
 11887  119A  07F7               	addwf	LCD_FillScreenGraphics@y,f
 11888  119B  28CC               	goto	L14
 11889  119C                     __end_of_LCD_FillScreenGraphics:	
 11890                           
 11891                           	psect	text29
 11892  1BAF                     __ptext29:	
 11893 ;; *************** function _LCD_EnableGraphics *****************
 11894 ;; Defined at:
 11895 ;;		line 385 in file "LDC_ROT.h"
 11896 ;; Parameters:    Size  Location     Type
 11897 ;;		None
 11898 ;; Auto vars:     Size  Location     Type
 11899 ;;		None
 11900 ;; Return value:  Size  Location     Type
 11901 ;;                  1    wreg      void 
 11902 ;; Registers used:
 11903 ;;		wreg, status,2, status,0, pclath, cstack
 11904 ;; Tracked objects:
 11905 ;;		On entry : 0/0
 11906 ;;		On exit  : 0/0
 11907 ;;		Unchanged: 0/0
 11908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11913 ;;Total ram usage:        1 bytes
 11914 ;; Hardware stack levels used:    1
 11915 ;; Hardware stack levels required when called:    3
 11916 ;; This function calls:
 11917 ;;		_LCD_WriteCommand
 11918 ;; This function is called by:
 11919 ;;		_main
 11920 ;; This function uses a non-reentrant model
 11921 ;;
 11922                           
 11923                           
 11924                           ;psect for function _LCD_EnableGraphics
 11925  1BAF                     _LCD_EnableGraphics:	
 11926                           
 11927                           ;LDC_ROT.h: 387: LCD_WriteCommand(0x20);
 11928                           
 11929                           ;incstack = 0
 11930                           ; Regs used in _LCD_EnableGraphics: [wreg+status,2+status,0+pclath+cstack]
 11931  1BAF  3020               	movlw	32
 11932  1BB0  319A  2298  319B   	fcall	_LCD_WriteCommand
 11933                           
 11934                           ;LDC_ROT.h: 388: _delay((unsigned long)((1)*(16000000/4000.0)));
 11935  1BB3  3006               	movlw	6
 11936  1BB4  00F5               	movwf	??_LCD_EnableGraphics
 11937  1BB5  3030               	movlw	48
 11938  1BB6                     u7977:	
 11939  1BB6  0B89               	decfsz	9,f
 11940  1BB7  2BB6               	goto	u7977
 11941  1BB8  0BF5               	decfsz	??_LCD_EnableGraphics,f
 11942  1BB9  2BB6               	goto	u7977
 11943  1BBA  3200               	nop2
 11944                           
 11945                           ;LDC_ROT.h: 389: LCD_WriteCommand(0x24);
 11946  1BBB  3024               	movlw	36
 11947  1BBC  319A  2298  319B   	fcall	_LCD_WriteCommand
 11948                           
 11949                           ;LDC_ROT.h: 390: _delay((unsigned long)((1)*(16000000/4000.0)));
 11950  1BBF  3006               	movlw	6
 11951  1BC0  00F5               	movwf	??_LCD_EnableGraphics
 11952  1BC1  3030               	movlw	48
 11953  1BC2                     u7987:	
 11954  1BC2  0B89               	decfsz	9,f
 11955  1BC3  2BC2               	goto	u7987
 11956  1BC4  0BF5               	decfsz	??_LCD_EnableGraphics,f
 11957  1BC5  2BC2               	goto	u7987
 11958  1BC6  3200               	nop2
 11959                           
 11960                           ;LDC_ROT.h: 391: LCD_WriteCommand(0x26);
 11961  1BC7  3026               	movlw	38
 11962  1BC8  319A  2298  319B   	fcall	_LCD_WriteCommand
 11963                           
 11964                           ;LDC_ROT.h: 392: _delay((unsigned long)((1)*(16000000/4000.0)));
 11965  1BCB  3006               	movlw	6
 11966  1BCC  00F5               	movwf	??_LCD_EnableGraphics
 11967  1BCD  3030               	movlw	48
 11968  1BCE                     u7997:	
 11969  1BCE  0B89               	decfsz	9,f
 11970  1BCF  2BCE               	goto	u7997
 11971  1BD0  0BF5               	decfsz	??_LCD_EnableGraphics,f
 11972  1BD1  2BCE               	goto	u7997
 11973  1BD2  3200               	nop2
 11974  1BD3  0008               	return
 11975  1BD4                     __end_of_LCD_EnableGraphics:	
 11976                           
 11977                           	psect	text30
 11978  1AD6                     __ptext30:	
 11979 ;; *************** function _LCD_DisableGraphics *****************
 11980 ;; Defined at:
 11981 ;;		line 395 in file "LDC_ROT.h"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;		None
 11984 ;; Auto vars:     Size  Location     Type
 11985 ;;		None
 11986 ;; Return value:  Size  Location     Type
 11987 ;;                  1    wreg      void 
 11988 ;; Registers used:
 11989 ;;		wreg, status,2, status,0, pclath, cstack
 11990 ;; Tracked objects:
 11991 ;;		On entry : 0/0
 11992 ;;		On exit  : 0/0
 11993 ;;		Unchanged: 0/0
 11994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11999 ;;Total ram usage:        1 bytes
 12000 ;; Hardware stack levels used:    1
 12001 ;; Hardware stack levels required when called:    3
 12002 ;; This function calls:
 12003 ;;		_LCD_WriteCommand
 12004 ;; This function is called by:
 12005 ;;		_main
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           
 12010                           ;psect for function _LCD_DisableGraphics
 12011  1AD6                     _LCD_DisableGraphics:	
 12012                           
 12013                           ;LDC_ROT.h: 397: LCD_WriteCommand(0x20);
 12014                           
 12015                           ;incstack = 0
 12016                           ; Regs used in _LCD_DisableGraphics: [wreg+status,2+status,0+pclath+cstack]
 12017  1AD6  3020               	movlw	32
 12018  1AD7  319A  2298  319A   	fcall	_LCD_WriteCommand
 12019                           
 12020                           ;LDC_ROT.h: 398: _delay((unsigned long)((1)*(16000000/4000.0)));
 12021  1ADA  3006               	movlw	6
 12022  1ADB  00F5               	movwf	??_LCD_DisableGraphics
 12023  1ADC  3030               	movlw	48
 12024  1ADD                     u8007:	
 12025  1ADD  0B89               	decfsz	9,f
 12026  1ADE  2ADD               	goto	u8007
 12027  1ADF  0BF5               	decfsz	??_LCD_DisableGraphics,f
 12028  1AE0  2ADD               	goto	u8007
 12029  1AE1  3200               	nop2
 12030  1AE2  0008               	return
 12031  1AE3                     __end_of_LCD_DisableGraphics:	
 12032                           
 12033                           	psect	text31
 12034  1BFF                     __ptext31:	
 12035 ;; *************** function _LCD_ClearGraphics *****************
 12036 ;; Defined at:
 12037 ;;		line 532 in file "LDC_ROT.h"
 12038 ;; Parameters:    Size  Location     Type
 12039 ;;		None
 12040 ;; Auto vars:     Size  Location     Type
 12041 ;;  y               1    7[COMMON] unsigned char 
 12042 ;;  x               1    6[COMMON] unsigned char 
 12043 ;; Return value:  Size  Location     Type
 12044 ;;                  1    wreg      void 
 12045 ;; Registers used:
 12046 ;;		wreg, status,2, status,0, pclath, cstack
 12047 ;; Tracked objects:
 12048 ;;		On entry : 0/0
 12049 ;;		On exit  : 0/0
 12050 ;;		Unchanged: 0/0
 12051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12053 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12055 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12056 ;;Total ram usage:        3 bytes
 12057 ;; Hardware stack levels used:    1
 12058 ;; Hardware stack levels required when called:    3
 12059 ;; This function calls:
 12060 ;;		_LCD_WriteCommand
 12061 ;;		_LCD_WriteData
 12062 ;; This function is called by:
 12063 ;;		_main
 12064 ;; This function uses a non-reentrant model
 12065 ;;
 12066                           
 12067                           
 12068                           ;psect for function _LCD_ClearGraphics
 12069  1BFF                     _LCD_ClearGraphics:	
 12070                           
 12071                           ;LDC_ROT.h: 536: unsigned char x, y;
 12072                           ;LDC_ROT.h: 537: for(y = 0; y < 64; y++)
 12073                           
 12074                           ;incstack = 0
 12075                           ; Regs used in _LCD_ClearGraphics: [wreg+status,2+status,0+pclath+cstack]
 12076  1BFF  01F7               	clrf	LCD_ClearGraphics@y
 12077  1C00                     L16:	
 12078  1C00  3040               	movlw	64
 12079  1C01  0277               	subwf	LCD_ClearGraphics@y,w
 12080  1C02  1803               	btfsc	3,0
 12081  1C03  0008               	return
 12082                           
 12083                           ;LDC_ROT.h: 538: {
 12084                           ;LDC_ROT.h: 539: if(y < 32)
 12085  1C04  3020               	movlw	32
 12086  1C05  0277               	subwf	LCD_ClearGraphics@y,w
 12087  1C06  1803               	skipnc
 12088  1C07  2C0F               	goto	l4370
 12089                           
 12090                           ;LDC_ROT.h: 540: {
 12091                           ;LDC_ROT.h: 541: LCD_WriteCommand(0x80 | y);
 12092  1C08  0877               	movf	LCD_ClearGraphics@y,w
 12093  1C09  3880               	iorlw	128
 12094  1C0A  319A  2298  319B   	fcall	_LCD_WriteCommand
 12095                           
 12096                           ;LDC_ROT.h: 542: LCD_WriteCommand(0x80);
 12097  1C0D  3080               	movlw	128
 12098  1C0E  2C16               	goto	L15
 12099  1C0F                     l4370:	
 12100                           ;LDC_ROT.h: 543: }
 12101                           
 12102                           
 12103                           ;LDC_ROT.h: 544: else
 12104                           ;LDC_ROT.h: 545: {
 12105                           ;LDC_ROT.h: 546: LCD_WriteCommand(0x80 | (y-32));
 12106  1C0F  0877               	movf	LCD_ClearGraphics@y,w
 12107  1C10  3EE0               	addlw	224
 12108  1C11  3880               	iorlw	128
 12109  1C12  319A  2298  319B   	fcall	_LCD_WriteCommand
 12110                           
 12111                           ;LDC_ROT.h: 547: LCD_WriteCommand(0x88);
 12112  1C15  3088               	movlw	136
 12113  1C16                     L15:	
 12114  1C16  319A  2298  319B   	fcall	_LCD_WriteCommand
 12115                           
 12116                           ;LDC_ROT.h: 548: }
 12117                           ;LDC_ROT.h: 549: for(x = 0; x < 8; x++)
 12118  1C19  01F6               	clrf	LCD_ClearGraphics@x
 12119  1C1A  3008               	movlw	8
 12120  1C1B  0276               	subwf	LCD_ClearGraphics@x,w
 12121  1C1C  1803               	btfsc	3,0
 12122  1C1D  2C2E               	goto	l4384
 12123  1C1E                     l4378:	
 12124                           
 12125                           ;LDC_ROT.h: 550: {
 12126                           ;LDC_ROT.h: 551: LCD_WriteData(0x00);
 12127  1C1E  3000               	movlw	0
 12128  1C1F  319A  229F  319B   	fcall	_LCD_WriteData
 12129                           
 12130                           ;LDC_ROT.h: 552: LCD_WriteData(0x00);
 12131  1C22  3000               	movlw	0
 12132  1C23  319A  229F  319B   	fcall	_LCD_WriteData
 12133  1C26  3001               	movlw	1
 12134  1C27  00F5               	movwf	??_LCD_ClearGraphics
 12135  1C28  0875               	movf	??_LCD_ClearGraphics,w
 12136  1C29  07F6               	addwf	LCD_ClearGraphics@x,f
 12137  1C2A  3008               	movlw	8
 12138  1C2B  0276               	subwf	LCD_ClearGraphics@x,w
 12139  1C2C  1C03               	skipc
 12140  1C2D  2C1E               	goto	l4378
 12141  1C2E                     l4384:	
 12142  1C2E  3001               	movlw	1
 12143  1C2F  00F5               	movwf	??_LCD_ClearGraphics
 12144  1C30  0875               	movf	??_LCD_ClearGraphics,w
 12145  1C31  07F7               	addwf	LCD_ClearGraphics@y,f
 12146  1C32  2C00               	goto	L16
 12147  1C33                     __end_of_LCD_ClearGraphics:	
 12148                           
 12149                           	psect	text32
 12150  1A9F                     __ptext32:	
 12151 ;; *************** function _LCD_WriteData *****************
 12152 ;; Defined at:
 12153 ;;		line 355 in file "LDC_ROT.h"
 12154 ;; Parameters:    Size  Location     Type
 12155 ;;  data            1    wreg     unsigned char 
 12156 ;; Auto vars:     Size  Location     Type
 12157 ;;  data            1    4[COMMON] unsigned char 
 12158 ;; Return value:  Size  Location     Type
 12159 ;;                  1    wreg      void 
 12160 ;; Registers used:
 12161 ;;		wreg, status,2, status,0, pclath, cstack
 12162 ;; Tracked objects:
 12163 ;;		On entry : 0/0
 12164 ;;		On exit  : 0/0
 12165 ;;		Unchanged: 0/0
 12166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12170 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12171 ;;Total ram usage:        1 bytes
 12172 ;; Hardware stack levels used:    1
 12173 ;; Hardware stack levels required when called:    2
 12174 ;; This function calls:
 12175 ;;		_LCD_WriteByte
 12176 ;; This function is called by:
 12177 ;;		_LCD_TextDisplayString
 12178 ;;		_LCD_FillScreenGraphics
 12179 ;;		_LCD_ClearGraphics
 12180 ;;		_LCD_GraphicsDisplayString
 12181 ;; This function uses a non-reentrant model
 12182 ;;
 12183                           
 12184                           
 12185                           ;psect for function _LCD_WriteData
 12186  1A9F                     _LCD_WriteData:	
 12187                           
 12188                           ;incstack = 0
 12189                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0+pclath+cstack]
 12190                           ;LCD_WriteData@data stored from wreg
 12191  1A9F  00F4               	movwf	LCD_WriteData@data
 12192                           
 12193                           ;LDC_ROT.h: 357: LATBbits.LATB0=1;
 12194  1AA0  0022               	movlb	2	; select bank2
 12195  1AA1  140D               	bsf	13,0	;volatile
 12196                           
 12197                           ;LDC_ROT.h: 358: LCD_WriteByte(data);
 12198  1AA2  0874               	movf	LCD_WriteData@data,w
 12199  1AA3  319E  26B7         	fcall	_LCD_WriteByte
 12200  1AA5  0008               	return
 12201  1AA6                     __end_of_LCD_WriteData:	
 12202                           
 12203                           	psect	text33
 12204  1A98                     __ptext33:	
 12205 ;; *************** function _LCD_WriteCommand *****************
 12206 ;; Defined at:
 12207 ;;		line 361 in file "LDC_ROT.h"
 12208 ;; Parameters:    Size  Location     Type
 12209 ;;  command         1    wreg     unsigned char 
 12210 ;; Auto vars:     Size  Location     Type
 12211 ;;  command         1    4[COMMON] unsigned char 
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  1    wreg      void 
 12214 ;; Registers used:
 12215 ;;		wreg, status,2, status,0, pclath, cstack
 12216 ;; Tracked objects:
 12217 ;;		On entry : 0/0
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12225 ;;Total ram usage:        1 bytes
 12226 ;; Hardware stack levels used:    1
 12227 ;; Hardware stack levels required when called:    2
 12228 ;; This function calls:
 12229 ;;		_LCD_WriteByte
 12230 ;; This function is called by:
 12231 ;;		_LCD_Init
 12232 ;;		_LCD_TextDisplayString
 12233 ;;		_LCD_EnableGraphics
 12234 ;;		_LCD_DisableGraphics
 12235 ;;		_LCD_FillScreenGraphics
 12236 ;;		_LCD_ClearGraphics
 12237 ;;		_LCD_GraphicsDisplayString
 12238 ;; This function uses a non-reentrant model
 12239 ;;
 12240                           
 12241                           
 12242                           ;psect for function _LCD_WriteCommand
 12243  1A98                     _LCD_WriteCommand:	
 12244                           
 12245                           ;incstack = 0
 12246                           ; Regs used in _LCD_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 12247                           ;LCD_WriteCommand@command stored from wreg
 12248  1A98  00F4               	movwf	LCD_WriteCommand@command
 12249                           
 12250                           ;LDC_ROT.h: 363: LATBbits.LATB0=0;
 12251  1A99  0022               	movlb	2	; select bank2
 12252  1A9A  100D               	bcf	13,0	;volatile
 12253                           
 12254                           ;LDC_ROT.h: 364: LCD_WriteByte(command);
 12255  1A9B  0874               	movf	LCD_WriteCommand@command,w
 12256  1A9C  319E  26B7         	fcall	_LCD_WriteByte
 12257  1A9E  0008               	return
 12258  1A9F                     __end_of_LCD_WriteCommand:	
 12259                           
 12260                           	psect	text34
 12261  1EB7                     __ptext34:	
 12262 ;; *************** function _LCD_WriteByte *****************
 12263 ;; Defined at:
 12264 ;;		line 330 in file "LDC_ROT.h"
 12265 ;; Parameters:    Size  Location     Type
 12266 ;;  command         1    wreg     unsigned char 
 12267 ;; Auto vars:     Size  Location     Type
 12268 ;;  command         1    3[COMMON] unsigned char 
 12269 ;; Return value:  Size  Location     Type
 12270 ;;                  1    wreg      void 
 12271 ;; Registers used:
 12272 ;;		wreg, status,2, status,0
 12273 ;; Tracked objects:
 12274 ;;		On entry : 0/0
 12275 ;;		On exit  : 0/0
 12276 ;;		Unchanged: 0/0
 12277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12280 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12281 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12282 ;;Total ram usage:        3 bytes
 12283 ;; Hardware stack levels used:    1
 12284 ;; Hardware stack levels required when called:    1
 12285 ;; This function calls:
 12286 ;;		Nothing
 12287 ;; This function is called by:
 12288 ;;		_LCD_WriteData
 12289 ;;		_LCD_WriteCommand
 12290 ;; This function uses a non-reentrant model
 12291 ;;
 12292                           
 12293                           
 12294                           ;psect for function _LCD_WriteByte
 12295  1EB7                     _LCD_WriteByte:	
 12296                           
 12297                           ;incstack = 0
 12298                           ; Regs used in _LCD_WriteByte: [wreg+status,2+status,0]
 12299                           ;LCD_WriteByte@command stored from wreg
 12300  1EB7  00F3               	movwf	LCD_WriteByte@command
 12301                           
 12302                           ;LDC_ROT.h: 332: LATBbits.LATB1 = 1;
 12303  1EB8  0022               	movlb	2	; select bank2
 12304  1EB9  148D               	bsf	13,1	;volatile
 12305                           
 12306                           ;LDC_ROT.h: 333: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12307  1EBA  301A               	movlw	26
 12308  1EBB                     u8017:	
 12309  1EBB  0B89               	decfsz	9,f
 12310  1EBC  2EBB               	goto	u8017
 12311  1EBD  3200               	nop2
 12312                           
 12313                           ;LDC_ROT.h: 335: LATBbits.LATB3 = (command & (1 << 4)) >> 4;
 12314  1EBE  0873               	movf	LCD_WriteByte@command,w
 12315  1EBF  00F1               	movwf	??_LCD_WriteByte
 12316  1EC0  3004               	movlw	4
 12317  1EC1                     u5275:	
 12318  1EC1  36F1               	lsrf	??_LCD_WriteByte,f
 12319  1EC2  0B89               	decfsz	9,f
 12320  1EC3  2EC1               	goto	u5275
 12321  1EC4  0871               	movf	??_LCD_WriteByte,w
 12322  1EC5  3901               	andlw	1
 12323  1EC6  00F2               	movwf	??_LCD_WriteByte+1
 12324  1EC7  0DF2               	rlf	??_LCD_WriteByte+1,f
 12325  1EC8  0DF2               	rlf	??_LCD_WriteByte+1,f
 12326  1EC9  0DF2               	rlf	??_LCD_WriteByte+1,f
 12327  1ECA  0022               	movlb	2	; select bank2
 12328  1ECB  080D               	movf	13,w	;volatile
 12329  1ECC  0672               	xorwf	??_LCD_WriteByte+1,w
 12330  1ECD  39F7               	andlw	-9
 12331  1ECE  0672               	xorwf	??_LCD_WriteByte+1,w
 12332  1ECF  008D               	movwf	13	;volatile
 12333                           
 12334                           ;LDC_ROT.h: 336: LATBbits.LATB4 = (command & (1 << 5)) >> 5;
 12335  1ED0  0873               	movf	LCD_WriteByte@command,w
 12336  1ED1  00F1               	movwf	??_LCD_WriteByte
 12337  1ED2  3005               	movlw	5
 12338  1ED3                     u5285:	
 12339  1ED3  36F1               	lsrf	??_LCD_WriteByte,f
 12340  1ED4  0B89               	decfsz	9,f
 12341  1ED5  2ED3               	goto	u5285
 12342  1ED6  0871               	movf	??_LCD_WriteByte,w
 12343  1ED7  3901               	andlw	1
 12344  1ED8  00F2               	movwf	??_LCD_WriteByte+1
 12345  1ED9  0EF2               	swapf	??_LCD_WriteByte+1,f
 12346  1EDA  080D               	movf	13,w	;volatile
 12347  1EDB  0672               	xorwf	??_LCD_WriteByte+1,w
 12348  1EDC  39EF               	andlw	-17
 12349  1EDD  0672               	xorwf	??_LCD_WriteByte+1,w
 12350  1EDE  008D               	movwf	13	;volatile
 12351                           
 12352                           ;LDC_ROT.h: 337: LATBbits.LATB5 = (command & (1 << 6)) >> 6;
 12353  1EDF  0873               	movf	LCD_WriteByte@command,w
 12354  1EE0  00F1               	movwf	??_LCD_WriteByte
 12355  1EE1  3006               	movlw	6
 12356  1EE2                     u5295:	
 12357  1EE2  36F1               	lsrf	??_LCD_WriteByte,f
 12358  1EE3  0B89               	decfsz	9,f
 12359  1EE4  2EE2               	goto	u5295
 12360  1EE5  0871               	movf	??_LCD_WriteByte,w
 12361  1EE6  3901               	andlw	1
 12362  1EE7  00F2               	movwf	??_LCD_WriteByte+1
 12363  1EE8  0EF2               	swapf	??_LCD_WriteByte+1,f
 12364  1EE9  0DF2               	rlf	??_LCD_WriteByte+1,f
 12365  1EEA  080D               	movf	13,w	;volatile
 12366  1EEB  0672               	xorwf	??_LCD_WriteByte+1,w
 12367  1EEC  39DF               	andlw	-33
 12368  1EED  0672               	xorwf	??_LCD_WriteByte+1,w
 12369  1EEE  008D               	movwf	13	;volatile
 12370                           
 12371                           ;LDC_ROT.h: 338: LATBbits.LATB6 = (command & (1 << 7)) >> 7;
 12372  1EEF  0873               	movf	LCD_WriteByte@command,w
 12373  1EF0  00F1               	movwf	??_LCD_WriteByte
 12374  1EF1  3007               	movlw	7
 12375  1EF2                     u5305:	
 12376  1EF2  36F1               	lsrf	??_LCD_WriteByte,f
 12377  1EF3  0B89               	decfsz	9,f
 12378  1EF4  2EF2               	goto	u5305
 12379  1EF5  0871               	movf	??_LCD_WriteByte,w
 12380  1EF6  3901               	andlw	1
 12381  1EF7  00F2               	movwf	??_LCD_WriteByte+1
 12382  1EF8  0EF2               	swapf	??_LCD_WriteByte+1,f
 12383  1EF9  0DF2               	rlf	??_LCD_WriteByte+1,f
 12384  1EFA  0DF2               	rlf	??_LCD_WriteByte+1,f
 12385  1EFB  080D               	movf	13,w	;volatile
 12386  1EFC  0672               	xorwf	??_LCD_WriteByte+1,w
 12387  1EFD  39BF               	andlw	-65
 12388  1EFE  0672               	xorwf	??_LCD_WriteByte+1,w
 12389  1EFF  008D               	movwf	13	;volatile
 12390                           
 12391                           ;LDC_ROT.h: 339: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12392  1F00  301A               	movlw	26
 12393  1F01                     u8027:	
 12394  1F01  0B89               	decfsz	9,f
 12395  1F02  2F01               	goto	u8027
 12396  1F03  3200               	nop2
 12397                           
 12398                           ;LDC_ROT.h: 340: LATBbits.LATB1 = 0;
 12399  1F04  0022               	movlb	2	; select bank2
 12400  1F05  108D               	bcf	13,1	;volatile
 12401                           
 12402                           ;LDC_ROT.h: 342: LATBbits.LATB1 = 1;
 12403  1F06  148D               	bsf	13,1	;volatile
 12404                           
 12405                           ;LDC_ROT.h: 343: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12406  1F07  301A               	movlw	26
 12407  1F08                     u8037:	
 12408  1F08  0B89               	decfsz	9,f
 12409  1F09  2F08               	goto	u8037
 12410  1F0A  3200               	nop2
 12411                           
 12412                           ;LDC_ROT.h: 345: LATBbits.LATB3 = (command & (1 << 0)) >> 0;
 12413  1F0B  0873               	movf	LCD_WriteByte@command,w
 12414  1F0C  3901               	andlw	1
 12415  1F0D  00F1               	movwf	??_LCD_WriteByte
 12416  1F0E  0DF1               	rlf	??_LCD_WriteByte,f
 12417  1F0F  0DF1               	rlf	??_LCD_WriteByte,f
 12418  1F10  0DF1               	rlf	??_LCD_WriteByte,f
 12419  1F11  0022               	movlb	2	; select bank2
 12420  1F12  080D               	movf	13,w	;volatile
 12421  1F13  0671               	xorwf	??_LCD_WriteByte,w
 12422  1F14  39F7               	andlw	-9
 12423  1F15  0671               	xorwf	??_LCD_WriteByte,w
 12424  1F16  008D               	movwf	13	;volatile
 12425                           
 12426                           ;LDC_ROT.h: 346: LATBbits.LATB4 = (command & (1 << 1)) >> 1;
 12427  1F17  3673               	lsrf	LCD_WriteByte@command,w
 12428  1F18  3901               	andlw	1
 12429  1F19  00F1               	movwf	??_LCD_WriteByte
 12430  1F1A  0EF1               	swapf	??_LCD_WriteByte,f
 12431  1F1B  080D               	movf	13,w	;volatile
 12432  1F1C  0671               	xorwf	??_LCD_WriteByte,w
 12433  1F1D  39EF               	andlw	-17
 12434  1F1E  0671               	xorwf	??_LCD_WriteByte,w
 12435  1F1F  008D               	movwf	13	;volatile
 12436                           
 12437                           ;LDC_ROT.h: 347: LATBbits.LATB5 = (command & (1 << 2)) >> 2;
 12438  1F20  0873               	movf	LCD_WriteByte@command,w
 12439  1F21  00F1               	movwf	??_LCD_WriteByte
 12440  1F22  3002               	movlw	2
 12441  1F23                     u5315:	
 12442  1F23  36F1               	lsrf	??_LCD_WriteByte,f
 12443  1F24  0B89               	decfsz	9,f
 12444  1F25  2F23               	goto	u5315
 12445  1F26  0871               	movf	??_LCD_WriteByte,w
 12446  1F27  3901               	andlw	1
 12447  1F28  00F2               	movwf	??_LCD_WriteByte+1
 12448  1F29  0EF2               	swapf	??_LCD_WriteByte+1,f
 12449  1F2A  0DF2               	rlf	??_LCD_WriteByte+1,f
 12450  1F2B  080D               	movf	13,w	;volatile
 12451  1F2C  0672               	xorwf	??_LCD_WriteByte+1,w
 12452  1F2D  39DF               	andlw	-33
 12453  1F2E  0672               	xorwf	??_LCD_WriteByte+1,w
 12454  1F2F  008D               	movwf	13	;volatile
 12455                           
 12456                           ;LDC_ROT.h: 348: LATBbits.LATB6 = (command & (1 << 3)) >> 3;
 12457  1F30  0873               	movf	LCD_WriteByte@command,w
 12458  1F31  00F1               	movwf	??_LCD_WriteByte
 12459  1F32  3003               	movlw	3
 12460  1F33                     u5325:	
 12461  1F33  36F1               	lsrf	??_LCD_WriteByte,f
 12462  1F34  0B89               	decfsz	9,f
 12463  1F35  2F33               	goto	u5325
 12464  1F36  0871               	movf	??_LCD_WriteByte,w
 12465  1F37  3901               	andlw	1
 12466  1F38  00F2               	movwf	??_LCD_WriteByte+1
 12467  1F39  0EF2               	swapf	??_LCD_WriteByte+1,f
 12468  1F3A  0DF2               	rlf	??_LCD_WriteByte+1,f
 12469  1F3B  0DF2               	rlf	??_LCD_WriteByte+1,f
 12470  1F3C  080D               	movf	13,w	;volatile
 12471  1F3D  0672               	xorwf	??_LCD_WriteByte+1,w
 12472  1F3E  39BF               	andlw	-65
 12473  1F3F  0672               	xorwf	??_LCD_WriteByte+1,w
 12474  1F40  008D               	movwf	13	;volatile
 12475                           
 12476                           ;LDC_ROT.h: 349: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12477  1F41  301A               	movlw	26
 12478  1F42                     u8047:	
 12479  1F42  0B89               	decfsz	9,f
 12480  1F43  2F42               	goto	u8047
 12481  1F44  3200               	nop2
 12482                           
 12483                           ;LDC_ROT.h: 350: LATBbits.LATB1 = 0;
 12484  1F45  0022               	movlb	2	; select bank2
 12485  1F46  108D               	bcf	13,1	;volatile
 12486                           
 12487                           ;LDC_ROT.h: 352: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12488  1F47  301A               	movlw	26
 12489  1F48                     u8057:	
 12490  1F48  0B89               	decfsz	9,f
 12491  1F49  2F48               	goto	u8057
 12492  1F4A  3200               	nop2
 12493  1F4B  0008               	return
 12494  1F4C                     __end_of_LCD_WriteByte:	
 12495                           
 12496                           	psect	text35
 12497  0D4E                     __ptext35:	
 12498 ;; *************** function _InitKeypad *****************
 12499 ;; Defined at:
 12500 ;;		line 83 in file "LOAD20210.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;		None
 12503 ;; Auto vars:     Size  Location     Type
 12504 ;;		None
 12505 ;; Return value:  Size  Location     Type
 12506 ;;                  1    wreg      void 
 12507 ;; Registers used:
 12508 ;;		wreg, status,2
 12509 ;; Tracked objects:
 12510 ;;		On entry : 0/0
 12511 ;;		On exit  : 0/0
 12512 ;;		Unchanged: 0/0
 12513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12518 ;;Total ram usage:        0 bytes
 12519 ;; Hardware stack levels used:    1
 12520 ;; Hardware stack levels required when called:    1
 12521 ;; This function calls:
 12522 ;;		Nothing
 12523 ;; This function is called by:
 12524 ;;		_main
 12525 ;; This function uses a non-reentrant model
 12526 ;;
 12527                           
 12528                           
 12529                           ;psect for function _InitKeypad
 12530  0D4E                     _InitKeypad:	
 12531                           
 12532                           ;LOAD20210.c: 86: OPTION_REGbits.nWPUEN =0;
 12533                           
 12534                           ;incstack = 0
 12535                           ; Regs used in _InitKeypad: [wreg+status,2]
 12536  0D4E  0021               	movlb	1	; select bank1
 12537  0D4F  1397               	bcf	23,7	;volatile
 12538                           
 12539                           ;LOAD20210.c: 87: TRISD = 0b11110000;
 12540  0D50  30F0               	movlw	240
 12541  0D51  008F               	movwf	15	;volatile
 12542                           
 12543                           ;LOAD20210.c: 88: WPUD = 0b11110000;
 12544  0D52  30F0               	movlw	240
 12545  0D53  0024               	movlb	4	; select bank4
 12546  0D54  008F               	movwf	15	;volatile
 12547                           
 12548                           ;LOAD20210.c: 89: ANSELD=0;
 12549  0D55  0023               	movlb	3	; select bank3
 12550  0D56  018F               	clrf	15	;volatile
 12551  0D57  0008               	return
 12552  0D58                     __end_of_InitKeypad:	
 12553                           
 12554                           	psect	text36
 12555  1AB5                     __ptext36:	
 12556 ;; *************** function _DAC_CONFIG *****************
 12557 ;; Defined at:
 12558 ;;		line 259 in file "LDC_ROT.h"
 12559 ;; Parameters:    Size  Location     Type
 12560 ;;		None
 12561 ;; Auto vars:     Size  Location     Type
 12562 ;;		None
 12563 ;; Return value:  Size  Location     Type
 12564 ;;                  1    wreg      void 
 12565 ;; Registers used:
 12566 ;;		wreg, status,2
 12567 ;; Tracked objects:
 12568 ;;		On entry : 0/0
 12569 ;;		On exit  : 0/0
 12570 ;;		Unchanged: 0/0
 12571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12576 ;;Total ram usage:        0 bytes
 12577 ;; Hardware stack levels used:    1
 12578 ;; Hardware stack levels required when called:    1
 12579 ;; This function calls:
 12580 ;;		Nothing
 12581 ;; This function is called by:
 12582 ;;		_main
 12583 ;; This function uses a non-reentrant model
 12584 ;;
 12585                           
 12586                           
 12587                           ;psect for function _DAC_CONFIG
 12588  1AB5                     _DAC_CONFIG:	
 12589                           
 12590                           ;LDC_ROT.h: 262: DAC5CON0 = 0x80;
 12591                           
 12592                           ;incstack = 0
 12593                           ; Regs used in _DAC_CONFIG: [wreg+status,2]
 12594  1AB5  3080               	movlw	128
 12595  1AB6  002B               	movlb	11	; select bank11
 12596  1AB7  0098               	movwf	24	;volatile
 12597                           
 12598                           ;LDC_ROT.h: 264: DAC5REFH = 0x00;
 12599  1AB8  019A               	clrf	26	;volatile
 12600                           
 12601                           ;LDC_ROT.h: 266: DAC5REFL = 0xCD;
 12602  1AB9  30CD               	movlw	205
 12603  1ABA  0099               	movwf	25	;volatile
 12604                           
 12605                           ;LDC_ROT.h: 268: (DACLDbits.DAC5LD = 1);
 12606  1ABB  160D               	bsf	13,4	;volatile
 12607  1ABC  0008               	return
 12608  1ABD                     __end_of_DAC_CONFIG:	
 12609                           
 12610                           	psect	text37
 12611  1AAD                     __ptext37:	
 12612 ;; *************** function _DAC5_Load10bitInputData *****************
 12613 ;; Defined at:
 12614 ;;		line 271 in file "LDC_ROT.h"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;  input16BitDa    2    1[COMMON] unsigned int 
 12617 ;; Auto vars:     Size  Location     Type
 12618 ;;		None
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  1    wreg      void 
 12621 ;; Registers used:
 12622 ;;		wreg, status,2
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12632 ;;Total ram usage:        2 bytes
 12633 ;; Hardware stack levels used:    1
 12634 ;; Hardware stack levels required when called:    1
 12635 ;; This function calls:
 12636 ;;		Nothing
 12637 ;; This function is called by:
 12638 ;;		_main
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           
 12643                           ;psect for function _DAC5_Load10bitInputData
 12644  1AAD                     _DAC5_Load10bitInputData:	
 12645                           
 12646                           ;LDC_ROT.h: 275: DAC5CON0bits.DAC5FM = 1;
 12647                           
 12648                           ;incstack = 0
 12649                           ; Regs used in _DAC5_Load10bitInputData: [wreg+status,2]
 12650  1AAD  002B               	movlb	11	; select bank11
 12651  1AAE  1718               	bsf	24,6	;volatile
 12652                           
 12653                           ;LDC_ROT.h: 278: DAC5REFL = (uint8_t) input16BitData;
 12654  1AAF  0871               	movf	DAC5_Load10bitInputData@input16BitData,w
 12655  1AB0  0099               	movwf	25	;volatile
 12656                           
 12657                           ;LDC_ROT.h: 279: DAC5REFH = (uint8_t)(input16BitData >> 8);
 12658  1AB1  0872               	movf	DAC5_Load10bitInputData@input16BitData+1,w
 12659  1AB2  009A               	movwf	26	;volatile
 12660                           
 12661                           ;LDC_ROT.h: 281: (DACLDbits.DAC5LD = 1);
 12662  1AB3  160D               	bsf	13,4	;volatile
 12663  1AB4  0008               	return
 12664  1AB5                     __end_of_DAC5_Load10bitInputData:	
 12665                           
 12666                           	psect	text38
 12667  1ACD                     __ptext38:	
 12668 ;; *************** function _ADC_Initialize *****************
 12669 ;; Defined at:
 12670 ;;		line 67 in file "ADC_INIT.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;		None
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;		None
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, status,2
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12688 ;;Total ram usage:        0 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:    1
 12691 ;; This function calls:
 12692 ;;		Nothing
 12693 ;; This function is called by:
 12694 ;;		_main
 12695 ;; This function uses a non-reentrant model
 12696 ;;
 12697                           
 12698                           
 12699                           ;psect for function _ADC_Initialize
 12700  1ACD                     _ADC_Initialize:	
 12701                           
 12702                           ;ADC_INIT.c: 72: ADCON1 = 11010001 ;
 12703                           
 12704                           ;incstack = 0
 12705                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12706  1ACD  30D1               	movlw	209
 12707  1ACE  0029               	movlb	9	; select bank9
 12708  1ACF  0091               	movwf	17	;volatile
 12709                           
 12710                           ;ADC_INIT.c: 75: ADCON2 = 0x00;
 12711  1AD0  0192               	clrf	18	;volatile
 12712                           
 12713                           ;ADC_INIT.c: 78: ADRESL = 0x00;
 12714  1AD1  018E               	clrf	14	;volatile
 12715                           
 12716                           ;ADC_INIT.c: 81: ADRESH = 0x00;
 12717  1AD2  018F               	clrf	15	;volatile
 12718                           
 12719                           ;ADC_INIT.c: 84: ADCON0 = 0x1F;
 12720  1AD3  301F               	movlw	31
 12721  1AD4  0090               	movwf	16	;volatile
 12722  1AD5  0008               	return
 12723  1AD6                     __end_of_ADC_Initialize:	
 12724                           
 12725                           	psect	text39
 12726  1AFF                     __ptext39:	
 12727 ;; *************** function _ADC_GetConversion *****************
 12728 ;; Defined at:
 12729 ;;		line 115 in file "ADC_INIT.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;  channel         1    wreg     enum E17242
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;  channel         1    4[COMMON] enum E17242
 12734 ;; Return value:  Size  Location     Type
 12735 ;;                  2    1[COMMON] unsigned int 
 12736 ;; Registers used:
 12737 ;;		wreg, status,2, status,0
 12738 ;; Tracked objects:
 12739 ;;		On entry : 0/0
 12740 ;;		On exit  : 0/0
 12741 ;;		Unchanged: 0/0
 12742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12745 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12746 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12747 ;;Total ram usage:        4 bytes
 12748 ;; Hardware stack levels used:    1
 12749 ;; Hardware stack levels required when called:    1
 12750 ;; This function calls:
 12751 ;;		Nothing
 12752 ;; This function is called by:
 12753 ;;		_main
 12754 ;; This function uses a non-reentrant model
 12755 ;;
 12756                           
 12757                           
 12758                           ;psect for function _ADC_GetConversion
 12759  1AFF                     _ADC_GetConversion:	
 12760                           
 12761                           ;incstack = 0
 12762                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 12763                           ;ADC_GetConversion@channel stored from wreg
 12764  1AFF  00F4               	movwf	ADC_GetConversion@channel
 12765                           
 12766                           ;ADC_INIT.c: 118: ADCON0bits.CHS = channel;
 12767  1B00  0874               	movf	ADC_GetConversion@channel,w
 12768  1B01  00F3               	movwf	??_ADC_GetConversion
 12769  1B02  0DF3               	rlf	??_ADC_GetConversion,f
 12770  1B03  0DF3               	rlf	??_ADC_GetConversion,f
 12771  1B04  0029               	movlb	9	; select bank9
 12772  1B05  0810               	movf	16,w	;volatile
 12773  1B06  0673               	xorwf	??_ADC_GetConversion,w
 12774  1B07  3903               	andlw	-253
 12775  1B08  0673               	xorwf	??_ADC_GetConversion,w
 12776  1B09  0090               	movwf	16	;volatile
 12777                           
 12778                           ;ADC_INIT.c: 121: ADCON0bits.ADON = 1;
 12779  1B0A  1410               	bsf	16,0	;volatile
 12780                           
 12781                           ;ADC_INIT.c: 124: _delay((unsigned long)((5)*(16000000/4000000.0)));
 12782  1B0B  3006               	movlw	6
 12783  1B0C                     u8067:	
 12784  1B0C  0B89               	decfsz	9,f
 12785  1B0D  2B0C               	goto	u8067
 12786  1B0E  3200               	nop2
 12787                           
 12788                           ;ADC_INIT.c: 127: ADCON0bits.GO = 1;
 12789  1B0F  0029               	movlb	9	; select bank9
 12790  1B10  1490               	bsf	16,1	;volatile
 12791  1B11                     l344:	
 12792                           ;ADC_INIT.c: 131: {
 12793                           
 12794                           ;ADC_INIT.c: 130: while (ADCON0bits.GO)
 12795                           
 12796  1B11  1890               	btfsc	16,1	;volatile
 12797  1B12  2B11               	goto	l344
 12798                           
 12799                           ;ADC_INIT.c: 132: }
 12800                           ;ADC_INIT.c: 135: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12801  1B13  080F               	movf	15,w	;volatile
 12802  1B14  00F2               	movwf	?_ADC_GetConversion+1
 12803  1B15  080E               	movf	14,w	;volatile
 12804  1B16  00F1               	movwf	?_ADC_GetConversion
 12805  1B17  0008               	return
 12806  1B18                     __end_of_ADC_GetConversion:	
 12807                           
 12808                           	psect	intentry
 12809  0004                     __pintentry:	
 12810 ;; *************** function _isr *****************
 12811 ;; Defined at:
 12812 ;;		line 111 in file "LOAD20210.c"
 12813 ;; Parameters:    Size  Location     Type
 12814 ;;		None
 12815 ;; Auto vars:     Size  Location     Type
 12816 ;;		None
 12817 ;; Return value:  Size  Location     Type
 12818 ;;                  1    wreg      void 
 12819 ;; Registers used:
 12820 ;;		status,2
 12821 ;; Tracked objects:
 12822 ;;		On entry : 0/0
 12823 ;;		On exit  : 0/0
 12824 ;;		Unchanged: 0/0
 12825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12830 ;;Total ram usage:        1 bytes
 12831 ;; Hardware stack levels used:    1
 12832 ;; This function calls:
 12833 ;;		Nothing
 12834 ;; This function is called by:
 12835 ;;		Interrupt level 1
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839  0004                     _isr:	
 12840                           
 12841                           ;incstack = 0
 12842  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12843                           
 12844                           ; Regs used in _isr: [status,2]
 12845  0005  3180               	pagesel	$
 12846  0006  0020               	movlb	0	; select bank0
 12847  0007  087F               	movf	127,w
 12848  0008  00F0               	movwf	??_isr
 12849                           
 12850                           ;LOAD20210.c: 114: if (IOCAF3 == 1)
 12851  0009  0027               	movlb	7	; select bank7
 12852  000A  1D93               	btfss	19,3	;volatile
 12853  000B  2810               	goto	i1l289
 12854                           
 12855                           ;LOAD20210.c: 115: {
 12856                           ;LOAD20210.c: 116: IOCAF3 =0;
 12857  000C  1193               	bcf	19,3	;volatile
 12858                           
 12859                           ;LOAD20210.c: 118: count=0;
 12860  000D  0020               	movlb	0	; select bank0
 12861  000E  01E9               	clrf	_count
 12862  000F  01EA               	clrf	_count+1
 12863  0010                     i1l289:	
 12864  0010  0870               	movf	??_isr,w
 12865  0011  0020               	movlb	0	; select bank0
 12866  0012  00FF               	movwf	127
 12867  0013  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12868  0014  0009               	retfie
 12869  0015                     __end_of_isr:	
 12870  007E                     btemp	set	126	;btemp
 12871  007E                     int$flags	set	126
 12872  007E                     wtemp0	set	126


Data Sizes:
    Strings     39
    Constant    2646
    Data        63
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     73      75
    BANK1            80     29      75
    BANK2            80      0      25
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> naif(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_FillScreenGraphics@graphic	PTR const unsigned char  size(2) Largest target is 1024
		 -> des(CODE[1024]), 

    LCD_TextDisplayString@string	PTR unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_2(CODE[17]), naif(BANK1[17]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _main->___lwtoft
    _switch_press_scan->_keypad_scanner
    _sprintf->___awdiv
    _sprintf->___awtoft
    _scale->___awdiv
    _fround->___awdiv
    ___wmul->___awdiv
    ___ftmul->___awdiv
    ___ftmul->___awtoft
    ___ftmul->___lwtoft
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___lwtoft->___ftpack
    ___awtoft->___ftpack
    _LCD_TextDisplayString->_LCD_WriteCommand
    _LCD_TextDisplayString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCommand
    _LCD_FillScreenGraphics->_LCD_WriteCommand
    _LCD_FillScreenGraphics->_LCD_WriteData
    _LCD_EnableGraphics->_LCD_WriteCommand
    _LCD_DisableGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteData
    _LCD_WriteData->_LCD_WriteByte
    _LCD_WriteCommand->_LCD_WriteByte

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   84064
                                             71 BANK0      2     2      0
                                             23 BANK1      6     6      0
                  _ADC_GetConversion
                     _ADC_Initialize
            _DAC5_Load10bitInputData
                         _DAC_CONFIG
                         _InitKeypad
                  _LCD_ClearGraphics
                _LCD_DisableGraphics
                 _LCD_EnableGraphics
             _LCD_FillScreenGraphics
                           _LCD_Init
              _LCD_TextDisplayString
                        _OP_AMP_init
              _OSCILLATOR_Initialize
                           ___awtoft
                            ___ftadd
                            ___ftmul
                           ___lwtoft
                            _sprintf
                  _switch_press_scan
 ---------------------------------------------------------------------------------
 (1) _switch_press_scan                                    2     2      0      68
                                              3 COMMON     2     2      0
                     _keypad_scanner
 ---------------------------------------------------------------------------------
 (2) _keypad_scanner                                       2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             41    36      5   64580
                                             60 BANK0     11     6      5
                                              0 BANK1     23    23      0
                            ___awdiv
                           ___awtoft (ARG)
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3   16205
                                             27 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              14    11      3   15926
                                             27 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    6296
                                              5 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    5476
                                             11 BANK0     16    10      6
                  _ADC_GetConversion (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1819
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1985
                                              8 COMMON     4     0      4
                                              0 BANK0      5     5      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     608
                                              1 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     827
                                              1 COMMON     6     0      6
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2703
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     694
                                              1 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     549
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     602
                                             36 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4461
                                             54 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    4211
                                             41 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     142
                                              1 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     814
                                              1 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2632
                                              9 COMMON     3     0      3
                                              0 BANK0      1     1      0
                  _ADC_GetConversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    2734
                                              9 COMMON     3     0      3
                                              0 BANK0      3     3      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2524
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OP_AMP_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_TextDisplayString                                6     4      2    1135
                                              5 COMMON     6     4      2
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     279
                                              5 COMMON     2     2      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_FillScreenGraphics                              12    10      2    1366
                                              5 COMMON     4     2      2
                                              0 BANK0      8     8      0
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_EnableGraphics                                   1     1      0     279
                                              5 COMMON     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_DisableGraphics                                  1     1      0     279
                                              5 COMMON     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_ClearGraphics                                    3     3      0     787
                                              5 COMMON     3     3      0
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        1     1      0     279
                                              4 COMMON     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCommand                                     1     1      0     279
                                              4 COMMON     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteByte                                        3     3      0     248
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitKeypad                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DAC_CONFIG                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DAC5_Load10bitInputData                              2     0      2     139
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _DAC5_Load10bitInputData
   _DAC_CONFIG
   _InitKeypad
   _LCD_ClearGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _LCD_DisableGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
   _LCD_EnableGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
   _LCD_FillScreenGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _LCD_Init
     _LCD_WriteCommand
       _LCD_WriteByte
   _LCD_TextDisplayString
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _OP_AMP_init
   _OSCILLATOR_Initialize
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftmul
     _ADC_GetConversion (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwtoft
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           _ADC_GetConversion (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge (ARG)
     ___ftmul (ARG)
       _ADC_GetConversion (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             _ADC_GetConversion (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_GetConversion (ARG)
               ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           _ADC_GetConversion (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _switch_press_scan
     _keypad_scanner

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1D      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      19       9       31.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      BC      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      BC      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 06 23:17:48 2021

                 ??_LCD_EnableGraphics 0075                            __CFG_CP$OFF 0000  
                         ___awdiv@sign 0022                    ___wmul@multiplicand 0027  
                  __size_of_DAC_CONFIG 0008                           ___ftadd@exp1 0055  
                         ___ftadd@exp2 0054                            __CFG_LVP$ON 0000  
                         ___ftadd@sign 0053                                    l210 13C8  
                                  l211 13C3                                    l220 13E9  
                                  l231 142D                                    l223 1401  
                                  l215 13DB                                    l240 144E  
                                  l232 1428                                    l224 13FC  
                                  l216 13D6                                    l402 01E0  
                                  l251 1492                                    l243 146C  
                                  l235 1440                                    l227 141A  
                                  l219 13EE                                    l260 14B9  
                                  l252 148D                                    l244 1467  
                                  l236 143B                                    l228 1415  
                                  l263 14D1                                    l255 14A5  
                                  l247 147F                                    l239 1453  
                                  l344 1B11                                    l272 14F2  
                                  l264 14CC                                    l256 14A0  
                                  l248 147A                                    l267 14E4  
                                  l259 14BE                                    l268 14DF  
                                  l613 13A3                                    l437 04E1  
                                  l447 1B3A                                    l439 051B  
                                  l632 0D9D                                    l296 177A  
                                  l633 0DA5                                    l625 0D8A  
                                  l299 1775                                    l396 00BF  
                                  l733 1E9D                                    l656 123B  
                                  l682 1046                                    l692 10BF  
                                  _GIE 005F                                    _Key 007C  
                                  _des 053D                                    _isr 0004  
                         ___awmod@sign 0077                           __CFG_BORV$LO 0000  
                                  wreg 0009                            _sprintf$921 00C3  
                    ?_LCD_WriteCommand 0070                           __CFG_ZCD$OFF 0000  
                   ??_LCD_WriteCommand 0074                                   l4100 1C93  
                                 l4014 1081                                   l4006 1067  
                                 l4200 1CAA                                   l4032 10B6  
                                 l4024 109B                                   l4202 1CB8  
                                 l4210 1CDB                                   l4050 12CD  
                                 l4034 10C2                                   l4026 10A9  
                                 l4124 1B55                                   l4220 1BEA  
                                 l4060 1318                                   l4044 12B0  
                                 l4134 1E49                                   l4206 1CD0  
                                 l4160 1E94                                   l4152 1E79  
                                 l4080 138D                                   l4162 1EA0  
                                 l4154 1E87                                   l4218 1BD8  
                                 l4340 1133                                   l3540 0D67  
                                 l4068 1360                                   l3612 1D34  
                                 l4500 0215                                   l3550 0D8F  
                                 l3542 0D71                                   l3702 11DA  
                                 l4166 1EAE                                   l4190 1DC5  
                                 l4086 139A                                   l4078 137F  
                                 l3630 1D53                                   l4430 006D  
                                 l3552 0D97                                   l3544 0D76  
                                 l3536 0D60                                   l4096 1C7D  
                                 l3720 1207                                   l4176 1D8C  
                                 l4088 13A6                                   l3640 1D6E  
                                 l4512 0260                                   l4370 1C0F  
                                 l4346 1138                                   l4282 1C45  
                                 l4274 1C39                                   l3722 1211  
                                 l3714 11F4                                   l4186 1DBA  
                                 l4178 1D9A                                   l3618 1D3F  
                                 l4522 0294                                   l4356 1196  
                                 l3732 122D                                   l3724 1216  
                                 l3644 1D76                                   l3636 1D65  
                                 l3628 1D47                                   l3660 1CF5  
                                 l4532 02EF                                   l4508 024C  
                                 l4460 00EB                                   l4452 00C1  
                                 l4444 0082                                   l4278 1C3F  
                                 l4286 1C4D                                   l3742 125F  
                                 l3734 1237                                   l3726 121A  
                                 l3670 1D07                                   l4606 04FF  
                                 l4526 02E9                                   l4470 0120  
                                 l4454 00D7                                   l4446 00BA  
                                 l4614 0052                                   l4384 1C2E  
                                 l3752 127A                                   l3656 1CEE  
                                 l3592 1B34                                   l4560 03A8  
                                 l4552 0341                                   l4616 0538  
                                 l4378 1C1E                                   l3738 124D  
                                 l3682 1D24                                   l3674 1D13  
                                 l3762 1F63                                   l3930 162F  
                                 l3922 15B7                                   l4554 0395  
                                 l4538 0326                                   l4626 1AFD  
                                 l3692 11C4                                   l3668 1CFB  
                                 l3780 1FB4                                   l4804 1735  
                                 l4638 1B76                                   l3678 1D1C  
                                 l4590 04BA                                   l4574 03EB  
                                 l4566 03C5                                   l4494 01C9  
                                 l4486 017C                                   l3696 11CB  
                                 l3792 1FD0                                   l3784 1FBC  
                                 l3768 1F79                                   l3952 0EC4  
                                 l4816 1771                                   l3970 0FE3  
                                 l3946 0E65                                   l4834 17F1  
                                 l3796 1FD8                                   l3964 0F84  
                                 l3956 0EE1                                   l4596 04CD  
                                 l3982 1AEF                                   l4598 04D2  
                                 l3992 102E                                   l4788 16B9  
                                 ?_isr 0070                                   STR_1 2087  
                                 STR_2 093D                                   STR_3 2087  
                                 STR_4 2076                                   u5215 0D92  
                                 u5305 1EF2                                   u5315 1F23  
                                 u5325 1F33                                   u5405 1D4A  
                                 u5255 0DAC                                   u5175 0D6C  
                                 u5425 1D54                                   u5505 1CFE  
                                 u5345 1B3B                                   u5275 1EC1  
                                 u5195 0D85                                   u5435 1D5E  
                                 u5355 1B40                                   u5285 1ED3  
                                 u6405 109C                                   u5445 1D66  
                                 u5525 1D0D                                   u5295 1EE2  
                                 u8007 1ADD                                   u5535 1D14  
                                 u7215 024A                                   u7135 0135  
                                 u8017 1EBB                                   u6345 1068  
                                 u8027 1F01                                   u5715 121B  
                                 u6435 10B7                                   u6355 1078  
                                 u8037 1F08                                   u6525 1380  
                                 u6365 1082                                   u7245 031A  
                                 u8047 1F42                                   u5655 11F5  
                                 u5815 1F85                                   u7175 01EC  
                                 u8057 1F48                                   u5745 122E  
                                 u5825 1F95                                   u7185 0221  
                                 u8067 1B0C                                   u6635 1E50  
                                 u6555 139B                                   u6475 1319  
                                 u7355 04F5                                   u5685 1208  
                                 u6805 1CAD                                   u6485 1343  
                                 u5845 1FBD                                   u7365 0513  
                                 u7285 03B3                                   u6735 1D8F  
                                 u5855 1FC3                                   u7295 03C1  
                                 u6665 1E7A                                   u6825 1CC6  
                                 u6755 1D9B                                   u6835 1CD1  
                                 u6765 1DAF                                   u5885 1FD9  
                                 u7717 16A0                                   u6695 1E95  
                                 u6775 1DBB                                   u6855 1BDE  
                                 u5895 1FDF                                   u7807 1447  
                                 u7727 173B                                   u7817 1460  
                                 u7737 13BC                                   u7665 175B  
                                 u7907 1DE0                                   u7827 1473  
                                 u7747 13CF                                   u7917 1DEE  
                                 u7837 1486                                   u7757 13E2  
                                 u7685 17D7                                   u7927 1DFA  
                                 u7847 1499                                   u7767 13F5  
                                 u7937 1E06                                   u7857 14B2  
                                 u7777 140E                                   u7947 1E12  
                                 u7867 14C5                                   u7787 1421  
                                 u7957 1E1E                                   u7877 14D8  
                                 u7797 1434                                   u7967 1E2A  
                                 u7887 14EB                                   u7977 1BB6  
                                 u7897 1DD4                                   u7987 1BC2  
                                 u7997 1BCE                                   _WPUC 020E  
                                 _WPUD 020F                           __CFG_WRT$OFF 0000  
                                 _naif 00B2                                   _main 165C  
                         ___ftpack@arg 0071                           ___ftpack@exp 0074  
                                 fsr0h 0005                                   fsr1h 0007  
                                 indf0 0000                                   fsr0l 0004  
                                 indf1 0001                                   fsr1l 0006  
                                 btemp 007E                                   start 0015  
                        __CFG_IESO$OFF 0000                          _LCD_WriteData 1A9F  
                        __CFG_MCLRE$ON 0000                          _LCD_WriteByte 1EB7  
                         ___ftmul@cntr 0039                           ___ftmul@sign 003A  
        LCD_FillScreenGraphics@graphic 0075                           ___fttol@exp1 0051  
                         ___fttol@lval 004D                                  ??_isr 0070  
                     __end_of_LCD_Init 1E30         __size_of_OSCILLATOR_Initialize 0007  
        __end_of_OSCILLATOR_Initialize 1AAD                LCD_WriteCommand@command 0074  
                                ?_main 0070                    _LCD_DisableGraphics 1AD6  
                      __end_of___awdiv 1D7B                        __end_of___ftadd 1292  
                        __CFG_WDTE$OFF 0000                        __end_of___awmod 1D29  
                      __end_of___ftneg 1ACD                        __end_of___lldiv 1DCE  
                      __end_of___ftmul 2000                        ___awdiv@divisor 0078  
                      __end_of___llmod 1CE4                        __end_of___ftsub 1B6B  
                      __end_of___fttol 1EB7                                  _IOCIE 005B  
                                i1l289 0010                        ___awdiv@counter 0021  
                                _TRISA 008C                                  _TRISB 008D  
                                _TRISC 008E                                  _TRISD 008F  
                         ___lltoft@exp 007A                         __CFG_FCMEN$OFF 0000  
                     ??_keypad_scanner 0071                                  _black 094E  
                        ___awtoft@sign 0022                        __end_of_dpowers 2028  
                                _hello 0120                                  _count 0069  
                                _scale 0DBC                        __end_of_isdigit 1AF1  
                        ___ftpack@sign 0075                         __CFG_BOREN$OFF 0000  
             ?_DAC5_Load10bitInputData 0071                LCD_FillScreenGraphics@x 0078  
              LCD_FillScreenGraphics@y 0077                   ?_LCD_DisableGraphics 0070  
                                status 0003                                  wtemp0 007E  
                      __end_of_sprintf 053D                         ?_LCD_WriteData 0070  
                       ?_LCD_WriteByte 0070                             _InitKeypad 0D4E  
                      __initialization 0017                           __end_of_main 1800  
                       __CFG_LPBOR$OFF 0000                                 ??_main 0067  
                        ___fttol@sign1 004C               ??_LCD_FillScreenGraphics 0020  
                       __CFG_PLLEN$OFF 0000                   __size_of__tdiv_to_l_ 00B6  
                               _ADCON0 0490                                 _ADCON1 0491  
                               _ADCON2 0492                       ___llmod@dividend 0075  
                               ?_scale 003B                                 _ADRESH 048F  
                               _ADRESL 048E                       ___awdiv@dividend 007A  
                         ??_DAC_CONFIG 0071                       __end_of___awtoft 1B8C  
                               _ANSELA 018C                                 _ANSELB 018D  
                               _ANSELC 018E                                 _ANSELD 018F  
                     __end_of___ftpack 0DBC                                 _BORCON 009D  
                               _IOCAF3 1C9B                                 _IOCAP3 1C8B  
                     __end_of___lltoft 1BFF                                 _ODCONB 028D  
                               _ODCONC 028E                                 _INLVLA 038C  
                               _INLVLC 038E                       __end_of___lwtoft 1015  
                ??_LCD_DisableGraphics 0075                                 _OSCCON 009B  
                               _UPDOWN 00A0                                 _Alpha1 1800  
                               _Alpha2 18FA                         __CFG_PWRTE$OFF 0000  
                     __end_of__powers_ 204F                                 ___ftge 1C67  
                               ___wmul 1B31                              ??___awdiv 0020  
                            ??___ftadd 004F                              ??___awmod 0075  
                            ??___ftneg 0074                              ??___lldiv 0079  
                            ??___ftmul 0031                              ??___llmod 0079  
                            ??___ftsub 007C                              ??___fttol 0048  
                         ?_OP_AMP_init 0070                                 _fround 14F7  
                     ___awdiv@quotient 0023                        ___awmod@divisor 0071  
                      ___awmod@counter 0076                     __end_of_DAC_CONFIG 1ABD  
                ___ftmul@f3_as_product 0036                           __pdataCOMMON 007C  
                            ??_isdigit 0071                        _currentStateCLK 00E7  
             ADC_GetConversion@channel 0074        __end_of_DAC5_Load10bitInputData 1AB5  
                            ??_sprintf 0061                __end_of__initialization 0046  
                            ?_LCD_Init 0070                ??_LCD_TextDisplayString 0077  
                           ___ftadd@f1 0049                             ___ftadd@f2 004C  
                      ??_LCD_WriteData 0074                             ___ftge@ff1 0071  
                           ___ftge@ff2 0074                        ??_LCD_WriteByte 0071  
                           ___ftneg@f1 0071                             ___awtoft@c 0079  
                          ?_InitKeypad 0070                             ___ftmul@f1 002B  
                           ___ftmul@f2 002E                             ___ftsub@f1 0059  
                           ___ftsub@f2 0056                             ___fttol@f1 0044  
                       __pcstackCOMMON 0070                           __pidataBANK0 0002  
                         __pidataBANK1 1B8C                           __pidataBANK2 1B18  
                        __end_of_black 0D4E                             ___lltoft@c 0020  
                        __end_of_scale 1000                             ___lwtoft@c 0079  
                           __div_to_l_ 1292        __size_of_LCD_FillScreenGraphics 00D1  
                       _OPTION_REGbits 0097                        __div_to_l_@exp1 002D  
                      __div_to_l_@cntr 002C                                ??_scale 003E  
                      __div_to_l_@quot 0028                             __pbssBANK1 00E0  
                           ??_LCD_Init 0075  DAC5_Load10bitInputData@input16BitData 0071  
                        __div_to_l_@f1 0071                          __div_to_l_@f2 0074  
            __size_of_LCD_WriteCommand 0007                             __pmaintext 165C  
                    _LCD_ClearGraphics 1BFF                                ?___ftge 0071  
          __size_of_LCD_EnableGraphics 0025                                ?___wmul 0025  
                      __CFG_PPS1WAY$ON 0000                             __pintentry 0004  
                   ?_LCD_ClearGraphics 0070                                ?_fround 003B  
                            ?___awtoft 0079                              ?___ftpack 0071  
                            ?___lltoft 0020                __size_of_ADC_Initialize 0009  
                            ?___lwtoft 0079                    ??_LCD_ClearGraphics 0075  
                              _OPA3CON 0519                                _OPA3ORS 051A  
                              _OSCSTAT 009C                                _OSCTUNE 009A  
                              _SLRCONB 030D                                _SLRCONC 030E  
                  __size_of_InitKeypad 000A                              _DACLDbits 058D  
               _LCD_FillScreenGraphics 10CB              __end_of_LCD_ClearGraphics 1C33  
                    __end_of__npowers_ 2076                   _ADC_InterruptHandler 00E3  
                    LCD_WriteData@data 0074                        __size_of___ftge 003B  
                              ___awdiv 1D29                                ___ftadd 119C  
                              ___awmod 1CE4                                ___ftneg 1AC5  
                              ___lldiv 1D7B                        __size_of___wmul 001C  
                              ___ftmul 1F4C                                ___llmod 1CA2  
                              ___ftsub 1B4D                                ___fttol 1E30  
                           _fround$918 0045                             _fround$919 0042  
     __size_of_DAC5_Load10bitInputData 0008                                _dac_out 00E9  
                      __CFG_STVREN$OFF 0000                             ??___awtoft 0020  
                           ??___ftpack 0076                        __size_of_fround 0165  
                           ??___lltoft 0079                                __ptext1 1AF1  
                              __ptext2 13AF                                __ptext3 004A  
                              __ptext4 0DBC                                __ptext5 1AE3  
                              __ptext6 14F7                                __ptext7 1B31  
                              __ptext8 1F4C                                __ptext9 1CE4  
                           ??___lwtoft 0020                   __size_of_OP_AMP_init 0008  
                          ?__div_to_l_ 0071                                _dpowers 2000  
                _OSCILLATOR_Initialize 1AA6                                _current 00E0  
                              _isdigit 1AE3                           __size_of_isr 0011  
                     ___awmod@dividend 0073                                _sprintf 004A  
                 end_of_initialization 0046                       _previousStateCLK 00E5  
                              init_ram 1A92                                initloop 1A93  
                      ___lldiv@divisor 0071                        ___lldiv@counter 0024  
                       __tdiv_to_l_@f1 0071                         __tdiv_to_l_@f2 0074  
                        ??__tdiv_to_l_ 0077                              _PORTAbits 000C  
                            _PORTDbits 000F                             _print_line 00B1  
                     __CFG_FOSC$INTOSC 0000            __end_of_LCD_DisableGraphics 1AE3  
                 switch_press_scan@key 0074         __size_of_LCD_TextDisplayString 0034  
           __size_of_LCD_ClearGraphics 0034                __size_of_keypad_scanner 0148  
        __end_of_LCD_TextDisplayString 1C67                      __size_of_LCD_Init 0062  
                  __size_of__div_to_l_ 011D                       _LCD_WriteCommand 1A98  
                       __end_of_Alpha1 18FA                         __end_of_Alpha2 19E0  
                         ??_InitKeypad 0071                            ___ftmul@exp 0035  
                       __end_of___ftge 1CA2                         __end_of___wmul 1B4D  
                        __pidataCOMMON 1000                         _ADC_Initialize 1ACD  
               ?_OSCILLATOR_Initialize 0070                         __end_of_fround 165C  
                  start_initialization 0017                    __end_of__tdiv_to_l_ 10CB  
                          __end_of_des 093D                            __end_of_isr 0015  
                   __end_of_InitKeypad 0D58                        ___llmod@divisor 0071  
                      ___llmod@counter 007A                  __end_of_LCD_WriteData 1AA6  
                __end_of_LCD_WriteByte 1F4C                               ??___ftge 0077  
              _DAC5_Load10bitInputData 1AAD                               ??___wmul 007C  
                 LCD_WriteByte@command 0073                 __end_of_ADC_Initialize 1AD6  
                          __pdataBANK0 0069                            __pdataBANK1 00A0  
                          __pdataBANK2 0120                               ??_fround 003E  
                        sprintf@tmpval 00CF                             fround@prec 0048  
                    __size_of___awtoft 0021                      __size_of___ftpack 0064  
                    __size_of___lltoft 002B                              ___latbits 0003  
                    __size_of___lwtoft 0014                          __pcstackBANK0 0020  
                        __pcstackBANK1 00C3                ?_LCD_FillScreenGraphics 0075  
                          sprintf@flag 00C7                            sprintf@fval 00D6  
                          sprintf@prec 00D4             __end_of_LCD_EnableGraphics 1BD4  
            LCD_TextDisplayString@addr 0078              LCD_TextDisplayString@line 007A  
          LCD_TextDisplayString@string 0075                               ?___awdiv 0078  
                             ?___ftadd 0049                               ?___awmod 0071  
                             ?___ftneg 0071                               ?___lldiv 0071  
                             ?___ftmul 002B                               ?___llmod 0071  
                             ?___ftsub 0056                              __npowers_ 204F  
                             ?___fttol 0044                        ?_ADC_Initialize 0070  
                             _DAC5CON0 0598                               _DAC5REFH 059A  
                             _DAC5REFL 0599                            __tdiv_to_l_ 1015  
                         ??__div_to_l_ 0020                               ?_isdigit 0070  
                            _scale$920 0040         __end_of_LCD_FillScreenGraphics 119C  
                             ?_sprintf 005C                         __size_of_scale 0244  
                             _LCD_Init 1DCE                         ___wmul@product 0029  
                             _LATBbits 010D                               _LATDbits 010F  
                             _OPA3NCHS 0517                               _OPA3PCHS 0518  
                       _keypad_scanner 13AF              ??_DAC5_Load10bitInputData 0073  
                   __end_of__div_to_l_ 13AF                          ??_OP_AMP_init 0071  
                    _switch_press_scan 1AF1                             _ADCON0bits 0490  
                    ___wmul@multiplier 0025                     ?_switch_press_scan 0070  
               LCD_TextDisplayString@i 0079               __end_of_LCD_WriteCommand 1A9F  
                  ??_switch_press_scan 0073                             _DAC_CONFIG 1AB5  
               __end_of_keypad_scanner 14F7                      _ADC_GetConversion 1AFF  
            __end_of_switch_press_scan 1AFF                ??_OSCILLATOR_Initialize 0071  
                   ?_ADC_GetConversion 0071                       __size_of___awdiv 0052  
                     __size_of___ftadd 00F6                       __size_of___awmod 0045  
                     __size_of___ftneg 0008                       __size_of___lldiv 0053  
                     __size_of___ftmul 00B4                       __size_of___llmod 0042  
                     __size_of___ftsub 001E                       __size_of___fttol 0087  
                             ___awtoft 1B6B                               ___ftpack 0D58  
                             ___lltoft 1BD4                            _isdigit$696 0071  
                             ___lwtoft 1001                    ??_ADC_GetConversion 0073  
                           sprintf@exp 00CD                             sprintf@val 00C9  
                  __end_of_OP_AMP_init 1AC5                       __size_of_isdigit 000E  
                             _main$916 00DA                               _main$917 00DD  
                             __ptext10 1D29                               __ptext11 1015  
                             __ptext20 1C67                               __ptext12 1292  
                             __ptext21 1001                               __ptext13 1BD4  
                             __ptext30 1AD6                               __ptext22 1B6B  
                             __ptext14 1CA2                               __ptext31 1BFF  
                             __ptext23 0D58                               __ptext15 1D7B  
                             __ptext32 1A9F                               __ptext24 1AA6  
                             __ptext16 1E30                               __ptext33 1A98  
                             __ptext25 1ABD                               __ptext17 1B4D  
                             __ptext34 1EB7                               __ptext26 1C33  
                             __ptext18 119C                               __ptext35 0D4E  
                             __ptext27 1DCE                               __ptext19 1AC5  
                             __ptext36 1AB5                               __ptext28 10CB  
                             __ptext37 1AAD                               __ptext29 1BAF  
                             __ptext38 1ACD                               __ptext39 1AFF  
                             __powers_ 2028                       __size_of_sprintf 04F3  
                      ?_keypad_scanner 0070           __size_of_LCD_DisableGraphics 000D  
                        __size_of_main 01A4              __end_of_ADC_GetConversion 1B18  
                _LCD_TextDisplayString 1C33                               int$flags 007E  
                       __pstringtext10 0000                               isdigit@c 0072  
                             scale@scl 0043                            ?_DAC_CONFIG 0070  
                             intlevel1 0000                              sprintf@ap 00C6  
                     __tdiv_to_l_@exp1 0025                       __tdiv_to_l_@cntr 0024  
                            sprintf@sp 00D3                       __tdiv_to_l_@quot 0020  
                     ___lldiv@dividend 0075                      __CFG_CLKOUTEN$OFF 0000  
                     ??_ADC_Initialize 0071                           _DAC5CON0bits 0598  
           __size_of_switch_press_scan 000E                            _OP_AMP_init 1ABD  
                         ?__tdiv_to_l_ 0071                          __pstringtext1 094E  
                        __pstringtext2 1800                          __pstringtext3 18FA  
                        __pstringtext4 2000                          __pstringtext5 2028  
                        __pstringtext6 204F                          __pstringtext7 053D  
                        __pstringtext8 2076                          __pstringtext9 2087  
                   _LCD_EnableGraphics 1BAF                               sprintf@c 00D9  
                             sprintf@f 005C                       ___lldiv@quotient 0020  
               __size_of_LCD_WriteData 0007                 __size_of_LCD_WriteByte 0095  
                  ?_LCD_EnableGraphics 0070                     LCD_ClearGraphics@x 0076  
                   LCD_ClearGraphics@y 0077             __size_of_ADC_GetConversion 0019  
               ?_LCD_TextDisplayString 0075  
