

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 05 11:10:33 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1779
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	idataBANK2,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    25                           	psect	inittext,global,class=CODE,delta=2
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text6,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	dabs	1,0x7E,2
    70  0000                     
    71                           ; Version 1.45
    72                           ; Generated 16/11/2017 GMT
    73                           ; 
    74                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F1779 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0110                     	;# 
   164  0111                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0115                     	;# 
   169  0116                     	;# 
   170  0117                     	;# 
   171  0118                     	;# 
   172  0119                     	;# 
   173  011A                     	;# 
   174  011B                     	;# 
   175  011C                     	;# 
   176  011D                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  018E                     	;# 
   180  018F                     	;# 
   181  0190                     	;# 
   182  0191                     	;# 
   183  0191                     	;# 
   184  0192                     	;# 
   185  0193                     	;# 
   186  0193                     	;# 
   187  0194                     	;# 
   188  0195                     	;# 
   189  0196                     	;# 
   190  0197                     	;# 
   191  0199                     	;# 
   192  0199                     	;# 
   193  0199                     	;# 
   194  019A                     	;# 
   195  019A                     	;# 
   196  019A                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  019C                     	;# 
   204  019C                     	;# 
   205  019D                     	;# 
   206  019D                     	;# 
   207  019D                     	;# 
   208  019E                     	;# 
   209  019E                     	;# 
   210  019E                     	;# 
   211  019F                     	;# 
   212  019F                     	;# 
   213  019F                     	;# 
   214  019F                     	;# 
   215  019F                     	;# 
   216  020C                     	;# 
   217  020D                     	;# 
   218  020E                     	;# 
   219  020F                     	;# 
   220  0210                     	;# 
   221  0211                     	;# 
   222  0211                     	;# 
   223  0212                     	;# 
   224  0212                     	;# 
   225  0213                     	;# 
   226  0213                     	;# 
   227  0214                     	;# 
   228  0214                     	;# 
   229  0215                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  021B                     	;# 
   238  021C                     	;# 
   239  021D                     	;# 
   240  021E                     	;# 
   241  021F                     	;# 
   242  028C                     	;# 
   243  028D                     	;# 
   244  028E                     	;# 
   245  028F                     	;# 
   246  0290                     	;# 
   247  0291                     	;# 
   248  0291                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0294                     	;# 
   252  0295                     	;# 
   253  0295                     	;# 
   254  0296                     	;# 
   255  0297                     	;# 
   256  0298                     	;# 
   257  0299                     	;# 
   258  0299                     	;# 
   259  029A                     	;# 
   260  029B                     	;# 
   261  029C                     	;# 
   262  029E                     	;# 
   263  029F                     	;# 
   264  030C                     	;# 
   265  030D                     	;# 
   266  030E                     	;# 
   267  030F                     	;# 
   268  0310                     	;# 
   269  0311                     	;# 
   270  0311                     	;# 
   271  0312                     	;# 
   272  0313                     	;# 
   273  0314                     	;# 
   274  0315                     	;# 
   275  0316                     	;# 
   276  0317                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031B                     	;# 
   280  031C                     	;# 
   281  031D                     	;# 
   282  031E                     	;# 
   283  031F                     	;# 
   284  038C                     	;# 
   285  038D                     	;# 
   286  038E                     	;# 
   287  038F                     	;# 
   288  0390                     	;# 
   289  0391                     	;# 
   290  0392                     	;# 
   291  0393                     	;# 
   292  0394                     	;# 
   293  0395                     	;# 
   294  0396                     	;# 
   295  0397                     	;# 
   296  0398                     	;# 
   297  0399                     	;# 
   298  039D                     	;# 
   299  039E                     	;# 
   300  039F                     	;# 
   301  040D                     	;# 
   302  040F                     	;# 
   303  040F                     	;# 
   304  0410                     	;# 
   305  0411                     	;# 
   306  0412                     	;# 
   307  0413                     	;# 
   308  0413                     	;# 
   309  0414                     	;# 
   310  0414                     	;# 
   311  0415                     	;# 
   312  0416                     	;# 
   313  0417                     	;# 
   314  0418                     	;# 
   315  041A                     	;# 
   316  041A                     	;# 
   317  041B                     	;# 
   318  041B                     	;# 
   319  041C                     	;# 
   320  041D                     	;# 
   321  041E                     	;# 
   322  041F                     	;# 
   323  048E                     	;# 
   324  048E                     	;# 
   325  048F                     	;# 
   326  0490                     	;# 
   327  0491                     	;# 
   328  0492                     	;# 
   329  0493                     	;# 
   330  0493                     	;# 
   331  0494                     	;# 
   332  0494                     	;# 
   333  0495                     	;# 
   334  0496                     	;# 
   335  0497                     	;# 
   336  0498                     	;# 
   337  049A                     	;# 
   338  049A                     	;# 
   339  049B                     	;# 
   340  049B                     	;# 
   341  049C                     	;# 
   342  049D                     	;# 
   343  049E                     	;# 
   344  049F                     	;# 
   345  050F                     	;# 
   346  0510                     	;# 
   347  0511                     	;# 
   348  0512                     	;# 
   349  0513                     	;# 
   350  0514                     	;# 
   351  0515                     	;# 
   352  0516                     	;# 
   353  0517                     	;# 
   354  0518                     	;# 
   355  0519                     	;# 
   356  051A                     	;# 
   357  051B                     	;# 
   358  051C                     	;# 
   359  051D                     	;# 
   360  051E                     	;# 
   361  058D                     	;# 
   362  058E                     	;# 
   363  058F                     	;# 
   364  058F                     	;# 
   365  058F                     	;# 
   366  0590                     	;# 
   367  0590                     	;# 
   368  0591                     	;# 
   369  0592                     	;# 
   370  0592                     	;# 
   371  0592                     	;# 
   372  0593                     	;# 
   373  0593                     	;# 
   374  0594                     	;# 
   375  0595                     	;# 
   376  0595                     	;# 
   377  0596                     	;# 
   378  0597                     	;# 
   379  0597                     	;# 
   380  0598                     	;# 
   381  0599                     	;# 
   382  0599                     	;# 
   383  0599                     	;# 
   384  059A                     	;# 
   385  059A                     	;# 
   386  059B                     	;# 
   387  059C                     	;# 
   388  059C                     	;# 
   389  059C                     	;# 
   390  059D                     	;# 
   391  059D                     	;# 
   392  059E                     	;# 
   393  059F                     	;# 
   394  059F                     	;# 
   395  060C                     	;# 
   396  060D                     	;# 
   397  060D                     	;# 
   398  060E                     	;# 
   399  060F                     	;# 
   400  0610                     	;# 
   401  0611                     	;# 
   402  0612                     	;# 
   403  0613                     	;# 
   404  0614                     	;# 
   405  0615                     	;# 
   406  0616                     	;# 
   407  0617                     	;# 
   408  0618                     	;# 
   409  0619                     	;# 
   410  061A                     	;# 
   411  061B                     	;# 
   412  061C                     	;# 
   413  061D                     	;# 
   414  061E                     	;# 
   415  061F                     	;# 
   416  068D                     	;# 
   417  068E                     	;# 
   418  068F                     	;# 
   419  0690                     	;# 
   420  0691                     	;# 
   421  0692                     	;# 
   422  0693                     	;# 
   423  0694                     	;# 
   424  0695                     	;# 
   425  0696                     	;# 
   426  0697                     	;# 
   427  0698                     	;# 
   428  0699                     	;# 
   429  069A                     	;# 
   430  069B                     	;# 
   431  069C                     	;# 
   432  069D                     	;# 
   433  069E                     	;# 
   434  069F                     	;# 
   435  070D                     	;# 
   436  070E                     	;# 
   437  070F                     	;# 
   438  0710                     	;# 
   439  0711                     	;# 
   440  0712                     	;# 
   441  0713                     	;# 
   442  0714                     	;# 
   443  0715                     	;# 
   444  0716                     	;# 
   445  0717                     	;# 
   446  0718                     	;# 
   447  0719                     	;# 
   448  071A                     	;# 
   449  071B                     	;# 
   450  071C                     	;# 
   451  071D                     	;# 
   452  071E                     	;# 
   453  071F                     	;# 
   454  078E                     	;# 
   455  078F                     	;# 
   456  0790                     	;# 
   457  0791                     	;# 
   458  0792                     	;# 
   459  0793                     	;# 
   460  0794                     	;# 
   461  0795                     	;# 
   462  0796                     	;# 
   463  0797                     	;# 
   464  0798                     	;# 
   465  0799                     	;# 
   466  079A                     	;# 
   467  079B                     	;# 
   468  079C                     	;# 
   469  079D                     	;# 
   470  079E                     	;# 
   471  079F                     	;# 
   472  080D                     	;# 
   473  080E                     	;# 
   474  080F                     	;# 
   475  0810                     	;# 
   476  0811                     	;# 
   477  0812                     	;# 
   478  0813                     	;# 
   479  0814                     	;# 
   480  0815                     	;# 
   481  0816                     	;# 
   482  0817                     	;# 
   483  0818                     	;# 
   484  0819                     	;# 
   485  081A                     	;# 
   486  081B                     	;# 
   487  081C                     	;# 
   488  081D                     	;# 
   489  081E                     	;# 
   490  081F                     	;# 
   491  088D                     	;# 
   492  088E                     	;# 
   493  088F                     	;# 
   494  0890                     	;# 
   495  0891                     	;# 
   496  0892                     	;# 
   497  0893                     	;# 
   498  0894                     	;# 
   499  0895                     	;# 
   500  0896                     	;# 
   501  0897                     	;# 
   502  0898                     	;# 
   503  0899                     	;# 
   504  089A                     	;# 
   505  089B                     	;# 
   506  089C                     	;# 
   507  089D                     	;# 
   508  089E                     	;# 
   509  089F                     	;# 
   510  090C                     	;# 
   511  090D                     	;# 
   512  090E                     	;# 
   513  090F                     	;# 
   514  0910                     	;# 
   515  0911                     	;# 
   516  0912                     	;# 
   517  0913                     	;# 
   518  0914                     	;# 
   519  0915                     	;# 
   520  0916                     	;# 
   521  0917                     	;# 
   522  0918                     	;# 
   523  0919                     	;# 
   524  091A                     	;# 
   525  091B                     	;# 
   526  091C                     	;# 
   527  091D                     	;# 
   528  091E                     	;# 
   529  091F                     	;# 
   530  0D1B                     	;# 
   531  0D1C                     	;# 
   532  0D1D                     	;# 
   533  0D1E                     	;# 
   534  0D1F                     	;# 
   535  0D8E                     	;# 
   536  0D8F                     	;# 
   537  0D90                     	;# 
   538  0D91                     	;# 
   539  0D91                     	;# 
   540  0D92                     	;# 
   541  0D93                     	;# 
   542  0D93                     	;# 
   543  0D94                     	;# 
   544  0D95                     	;# 
   545  0D95                     	;# 
   546  0D96                     	;# 
   547  0D97                     	;# 
   548  0D97                     	;# 
   549  0D98                     	;# 
   550  0D99                     	;# 
   551  0D99                     	;# 
   552  0D9A                     	;# 
   553  0D9B                     	;# 
   554  0D9C                     	;# 
   555  0D9C                     	;# 
   556  0D9D                     	;# 
   557  0D9D                     	;# 
   558  0D9E                     	;# 
   559  0D9F                     	;# 
   560  0DA0                     	;# 
   561  0DA1                     	;# 
   562  0DA1                     	;# 
   563  0DA2                     	;# 
   564  0DA3                     	;# 
   565  0DA3                     	;# 
   566  0DA4                     	;# 
   567  0DA5                     	;# 
   568  0DA5                     	;# 
   569  0DA6                     	;# 
   570  0DA7                     	;# 
   571  0DA7                     	;# 
   572  0DA8                     	;# 
   573  0DA9                     	;# 
   574  0DA9                     	;# 
   575  0DAA                     	;# 
   576  0DAB                     	;# 
   577  0DAC                     	;# 
   578  0DAC                     	;# 
   579  0DAD                     	;# 
   580  0DAD                     	;# 
   581  0DAE                     	;# 
   582  0DAF                     	;# 
   583  0DB0                     	;# 
   584  0DB1                     	;# 
   585  0DB1                     	;# 
   586  0DB2                     	;# 
   587  0DB3                     	;# 
   588  0DB3                     	;# 
   589  0DB4                     	;# 
   590  0DB5                     	;# 
   591  0DB5                     	;# 
   592  0DB6                     	;# 
   593  0DB7                     	;# 
   594  0DB7                     	;# 
   595  0DB8                     	;# 
   596  0DB9                     	;# 
   597  0DB9                     	;# 
   598  0DBA                     	;# 
   599  0DBB                     	;# 
   600  0DBC                     	;# 
   601  0DBC                     	;# 
   602  0DBD                     	;# 
   603  0DBD                     	;# 
   604  0DBE                     	;# 
   605  0DBF                     	;# 
   606  0DC0                     	;# 
   607  0DC1                     	;# 
   608  0DC1                     	;# 
   609  0DC2                     	;# 
   610  0DC3                     	;# 
   611  0DC3                     	;# 
   612  0DC4                     	;# 
   613  0DC5                     	;# 
   614  0DC5                     	;# 
   615  0DC6                     	;# 
   616  0DC7                     	;# 
   617  0DC7                     	;# 
   618  0DC8                     	;# 
   619  0DC9                     	;# 
   620  0DC9                     	;# 
   621  0DCA                     	;# 
   622  0DCB                     	;# 
   623  0DCC                     	;# 
   624  0DCC                     	;# 
   625  0DCD                     	;# 
   626  0DCD                     	;# 
   627  0DCE                     	;# 
   628  0DCF                     	;# 
   629  0DD0                     	;# 
   630  0E0C                     	;# 
   631  0E0D                     	;# 
   632  0E0E                     	;# 
   633  0E0F                     	;# 
   634  0E10                     	;# 
   635  0E11                     	;# 
   636  0E12                     	;# 
   637  0E13                     	;# 
   638  0E14                     	;# 
   639  0E15                     	;# 
   640  0E15                     	;# 
   641  0E15                     	;# 
   642  0E16                     	;# 
   643  0E16                     	;# 
   644  0E16                     	;# 
   645  0E17                     	;# 
   646  0E17                     	;# 
   647  0E17                     	;# 
   648  0E18                     	;# 
   649  0E18                     	;# 
   650  0E18                     	;# 
   651  0E19                     	;# 
   652  0E1A                     	;# 
   653  0E1B                     	;# 
   654  0E1C                     	;# 
   655  0E1D                     	;# 
   656  0E1E                     	;# 
   657  0E1F                     	;# 
   658  0E20                     	;# 
   659  0E21                     	;# 
   660  0E22                     	;# 
   661  0E23                     	;# 
   662  0E24                     	;# 
   663  0E25                     	;# 
   664  0E26                     	;# 
   665  0E27                     	;# 
   666  0E28                     	;# 
   667  0E29                     	;# 
   668  0E2A                     	;# 
   669  0E2B                     	;# 
   670  0E2C                     	;# 
   671  0E2D                     	;# 
   672  0E2E                     	;# 
   673  0E2F                     	;# 
   674  0E30                     	;# 
   675  0E31                     	;# 
   676  0E32                     	;# 
   677  0E33                     	;# 
   678  0E34                     	;# 
   679  0E35                     	;# 
   680  0E36                     	;# 
   681  0E37                     	;# 
   682  0E38                     	;# 
   683  0E39                     	;# 
   684  0E3A                     	;# 
   685  0E3B                     	;# 
   686  0E3C                     	;# 
   687  0E3D                     	;# 
   688  0E3E                     	;# 
   689  0E90                     	;# 
   690  0E91                     	;# 
   691  0E92                     	;# 
   692  0E93                     	;# 
   693  0E94                     	;# 
   694  0E95                     	;# 
   695  0E96                     	;# 
   696  0E97                     	;# 
   697  0E98                     	;# 
   698  0E99                     	;# 
   699  0E9A                     	;# 
   700  0E9B                     	;# 
   701  0E9C                     	;# 
   702  0E9D                     	;# 
   703  0E9E                     	;# 
   704  0E9F                     	;# 
   705  0EA0                     	;# 
   706  0EA1                     	;# 
   707  0EA2                     	;# 
   708  0EA3                     	;# 
   709  0EA4                     	;# 
   710  0EA5                     	;# 
   711  0EA6                     	;# 
   712  0EA7                     	;# 
   713  0EA8                     	;# 
   714  0EA9                     	;# 
   715  0EAA                     	;# 
   716  0EAB                     	;# 
   717  0EAC                     	;# 
   718  0EAD                     	;# 
   719  0EAE                     	;# 
   720  0EAF                     	;# 
   721  0EB0                     	;# 
   722  0EB1                     	;# 
   723  0EB2                     	;# 
   724  0F0F                     	;# 
   725  0F10                     	;# 
   726  0F11                     	;# 
   727  0F12                     	;# 
   728  0F13                     	;# 
   729  0F14                     	;# 
   730  0F15                     	;# 
   731  0F16                     	;# 
   732  0F17                     	;# 
   733  0F18                     	;# 
   734  0F19                     	;# 
   735  0F1A                     	;# 
   736  0F1B                     	;# 
   737  0F1C                     	;# 
   738  0F1D                     	;# 
   739  0F1E                     	;# 
   740  0F1F                     	;# 
   741  0F20                     	;# 
   742  0F21                     	;# 
   743  0F22                     	;# 
   744  0F23                     	;# 
   745  0F24                     	;# 
   746  0F25                     	;# 
   747  0F26                     	;# 
   748  0F27                     	;# 
   749  0F28                     	;# 
   750  0F29                     	;# 
   751  0F2A                     	;# 
   752  0F2B                     	;# 
   753  0F2C                     	;# 
   754  0F2D                     	;# 
   755  0F2E                     	;# 
   756  0F2F                     	;# 
   757  0F30                     	;# 
   758  0F31                     	;# 
   759  0F32                     	;# 
   760  0F33                     	;# 
   761  0F34                     	;# 
   762  0F35                     	;# 
   763  0F36                     	;# 
   764  0F37                     	;# 
   765  0FE4                     	;# 
   766  0FE5                     	;# 
   767  0FE6                     	;# 
   768  0FE7                     	;# 
   769  0FE8                     	;# 
   770  0FE9                     	;# 
   771  0FEA                     	;# 
   772  0FEB                     	;# 
   773  0FED                     	;# 
   774  0FEE                     	;# 
   775  0FEF                     	;# 
   776  0000                     	;# 
   777  0001                     	;# 
   778  0002                     	;# 
   779  0003                     	;# 
   780  0004                     	;# 
   781  0005                     	;# 
   782  0006                     	;# 
   783  0007                     	;# 
   784  0008                     	;# 
   785  0009                     	;# 
   786  000A                     	;# 
   787  000B                     	;# 
   788  000C                     	;# 
   789  000D                     	;# 
   790  000E                     	;# 
   791  000F                     	;# 
   792  0010                     	;# 
   793  0011                     	;# 
   794  0012                     	;# 
   795  0013                     	;# 
   796  0014                     	;# 
   797  0015                     	;# 
   798  0016                     	;# 
   799  0017                     	;# 
   800  0018                     	;# 
   801  0018                     	;# 
   802  0019                     	;# 
   803  001A                     	;# 
   804  001B                     	;# 
   805  001C                     	;# 
   806  001C                     	;# 
   807  001D                     	;# 
   808  001E                     	;# 
   809  001F                     	;# 
   810  008C                     	;# 
   811  008D                     	;# 
   812  008E                     	;# 
   813  008F                     	;# 
   814  0090                     	;# 
   815  0091                     	;# 
   816  0092                     	;# 
   817  0093                     	;# 
   818  0094                     	;# 
   819  0095                     	;# 
   820  0096                     	;# 
   821  0097                     	;# 
   822  0098                     	;# 
   823  0099                     	;# 
   824  009A                     	;# 
   825  009B                     	;# 
   826  009C                     	;# 
   827  009D                     	;# 
   828  009E                     	;# 
   829  009F                     	;# 
   830  010C                     	;# 
   831  010D                     	;# 
   832  010E                     	;# 
   833  010F                     	;# 
   834  0110                     	;# 
   835  0111                     	;# 
   836  0112                     	;# 
   837  0113                     	;# 
   838  0114                     	;# 
   839  0115                     	;# 
   840  0116                     	;# 
   841  0117                     	;# 
   842  0118                     	;# 
   843  0119                     	;# 
   844  011A                     	;# 
   845  011B                     	;# 
   846  011C                     	;# 
   847  011D                     	;# 
   848  018C                     	;# 
   849  018D                     	;# 
   850  018E                     	;# 
   851  018F                     	;# 
   852  0190                     	;# 
   853  0191                     	;# 
   854  0191                     	;# 
   855  0192                     	;# 
   856  0193                     	;# 
   857  0193                     	;# 
   858  0194                     	;# 
   859  0195                     	;# 
   860  0196                     	;# 
   861  0197                     	;# 
   862  0199                     	;# 
   863  0199                     	;# 
   864  0199                     	;# 
   865  019A                     	;# 
   866  019A                     	;# 
   867  019A                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019C                     	;# 
   874  019C                     	;# 
   875  019C                     	;# 
   876  019D                     	;# 
   877  019D                     	;# 
   878  019D                     	;# 
   879  019E                     	;# 
   880  019E                     	;# 
   881  019E                     	;# 
   882  019F                     	;# 
   883  019F                     	;# 
   884  019F                     	;# 
   885  019F                     	;# 
   886  019F                     	;# 
   887  020C                     	;# 
   888  020D                     	;# 
   889  020E                     	;# 
   890  020F                     	;# 
   891  0210                     	;# 
   892  0211                     	;# 
   893  0211                     	;# 
   894  0212                     	;# 
   895  0212                     	;# 
   896  0213                     	;# 
   897  0213                     	;# 
   898  0214                     	;# 
   899  0214                     	;# 
   900  0215                     	;# 
   901  0215                     	;# 
   902  0215                     	;# 
   903  0215                     	;# 
   904  0216                     	;# 
   905  0216                     	;# 
   906  0217                     	;# 
   907  0217                     	;# 
   908  021B                     	;# 
   909  021C                     	;# 
   910  021D                     	;# 
   911  021E                     	;# 
   912  021F                     	;# 
   913  028C                     	;# 
   914  028D                     	;# 
   915  028E                     	;# 
   916  028F                     	;# 
   917  0290                     	;# 
   918  0291                     	;# 
   919  0291                     	;# 
   920  0292                     	;# 
   921  0293                     	;# 
   922  0294                     	;# 
   923  0295                     	;# 
   924  0295                     	;# 
   925  0296                     	;# 
   926  0297                     	;# 
   927  0298                     	;# 
   928  0299                     	;# 
   929  0299                     	;# 
   930  029A                     	;# 
   931  029B                     	;# 
   932  029C                     	;# 
   933  029E                     	;# 
   934  029F                     	;# 
   935  030C                     	;# 
   936  030D                     	;# 
   937  030E                     	;# 
   938  030F                     	;# 
   939  0310                     	;# 
   940  0311                     	;# 
   941  0311                     	;# 
   942  0312                     	;# 
   943  0313                     	;# 
   944  0314                     	;# 
   945  0315                     	;# 
   946  0316                     	;# 
   947  0317                     	;# 
   948  0318                     	;# 
   949  0319                     	;# 
   950  031B                     	;# 
   951  031C                     	;# 
   952  031D                     	;# 
   953  031E                     	;# 
   954  031F                     	;# 
   955  038C                     	;# 
   956  038D                     	;# 
   957  038E                     	;# 
   958  038F                     	;# 
   959  0390                     	;# 
   960  0391                     	;# 
   961  0392                     	;# 
   962  0393                     	;# 
   963  0394                     	;# 
   964  0395                     	;# 
   965  0396                     	;# 
   966  0397                     	;# 
   967  0398                     	;# 
   968  0399                     	;# 
   969  039D                     	;# 
   970  039E                     	;# 
   971  039F                     	;# 
   972  040D                     	;# 
   973  040F                     	;# 
   974  040F                     	;# 
   975  0410                     	;# 
   976  0411                     	;# 
   977  0412                     	;# 
   978  0413                     	;# 
   979  0413                     	;# 
   980  0414                     	;# 
   981  0414                     	;# 
   982  0415                     	;# 
   983  0416                     	;# 
   984  0417                     	;# 
   985  0418                     	;# 
   986  041A                     	;# 
   987  041A                     	;# 
   988  041B                     	;# 
   989  041B                     	;# 
   990  041C                     	;# 
   991  041D                     	;# 
   992  041E                     	;# 
   993  041F                     	;# 
   994  048E                     	;# 
   995  048E                     	;# 
   996  048F                     	;# 
   997  0490                     	;# 
   998  0491                     	;# 
   999  0492                     	;# 
  1000  0493                     	;# 
  1001  0493                     	;# 
  1002  0494                     	;# 
  1003  0494                     	;# 
  1004  0495                     	;# 
  1005  0496                     	;# 
  1006  0497                     	;# 
  1007  0498                     	;# 
  1008  049A                     	;# 
  1009  049A                     	;# 
  1010  049B                     	;# 
  1011  049B                     	;# 
  1012  049C                     	;# 
  1013  049D                     	;# 
  1014  049E                     	;# 
  1015  049F                     	;# 
  1016  050F                     	;# 
  1017  0510                     	;# 
  1018  0511                     	;# 
  1019  0512                     	;# 
  1020  0513                     	;# 
  1021  0514                     	;# 
  1022  0515                     	;# 
  1023  0516                     	;# 
  1024  0517                     	;# 
  1025  0518                     	;# 
  1026  0519                     	;# 
  1027  051A                     	;# 
  1028  051B                     	;# 
  1029  051C                     	;# 
  1030  051D                     	;# 
  1031  051E                     	;# 
  1032  058D                     	;# 
  1033  058E                     	;# 
  1034  058F                     	;# 
  1035  058F                     	;# 
  1036  058F                     	;# 
  1037  0590                     	;# 
  1038  0590                     	;# 
  1039  0591                     	;# 
  1040  0592                     	;# 
  1041  0592                     	;# 
  1042  0592                     	;# 
  1043  0593                     	;# 
  1044  0593                     	;# 
  1045  0594                     	;# 
  1046  0595                     	;# 
  1047  0595                     	;# 
  1048  0596                     	;# 
  1049  0597                     	;# 
  1050  0597                     	;# 
  1051  0598                     	;# 
  1052  0599                     	;# 
  1053  0599                     	;# 
  1054  0599                     	;# 
  1055  059A                     	;# 
  1056  059A                     	;# 
  1057  059B                     	;# 
  1058  059C                     	;# 
  1059  059C                     	;# 
  1060  059C                     	;# 
  1061  059D                     	;# 
  1062  059D                     	;# 
  1063  059E                     	;# 
  1064  059F                     	;# 
  1065  059F                     	;# 
  1066  060C                     	;# 
  1067  060D                     	;# 
  1068  060D                     	;# 
  1069  060E                     	;# 
  1070  060F                     	;# 
  1071  0610                     	;# 
  1072  0611                     	;# 
  1073  0612                     	;# 
  1074  0613                     	;# 
  1075  0614                     	;# 
  1076  0615                     	;# 
  1077  0616                     	;# 
  1078  0617                     	;# 
  1079  0618                     	;# 
  1080  0619                     	;# 
  1081  061A                     	;# 
  1082  061B                     	;# 
  1083  061C                     	;# 
  1084  061D                     	;# 
  1085  061E                     	;# 
  1086  061F                     	;# 
  1087  068D                     	;# 
  1088  068E                     	;# 
  1089  068F                     	;# 
  1090  0690                     	;# 
  1091  0691                     	;# 
  1092  0692                     	;# 
  1093  0693                     	;# 
  1094  0694                     	;# 
  1095  0695                     	;# 
  1096  0696                     	;# 
  1097  0697                     	;# 
  1098  0698                     	;# 
  1099  0699                     	;# 
  1100  069A                     	;# 
  1101  069B                     	;# 
  1102  069C                     	;# 
  1103  069D                     	;# 
  1104  069E                     	;# 
  1105  069F                     	;# 
  1106  070D                     	;# 
  1107  070E                     	;# 
  1108  070F                     	;# 
  1109  0710                     	;# 
  1110  0711                     	;# 
  1111  0712                     	;# 
  1112  0713                     	;# 
  1113  0714                     	;# 
  1114  0715                     	;# 
  1115  0716                     	;# 
  1116  0717                     	;# 
  1117  0718                     	;# 
  1118  0719                     	;# 
  1119  071A                     	;# 
  1120  071B                     	;# 
  1121  071C                     	;# 
  1122  071D                     	;# 
  1123  071E                     	;# 
  1124  071F                     	;# 
  1125  078E                     	;# 
  1126  078F                     	;# 
  1127  0790                     	;# 
  1128  0791                     	;# 
  1129  0792                     	;# 
  1130  0793                     	;# 
  1131  0794                     	;# 
  1132  0795                     	;# 
  1133  0796                     	;# 
  1134  0797                     	;# 
  1135  0798                     	;# 
  1136  0799                     	;# 
  1137  079A                     	;# 
  1138  079B                     	;# 
  1139  079C                     	;# 
  1140  079D                     	;# 
  1141  079E                     	;# 
  1142  079F                     	;# 
  1143  080D                     	;# 
  1144  080E                     	;# 
  1145  080F                     	;# 
  1146  0810                     	;# 
  1147  0811                     	;# 
  1148  0812                     	;# 
  1149  0813                     	;# 
  1150  0814                     	;# 
  1151  0815                     	;# 
  1152  0816                     	;# 
  1153  0817                     	;# 
  1154  0818                     	;# 
  1155  0819                     	;# 
  1156  081A                     	;# 
  1157  081B                     	;# 
  1158  081C                     	;# 
  1159  081D                     	;# 
  1160  081E                     	;# 
  1161  081F                     	;# 
  1162  088D                     	;# 
  1163  088E                     	;# 
  1164  088F                     	;# 
  1165  0890                     	;# 
  1166  0891                     	;# 
  1167  0892                     	;# 
  1168  0893                     	;# 
  1169  0894                     	;# 
  1170  0895                     	;# 
  1171  0896                     	;# 
  1172  0897                     	;# 
  1173  0898                     	;# 
  1174  0899                     	;# 
  1175  089A                     	;# 
  1176  089B                     	;# 
  1177  089C                     	;# 
  1178  089D                     	;# 
  1179  089E                     	;# 
  1180  089F                     	;# 
  1181  090C                     	;# 
  1182  090D                     	;# 
  1183  090E                     	;# 
  1184  090F                     	;# 
  1185  0910                     	;# 
  1186  0911                     	;# 
  1187  0912                     	;# 
  1188  0913                     	;# 
  1189  0914                     	;# 
  1190  0915                     	;# 
  1191  0916                     	;# 
  1192  0917                     	;# 
  1193  0918                     	;# 
  1194  0919                     	;# 
  1195  091A                     	;# 
  1196  091B                     	;# 
  1197  091C                     	;# 
  1198  091D                     	;# 
  1199  091E                     	;# 
  1200  091F                     	;# 
  1201  0D1B                     	;# 
  1202  0D1C                     	;# 
  1203  0D1D                     	;# 
  1204  0D1E                     	;# 
  1205  0D1F                     	;# 
  1206  0D8E                     	;# 
  1207  0D8F                     	;# 
  1208  0D90                     	;# 
  1209  0D91                     	;# 
  1210  0D91                     	;# 
  1211  0D92                     	;# 
  1212  0D93                     	;# 
  1213  0D93                     	;# 
  1214  0D94                     	;# 
  1215  0D95                     	;# 
  1216  0D95                     	;# 
  1217  0D96                     	;# 
  1218  0D97                     	;# 
  1219  0D97                     	;# 
  1220  0D98                     	;# 
  1221  0D99                     	;# 
  1222  0D99                     	;# 
  1223  0D9A                     	;# 
  1224  0D9B                     	;# 
  1225  0D9C                     	;# 
  1226  0D9C                     	;# 
  1227  0D9D                     	;# 
  1228  0D9D                     	;# 
  1229  0D9E                     	;# 
  1230  0D9F                     	;# 
  1231  0DA0                     	;# 
  1232  0DA1                     	;# 
  1233  0DA1                     	;# 
  1234  0DA2                     	;# 
  1235  0DA3                     	;# 
  1236  0DA3                     	;# 
  1237  0DA4                     	;# 
  1238  0DA5                     	;# 
  1239  0DA5                     	;# 
  1240  0DA6                     	;# 
  1241  0DA7                     	;# 
  1242  0DA7                     	;# 
  1243  0DA8                     	;# 
  1244  0DA9                     	;# 
  1245  0DA9                     	;# 
  1246  0DAA                     	;# 
  1247  0DAB                     	;# 
  1248  0DAC                     	;# 
  1249  0DAC                     	;# 
  1250  0DAD                     	;# 
  1251  0DAD                     	;# 
  1252  0DAE                     	;# 
  1253  0DAF                     	;# 
  1254  0DB0                     	;# 
  1255  0DB1                     	;# 
  1256  0DB1                     	;# 
  1257  0DB2                     	;# 
  1258  0DB3                     	;# 
  1259  0DB3                     	;# 
  1260  0DB4                     	;# 
  1261  0DB5                     	;# 
  1262  0DB5                     	;# 
  1263  0DB6                     	;# 
  1264  0DB7                     	;# 
  1265  0DB7                     	;# 
  1266  0DB8                     	;# 
  1267  0DB9                     	;# 
  1268  0DB9                     	;# 
  1269  0DBA                     	;# 
  1270  0DBB                     	;# 
  1271  0DBC                     	;# 
  1272  0DBC                     	;# 
  1273  0DBD                     	;# 
  1274  0DBD                     	;# 
  1275  0DBE                     	;# 
  1276  0DBF                     	;# 
  1277  0DC0                     	;# 
  1278  0DC1                     	;# 
  1279  0DC1                     	;# 
  1280  0DC2                     	;# 
  1281  0DC3                     	;# 
  1282  0DC3                     	;# 
  1283  0DC4                     	;# 
  1284  0DC5                     	;# 
  1285  0DC5                     	;# 
  1286  0DC6                     	;# 
  1287  0DC7                     	;# 
  1288  0DC7                     	;# 
  1289  0DC8                     	;# 
  1290  0DC9                     	;# 
  1291  0DC9                     	;# 
  1292  0DCA                     	;# 
  1293  0DCB                     	;# 
  1294  0DCC                     	;# 
  1295  0DCC                     	;# 
  1296  0DCD                     	;# 
  1297  0DCD                     	;# 
  1298  0DCE                     	;# 
  1299  0DCF                     	;# 
  1300  0DD0                     	;# 
  1301  0E0C                     	;# 
  1302  0E0D                     	;# 
  1303  0E0E                     	;# 
  1304  0E0F                     	;# 
  1305  0E10                     	;# 
  1306  0E11                     	;# 
  1307  0E12                     	;# 
  1308  0E13                     	;# 
  1309  0E14                     	;# 
  1310  0E15                     	;# 
  1311  0E15                     	;# 
  1312  0E15                     	;# 
  1313  0E16                     	;# 
  1314  0E16                     	;# 
  1315  0E16                     	;# 
  1316  0E17                     	;# 
  1317  0E17                     	;# 
  1318  0E17                     	;# 
  1319  0E18                     	;# 
  1320  0E18                     	;# 
  1321  0E18                     	;# 
  1322  0E19                     	;# 
  1323  0E1A                     	;# 
  1324  0E1B                     	;# 
  1325  0E1C                     	;# 
  1326  0E1D                     	;# 
  1327  0E1E                     	;# 
  1328  0E1F                     	;# 
  1329  0E20                     	;# 
  1330  0E21                     	;# 
  1331  0E22                     	;# 
  1332  0E23                     	;# 
  1333  0E24                     	;# 
  1334  0E25                     	;# 
  1335  0E26                     	;# 
  1336  0E27                     	;# 
  1337  0E28                     	;# 
  1338  0E29                     	;# 
  1339  0E2A                     	;# 
  1340  0E2B                     	;# 
  1341  0E2C                     	;# 
  1342  0E2D                     	;# 
  1343  0E2E                     	;# 
  1344  0E2F                     	;# 
  1345  0E30                     	;# 
  1346  0E31                     	;# 
  1347  0E32                     	;# 
  1348  0E33                     	;# 
  1349  0E34                     	;# 
  1350  0E35                     	;# 
  1351  0E36                     	;# 
  1352  0E37                     	;# 
  1353  0E38                     	;# 
  1354  0E39                     	;# 
  1355  0E3A                     	;# 
  1356  0E3B                     	;# 
  1357  0E3C                     	;# 
  1358  0E3D                     	;# 
  1359  0E3E                     	;# 
  1360  0E90                     	;# 
  1361  0E91                     	;# 
  1362  0E92                     	;# 
  1363  0E93                     	;# 
  1364  0E94                     	;# 
  1365  0E95                     	;# 
  1366  0E96                     	;# 
  1367  0E97                     	;# 
  1368  0E98                     	;# 
  1369  0E99                     	;# 
  1370  0E9A                     	;# 
  1371  0E9B                     	;# 
  1372  0E9C                     	;# 
  1373  0E9D                     	;# 
  1374  0E9E                     	;# 
  1375  0E9F                     	;# 
  1376  0EA0                     	;# 
  1377  0EA1                     	;# 
  1378  0EA2                     	;# 
  1379  0EA3                     	;# 
  1380  0EA4                     	;# 
  1381  0EA5                     	;# 
  1382  0EA6                     	;# 
  1383  0EA7                     	;# 
  1384  0EA8                     	;# 
  1385  0EA9                     	;# 
  1386  0EAA                     	;# 
  1387  0EAB                     	;# 
  1388  0EAC                     	;# 
  1389  0EAD                     	;# 
  1390  0EAE                     	;# 
  1391  0EAF                     	;# 
  1392  0EB0                     	;# 
  1393  0EB1                     	;# 
  1394  0EB2                     	;# 
  1395  0F0F                     	;# 
  1396  0F10                     	;# 
  1397  0F11                     	;# 
  1398  0F12                     	;# 
  1399  0F13                     	;# 
  1400  0F14                     	;# 
  1401  0F15                     	;# 
  1402  0F16                     	;# 
  1403  0F17                     	;# 
  1404  0F18                     	;# 
  1405  0F19                     	;# 
  1406  0F1A                     	;# 
  1407  0F1B                     	;# 
  1408  0F1C                     	;# 
  1409  0F1D                     	;# 
  1410  0F1E                     	;# 
  1411  0F1F                     	;# 
  1412  0F20                     	;# 
  1413  0F21                     	;# 
  1414  0F22                     	;# 
  1415  0F23                     	;# 
  1416  0F24                     	;# 
  1417  0F25                     	;# 
  1418  0F26                     	;# 
  1419  0F27                     	;# 
  1420  0F28                     	;# 
  1421  0F29                     	;# 
  1422  0F2A                     	;# 
  1423  0F2B                     	;# 
  1424  0F2C                     	;# 
  1425  0F2D                     	;# 
  1426  0F2E                     	;# 
  1427  0F2F                     	;# 
  1428  0F30                     	;# 
  1429  0F31                     	;# 
  1430  0F32                     	;# 
  1431  0F33                     	;# 
  1432  0F34                     	;# 
  1433  0F35                     	;# 
  1434  0F36                     	;# 
  1435  0F37                     	;# 
  1436  0FE4                     	;# 
  1437  0FE5                     	;# 
  1438  0FE6                     	;# 
  1439  0FE7                     	;# 
  1440  0FE8                     	;# 
  1441  0FE9                     	;# 
  1442  0FEA                     	;# 
  1443  0FEB                     	;# 
  1444  0FED                     	;# 
  1445  0FEE                     	;# 
  1446  0FEF                     	;# 
  1447                           
  1448                           	psect	idataCOMMON
  1449  0003                     __pidataCOMMON:	
  1450                           
  1451                           ;initializer for _Key
  1452  0003  346E               	retlw	110
  1453                           
  1454                           	psect	idataBANK0
  1455  27F7                     __pidataBANK0:	
  1456                           
  1457                           ;initializer for _count
  1458  27F7  3408               	retlw	8
  1459  27F8  3402               	retlw	2
  1460                           
  1461                           ;initializer for _print_line
  1462  27F9  3403               	retlw	3
  1463                           
  1464                           	psect	idataBANK1
  1465  1AD1                     __pidataBANK1:	
  1466                           
  1467                           ;initializer for _UPDOWN
  1468  1AD1  3420               	retlw	32
  1469  1AD2  3420               	retlw	32
  1470  1AD3  3420               	retlw	32
  1471  1AD4  3420               	retlw	32
  1472  1AD5  3420               	retlw	32
  1473  1AD6  3420               	retlw	32
  1474  1AD7  3420               	retlw	32
  1475  1AD8  3420               	retlw	32
  1476  1AD9  3420               	retlw	32
  1477  1ADA  3420               	retlw	32
  1478  1ADB  3420               	retlw	32
  1479  1ADC  3420               	retlw	32
  1480  1ADD  3420               	retlw	32
  1481  1ADE  3420               	retlw	32
  1482  1ADF  3420               	retlw	32
  1483  1AE0  3420               	retlw	32
  1484  1AE1  3400               	retlw	0
  1485                           
  1486                           ;initializer for _naif
  1487  1AE2  3420               	retlw	32
  1488  1AE3  3420               	retlw	32
  1489  1AE4  3420               	retlw	32
  1490  1AE5  3420               	retlw	32
  1491  1AE6  3420               	retlw	32
  1492  1AE7  3420               	retlw	32
  1493  1AE8  3420               	retlw	32
  1494  1AE9  3420               	retlw	32
  1495  1AEA  3420               	retlw	32
  1496  1AEB  3420               	retlw	32
  1497  1AEC  3420               	retlw	32
  1498  1AED  3420               	retlw	32
  1499  1AEE  3420               	retlw	32
  1500  1AEF  3420               	retlw	32
  1501  1AF0  3420               	retlw	32
  1502  1AF1  3420               	retlw	32
  1503  1AF2  3400               	retlw	0
  1504                           
  1505                           	psect	idataBANK2
  1506  1A7E                     __pidataBANK2:	
  1507                           
  1508                           ;initializer for _hello
  1509  1A7E  346E               	retlw	110
  1510  1A7F  3461               	retlw	97
  1511  1A80  3469               	retlw	105
  1512  1A81  3466               	retlw	102
  1513  1A82  3420               	retlw	32
  1514  1A83  3468               	retlw	104
  1515  1A84  3461               	retlw	97
  1516  1A85  346D               	retlw	109
  1517  1A86  3464               	retlw	100
  1518  1A87  3469               	retlw	105
  1519  1A88  3420               	retlw	32
  1520  1A89  3461               	retlw	97
  1521  1A8A  346C               	retlw	108
  1522  1A8B  346A               	retlw	106
  1523  1A8C  346F               	retlw	111
  1524  1A8D  3468               	retlw	104
  1525  1A8E  3461               	retlw	97
  1526  1A8F  346E               	retlw	110
  1527  1A90  3469               	retlw	105
  1528  1A91  3420               	retlw	32
  1529  1A92  3420               	retlw	32
  1530  1A93  3420               	retlw	32
  1531  1A94  3400               	retlw	0
  1532  1A95  3400               	retlw	0
  1533  1A96  3400               	retlw	0
  1534                           
  1535                           	psect	stringtext1
  1536  0A42                     __pstringtext1:	
  1537  0A42                     _black:	
  1538  0A42  34FF               	retlw	255
  1539  0A43  34FF               	retlw	255
  1540  0A44  34FF               	retlw	255
  1541  0A45  34FF               	retlw	255
  1542  0A46  34FF               	retlw	255
  1543  0A47  34FF               	retlw	255
  1544  0A48  34FF               	retlw	255
  1545  0A49  34FF               	retlw	255
  1546  0A4A  34FF               	retlw	255
  1547  0A4B  34FF               	retlw	255
  1548  0A4C  34FF               	retlw	255
  1549  0A4D  34FF               	retlw	255
  1550  0A4E  34FF               	retlw	255
  1551  0A4F  34FF               	retlw	255
  1552  0A50  34FF               	retlw	255
  1553  0A51  34FF               	retlw	255
  1554  0A52  34FF               	retlw	255
  1555  0A53  34FF               	retlw	255
  1556  0A54  34FF               	retlw	255
  1557  0A55  34FF               	retlw	255
  1558  0A56  34FF               	retlw	255
  1559  0A57  34FF               	retlw	255
  1560  0A58  34FF               	retlw	255
  1561  0A59  34FF               	retlw	255
  1562  0A5A  34FF               	retlw	255
  1563  0A5B  34FF               	retlw	255
  1564  0A5C  34FF               	retlw	255
  1565  0A5D  34FF               	retlw	255
  1566  0A5E  34FF               	retlw	255
  1567  0A5F  34FF               	retlw	255
  1568  0A60  34FF               	retlw	255
  1569  0A61  34FF               	retlw	255
  1570  0A62  34FF               	retlw	255
  1571  0A63  34FF               	retlw	255
  1572  0A64  34FF               	retlw	255
  1573  0A65  34FF               	retlw	255
  1574  0A66  34FF               	retlw	255
  1575  0A67  34FF               	retlw	255
  1576  0A68  34FF               	retlw	255
  1577  0A69  34FF               	retlw	255
  1578  0A6A  34FF               	retlw	255
  1579  0A6B  34FF               	retlw	255
  1580  0A6C  34FF               	retlw	255
  1581  0A6D  34FF               	retlw	255
  1582  0A6E  34FF               	retlw	255
  1583  0A6F  34FF               	retlw	255
  1584  0A70  34FF               	retlw	255
  1585  0A71  34FF               	retlw	255
  1586  0A72  34FF               	retlw	255
  1587  0A73  34FF               	retlw	255
  1588  0A74  34FF               	retlw	255
  1589  0A75  34FF               	retlw	255
  1590  0A76  34FF               	retlw	255
  1591  0A77  34FF               	retlw	255
  1592  0A78  34FF               	retlw	255
  1593  0A79  34FF               	retlw	255
  1594  0A7A  34FF               	retlw	255
  1595  0A7B  34FF               	retlw	255
  1596  0A7C  34FF               	retlw	255
  1597  0A7D  34FF               	retlw	255
  1598  0A7E  34FF               	retlw	255
  1599  0A7F  34FF               	retlw	255
  1600  0A80  34FF               	retlw	255
  1601  0A81  34FF               	retlw	255
  1602  0A82  34FF               	retlw	255
  1603  0A83  34FF               	retlw	255
  1604  0A84  34FF               	retlw	255
  1605  0A85  34FF               	retlw	255
  1606  0A86  34FF               	retlw	255
  1607  0A87  34FF               	retlw	255
  1608  0A88  34FF               	retlw	255
  1609  0A89  34FF               	retlw	255
  1610  0A8A  34FF               	retlw	255
  1611  0A8B  34FF               	retlw	255
  1612  0A8C  34FF               	retlw	255
  1613  0A8D  34FF               	retlw	255
  1614  0A8E  34FF               	retlw	255
  1615  0A8F  34FF               	retlw	255
  1616  0A90  34FF               	retlw	255
  1617  0A91  34FF               	retlw	255
  1618  0A92  34FF               	retlw	255
  1619  0A93  34FF               	retlw	255
  1620  0A94  34FF               	retlw	255
  1621  0A95  34FF               	retlw	255
  1622  0A96  34FF               	retlw	255
  1623  0A97  34FF               	retlw	255
  1624  0A98  34FF               	retlw	255
  1625  0A99  34FF               	retlw	255
  1626  0A9A  34FF               	retlw	255
  1627  0A9B  34FF               	retlw	255
  1628  0A9C  34FF               	retlw	255
  1629  0A9D  34FF               	retlw	255
  1630  0A9E  34FF               	retlw	255
  1631  0A9F  34FF               	retlw	255
  1632  0AA0  34FF               	retlw	255
  1633  0AA1  34FF               	retlw	255
  1634  0AA2  34FF               	retlw	255
  1635  0AA3  34FF               	retlw	255
  1636  0AA4  34FF               	retlw	255
  1637  0AA5  34FF               	retlw	255
  1638  0AA6  34FF               	retlw	255
  1639  0AA7  34FF               	retlw	255
  1640  0AA8  34FF               	retlw	255
  1641  0AA9  34FF               	retlw	255
  1642  0AAA  34FF               	retlw	255
  1643  0AAB  34F9               	retlw	249
  1644  0AAC  3400               	retlw	0
  1645  0AAD  345F               	retlw	95
  1646  0AAE  34FF               	retlw	255
  1647  0AAF  34FF               	retlw	255
  1648  0AB0  34FF               	retlw	255
  1649  0AB1  34FF               	retlw	255
  1650  0AB2  34FF               	retlw	255
  1651  0AB3  34FF               	retlw	255
  1652  0AB4  34FF               	retlw	255
  1653  0AB5  34FF               	retlw	255
  1654  0AB6  34FF               	retlw	255
  1655  0AB7  34FF               	retlw	255
  1656  0AB8  34FF               	retlw	255
  1657  0AB9  34FF               	retlw	255
  1658  0ABA  34FE               	retlw	254
  1659  0ABB  3400               	retlw	0
  1660  0ABC  3400               	retlw	0
  1661  0ABD  3400               	retlw	0
  1662  0ABE  347F               	retlw	127
  1663  0ABF  34FF               	retlw	255
  1664  0AC0  34FF               	retlw	255
  1665  0AC1  34FF               	retlw	255
  1666  0AC2  34FF               	retlw	255
  1667  0AC3  34FF               	retlw	255
  1668  0AC4  34FF               	retlw	255
  1669  0AC5  34FF               	retlw	255
  1670  0AC6  34FF               	retlw	255
  1671  0AC7  34FF               	retlw	255
  1672  0AC8  34FF               	retlw	255
  1673  0AC9  34FF               	retlw	255
  1674  0ACA  34F0               	retlw	240
  1675  0ACB  3400               	retlw	0
  1676  0ACC  3400               	retlw	0
  1677  0ACD  3400               	retlw	0
  1678  0ACE  340F               	retlw	15
  1679  0ACF  34FF               	retlw	255
  1680  0AD0  34FF               	retlw	255
  1681  0AD1  34FF               	retlw	255
  1682  0AD2  34FF               	retlw	255
  1683  0AD3  34FF               	retlw	255
  1684  0AD4  34FF               	retlw	255
  1685  0AD5  34FF               	retlw	255
  1686  0AD6  34FF               	retlw	255
  1687  0AD7  34FF               	retlw	255
  1688  0AD8  34FF               	retlw	255
  1689  0AD9  34FF               	retlw	255
  1690  0ADA  3480               	retlw	128
  1691  0ADB  3400               	retlw	0
  1692  0ADC  3400               	retlw	0
  1693  0ADD  3400               	retlw	0
  1694  0ADE  3401               	retlw	1
  1695  0ADF  34FF               	retlw	255
  1696  0AE0  34FF               	retlw	255
  1697  0AE1  34FF               	retlw	255
  1698  0AE2  34FF               	retlw	255
  1699  0AE3  34FF               	retlw	255
  1700  0AE4  34FF               	retlw	255
  1701  0AE5  34FF               	retlw	255
  1702  0AE6  34FF               	retlw	255
  1703  0AE7  34FF               	retlw	255
  1704  0AE8  34FF               	retlw	255
  1705  0AE9  34FE               	retlw	254
  1706  0AEA  3400               	retlw	0
  1707  0AEB  3400               	retlw	0
  1708  0AEC  3400               	retlw	0
  1709  0AED  3400               	retlw	0
  1710  0AEE  3400               	retlw	0
  1711  0AEF  347F               	retlw	127
  1712  0AF0  34FF               	retlw	255
  1713  0AF1  34FF               	retlw	255
  1714  0AF2  34FF               	retlw	255
  1715  0AF3  34FF               	retlw	255
  1716  0AF4  34FF               	retlw	255
  1717  0AF5  34FF               	retlw	255
  1718  0AF6  34FF               	retlw	255
  1719  0AF7  34FF               	retlw	255
  1720  0AF8  34FF               	retlw	255
  1721  0AF9  34F8               	retlw	248
  1722  0AFA  3400               	retlw	0
  1723  0AFB  3401               	retlw	1
  1724  0AFC  34B5               	retlw	181
  1725  0AFD  3400               	retlw	0
  1726  0AFE  3400               	retlw	0
  1727  0AFF  341F               	retlw	31
  1728  0B00  34FF               	retlw	255
  1729  0B01  34FF               	retlw	255
  1730  0B02  34FF               	retlw	255
  1731  0B03  34FF               	retlw	255
  1732  0B04  34FF               	retlw	255
  1733  0B05  34FF               	retlw	255
  1734  0B06  34FF               	retlw	255
  1735  0B07  34FF               	retlw	255
  1736  0B08  34FF               	retlw	255
  1737  0B09  34E0               	retlw	224
  1738  0B0A  3400               	retlw	0
  1739  0B0B  345F               	retlw	95
  1740  0B0C  34FF               	retlw	255
  1741  0B0D  34F8               	retlw	248
  1742  0B0E  3400               	retlw	0
  1743  0B0F  340F               	retlw	15
  1744  0B10  34FF               	retlw	255
  1745  0B11  34FF               	retlw	255
  1746  0B12  34FF               	retlw	255
  1747  0B13  34FF               	retlw	255
  1748  0B14  34FF               	retlw	255
  1749  0B15  34FF               	retlw	255
  1750  0B16  34FF               	retlw	255
  1751  0B17  34FF               	retlw	255
  1752  0B18  34FF               	retlw	255
  1753  0B19  34E0               	retlw	224
  1754  0B1A  3401               	retlw	1
  1755  0B1B  34FF               	retlw	255
  1756  0B1C  34FF               	retlw	255
  1757  0B1D  34FF               	retlw	255
  1758  0B1E  3400               	retlw	0
  1759  0B1F  3403               	retlw	3
  1760  0B20  34FF               	retlw	255
  1761  0B21  34FF               	retlw	255
  1762  0B22  34FF               	retlw	255
  1763  0B23  34FF               	retlw	255
  1764  0B24  34FF               	retlw	255
  1765  0B25  34FF               	retlw	255
  1766  0B26  34FF               	retlw	255
  1767  0B27  34FF               	retlw	255
  1768  0B28  34FF               	retlw	255
  1769  0B29  34F0               	retlw	240
  1770  0B2A  340F               	retlw	15
  1771  0B2B  34FF               	retlw	255
  1772  0B2C  34A7               	retlw	167
  1773  0B2D  34FF               	retlw	255
  1774  0B2E  34E0               	retlw	224
  1775  0B2F  3401               	retlw	1
  1776  0B30  34FF               	retlw	255
  1777  0B31  34FF               	retlw	255
  1778  0B32  34FF               	retlw	255
  1779  0B33  34FF               	retlw	255
  1780  0B34  34FF               	retlw	255
  1781  0B35  34FF               	retlw	255
  1782  0B36  34FF               	retlw	255
  1783  0B37  34FF               	retlw	255
  1784  0B38  34F9               	retlw	249
  1785  0B39  34FE               	retlw	254
  1786  0B3A  343F               	retlw	63
  1787  0B3B  34F8               	retlw	248
  1788  0B3C  3400               	retlw	0
  1789  0B3D  345F               	retlw	95
  1790  0B3E  34F0               	retlw	240
  1791  0B3F  3401               	retlw	1
  1792  0B40  34FF               	retlw	255
  1793  0B41  34FF               	retlw	255
  1794  0B42  34FF               	retlw	255
  1795  0B43  34FF               	retlw	255
  1796  0B44  34FF               	retlw	255
  1797  0B45  34FF               	retlw	255
  1798  0B46  34FF               	retlw	255
  1799  0B47  34FF               	retlw	255
  1800  0B48  34E0               	retlw	224
  1801  0B49  347F               	retlw	127
  1802  0B4A  34FF               	retlw	255
  1803  0B4B  34C0               	retlw	192
  1804  0B4C  3400               	retlw	0
  1805  0B4D  3407               	retlw	7
  1806  0B4E  34F8               	retlw	248
  1807  0B4F  3400               	retlw	0
  1808  0B50  34FF               	retlw	255
  1809  0B51  34FF               	retlw	255
  1810  0B52  34FF               	retlw	255
  1811  0B53  34FF               	retlw	255
  1812  0B54  34FF               	retlw	255
  1813  0B55  34FF               	retlw	255
  1814  0B56  34FF               	retlw	255
  1815  0B57  34FF               	retlw	255
  1816  0B58  3480               	retlw	128
  1817  0B59  341F               	retlw	31
  1818  0B5A  34FF               	retlw	255
  1819  0B5B  3400               	retlw	0
  1820  0B5C  3400               	retlw	0
  1821  0B5D  3403               	retlw	3
  1822  0B5E  34FC               	retlw	252
  1823  0B5F  3400               	retlw	0
  1824  0B60  347F               	retlw	127
  1825  0B61  34FF               	retlw	255
  1826  0B62  34FF               	retlw	255
  1827  0B63  34FF               	retlw	255
  1828  0B64  34FF               	retlw	255
  1829  0B65  34FF               	retlw	255
  1830  0B66  34FF               	retlw	255
  1831  0B67  34FF               	retlw	255
  1832  0B68  3400               	retlw	0
  1833  0B69  3407               	retlw	7
  1834  0B6A  34FC               	retlw	252
  1835  0B6B  3400               	retlw	0
  1836  0B6C  3400               	retlw	0
  1837  0B6D  3400               	retlw	0
  1838  0B6E  34FE               	retlw	254
  1839  0B6F  3400               	retlw	0
  1840  0B70  347F               	retlw	127
  1841  0B71  34FF               	retlw	255
  1842  0B72  34FF               	retlw	255
  1843  0B73  34FF               	retlw	255
  1844  0B74  34FF               	retlw	255
  1845  0B75  34FF               	retlw	255
  1846  0B76  34FF               	retlw	255
  1847  0B77  34FF               	retlw	255
  1848  0B78  34C0               	retlw	192
  1849  0B79  3401               	retlw	1
  1850  0B7A  34F0               	retlw	240
  1851  0B7B  3400               	retlw	0
  1852  0B7C  3478               	retlw	120
  1853  0B7D  3400               	retlw	0
  1854  0B7E  34FE               	retlw	254
  1855  0B7F  3400               	retlw	0
  1856  0B80  347F               	retlw	127
  1857  0B81  34FF               	retlw	255
  1858  0B82  34FF               	retlw	255
  1859  0B83  34FF               	retlw	255
  1860  0B84  34FF               	retlw	255
  1861  0B85  34FF               	retlw	255
  1862  0B86  34FF               	retlw	255
  1863  0B87  34CF               	retlw	207
  1864  0B88  34E0               	retlw	224
  1865  0B89  3400               	retlw	0
  1866  0B8A  3440               	retlw	64
  1867  0B8B  3401               	retlw	1
  1868  0B8C  34FE               	retlw	254
  1869  0B8D  3400               	retlw	0
  1870  0B8E  34FF               	retlw	255
  1871  0B8F  3400               	retlw	0
  1872  0B90  347F               	retlw	127
  1873  0B91  34FF               	retlw	255
  1874  0B92  34FF               	retlw	255
  1875  0B93  34FF               	retlw	255
  1876  0B94  34FF               	retlw	255
  1877  0B95  34FF               	retlw	255
  1878  0B96  34FF               	retlw	255
  1879  0B97  3481               	retlw	129
  1880  0B98  34FC               	retlw	252
  1881  0B99  3400               	retlw	0
  1882  0B9A  3400               	retlw	0
  1883  0B9B  3407               	retlw	7
  1884  0B9C  34FE               	retlw	254
  1885  0B9D  3400               	retlw	0
  1886  0B9E  34FE               	retlw	254
  1887  0B9F  3400               	retlw	0
  1888  0BA0  347F               	retlw	127
  1889  0BA1  34FF               	retlw	255
  1890  0BA2  34FF               	retlw	255
  1891  0BA3  34FF               	retlw	255
  1892  0BA4  34FF               	retlw	255
  1893  0BA5  34FF               	retlw	255
  1894  0BA6  34FC               	retlw	252
  1895  0BA7  3400               	retlw	0
  1896  0BA8  347F               	retlw	127
  1897  0BA9  3400               	retlw	0
  1898  0BAA  3400               	retlw	0
  1899  0BAB  341F               	retlw	31
  1900  0BAC  34FC               	retlw	252
  1901  0BAD  3400               	retlw	0
  1902  0BAE  34FE               	retlw	254
  1903  0BAF  3400               	retlw	0
  1904  0BB0  347F               	retlw	127
  1905  0BB1  34FF               	retlw	255
  1906  0BB2  34FF               	retlw	255
  1907  0BB3  34FF               	retlw	255
  1908  0BB4  34FF               	retlw	255
  1909  0BB5  34FF               	retlw	255
  1910  0BB6  34F8               	retlw	248
  1911  0BB7  3400               	retlw	0
  1912  0BB8  343F               	retlw	63
  1913  0BB9  34C0               	retlw	192
  1914  0BBA  3400               	retlw	0
  1915  0BBB  347F               	retlw	127
  1916  0BBC  34F0               	retlw	240
  1917  0BBD  3400               	retlw	0
  1918  0BBE  34FE               	retlw	254
  1919  0BBF  3400               	retlw	0
  1920  0BC0  347F               	retlw	127
  1921  0BC1  34FF               	retlw	255
  1922  0BC2  34FF               	retlw	255
  1923  0BC3  34FF               	retlw	255
  1924  0BC4  34FF               	retlw	255
  1925  0BC5  34FF               	retlw	255
  1926  0BC6  34E0               	retlw	224
  1927  0BC7  3400               	retlw	0
  1928  0BC8  34FF               	retlw	255
  1929  0BC9  34E0               	retlw	224
  1930  0BCA  3401               	retlw	1
  1931  0BCB  34FF               	retlw	255
  1932  0BCC  34C0               	retlw	192
  1933  0BCD  3403               	retlw	3
  1934  0BCE  34FC               	retlw	252
  1935  0BCF  3400               	retlw	0
  1936  0BD0  34FF               	retlw	255
  1937  0BD1  34FF               	retlw	255
  1938  0BD2  34FF               	retlw	255
  1939  0BD3  34FF               	retlw	255
  1940  0BD4  34FF               	retlw	255
  1941  0BD5  34FF               	retlw	255
  1942  0BD6  3400               	retlw	0
  1943  0BD7  3403               	retlw	3
  1944  0BD8  34FF               	retlw	255
  1945  0BD9  34FC               	retlw	252
  1946  0BDA  3407               	retlw	7
  1947  0BDB  34DE               	retlw	222
  1948  0BDC  3400               	retlw	0
  1949  0BDD  3407               	retlw	7
  1950  0BDE  34F8               	retlw	248
  1951  0BDF  3400               	retlw	0
  1952  0BE0  34FF               	retlw	255
  1953  0BE1  34FF               	retlw	255
  1954  0BE2  34FF               	retlw	255
  1955  0BE3  34FF               	retlw	255
  1956  0BE4  34FF               	retlw	255
  1957  0BE5  34FC               	retlw	252
  1958  0BE6  3400               	retlw	0
  1959  0BE7  340F               	retlw	15
  1960  0BE8  34FC               	retlw	252
  1961  0BE9  347F               	retlw	127
  1962  0BEA  349F               	retlw	159
  1963  0BEB  3404               	retlw	4
  1964  0BEC  3400               	retlw	0
  1965  0BED  341F               	retlw	31
  1966  0BEE  34F0               	retlw	240
  1967  0BEF  3401               	retlw	1
  1968  0BF0  34FF               	retlw	255
  1969  0BF1  34FF               	retlw	255
  1970  0BF2  34FF               	retlw	255
  1971  0BF3  34FF               	retlw	255
  1972  0BF4  34FF               	retlw	255
  1973  0BF5  34F8               	retlw	248
  1974  0BF6  3400               	retlw	0
  1975  0BF7  343F               	retlw	63
  1976  0BF8  34F0               	retlw	240
  1977  0BF9  341F               	retlw	31
  1978  0BFA  34FC               	retlw	252
  1979  0BFB  3400               	retlw	0
  1980  0BFC  3400               	retlw	0
  1981  0BFD  347F               	retlw	127
  1982  0BFE  34C0               	retlw	192
  1983  0BFF  3403               	retlw	3
  1984  0C00  34FF               	retlw	255
  1985  0C01  34FF               	retlw	255
  1986  0C02  34FF               	retlw	255
  1987  0C03  34FF               	retlw	255
  1988  0C04  34FF               	retlw	255
  1989  0C05  34C0               	retlw	192
  1990  0C06  3400               	retlw	0
  1991  0C07  34FF               	retlw	255
  1992  0C08  34C0               	retlw	192
  1993  0C09  3407               	retlw	7
  1994  0C0A  34F8               	retlw	248
  1995  0C0B  3400               	retlw	0
  1996  0C0C  3401               	retlw	1
  1997  0C0D  34FF               	retlw	255
  1998  0C0E  3480               	retlw	128
  1999  0C0F  3407               	retlw	7
  2000  0C10  34FF               	retlw	255
  2001  0C11  34FF               	retlw	255
  2002  0C12  34FF               	retlw	255
  2003  0C13  34FF               	retlw	255
  2004  0C14  34FF               	retlw	255
  2005  0C15  3400               	retlw	0
  2006  0C16  3407               	retlw	7
  2007  0C17  34FE               	retlw	254
  2008  0C18  3400               	retlw	0
  2009  0C19  3407               	retlw	7
  2010  0C1A  34FC               	retlw	252
  2011  0C1B  3400               	retlw	0
  2012  0C1C  3407               	retlw	7
  2013  0C1D  34FE               	retlw	254
  2014  0C1E  3400               	retlw	0
  2015  0C1F  340F               	retlw	15
  2016  0C20  34FF               	retlw	255
  2017  0C21  34FF               	retlw	255
  2018  0C22  34FF               	retlw	255
  2019  0C23  34FF               	retlw	255
  2020  0C24  34FE               	retlw	254
  2021  0C25  3400               	retlw	0
  2022  0C26  340F               	retlw	15
  2023  0C27  34FC               	retlw	252
  2024  0C28  3400               	retlw	0
  2025  0C29  341F               	retlw	31
  2026  0C2A  34FF               	retlw	255
  2027  0C2B  3400               	retlw	0
  2028  0C2C  343F               	retlw	63
  2029  0C2D  34F0               	retlw	240
  2030  0C2E  3400               	retlw	0
  2031  0C2F  343F               	retlw	63
  2032  0C30  34FF               	retlw	255
  2033  0C31  34FF               	retlw	255
  2034  0C32  34FF               	retlw	255
  2035  0C33  34FF               	retlw	255
  2036  0C34  34F8               	retlw	248
  2037  0C35  3400               	retlw	0
  2038  0C36  343F               	retlw	63
  2039  0C37  34F8               	retlw	248
  2040  0C38  3400               	retlw	0
  2041  0C39  347F               	retlw	127
  2042  0C3A  34FF               	retlw	255
  2043  0C3B  34C0               	retlw	192
  2044  0C3C  347F               	retlw	127
  2045  0C3D  34C0               	retlw	192
  2046  0C3E  3400               	retlw	0
  2047  0C3F  34FF               	retlw	255
  2048  0C40  34FF               	retlw	255
  2049  0C41  34FF               	retlw	255
  2050  0C42  34FF               	retlw	255
  2051  0C43  34FF               	retlw	255
  2052  0C44  34FC               	retlw	252
  2053  0C45  3400               	retlw	0
  2054  0C46  340F               	retlw	15
  2055  0C47  34FC               	retlw	252
  2056  0C48  3400               	retlw	0
  2057  0C49  343F               	retlw	63
  2058  0C4A  34C7               	retlw	199
  2059  0C4B  34F9               	retlw	249
  2060  0C4C  34FF               	retlw	255
  2061  0C4D  3400               	retlw	0
  2062  0C4E  3403               	retlw	3
  2063  0C4F  34FF               	retlw	255
  2064  0C50  34FF               	retlw	255
  2065  0C51  34FF               	retlw	255
  2066  0C52  34FF               	retlw	255
  2067  0C53  34FF               	retlw	255
  2068  0C54  34FF               	retlw	255
  2069  0C55  3480               	retlw	128
  2070  0C56  3403               	retlw	3
  2071  0C57  34FF               	retlw	255
  2072  0C58  3400               	retlw	0
  2073  0C59  340E               	retlw	14
  2074  0C5A  3400               	retlw	0
  2075  0C5B  34FF               	retlw	255
  2076  0C5C  34FC               	retlw	252
  2077  0C5D  3400               	retlw	0
  2078  0C5E  340F               	retlw	15
  2079  0C5F  34FF               	retlw	255
  2080  0C60  34FF               	retlw	255
  2081  0C61  34FF               	retlw	255
  2082  0C62  34FF               	retlw	255
  2083  0C63  34FF               	retlw	255
  2084  0C64  34FF               	retlw	255
  2085  0C65  34C0               	retlw	192
  2086  0C66  3403               	retlw	3
  2087  0C67  34FF               	retlw	255
  2088  0C68  34E0               	retlw	224
  2089  0C69  3400               	retlw	0
  2090  0C6A  3400               	retlw	0
  2091  0C6B  347F               	retlw	127
  2092  0C6C  34F0               	retlw	240
  2093  0C6D  3400               	retlw	0
  2094  0C6E  343F               	retlw	63
  2095  0C6F  34FF               	retlw	255
  2096  0C70  34FF               	retlw	255
  2097  0C71  34FF               	retlw	255
  2098  0C72  34FF               	retlw	255
  2099  0C73  34FF               	retlw	255
  2100  0C74  34FF               	retlw	255
  2101  0C75  34F0               	retlw	240
  2102  0C76  3407               	retlw	7
  2103  0C77  34FF               	retlw	255
  2104  0C78  34F0               	retlw	240
  2105  0C79  3400               	retlw	0
  2106  0C7A  3400               	retlw	0
  2107  0C7B  347F               	retlw	127
  2108  0C7C  34F0               	retlw	240
  2109  0C7D  3400               	retlw	0
  2110  0C7E  34FF               	retlw	255
  2111  0C7F  34FF               	retlw	255
  2112  0C80  34FF               	retlw	255
  2113  0C81  34FF               	retlw	255
  2114  0C82  34FF               	retlw	255
  2115  0C83  34FF               	retlw	255
  2116  0C84  34FF               	retlw	255
  2117  0C85  34E0               	retlw	224
  2118  0C86  341F               	retlw	31
  2119  0C87  34FF               	retlw	255
  2120  0C88  34FE               	retlw	254
  2121  0C89  3400               	retlw	0
  2122  0C8A  3403               	retlw	3
  2123  0C8B  34FF               	retlw	255
  2124  0C8C  34F0               	retlw	240
  2125  0C8D  3403               	retlw	3
  2126  0C8E  34FF               	retlw	255
  2127  0C8F  34FF               	retlw	255
  2128  0C90  34FF               	retlw	255
  2129  0C91  34FF               	retlw	255
  2130  0C92  34FF               	retlw	255
  2131  0C93  34FF               	retlw	255
  2132  0C94  34FF               	retlw	255
  2133  0C95  3480               	retlw	128
  2134  0C96  347F               	retlw	127
  2135  0C97  34C1               	retlw	193
  2136  0C98  34FF               	retlw	255
  2137  0C99  3480               	retlw	128
  2138  0C9A  3407               	retlw	7
  2139  0C9B  34FE               	retlw	254
  2140  0C9C  34FE               	retlw	254
  2141  0C9D  340F               	retlw	15
  2142  0C9E  34FF               	retlw	255
  2143  0C9F  34FF               	retlw	255
  2144  0CA0  34FF               	retlw	255
  2145  0CA1  34FF               	retlw	255
  2146  0CA2  34FF               	retlw	255
  2147  0CA3  34FF               	retlw	255
  2148  0CA4  34FE               	retlw	254
  2149  0CA5  3403               	retlw	3
  2150  0CA6  34FF               	retlw	255
  2151  0CA7  3400               	retlw	0
  2152  0CA8  347F               	retlw	127
  2153  0CA9  34C0               	retlw	192
  2154  0CAA  343F               	retlw	63
  2155  0CAB  34F0               	retlw	240
  2156  0CAC  347F               	retlw	127
  2157  0CAD  34BF               	retlw	191
  2158  0CAE  34FF               	retlw	255
  2159  0CAF  34FF               	retlw	255
  2160  0CB0  34FF               	retlw	255
  2161  0CB1  34FF               	retlw	255
  2162  0CB2  34FF               	retlw	255
  2163  0CB3  34FF               	retlw	255
  2164  0CB4  34F0               	retlw	240
  2165  0CB5  3407               	retlw	7
  2166  0CB6  34FC               	retlw	252
  2167  0CB7  3400               	retlw	0
  2168  0CB8  341F               	retlw	31
  2169  0CB9  34F1               	retlw	241
  2170  0CBA  34FF               	retlw	255
  2171  0CBB  34C0               	retlw	192
  2172  0CBC  341F               	retlw	31
  2173  0CBD  34FF               	retlw	255
  2174  0CBE  34FF               	retlw	255
  2175  0CBF  34FF               	retlw	255
  2176  0CC0  34FF               	retlw	255
  2177  0CC1  34FF               	retlw	255
  2178  0CC2  34FF               	retlw	255
  2179  0CC3  34FF               	retlw	255
  2180  0CC4  34E0               	retlw	224
  2181  0CC5  341F               	retlw	31
  2182  0CC6  34FC               	retlw	252
  2183  0CC7  3400               	retlw	0
  2184  0CC8  341F               	retlw	31
  2185  0CC9  34FF               	retlw	255
  2186  0CCA  34FF               	retlw	255
  2187  0CCB  3400               	retlw	0
  2188  0CCC  340F               	retlw	15
  2189  0CCD  34FF               	retlw	255
  2190  0CCE  34FF               	retlw	255
  2191  0CCF  34FF               	retlw	255
  2192  0CD0  34FF               	retlw	255
  2193  0CD1  34FF               	retlw	255
  2194  0CD2  34FF               	retlw	255
  2195  0CD3  34FF               	retlw	255
  2196  0CD4  3400               	retlw	0
  2197  0CD5  347F               	retlw	127
  2198  0CD6  34FF               	retlw	255
  2199  0CD7  3480               	retlw	128
  2200  0CD8  347F               	retlw	127
  2201  0CD9  34FF               	retlw	255
  2202  0CDA  34FC               	retlw	252
  2203  0CDB  3400               	retlw	0
  2204  0CDC  340F               	retlw	15
  2205  0CDD  34FF               	retlw	255
  2206  0CDE  34FF               	retlw	255
  2207  0CDF  34FF               	retlw	255
  2208  0CE0  34FF               	retlw	255
  2209  0CE1  34FF               	retlw	255
  2210  0CE2  34FF               	retlw	255
  2211  0CE3  34FC               	retlw	252
  2212  0CE4  3403               	retlw	3
  2213  0CE5  34FF               	retlw	255
  2214  0CE6  34FF               	retlw	255
  2215  0CE7  34C1               	retlw	193
  2216  0CE8  34FF               	retlw	255
  2217  0CE9  34FF               	retlw	255
  2218  0CEA  34F0               	retlw	240
  2219  0CEB  3400               	retlw	0
  2220  0CEC  343F               	retlw	63
  2221  0CED  34FF               	retlw	255
  2222  0CEE  34FF               	retlw	255
  2223  0CEF  34FF               	retlw	255
  2224  0CF0  34FF               	retlw	255
  2225  0CF1  34FF               	retlw	255
  2226  0CF2  34FF               	retlw	255
  2227  0CF3  34F8               	retlw	248
  2228  0CF4  3407               	retlw	7
  2229  0CF5  34FF               	retlw	255
  2230  0CF6  34FF               	retlw	255
  2231  0CF7  34FF               	retlw	255
  2232  0CF8  34FC               	retlw	252
  2233  0CF9  343F               	retlw	63
  2234  0CFA  34C0               	retlw	192
  2235  0CFB  3400               	retlw	0
  2236  0CFC  34FF               	retlw	255
  2237  0CFD  34FF               	retlw	255
  2238  0CFE  34FF               	retlw	255
  2239  0CFF  34FF               	retlw	255
  2240  0D00  34FF               	retlw	255
  2241  0D01  34FF               	retlw	255
  2242  0D02  34FF               	retlw	255
  2243  0D03  34E0               	retlw	224
  2244  0D04  341F               	retlw	31
  2245  0D05  34FF               	retlw	255
  2246  0D06  34FF               	retlw	255
  2247  0D07  34FF               	retlw	255
  2248  0D08  34F0               	retlw	240
  2249  0D09  340F               	retlw	15
  2250  0D0A  3400               	retlw	0
  2251  0D0B  3407               	retlw	7
  2252  0D0C  34FF               	retlw	255
  2253  0D0D  34FF               	retlw	255
  2254  0D0E  34FF               	retlw	255
  2255  0D0F  34FF               	retlw	255
  2256  0D10  34FF               	retlw	255
  2257  0D11  34FF               	retlw	255
  2258  0D12  34FF               	retlw	255
  2259  0D13  34E0               	retlw	224
  2260  0D14  34FF               	retlw	255
  2261  0D15  34FF               	retlw	255
  2262  0D16  34FF               	retlw	255
  2263  0D17  34FF               	retlw	255
  2264  0D18  34C0               	retlw	192
  2265  0D19  3400               	retlw	0
  2266  0D1A  3400               	retlw	0
  2267  0D1B  341F               	retlw	31
  2268  0D1C  34FF               	retlw	255
  2269  0D1D  34FF               	retlw	255
  2270  0D1E  34FF               	retlw	255
  2271  0D1F  34FF               	retlw	255
  2272  0D20  34FF               	retlw	255
  2273  0D21  34FF               	retlw	255
  2274  0D22  34FF               	retlw	255
  2275  0D23  34FB               	retlw	251
  2276  0D24  34FF               	retlw	255
  2277  0D25  34FF               	retlw	255
  2278  0D26  34FF               	retlw	255
  2279  0D27  34FF               	retlw	255
  2280  0D28  3400               	retlw	0
  2281  0D29  3400               	retlw	0
  2282  0D2A  3400               	retlw	0
  2283  0D2B  347F               	retlw	127
  2284  0D2C  34FF               	retlw	255
  2285  0D2D  34FF               	retlw	255
  2286  0D2E  34FF               	retlw	255
  2287  0D2F  34FF               	retlw	255
  2288  0D30  34FF               	retlw	255
  2289  0D31  34FF               	retlw	255
  2290  0D32  34FF               	retlw	255
  2291  0D33  34FF               	retlw	255
  2292  0D34  34FF               	retlw	255
  2293  0D35  34FF               	retlw	255
  2294  0D36  34FF               	retlw	255
  2295  0D37  34FC               	retlw	252
  2296  0D38  3400               	retlw	0
  2297  0D39  3400               	retlw	0
  2298  0D3A  3401               	retlw	1
  2299  0D3B  34FF               	retlw	255
  2300  0D3C  34FF               	retlw	255
  2301  0D3D  34FF               	retlw	255
  2302  0D3E  34FF               	retlw	255
  2303  0D3F  34FF               	retlw	255
  2304  0D40  34FF               	retlw	255
  2305  0D41  34FF               	retlw	255
  2306  0D42  34FF               	retlw	255
  2307  0D43  34FF               	retlw	255
  2308  0D44  34FF               	retlw	255
  2309  0D45  34FF               	retlw	255
  2310  0D46  34FF               	retlw	255
  2311  0D47  34F0               	retlw	240
  2312  0D48  340E               	retlw	14
  2313  0D49  3400               	retlw	0
  2314  0D4A  3407               	retlw	7
  2315  0D4B  34FF               	retlw	255
  2316  0D4C  34FF               	retlw	255
  2317  0D4D  34FF               	retlw	255
  2318  0D4E  34FF               	retlw	255
  2319  0D4F  34FF               	retlw	255
  2320  0D50  34FF               	retlw	255
  2321  0D51  34FF               	retlw	255
  2322  0D52  34FF               	retlw	255
  2323  0D53  34FF               	retlw	255
  2324  0D54  34FF               	retlw	255
  2325  0D55  34FF               	retlw	255
  2326  0D56  34FF               	retlw	255
  2327  0D57  34C0               	retlw	192
  2328  0D58  343F               	retlw	63
  2329  0D59  3480               	retlw	128
  2330  0D5A  341F               	retlw	31
  2331  0D5B  34FF               	retlw	255
  2332  0D5C  34FF               	retlw	255
  2333  0D5D  34FF               	retlw	255
  2334  0D5E  34FF               	retlw	255
  2335  0D5F  34FF               	retlw	255
  2336  0D60  34FF               	retlw	255
  2337  0D61  34FF               	retlw	255
  2338  0D62  34FF               	retlw	255
  2339  0D63  34FF               	retlw	255
  2340  0D64  34FF               	retlw	255
  2341  0D65  34FF               	retlw	255
  2342  0D66  34FF               	retlw	255
  2343  0D67  3400               	retlw	0
  2344  0D68  34FF               	retlw	255
  2345  0D69  34E0               	retlw	224
  2346  0D6A  347F               	retlw	127
  2347  0D6B  34FF               	retlw	255
  2348  0D6C  34FF               	retlw	255
  2349  0D6D  34FF               	retlw	255
  2350  0D6E  34FF               	retlw	255
  2351  0D6F  34FF               	retlw	255
  2352  0D70  34FF               	retlw	255
  2353  0D71  34FF               	retlw	255
  2354  0D72  34FF               	retlw	255
  2355  0D73  34FF               	retlw	255
  2356  0D74  34FF               	retlw	255
  2357  0D75  34FF               	retlw	255
  2358  0D76  34FC               	retlw	252
  2359  0D77  3403               	retlw	3
  2360  0D78  34FF               	retlw	255
  2361  0D79  34F9               	retlw	249
  2362  0D7A  34FF               	retlw	255
  2363  0D7B  34FF               	retlw	255
  2364  0D7C  34FF               	retlw	255
  2365  0D7D  34FF               	retlw	255
  2366  0D7E  34FF               	retlw	255
  2367  0D7F  34FF               	retlw	255
  2368  0D80  34FF               	retlw	255
  2369  0D81  34FF               	retlw	255
  2370  0D82  34FF               	retlw	255
  2371  0D83  34FF               	retlw	255
  2372  0D84  34FF               	retlw	255
  2373  0D85  34FF               	retlw	255
  2374  0D86  34F0               	retlw	240
  2375  0D87  340F               	retlw	15
  2376  0D88  34FF               	retlw	255
  2377  0D89  34FF               	retlw	255
  2378  0D8A  34FF               	retlw	255
  2379  0D8B  34FF               	retlw	255
  2380  0D8C  34FF               	retlw	255
  2381  0D8D  34FF               	retlw	255
  2382  0D8E  34FF               	retlw	255
  2383  0D8F  34FF               	retlw	255
  2384  0D90  34FF               	retlw	255
  2385  0D91  34FF               	retlw	255
  2386  0D92  34FF               	retlw	255
  2387  0D93  34FF               	retlw	255
  2388  0D94  34FF               	retlw	255
  2389  0D95  34FF               	retlw	255
  2390  0D96  34C0               	retlw	192
  2391  0D97  343F               	retlw	63
  2392  0D98  34FF               	retlw	255
  2393  0D99  34FF               	retlw	255
  2394  0D9A  34FF               	retlw	255
  2395  0D9B  34FF               	retlw	255
  2396  0D9C  34FF               	retlw	255
  2397  0D9D  34FF               	retlw	255
  2398  0D9E  34FF               	retlw	255
  2399  0D9F  34FF               	retlw	255
  2400  0DA0  34FF               	retlw	255
  2401  0DA1  34FF               	retlw	255
  2402  0DA2  34FF               	retlw	255
  2403  0DA3  34FF               	retlw	255
  2404  0DA4  34FF               	retlw	255
  2405  0DA5  34FF               	retlw	255
  2406  0DA6  3400               	retlw	0
  2407  0DA7  34FF               	retlw	255
  2408  0DA8  34FF               	retlw	255
  2409  0DA9  34FF               	retlw	255
  2410  0DAA  34FF               	retlw	255
  2411  0DAB  34FF               	retlw	255
  2412  0DAC  34FF               	retlw	255
  2413  0DAD  34FF               	retlw	255
  2414  0DAE  34FF               	retlw	255
  2415  0DAF  34FF               	retlw	255
  2416  0DB0  34FF               	retlw	255
  2417  0DB1  34FF               	retlw	255
  2418  0DB2  34FF               	retlw	255
  2419  0DB3  34FF               	retlw	255
  2420  0DB4  34FF               	retlw	255
  2421  0DB5  34FF               	retlw	255
  2422  0DB6  3403               	retlw	3
  2423  0DB7  34FF               	retlw	255
  2424  0DB8  34FF               	retlw	255
  2425  0DB9  34FF               	retlw	255
  2426  0DBA  34FF               	retlw	255
  2427  0DBB  34FF               	retlw	255
  2428  0DBC  34FF               	retlw	255
  2429  0DBD  34FF               	retlw	255
  2430  0DBE  34FF               	retlw	255
  2431  0DBF  34FF               	retlw	255
  2432  0DC0  34FF               	retlw	255
  2433  0DC1  34FF               	retlw	255
  2434  0DC2  34FF               	retlw	255
  2435  0DC3  34FF               	retlw	255
  2436  0DC4  34FF               	retlw	255
  2437  0DC5  34FF               	retlw	255
  2438  0DC6  349F               	retlw	159
  2439  0DC7  34FF               	retlw	255
  2440  0DC8  34FF               	retlw	255
  2441  0DC9  34FF               	retlw	255
  2442  0DCA  34FF               	retlw	255
  2443  0DCB  34FF               	retlw	255
  2444  0DCC  34FF               	retlw	255
  2445  0DCD  34FF               	retlw	255
  2446  0DCE  34FF               	retlw	255
  2447  0DCF  34FF               	retlw	255
  2448  0DD0  34FF               	retlw	255
  2449  0DD1  34FF               	retlw	255
  2450  0DD2  34FF               	retlw	255
  2451  0DD3  34FF               	retlw	255
  2452  0DD4  34FF               	retlw	255
  2453  0DD5  34FF               	retlw	255
  2454  0DD6  34FF               	retlw	255
  2455  0DD7  34FF               	retlw	255
  2456  0DD8  34FF               	retlw	255
  2457  0DD9  34FF               	retlw	255
  2458  0DDA  34FF               	retlw	255
  2459  0DDB  34FF               	retlw	255
  2460  0DDC  34FF               	retlw	255
  2461  0DDD  34FF               	retlw	255
  2462  0DDE  34FF               	retlw	255
  2463  0DDF  34FF               	retlw	255
  2464  0DE0  34FF               	retlw	255
  2465  0DE1  34FF               	retlw	255
  2466  0DE2  34FF               	retlw	255
  2467  0DE3  34FF               	retlw	255
  2468  0DE4  34FF               	retlw	255
  2469  0DE5  34FF               	retlw	255
  2470  0DE6  34FF               	retlw	255
  2471  0DE7  34FF               	retlw	255
  2472  0DE8  34FF               	retlw	255
  2473  0DE9  34FF               	retlw	255
  2474  0DEA  34FF               	retlw	255
  2475  0DEB  34FF               	retlw	255
  2476  0DEC  34FF               	retlw	255
  2477  0DED  34FF               	retlw	255
  2478  0DEE  34FF               	retlw	255
  2479  0DEF  34FF               	retlw	255
  2480  0DF0  34FF               	retlw	255
  2481  0DF1  34FF               	retlw	255
  2482  0DF2  34FF               	retlw	255
  2483  0DF3  34FF               	retlw	255
  2484  0DF4  34FF               	retlw	255
  2485  0DF5  34FF               	retlw	255
  2486  0DF6  34FF               	retlw	255
  2487  0DF7  34FF               	retlw	255
  2488  0DF8  34FF               	retlw	255
  2489  0DF9  34FF               	retlw	255
  2490  0DFA  34FF               	retlw	255
  2491  0DFB  34FF               	retlw	255
  2492  0DFC  34FF               	retlw	255
  2493  0DFD  34FF               	retlw	255
  2494  0DFE  34FF               	retlw	255
  2495  0DFF  34FF               	retlw	255
  2496  0E00  34FF               	retlw	255
  2497  0E01  34FF               	retlw	255
  2498  0E02  34FF               	retlw	255
  2499  0E03  34FF               	retlw	255
  2500  0E04  34FF               	retlw	255
  2501  0E05  34FF               	retlw	255
  2502  0E06  34FF               	retlw	255
  2503  0E07  34FF               	retlw	255
  2504  0E08  34FF               	retlw	255
  2505  0E09  34FF               	retlw	255
  2506  0E0A  34FF               	retlw	255
  2507  0E0B  34FF               	retlw	255
  2508  0E0C  34FF               	retlw	255
  2509  0E0D  34FF               	retlw	255
  2510  0E0E  34FF               	retlw	255
  2511  0E0F  34FF               	retlw	255
  2512  0E10  34FF               	retlw	255
  2513  0E11  34FF               	retlw	255
  2514  0E12  34FF               	retlw	255
  2515  0E13  34FF               	retlw	255
  2516  0E14  34FF               	retlw	255
  2517  0E15  34FF               	retlw	255
  2518  0E16  34FF               	retlw	255
  2519  0E17  34FF               	retlw	255
  2520  0E18  34FF               	retlw	255
  2521  0E19  34FF               	retlw	255
  2522  0E1A  34FF               	retlw	255
  2523  0E1B  34FF               	retlw	255
  2524  0E1C  34FF               	retlw	255
  2525  0E1D  34FF               	retlw	255
  2526  0E1E  34FF               	retlw	255
  2527  0E1F  34FF               	retlw	255
  2528  0E20  34FF               	retlw	255
  2529  0E21  34FF               	retlw	255
  2530  0E22  34FF               	retlw	255
  2531  0E23  34FF               	retlw	255
  2532  0E24  34FF               	retlw	255
  2533  0E25  34FF               	retlw	255
  2534  0E26  34FF               	retlw	255
  2535  0E27  34FF               	retlw	255
  2536  0E28  34FF               	retlw	255
  2537  0E29  34FF               	retlw	255
  2538  0E2A  34FF               	retlw	255
  2539  0E2B  34FF               	retlw	255
  2540  0E2C  34FF               	retlw	255
  2541  0E2D  34FF               	retlw	255
  2542  0E2E  34FF               	retlw	255
  2543  0E2F  34FF               	retlw	255
  2544  0E30  34FF               	retlw	255
  2545  0E31  34FF               	retlw	255
  2546  0E32  34FF               	retlw	255
  2547  0E33  34FF               	retlw	255
  2548  0E34  34FF               	retlw	255
  2549  0E35  34FF               	retlw	255
  2550  0E36  34FF               	retlw	255
  2551  0E37  34FF               	retlw	255
  2552  0E38  34FF               	retlw	255
  2553  0E39  34FF               	retlw	255
  2554  0E3A  34FF               	retlw	255
  2555  0E3B  34FF               	retlw	255
  2556  0E3C  34FF               	retlw	255
  2557  0E3D  34FF               	retlw	255
  2558  0E3E  34FF               	retlw	255
  2559  0E3F  34FF               	retlw	255
  2560  0E40  34FF               	retlw	255
  2561  0E41  34FF               	retlw	255
  2562  0E42                     __end_of_black:	
  2563                           
  2564                           	psect	stringtext2
  2565  1800                     __pstringtext2:	
  2566  1800                     _Alpha1:	
  2567  1800  3400               	retlw	0
  2568  1801  3400               	retlw	0
  2569  1802  3400               	retlw	0
  2570  1803  3400               	retlw	0
  2571  1804  3400               	retlw	0
  2572  1805  3400               	retlw	0
  2573  1806  3400               	retlw	0
  2574  1807  345F               	retlw	95
  2575  1808  3400               	retlw	0
  2576  1809  3400               	retlw	0
  2577  180A  3400               	retlw	0
  2578  180B  3407               	retlw	7
  2579  180C  3400               	retlw	0
  2580  180D  3407               	retlw	7
  2581  180E  3400               	retlw	0
  2582  180F  3414               	retlw	20
  2583  1810  347F               	retlw	127
  2584  1811  3414               	retlw	20
  2585  1812  347F               	retlw	127
  2586  1813  3414               	retlw	20
  2587  1814  3424               	retlw	36
  2588  1815  342A               	retlw	42
  2589  1816  347F               	retlw	127
  2590  1817  342A               	retlw	42
  2591  1818  3412               	retlw	18
  2592  1819  3423               	retlw	35
  2593  181A  3413               	retlw	19
  2594  181B  3408               	retlw	8
  2595  181C  3464               	retlw	100
  2596  181D  3462               	retlw	98
  2597  181E  3436               	retlw	54
  2598  181F  3449               	retlw	73
  2599  1820  3455               	retlw	85
  2600  1821  3422               	retlw	34
  2601  1822  3450               	retlw	80
  2602  1823  3400               	retlw	0
  2603  1824  3405               	retlw	5
  2604  1825  3403               	retlw	3
  2605  1826  3400               	retlw	0
  2606  1827  3400               	retlw	0
  2607  1828  3400               	retlw	0
  2608  1829  341C               	retlw	28
  2609  182A  3422               	retlw	34
  2610  182B  3441               	retlw	65
  2611  182C  3400               	retlw	0
  2612  182D  3400               	retlw	0
  2613  182E  3441               	retlw	65
  2614  182F  3422               	retlw	34
  2615  1830  341C               	retlw	28
  2616  1831  3400               	retlw	0
  2617  1832  3414               	retlw	20
  2618  1833  3408               	retlw	8
  2619  1834  343E               	retlw	62
  2620  1835  3408               	retlw	8
  2621  1836  3414               	retlw	20
  2622  1837  3408               	retlw	8
  2623  1838  3408               	retlw	8
  2624  1839  343E               	retlw	62
  2625  183A  3408               	retlw	8
  2626  183B  3408               	retlw	8
  2627  183C  3400               	retlw	0
  2628  183D  3450               	retlw	80
  2629  183E  3430               	retlw	48
  2630  183F  3400               	retlw	0
  2631  1840  3400               	retlw	0
  2632  1841  3408               	retlw	8
  2633  1842  3408               	retlw	8
  2634  1843  3408               	retlw	8
  2635  1844  3408               	retlw	8
  2636  1845  3408               	retlw	8
  2637  1846  3400               	retlw	0
  2638  1847  3460               	retlw	96
  2639  1848  3460               	retlw	96
  2640  1849  3400               	retlw	0
  2641  184A  3400               	retlw	0
  2642  184B  3420               	retlw	32
  2643  184C  3410               	retlw	16
  2644  184D  3408               	retlw	8
  2645  184E  3404               	retlw	4
  2646  184F  3402               	retlw	2
  2647  1850  343E               	retlw	62
  2648  1851  3451               	retlw	81
  2649  1852  3449               	retlw	73
  2650  1853  3445               	retlw	69
  2651  1854  343E               	retlw	62
  2652  1855  3400               	retlw	0
  2653  1856  3442               	retlw	66
  2654  1857  347F               	retlw	127
  2655  1858  3440               	retlw	64
  2656  1859  3400               	retlw	0
  2657  185A  3442               	retlw	66
  2658  185B  3461               	retlw	97
  2659  185C  3451               	retlw	81
  2660  185D  3449               	retlw	73
  2661  185E  3446               	retlw	70
  2662  185F  3421               	retlw	33
  2663  1860  3441               	retlw	65
  2664  1861  3445               	retlw	69
  2665  1862  344B               	retlw	75
  2666  1863  3431               	retlw	49
  2667  1864  3418               	retlw	24
  2668  1865  3414               	retlw	20
  2669  1866  3412               	retlw	18
  2670  1867  347F               	retlw	127
  2671  1868  3410               	retlw	16
  2672  1869  3427               	retlw	39
  2673  186A  3445               	retlw	69
  2674  186B  3445               	retlw	69
  2675  186C  3445               	retlw	69
  2676  186D  3439               	retlw	57
  2677  186E  343C               	retlw	60
  2678  186F  344A               	retlw	74
  2679  1870  3449               	retlw	73
  2680  1871  3449               	retlw	73
  2681  1872  3430               	retlw	48
  2682  1873  3401               	retlw	1
  2683  1874  3471               	retlw	113
  2684  1875  3409               	retlw	9
  2685  1876  3405               	retlw	5
  2686  1877  3403               	retlw	3
  2687  1878  3436               	retlw	54
  2688  1879  3449               	retlw	73
  2689  187A  3449               	retlw	73
  2690  187B  3449               	retlw	73
  2691  187C  3436               	retlw	54
  2692  187D  3406               	retlw	6
  2693  187E  3449               	retlw	73
  2694  187F  3449               	retlw	73
  2695  1880  3429               	retlw	41
  2696  1881  341E               	retlw	30
  2697  1882  3400               	retlw	0
  2698  1883  3436               	retlw	54
  2699  1884  3436               	retlw	54
  2700  1885  3400               	retlw	0
  2701  1886  3400               	retlw	0
  2702  1887  3400               	retlw	0
  2703  1888  3456               	retlw	86
  2704  1889  3436               	retlw	54
  2705  188A  3400               	retlw	0
  2706  188B  3400               	retlw	0
  2707  188C  3408               	retlw	8
  2708  188D  3414               	retlw	20
  2709  188E  3422               	retlw	34
  2710  188F  3441               	retlw	65
  2711  1890  3400               	retlw	0
  2712  1891  3414               	retlw	20
  2713  1892  3414               	retlw	20
  2714  1893  3414               	retlw	20
  2715  1894  3414               	retlw	20
  2716  1895  3414               	retlw	20
  2717  1896  3400               	retlw	0
  2718  1897  3441               	retlw	65
  2719  1898  3422               	retlw	34
  2720  1899  3414               	retlw	20
  2721  189A  3408               	retlw	8
  2722  189B  3402               	retlw	2
  2723  189C  3401               	retlw	1
  2724  189D  3451               	retlw	81
  2725  189E  3409               	retlw	9
  2726  189F  3406               	retlw	6
  2727  18A0  3432               	retlw	50
  2728  18A1  3449               	retlw	73
  2729  18A2  3479               	retlw	121
  2730  18A3  3441               	retlw	65
  2731  18A4  343E               	retlw	62
  2732  18A5  347E               	retlw	126
  2733  18A6  3411               	retlw	17
  2734  18A7  3411               	retlw	17
  2735  18A8  3411               	retlw	17
  2736  18A9  347E               	retlw	126
  2737  18AA  347F               	retlw	127
  2738  18AB  3449               	retlw	73
  2739  18AC  3449               	retlw	73
  2740  18AD  3449               	retlw	73
  2741  18AE  3436               	retlw	54
  2742  18AF  343E               	retlw	62
  2743  18B0  3441               	retlw	65
  2744  18B1  3441               	retlw	65
  2745  18B2  3441               	retlw	65
  2746  18B3  3422               	retlw	34
  2747  18B4  347F               	retlw	127
  2748  18B5  3441               	retlw	65
  2749  18B6  3441               	retlw	65
  2750  18B7  3422               	retlw	34
  2751  18B8  341C               	retlw	28
  2752  18B9  347F               	retlw	127
  2753  18BA  3449               	retlw	73
  2754  18BB  3449               	retlw	73
  2755  18BC  3449               	retlw	73
  2756  18BD  3441               	retlw	65
  2757  18BE  347F               	retlw	127
  2758  18BF  3409               	retlw	9
  2759  18C0  3409               	retlw	9
  2760  18C1  3409               	retlw	9
  2761  18C2  3401               	retlw	1
  2762  18C3  343E               	retlw	62
  2763  18C4  3441               	retlw	65
  2764  18C5  3449               	retlw	73
  2765  18C6  3449               	retlw	73
  2766  18C7  347A               	retlw	122
  2767  18C8  347F               	retlw	127
  2768  18C9  3408               	retlw	8
  2769  18CA  3408               	retlw	8
  2770  18CB  3408               	retlw	8
  2771  18CC  347F               	retlw	127
  2772  18CD  3400               	retlw	0
  2773  18CE  3441               	retlw	65
  2774  18CF  347F               	retlw	127
  2775  18D0  3441               	retlw	65
  2776  18D1  3400               	retlw	0
  2777  18D2  3420               	retlw	32
  2778  18D3  3440               	retlw	64
  2779  18D4  3441               	retlw	65
  2780  18D5  343F               	retlw	63
  2781  18D6  3401               	retlw	1
  2782  18D7  347F               	retlw	127
  2783  18D8  3408               	retlw	8
  2784  18D9  3414               	retlw	20
  2785  18DA  3422               	retlw	34
  2786  18DB  3441               	retlw	65
  2787  18DC  347F               	retlw	127
  2788  18DD  3440               	retlw	64
  2789  18DE  3440               	retlw	64
  2790  18DF  3440               	retlw	64
  2791  18E0  3440               	retlw	64
  2792  18E1  347F               	retlw	127
  2793  18E2  3402               	retlw	2
  2794  18E3  340C               	retlw	12
  2795  18E4  3402               	retlw	2
  2796  18E5  347F               	retlw	127
  2797  18E6  347F               	retlw	127
  2798  18E7  3404               	retlw	4
  2799  18E8  3408               	retlw	8
  2800  18E9  3410               	retlw	16
  2801  18EA  347F               	retlw	127
  2802  18EB  343E               	retlw	62
  2803  18EC  3441               	retlw	65
  2804  18ED  3441               	retlw	65
  2805  18EE  3441               	retlw	65
  2806  18EF  343E               	retlw	62
  2807  18F0  347F               	retlw	127
  2808  18F1  3409               	retlw	9
  2809  18F2  3409               	retlw	9
  2810  18F3  3409               	retlw	9
  2811  18F4  3406               	retlw	6
  2812  18F5  343E               	retlw	62
  2813  18F6  3441               	retlw	65
  2814  18F7  3451               	retlw	81
  2815  18F8  3421               	retlw	33
  2816  18F9  345E               	retlw	94
  2817  18FA                     __end_of_Alpha1:	
  2818                           
  2819                           	psect	stringtext3
  2820  18FA                     __pstringtext3:	
  2821  18FA                     _Alpha2:	
  2822  18FA  347F               	retlw	127
  2823  18FB  3409               	retlw	9
  2824  18FC  3419               	retlw	25
  2825  18FD  3429               	retlw	41
  2826  18FE  3446               	retlw	70
  2827  18FF  3446               	retlw	70
  2828  1900  3449               	retlw	73
  2829  1901  3449               	retlw	73
  2830  1902  3449               	retlw	73
  2831  1903  3431               	retlw	49
  2832  1904  3401               	retlw	1
  2833  1905  3401               	retlw	1
  2834  1906  347F               	retlw	127
  2835  1907  3401               	retlw	1
  2836  1908  3401               	retlw	1
  2837  1909  343F               	retlw	63
  2838  190A  3440               	retlw	64
  2839  190B  3440               	retlw	64
  2840  190C  3440               	retlw	64
  2841  190D  343F               	retlw	63
  2842  190E  341F               	retlw	31
  2843  190F  3420               	retlw	32
  2844  1910  3440               	retlw	64
  2845  1911  3420               	retlw	32
  2846  1912  341F               	retlw	31
  2847  1913  343F               	retlw	63
  2848  1914  3440               	retlw	64
  2849  1915  3438               	retlw	56
  2850  1916  3440               	retlw	64
  2851  1917  343F               	retlw	63
  2852  1918  3463               	retlw	99
  2853  1919  3414               	retlw	20
  2854  191A  3408               	retlw	8
  2855  191B  3414               	retlw	20
  2856  191C  3463               	retlw	99
  2857  191D  3407               	retlw	7
  2858  191E  3408               	retlw	8
  2859  191F  3470               	retlw	112
  2860  1920  3408               	retlw	8
  2861  1921  3407               	retlw	7
  2862  1922  3461               	retlw	97
  2863  1923  3451               	retlw	81
  2864  1924  3449               	retlw	73
  2865  1925  3445               	retlw	69
  2866  1926  3443               	retlw	67
  2867  1927  3400               	retlw	0
  2868  1928  347F               	retlw	127
  2869  1929  3441               	retlw	65
  2870  192A  3441               	retlw	65
  2871  192B  3400               	retlw	0
  2872  192C  3402               	retlw	2
  2873  192D  3404               	retlw	4
  2874  192E  3408               	retlw	8
  2875  192F  3410               	retlw	16
  2876  1930  3420               	retlw	32
  2877  1931  3400               	retlw	0
  2878  1932  3441               	retlw	65
  2879  1933  3441               	retlw	65
  2880  1934  347F               	retlw	127
  2881  1935  3400               	retlw	0
  2882  1936  3404               	retlw	4
  2883  1937  3402               	retlw	2
  2884  1938  3401               	retlw	1
  2885  1939  3402               	retlw	2
  2886  193A  3404               	retlw	4
  2887  193B  3440               	retlw	64
  2888  193C  3440               	retlw	64
  2889  193D  3440               	retlw	64
  2890  193E  3440               	retlw	64
  2891  193F  3440               	retlw	64
  2892  1940  3400               	retlw	0
  2893  1941  3401               	retlw	1
  2894  1942  3402               	retlw	2
  2895  1943  3404               	retlw	4
  2896  1944  3400               	retlw	0
  2897  1945  3420               	retlw	32
  2898  1946  3454               	retlw	84
  2899  1947  3454               	retlw	84
  2900  1948  3454               	retlw	84
  2901  1949  3478               	retlw	120
  2902  194A  347F               	retlw	127
  2903  194B  3448               	retlw	72
  2904  194C  3444               	retlw	68
  2905  194D  3444               	retlw	68
  2906  194E  3438               	retlw	56
  2907  194F  3438               	retlw	56
  2908  1950  3444               	retlw	68
  2909  1951  3444               	retlw	68
  2910  1952  3444               	retlw	68
  2911  1953  3420               	retlw	32
  2912  1954  3438               	retlw	56
  2913  1955  3444               	retlw	68
  2914  1956  3444               	retlw	68
  2915  1957  3448               	retlw	72
  2916  1958  347F               	retlw	127
  2917  1959  3438               	retlw	56
  2918  195A  3454               	retlw	84
  2919  195B  3454               	retlw	84
  2920  195C  3454               	retlw	84
  2921  195D  3418               	retlw	24
  2922  195E  3408               	retlw	8
  2923  195F  347E               	retlw	126
  2924  1960  3409               	retlw	9
  2925  1961  3401               	retlw	1
  2926  1962  3402               	retlw	2
  2927  1963  340C               	retlw	12
  2928  1964  3452               	retlw	82
  2929  1965  3452               	retlw	82
  2930  1966  3452               	retlw	82
  2931  1967  343E               	retlw	62
  2932  1968  347F               	retlw	127
  2933  1969  3408               	retlw	8
  2934  196A  3404               	retlw	4
  2935  196B  3404               	retlw	4
  2936  196C  3478               	retlw	120
  2937  196D  3400               	retlw	0
  2938  196E  3444               	retlw	68
  2939  196F  347D               	retlw	125
  2940  1970  3440               	retlw	64
  2941  1971  3400               	retlw	0
  2942  1972  3420               	retlw	32
  2943  1973  3440               	retlw	64
  2944  1974  3444               	retlw	68
  2945  1975  343D               	retlw	61
  2946  1976  3400               	retlw	0
  2947  1977  347F               	retlw	127
  2948  1978  3410               	retlw	16
  2949  1979  3428               	retlw	40
  2950  197A  3444               	retlw	68
  2951  197B  3400               	retlw	0
  2952  197C  3400               	retlw	0
  2953  197D  3441               	retlw	65
  2954  197E  347F               	retlw	127
  2955  197F  3440               	retlw	64
  2956  1980  3400               	retlw	0
  2957  1981  347C               	retlw	124
  2958  1982  3404               	retlw	4
  2959  1983  3418               	retlw	24
  2960  1984  3404               	retlw	4
  2961  1985  3478               	retlw	120
  2962  1986  347C               	retlw	124
  2963  1987  3408               	retlw	8
  2964  1988  3404               	retlw	4
  2965  1989  3404               	retlw	4
  2966  198A  3478               	retlw	120
  2967  198B  3438               	retlw	56
  2968  198C  3444               	retlw	68
  2969  198D  3444               	retlw	68
  2970  198E  3444               	retlw	68
  2971  198F  3438               	retlw	56
  2972  1990  347C               	retlw	124
  2973  1991  3414               	retlw	20
  2974  1992  3414               	retlw	20
  2975  1993  3414               	retlw	20
  2976  1994  3408               	retlw	8
  2977  1995  3408               	retlw	8
  2978  1996  3414               	retlw	20
  2979  1997  3414               	retlw	20
  2980  1998  3418               	retlw	24
  2981  1999  347C               	retlw	124
  2982  199A  347C               	retlw	124
  2983  199B  3408               	retlw	8
  2984  199C  3404               	retlw	4
  2985  199D  3404               	retlw	4
  2986  199E  3408               	retlw	8
  2987  199F  3448               	retlw	72
  2988  19A0  3454               	retlw	84
  2989  19A1  3454               	retlw	84
  2990  19A2  3454               	retlw	84
  2991  19A3  3420               	retlw	32
  2992  19A4  3404               	retlw	4
  2993  19A5  343F               	retlw	63
  2994  19A6  3444               	retlw	68
  2995  19A7  3440               	retlw	64
  2996  19A8  3420               	retlw	32
  2997  19A9  343C               	retlw	60
  2998  19AA  3440               	retlw	64
  2999  19AB  3440               	retlw	64
  3000  19AC  3420               	retlw	32
  3001  19AD  347C               	retlw	124
  3002  19AE  341C               	retlw	28
  3003  19AF  3420               	retlw	32
  3004  19B0  3440               	retlw	64
  3005  19B1  3420               	retlw	32
  3006  19B2  341C               	retlw	28
  3007  19B3  343C               	retlw	60
  3008  19B4  3440               	retlw	64
  3009  19B5  3430               	retlw	48
  3010  19B6  3440               	retlw	64
  3011  19B7  343C               	retlw	60
  3012  19B8  3444               	retlw	68
  3013  19B9  3428               	retlw	40
  3014  19BA  3410               	retlw	16
  3015  19BB  3428               	retlw	40
  3016  19BC  3444               	retlw	68
  3017  19BD  340C               	retlw	12
  3018  19BE  3450               	retlw	80
  3019  19BF  3450               	retlw	80
  3020  19C0  3450               	retlw	80
  3021  19C1  343C               	retlw	60
  3022  19C2  3444               	retlw	68
  3023  19C3  3464               	retlw	100
  3024  19C4  3454               	retlw	84
  3025  19C5  344C               	retlw	76
  3026  19C6  3444               	retlw	68
  3027  19C7  3400               	retlw	0
  3028  19C8  3408               	retlw	8
  3029  19C9  3436               	retlw	54
  3030  19CA  3441               	retlw	65
  3031  19CB  3400               	retlw	0
  3032  19CC  3400               	retlw	0
  3033  19CD  3400               	retlw	0
  3034  19CE  347F               	retlw	127
  3035  19CF  3400               	retlw	0
  3036  19D0  3400               	retlw	0
  3037  19D1  3400               	retlw	0
  3038  19D2  3441               	retlw	65
  3039  19D3  3436               	retlw	54
  3040  19D4  3408               	retlw	8
  3041  19D5  3400               	retlw	0
  3042  19D6  3410               	retlw	16
  3043  19D7  3408               	retlw	8
  3044  19D8  3408               	retlw	8
  3045  19D9  3410               	retlw	16
  3046  19DA  3408               	retlw	8
  3047  19DB  3478               	retlw	120
  3048  19DC  3446               	retlw	70
  3049  19DD  3441               	retlw	65
  3050  19DE  3446               	retlw	70
  3051  19DF  3478               	retlw	120
  3052  19E0                     __end_of_Alpha2:	
  3053                           
  3054                           	psect	stringtext4
  3055  2000                     __pstringtext4:	
  3056  2000                     _dpowers:	
  3057  2000  3401               	retlw	1
  3058  2001  3400               	retlw	0
  3059  2002  3400               	retlw	0
  3060  2003  3400               	retlw	0
  3061  2004  340A               	retlw	10
  3062  2005  3400               	retlw	0
  3063  2006  3400               	retlw	0
  3064  2007  3400               	retlw	0
  3065  2008  3464               	retlw	100
  3066  2009  3400               	retlw	0
  3067  200A  3400               	retlw	0
  3068  200B  3400               	retlw	0
  3069  200C  34E8               	retlw	232
  3070  200D  3403               	retlw	3
  3071  200E  3400               	retlw	0
  3072  200F  3400               	retlw	0
  3073  2010  3410               	retlw	16
  3074  2011  3427               	retlw	39
  3075  2012  3400               	retlw	0
  3076  2013  3400               	retlw	0
  3077  2014  34A0               	retlw	160
  3078  2015  3486               	retlw	134
  3079  2016  3401               	retlw	1
  3080  2017  3400               	retlw	0
  3081  2018  3440               	retlw	64
  3082  2019  3442               	retlw	66
  3083  201A  340F               	retlw	15
  3084  201B  3400               	retlw	0
  3085  201C  3480               	retlw	128
  3086  201D  3496               	retlw	150
  3087  201E  3498               	retlw	152
  3088  201F  3400               	retlw	0
  3089  2020  3400               	retlw	0
  3090  2021  34E1               	retlw	225
  3091  2022  34F5               	retlw	245
  3092  2023  3405               	retlw	5
  3093  2024  3400               	retlw	0
  3094  2025  34CA               	retlw	202
  3095  2026  349A               	retlw	154
  3096  2027  343B               	retlw	59
  3097  2028                     __end_of_dpowers:	
  3098                           
  3099                           	psect	stringtext5
  3100  2028                     __pstringtext5:	
  3101  2028                     __powers_:	
  3102  2028  3400               	retlw	0
  3103  2029  3480               	retlw	128
  3104  202A  343F               	retlw	63
  3105  202B  3400               	retlw	0
  3106  202C  3420               	retlw	32
  3107  202D  3441               	retlw	65
  3108  202E  3400               	retlw	0
  3109  202F  34C8               	retlw	200
  3110  2030  3442               	retlw	66
  3111  2031  3400               	retlw	0
  3112  2032  347A               	retlw	122
  3113  2033  3444               	retlw	68
  3114  2034  3440               	retlw	64
  3115  2035  341C               	retlw	28
  3116  2036  3446               	retlw	70
  3117  2037  3450               	retlw	80
  3118  2038  34C3               	retlw	195
  3119  2039  3447               	retlw	71
  3120  203A  3424               	retlw	36
  3121  203B  3474               	retlw	116
  3122  203C  3449               	retlw	73
  3123  203D  3497               	retlw	151
  3124  203E  3418               	retlw	24
  3125  203F  344B               	retlw	75
  3126  2040  34BC               	retlw	188
  3127  2041  34BE               	retlw	190
  3128  2042  344C               	retlw	76
  3129  2043  346B               	retlw	107
  3130  2044  346E               	retlw	110
  3131  2045  344E               	retlw	78
  3132  2046  3403               	retlw	3
  3133  2047  3415               	retlw	21
  3134  2048  3450               	retlw	80
  3135  2049  3479               	retlw	121
  3136  204A  34AD               	retlw	173
  3137  204B  3460               	retlw	96
  3138  204C  34F3               	retlw	243
  3139  204D  3449               	retlw	73
  3140  204E  3471               	retlw	113
  3141  204F                     __end_of__powers_:	
  3142                           
  3143                           	psect	stringtext6
  3144  204F                     __pstringtext6:	
  3145  204F                     __npowers_:	
  3146  204F  3400               	retlw	0
  3147  2050  3480               	retlw	128
  3148  2051  343F               	retlw	63
  3149  2052  34CD               	retlw	205
  3150  2053  34CC               	retlw	204
  3151  2054  343D               	retlw	61
  3152  2055  34D7               	retlw	215
  3153  2056  3423               	retlw	35
  3154  2057  343C               	retlw	60
  3155  2058  3412               	retlw	18
  3156  2059  3483               	retlw	131
  3157  205A  343A               	retlw	58
  3158  205B  34B7               	retlw	183
  3159  205C  34D1               	retlw	209
  3160  205D  3438               	retlw	56
  3161  205E  34C6               	retlw	198
  3162  205F  3427               	retlw	39
  3163  2060  3437               	retlw	55
  3164  2061  3438               	retlw	56
  3165  2062  3486               	retlw	134
  3166  2063  3435               	retlw	53
  3167  2064  34C0               	retlw	192
  3168  2065  34D6               	retlw	214
  3169  2066  3433               	retlw	51
  3170  2067  34CC               	retlw	204
  3171  2068  342B               	retlw	43
  3172  2069  3432               	retlw	50
  3173  206A  3470               	retlw	112
  3174  206B  3489               	retlw	137
  3175  206C  3430               	retlw	48
  3176  206D  34E7               	retlw	231
  3177  206E  34DB               	retlw	219
  3178  206F  342E               	retlw	46
  3179  2070  34E5               	retlw	229
  3180  2071  343C               	retlw	60
  3181  2072  341E               	retlw	30
  3182  2073  3442               	retlw	66
  3183  2074  34A2               	retlw	162
  3184  2075  340D               	retlw	13
  3185  2076                     __end_of__npowers_:	
  3186                           
  3187                           	psect	stringtext7
  3188  0631                     __pstringtext7:	
  3189  0631                     _des:	
  3190  0631  34FF               	retlw	255
  3191  0632  34F1               	retlw	241
  3192  0633  34FF               	retlw	255
  3193  0634  34FF               	retlw	255
  3194  0635  34FF               	retlw	255
  3195  0636  34FF               	retlw	255
  3196  0637  34FF               	retlw	255
  3197  0638  34FF               	retlw	255
  3198  0639  34FF               	retlw	255
  3199  063A  34FF               	retlw	255
  3200  063B  34FF               	retlw	255
  3201  063C  34FF               	retlw	255
  3202  063D  34FF               	retlw	255
  3203  063E  34FF               	retlw	255
  3204  063F  34FF               	retlw	255
  3205  0640  34FF               	retlw	255
  3206  0641  34FF               	retlw	255
  3207  0642  34E0               	retlw	224
  3208  0643  34FF               	retlw	255
  3209  0644  34FF               	retlw	255
  3210  0645  34FF               	retlw	255
  3211  0646  34FF               	retlw	255
  3212  0647  34FF               	retlw	255
  3213  0648  34FF               	retlw	255
  3214  0649  34FF               	retlw	255
  3215  064A  34FF               	retlw	255
  3216  064B  34FF               	retlw	255
  3217  064C  34FF               	retlw	255
  3218  064D  34FF               	retlw	255
  3219  064E  34FF               	retlw	255
  3220  064F  34FF               	retlw	255
  3221  0650  34FF               	retlw	255
  3222  0651  34FF               	retlw	255
  3223  0652  34F0               	retlw	240
  3224  0653  34FF               	retlw	255
  3225  0654  34FF               	retlw	255
  3226  0655  34FF               	retlw	255
  3227  0656  34FF               	retlw	255
  3228  0657  34FF               	retlw	255
  3229  0658  34FF               	retlw	255
  3230  0659  34FF               	retlw	255
  3231  065A  34FF               	retlw	255
  3232  065B  34FF               	retlw	255
  3233  065C  34FF               	retlw	255
  3234  065D  34FF               	retlw	255
  3235  065E  34FF               	retlw	255
  3236  065F  348F               	retlw	143
  3237  0660  34FF               	retlw	255
  3238  0661  34FF               	retlw	255
  3239  0662  34FF               	retlw	255
  3240  0663  34FF               	retlw	255
  3241  0664  34FF               	retlw	255
  3242  0665  34FF               	retlw	255
  3243  0666  34FF               	retlw	255
  3244  0667  34FF               	retlw	255
  3245  0668  34FF               	retlw	255
  3246  0669  34FF               	retlw	255
  3247  066A  34FF               	retlw	255
  3248  066B  34FF               	retlw	255
  3249  066C  34FF               	retlw	255
  3250  066D  34FF               	retlw	255
  3251  066E  34FF               	retlw	255
  3252  066F  3407               	retlw	7
  3253  0670  34FF               	retlw	255
  3254  0671  34FF               	retlw	255
  3255  0672  34FD               	retlw	253
  3256  0673  34FF               	retlw	255
  3257  0674  34FF               	retlw	255
  3258  0675  34FF               	retlw	255
  3259  0676  34FF               	retlw	255
  3260  0677  34FF               	retlw	255
  3261  0678  34FF               	retlw	255
  3262  0679  34FF               	retlw	255
  3263  067A  34FF               	retlw	255
  3264  067B  34FF               	retlw	255
  3265  067C  34FF               	retlw	255
  3266  067D  34FF               	retlw	255
  3267  067E  34FF               	retlw	255
  3268  067F  3487               	retlw	135
  3269  0680  34FF               	retlw	255
  3270  0681  34FF               	retlw	255
  3271  0682  34F9               	retlw	249
  3272  0683  34FF               	retlw	255
  3273  0684  34FF               	retlw	255
  3274  0685  34F9               	retlw	249
  3275  0686  34FF               	retlw	255
  3276  0687  34FF               	retlw	255
  3277  0688  34FF               	retlw	255
  3278  0689  34FF               	retlw	255
  3279  068A  34FF               	retlw	255
  3280  068B  34FF               	retlw	255
  3281  068C  34FF               	retlw	255
  3282  068D  34FF               	retlw	255
  3283  068E  34CF               	retlw	207
  3284  068F  34FF               	retlw	255
  3285  0690  34FF               	retlw	255
  3286  0691  34FF               	retlw	255
  3287  0692  34F0               	retlw	240
  3288  0693  34F8               	retlw	248
  3289  0694  347F               	retlw	127
  3290  0695  34F0               	retlw	240
  3291  0696  34FF               	retlw	255
  3292  0697  34CF               	retlw	207
  3293  0698  34C3               	retlw	195
  3294  0699  34FE               	retlw	254
  3295  069A  340F               	retlw	15
  3296  069B  34FF               	retlw	255
  3297  069C  3483               	retlw	131
  3298  069D  34FF               	retlw	255
  3299  069E  3403               	retlw	3
  3300  069F  34E7               	retlw	231
  3301  06A0  34FF               	retlw	255
  3302  06A1  34FF               	retlw	255
  3303  06A2  34C0               	retlw	192
  3304  06A3  34F0               	retlw	240
  3305  06A4  341F               	retlw	31
  3306  06A5  34E0               	retlw	224
  3307  06A6  3467               	retlw	103
  3308  06A7  348F               	retlw	143
  3309  06A8  3483               	retlw	131
  3310  06A9  34F8               	retlw	248
  3311  06AA  3407               	retlw	7
  3312  06AB  349F               	retlw	159
  3313  06AC  3403               	retlw	3
  3314  06AD  34CE               	retlw	206
  3315  06AE  3403               	retlw	3
  3316  06AF  34C7               	retlw	199
  3317  06B0  34FF               	retlw	255
  3318  06B1  34FF               	retlw	255
  3319  06B2  3480               	retlw	128
  3320  06B3  34F8               	retlw	248
  3321  06B4  3403               	retlw	3
  3322  06B5  34C4               	retlw	196
  3323  06B6  3447               	retlw	71
  3324  06B7  3487               	retlw	135
  3325  06B8  3483               	retlw	131
  3326  06B9  34F0               	retlw	240
  3327  06BA  3407               	retlw	7
  3328  06BB  341F               	retlw	31
  3329  06BC  3403               	retlw	3
  3330  06BD  34C8               	retlw	200
  3331  06BE  3461               	retlw	97
  3332  06BF  34C3               	retlw	195
  3333  06C0  34FF               	retlw	255
  3334  06C1  34FF               	retlw	255
  3335  06C2  3480               	retlw	128
  3336  06C3  3400               	retlw	0
  3337  06C4  3400               	retlw	0
  3338  06C5  3400               	retlw	0
  3339  06C6  3440               	retlw	64
  3340  06C7  340F               	retlw	15
  3341  06C8  3481               	retlw	129
  3342  06C9  34E0               	retlw	224
  3343  06CA  3400               	retlw	0
  3344  06CB  3400               	retlw	0
  3345  06CC  3400               	retlw	0
  3346  06CD  3400               	retlw	0
  3347  06CE  3400               	retlw	0
  3348  06CF  3407               	retlw	7
  3349  06D0  34FF               	retlw	255
  3350  06D1  34FF               	retlw	255
  3351  06D2  3480               	retlw	128
  3352  06D3  3400               	retlw	0
  3353  06D4  3400               	retlw	0
  3354  06D5  3400               	retlw	0
  3355  06D6  3460               	retlw	96
  3356  06D7  340F               	retlw	15
  3357  06D8  3481               	retlw	129
  3358  06D9  34E4               	retlw	228
  3359  06DA  3400               	retlw	0
  3360  06DB  3400               	retlw	0
  3361  06DC  3400               	retlw	0
  3362  06DD  3400               	retlw	0
  3363  06DE  3400               	retlw	0
  3364  06DF  3407               	retlw	7
  3365  06E0  34FF               	retlw	255
  3366  06E1  34FF               	retlw	255
  3367  06E2  3480               	retlw	128
  3368  06E3  3400               	retlw	0
  3369  06E4  3460               	retlw	96
  3370  06E5  3400               	retlw	0
  3371  06E6  3460               	retlw	96
  3372  06E7  340F               	retlw	15
  3373  06E8  3481               	retlw	129
  3374  06E9  34E4               	retlw	228
  3375  06EA  3400               	retlw	0
  3376  06EB  3400               	retlw	0
  3377  06EC  3400               	retlw	0
  3378  06ED  3400               	retlw	0
  3379  06EE  3400               	retlw	0
  3380  06EF  3407               	retlw	7
  3381  06F0  34FF               	retlw	255
  3382  06F1  34FF               	retlw	255
  3383  06F2  34FC               	retlw	252
  3384  06F3  3401               	retlw	1
  3385  06F4  34F8               	retlw	248
  3386  06F5  3438               	retlw	56
  3387  06F6  34C0               	retlw	192
  3388  06F7  341F               	retlw	31
  3389  06F8  34E1               	retlw	225
  3390  06F9  34E7               	retlw	231
  3391  06FA  3400               	retlw	0
  3392  06FB  3441               	retlw	65
  3393  06FC  3481               	retlw	129
  3394  06FD  3420               	retlw	32
  3395  06FE  3400               	retlw	0
  3396  06FF  340F               	retlw	15
  3397  0700  34FF               	retlw	255
  3398  0701  34FF               	retlw	255
  3399  0702  34FF               	retlw	255
  3400  0703  34FE               	retlw	254
  3401  0704  343F               	retlw	63
  3402  0705  34FE               	retlw	254
  3403  0706  3407               	retlw	7
  3404  0707  349F               	retlw	159
  3405  0708  3403               	retlw	3
  3406  0709  34E3               	retlw	227
  3407  070A  34DF               	retlw	223
  3408  070B  341F               	retlw	31
  3409  070C  34E7               	retlw	231
  3410  070D  34FF               	retlw	255
  3411  070E  34FF               	retlw	255
  3412  070F  34FF               	retlw	255
  3413  0710  34FF               	retlw	255
  3414  0711  34FF               	retlw	255
  3415  0712  34FF               	retlw	255
  3416  0713  34FE               	retlw	254
  3417  0714  341F               	retlw	31
  3418  0715  34FF               	retlw	255
  3419  0716  340F               	retlw	15
  3420  0717  348F               	retlw	143
  3421  0718  3483               	retlw	131
  3422  0719  34E7               	retlw	231
  3423  071A  34FE               	retlw	254
  3424  071B  340F               	retlw	15
  3425  071C  34FF               	retlw	255
  3426  071D  34FF               	retlw	255
  3427  071E  34FF               	retlw	255
  3428  071F  34FF               	retlw	255
  3429  0720  34FF               	retlw	255
  3430  0721  34FF               	retlw	255
  3431  0722  34FF               	retlw	255
  3432  0723  34FF               	retlw	255
  3433  0724  343F               	retlw	63
  3434  0725  34FF               	retlw	255
  3435  0726  340F               	retlw	15
  3436  0727  348F               	retlw	143
  3437  0728  34C7               	retlw	199
  3438  0729  34E7               	retlw	231
  3439  072A  34FF               	retlw	255
  3440  072B  340F               	retlw	15
  3441  072C  34FF               	retlw	255
  3442  072D  34FF               	retlw	255
  3443  072E  34FF               	retlw	255
  3444  072F  34FF               	retlw	255
  3445  0730  34FF               	retlw	255
  3446  0731  34FF               	retlw	255
  3447  0732  34FF               	retlw	255
  3448  0733  34FF               	retlw	255
  3449  0734  34FF               	retlw	255
  3450  0735  34FF               	retlw	255
  3451  0736  34FF               	retlw	255
  3452  0737  34FF               	retlw	255
  3453  0738  34FF               	retlw	255
  3454  0739  34E7               	retlw	231
  3455  073A  34FF               	retlw	255
  3456  073B  34FF               	retlw	255
  3457  073C  34FF               	retlw	255
  3458  073D  34FF               	retlw	255
  3459  073E  34FF               	retlw	255
  3460  073F  34FF               	retlw	255
  3461  0740  34FF               	retlw	255
  3462  0741  34FF               	retlw	255
  3463  0742  34FF               	retlw	255
  3464  0743  34FF               	retlw	255
  3465  0744  34FF               	retlw	255
  3466  0745  34FF               	retlw	255
  3467  0746  34FF               	retlw	255
  3468  0747  34FF               	retlw	255
  3469  0748  34FF               	retlw	255
  3470  0749  34FF               	retlw	255
  3471  074A  34FF               	retlw	255
  3472  074B  34FF               	retlw	255
  3473  074C  34FF               	retlw	255
  3474  074D  34FF               	retlw	255
  3475  074E  34FF               	retlw	255
  3476  074F  34FF               	retlw	255
  3477  0750  34FF               	retlw	255
  3478  0751  34FF               	retlw	255
  3479  0752  34FF               	retlw	255
  3480  0753  34FF               	retlw	255
  3481  0754  34FF               	retlw	255
  3482  0755  34FF               	retlw	255
  3483  0756  34FF               	retlw	255
  3484  0757  34FF               	retlw	255
  3485  0758  34FF               	retlw	255
  3486  0759  34FF               	retlw	255
  3487  075A  34FF               	retlw	255
  3488  075B  34FF               	retlw	255
  3489  075C  34FF               	retlw	255
  3490  075D  34FF               	retlw	255
  3491  075E  34FF               	retlw	255
  3492  075F  34FF               	retlw	255
  3493  0760  34FF               	retlw	255
  3494  0761  34FF               	retlw	255
  3495  0762  34FF               	retlw	255
  3496  0763  34FF               	retlw	255
  3497  0764  34FF               	retlw	255
  3498  0765  34FF               	retlw	255
  3499  0766  34FF               	retlw	255
  3500  0767  34FF               	retlw	255
  3501  0768  34FF               	retlw	255
  3502  0769  34FF               	retlw	255
  3503  076A  34FF               	retlw	255
  3504  076B  34FF               	retlw	255
  3505  076C  34FF               	retlw	255
  3506  076D  34FF               	retlw	255
  3507  076E  34FF               	retlw	255
  3508  076F  34FF               	retlw	255
  3509  0770  34FF               	retlw	255
  3510  0771  34FF               	retlw	255
  3511  0772  34FF               	retlw	255
  3512  0773  34FF               	retlw	255
  3513  0774  34FF               	retlw	255
  3514  0775  34FF               	retlw	255
  3515  0776  34FF               	retlw	255
  3516  0777  34FF               	retlw	255
  3517  0778  34FF               	retlw	255
  3518  0779  34FF               	retlw	255
  3519  077A  34FF               	retlw	255
  3520  077B  34FF               	retlw	255
  3521  077C  34FF               	retlw	255
  3522  077D  34FF               	retlw	255
  3523  077E  34FF               	retlw	255
  3524  077F  34FF               	retlw	255
  3525  0780  34FF               	retlw	255
  3526  0781  34FF               	retlw	255
  3527  0782  34FF               	retlw	255
  3528  0783  34FF               	retlw	255
  3529  0784  34FF               	retlw	255
  3530  0785  34FF               	retlw	255
  3531  0786  34FF               	retlw	255
  3532  0787  34FF               	retlw	255
  3533  0788  34FF               	retlw	255
  3534  0789  34FF               	retlw	255
  3535  078A  34FF               	retlw	255
  3536  078B  34FF               	retlw	255
  3537  078C  34FF               	retlw	255
  3538  078D  34FF               	retlw	255
  3539  078E  34FF               	retlw	255
  3540  078F  34FF               	retlw	255
  3541  0790  34FF               	retlw	255
  3542  0791  34FF               	retlw	255
  3543  0792  34FF               	retlw	255
  3544  0793  34FF               	retlw	255
  3545  0794  34FF               	retlw	255
  3546  0795  34FF               	retlw	255
  3547  0796  34FF               	retlw	255
  3548  0797  34FF               	retlw	255
  3549  0798  34FF               	retlw	255
  3550  0799  34FF               	retlw	255
  3551  079A  34FF               	retlw	255
  3552  079B  34FF               	retlw	255
  3553  079C  34FF               	retlw	255
  3554  079D  34FF               	retlw	255
  3555  079E  34FF               	retlw	255
  3556  079F  34FF               	retlw	255
  3557  07A0  34FF               	retlw	255
  3558  07A1  34FF               	retlw	255
  3559  07A2  34FF               	retlw	255
  3560  07A3  34FF               	retlw	255
  3561  07A4  34FF               	retlw	255
  3562  07A5  34FF               	retlw	255
  3563  07A6  34FF               	retlw	255
  3564  07A7  34FF               	retlw	255
  3565  07A8  34FF               	retlw	255
  3566  07A9  34FF               	retlw	255
  3567  07AA  34FF               	retlw	255
  3568  07AB  34FF               	retlw	255
  3569  07AC  34FF               	retlw	255
  3570  07AD  34FF               	retlw	255
  3571  07AE  34FF               	retlw	255
  3572  07AF  34FF               	retlw	255
  3573  07B0  34FF               	retlw	255
  3574  07B1  34FF               	retlw	255
  3575  07B2  34FF               	retlw	255
  3576  07B3  34FF               	retlw	255
  3577  07B4  34FF               	retlw	255
  3578  07B5  34FF               	retlw	255
  3579  07B6  34FF               	retlw	255
  3580  07B7  34EF               	retlw	239
  3581  07B8  34FF               	retlw	255
  3582  07B9  34FF               	retlw	255
  3583  07BA  34FF               	retlw	255
  3584  07BB  34FF               	retlw	255
  3585  07BC  34FF               	retlw	255
  3586  07BD  34FF               	retlw	255
  3587  07BE  34FF               	retlw	255
  3588  07BF  34FF               	retlw	255
  3589  07C0  34FF               	retlw	255
  3590  07C1  34FF               	retlw	255
  3591  07C2  34FF               	retlw	255
  3592  07C3  34FF               	retlw	255
  3593  07C4  34FF               	retlw	255
  3594  07C5  34FF               	retlw	255
  3595  07C6  34FF               	retlw	255
  3596  07C7  34C7               	retlw	199
  3597  07C8  34F7               	retlw	247
  3598  07C9  34FF               	retlw	255
  3599  07CA  34F3               	retlw	243
  3600  07CB  34FF               	retlw	255
  3601  07CC  34DF               	retlw	223
  3602  07CD  34FF               	retlw	255
  3603  07CE  34FF               	retlw	255
  3604  07CF  34FF               	retlw	255
  3605  07D0  34FF               	retlw	255
  3606  07D1  34FF               	retlw	255
  3607  07D2  34FF               	retlw	255
  3608  07D3  34FF               	retlw	255
  3609  07D4  34FF               	retlw	255
  3610  07D5  34FF               	retlw	255
  3611  07D6  34FF               	retlw	255
  3612  07D7  34C3               	retlw	195
  3613  07D8  34E7               	retlw	231
  3614  07D9  34FF               	retlw	255
  3615  07DA  34F1               	retlw	241
  3616  07DB  34FF               	retlw	255
  3617  07DC  349C               	retlw	156
  3618  07DD  347F               	retlw	127
  3619  07DE  34FF               	retlw	255
  3620  07DF  34FF               	retlw	255
  3621  07E0  34FF               	retlw	255
  3622  07E1  34FF               	retlw	255
  3623  07E2  34FF               	retlw	255
  3624  07E3  34FF               	retlw	255
  3625  07E4  34F9               	retlw	249
  3626  07E5  34FF               	retlw	255
  3627  07E6  34FF               	retlw	255
  3628  07E7  34C3               	retlw	195
  3629  07E8  34C7               	retlw	199
  3630  07E9  34FF               	retlw	255
  3631  07EA  34F1               	retlw	241
  3632  07EB  34FF               	retlw	255
  3633  07EC  341C               	retlw	28
  3634  07ED  343F               	retlw	63
  3635  07EE  34FF               	retlw	255
  3636  07EF  34FF               	retlw	255
  3637  07F0  34FF               	retlw	255
  3638  07F1  34FF               	retlw	255
  3639  07F2  34FF               	retlw	255
  3640  07F3  34FF               	retlw	255
  3641  07F4  34F8               	retlw	248
  3642  07F5  34FF               	retlw	255
  3643  07F6  343F               	retlw	63
  3644  07F7  34C7               	retlw	199
  3645  07F8  34C7               	retlw	199
  3646  07F9  34FF               	retlw	255
  3647  07FA  34FF               	retlw	255
  3648  07FB  34FF               	retlw	255
  3649  07FC  341E               	retlw	30
  3650  07FD  347F               	retlw	127
  3651  07FE  34FF               	retlw	255
  3652  07FF  34FF               	retlw	255
  3653  0800  34FF               	retlw	255
  3654  0801  34FF               	retlw	255
  3655  0802  34FF               	retlw	255
  3656  0803  34FF               	retlw	255
  3657  0804  34FD               	retlw	253
  3658  0805  34FE               	retlw	254
  3659  0806  343F               	retlw	63
  3660  0807  3487               	retlw	135
  3661  0808  34C7               	retlw	199
  3662  0809  34FF               	retlw	255
  3663  080A  34F9               	retlw	249
  3664  080B  34FF               	retlw	255
  3665  080C  341F               	retlw	31
  3666  080D  34FF               	retlw	255
  3667  080E  34CF               	retlw	207
  3668  080F  34FF               	retlw	255
  3669  0810  34FF               	retlw	255
  3670  0811  34FF               	retlw	255
  3671  0812  34FF               	retlw	255
  3672  0813  34FF               	retlw	255
  3673  0814  34FF               	retlw	255
  3674  0815  34FC               	retlw	252
  3675  0816  341F               	retlw	31
  3676  0817  3407               	retlw	7
  3677  0818  34C7               	retlw	199
  3678  0819  34EF               	retlw	239
  3679  081A  34F0               	retlw	240
  3680  081B  34F9               	retlw	249
  3681  081C  341E               	retlw	30
  3682  081D  347F               	retlw	127
  3683  081E  3487               	retlw	135
  3684  081F  34FF               	retlw	255
  3685  0820  34FF               	retlw	255
  3686  0821  34FF               	retlw	255
  3687  0822  34FF               	retlw	255
  3688  0823  34FF               	retlw	255
  3689  0824  34FC               	retlw	252
  3690  0825  34F8               	retlw	248
  3691  0826  341E               	retlw	30
  3692  0827  3403               	retlw	3
  3693  0828  34C7               	retlw	199
  3694  0829  34EF               	retlw	239
  3695  082A  34E0               	retlw	224
  3696  082B  34F1               	retlw	241
  3697  082C  341E               	retlw	30
  3698  082D  343F               	retlw	63
  3699  082E  3483               	retlw	131
  3700  082F  34FF               	retlw	255
  3701  0830  34FF               	retlw	255
  3702  0831  34FF               	retlw	255
  3703  0832  34FF               	retlw	255
  3704  0833  34FF               	retlw	255
  3705  0834  34F8               	retlw	248
  3706  0835  34F8               	retlw	248
  3707  0836  341E               	retlw	30
  3708  0837  3400               	retlw	0
  3709  0838  3447               	retlw	71
  3710  0839  34CF               	retlw	207
  3711  083A  34C0               	retlw	192
  3712  083B  34F1               	retlw	241
  3713  083C  341E               	retlw	30
  3714  083D  343F               	retlw	63
  3715  083E  3401               	retlw	1
  3716  083F  34FF               	retlw	255
  3717  0840  34FF               	retlw	255
  3718  0841  34FF               	retlw	255
  3719  0842  34FF               	retlw	255
  3720  0843  3470               	retlw	112
  3721  0844  3400               	retlw	0
  3722  0845  3400               	retlw	0
  3723  0846  3400               	retlw	0
  3724  0847  3400               	retlw	0
  3725  0848  3447               	retlw	71
  3726  0849  34C0               	retlw	192
  3727  084A  3400               	retlw	0
  3728  084B  3401               	retlw	1
  3729  084C  3400               	retlw	0
  3730  084D  343E               	retlw	62
  3731  084E  3401               	retlw	1
  3732  084F  34FF               	retlw	255
  3733  0850  34FF               	retlw	255
  3734  0851  34FF               	retlw	255
  3735  0852  34FF               	retlw	255
  3736  0853  3470               	retlw	112
  3737  0854  3400               	retlw	0
  3738  0855  3400               	retlw	0
  3739  0856  3400               	retlw	0
  3740  0857  3400               	retlw	0
  3741  0858  34C7               	retlw	199
  3742  0859  34C0               	retlw	192
  3743  085A  3400               	retlw	0
  3744  085B  3401               	retlw	1
  3745  085C  3400               	retlw	0
  3746  085D  343E               	retlw	62
  3747  085E  3401               	retlw	1
  3748  085F  34FF               	retlw	255
  3749  0860  34FF               	retlw	255
  3750  0861  34FF               	retlw	255
  3751  0862  34FE               	retlw	254
  3752  0863  3460               	retlw	96
  3753  0864  3400               	retlw	0
  3754  0865  3400               	retlw	0
  3755  0866  3400               	retlw	0
  3756  0867  340F               	retlw	15
  3757  0868  34CF               	retlw	207
  3758  0869  34C0               	retlw	192
  3759  086A  3400               	retlw	0
  3760  086B  3403               	retlw	3
  3761  086C  3400               	retlw	0
  3762  086D  347E               	retlw	126
  3763  086E  3403               	retlw	3
  3764  086F  34FF               	retlw	255
  3765  0870  34FF               	retlw	255
  3766  0871  34FF               	retlw	255
  3767  0872  34FE               	retlw	254
  3768  0873  3470               	retlw	112
  3769  0874  3426               	retlw	38
  3770  0875  3400               	retlw	0
  3771  0876  3400               	retlw	0
  3772  0877  343F               	retlw	63
  3773  0878  34CF               	retlw	207
  3774  0879  34F0               	retlw	240
  3775  087A  340C               	retlw	12
  3776  087B  3407               	retlw	7
  3777  087C  3488               	retlw	136
  3778  087D  34FC               	retlw	252
  3779  087E  3407               	retlw	7
  3780  087F  34FF               	retlw	255
  3781  0880  34FF               	retlw	255
  3782  0881  34FF               	retlw	255
  3783  0882  34FE               	retlw	254
  3784  0883  3400               	retlw	0
  3785  0884  34FF               	retlw	255
  3786  0885  34E0               	retlw	224
  3787  0886  341F               	retlw	31
  3788  0887  34C7               	retlw	199
  3789  0888  34FF               	retlw	255
  3790  0889  34FF               	retlw	255
  3791  088A  34FF               	retlw	255
  3792  088B  34C3               	retlw	195
  3793  088C  34FF               	retlw	255
  3794  088D  34FC               	retlw	252
  3795  088E  347F               	retlw	127
  3796  088F  34FF               	retlw	255
  3797  0890  34FF               	retlw	255
  3798  0891  34FF               	retlw	255
  3799  0892  34FE               	retlw	254
  3800  0893  3400               	retlw	0
  3801  0894  34FF               	retlw	255
  3802  0895  34E0               	retlw	224
  3803  0896  343F               	retlw	63
  3804  0897  34C3               	retlw	195
  3805  0898  34FF               	retlw	255
  3806  0899  34FF               	retlw	255
  3807  089A  34FF               	retlw	255
  3808  089B  34C1               	retlw	193
  3809  089C  34FF               	retlw	255
  3810  089D  34FC               	retlw	252
  3811  089E  347F               	retlw	127
  3812  089F  34FF               	retlw	255
  3813  08A0  34FF               	retlw	255
  3814  08A1  34FF               	retlw	255
  3815  08A2  34FF               	retlw	255
  3816  08A3  3401               	retlw	1
  3817  08A4  34FF               	retlw	255
  3818  08A5  34F0               	retlw	240
  3819  08A6  347F               	retlw	127
  3820  08A7  34E7               	retlw	231
  3821  08A8  34FF               	retlw	255
  3822  08A9  34FF               	retlw	255
  3823  08AA  34FF               	retlw	255
  3824  08AB  34C1               	retlw	193
  3825  08AC  34FF               	retlw	255
  3826  08AD  34FC               	retlw	252
  3827  08AE  347F               	retlw	127
  3828  08AF  34FF               	retlw	255
  3829  08B0  34FF               	retlw	255
  3830  08B1  34FF               	retlw	255
  3831  08B2  34FF               	retlw	255
  3832  08B3  3487               	retlw	135
  3833  08B4  34FF               	retlw	255
  3834  08B5  34FD               	retlw	253
  3835  08B6  34FF               	retlw	255
  3836  08B7  34FF               	retlw	255
  3837  08B8  34FF               	retlw	255
  3838  08B9  34FF               	retlw	255
  3839  08BA  34FF               	retlw	255
  3840  08BB  34FF               	retlw	255
  3841  08BC  34FF               	retlw	255
  3842  08BD  34FC               	retlw	252
  3843  08BE  34FF               	retlw	255
  3844  08BF  34FF               	retlw	255
  3845  08C0  34FF               	retlw	255
  3846  08C1  34FF               	retlw	255
  3847  08C2  34FF               	retlw	255
  3848  08C3  3487               	retlw	135
  3849  08C4  34FF               	retlw	255
  3850  08C5  34FF               	retlw	255
  3851  08C6  34FF               	retlw	255
  3852  08C7  34FF               	retlw	255
  3853  08C8  34FF               	retlw	255
  3854  08C9  34FF               	retlw	255
  3855  08CA  34FF               	retlw	255
  3856  08CB  34FF               	retlw	255
  3857  08CC  34FF               	retlw	255
  3858  08CD  34FE               	retlw	254
  3859  08CE  34FF               	retlw	255
  3860  08CF  34FF               	retlw	255
  3861  08D0  34FF               	retlw	255
  3862  08D1  34FF               	retlw	255
  3863  08D2  34FF               	retlw	255
  3864  08D3  3483               	retlw	131
  3865  08D4  34FF               	retlw	255
  3866  08D5  34FF               	retlw	255
  3867  08D6  34FF               	retlw	255
  3868  08D7  34FF               	retlw	255
  3869  08D8  34FF               	retlw	255
  3870  08D9  34FF               	retlw	255
  3871  08DA  34FF               	retlw	255
  3872  08DB  34FF               	retlw	255
  3873  08DC  34FF               	retlw	255
  3874  08DD  34FF               	retlw	255
  3875  08DE  34FF               	retlw	255
  3876  08DF  34FF               	retlw	255
  3877  08E0  34FF               	retlw	255
  3878  08E1  34FF               	retlw	255
  3879  08E2  34FF               	retlw	255
  3880  08E3  3483               	retlw	131
  3881  08E4  34FF               	retlw	255
  3882  08E5  34FF               	retlw	255
  3883  08E6  34FF               	retlw	255
  3884  08E7  34FF               	retlw	255
  3885  08E8  34FF               	retlw	255
  3886  08E9  34FF               	retlw	255
  3887  08EA  34FF               	retlw	255
  3888  08EB  34FF               	retlw	255
  3889  08EC  34FF               	retlw	255
  3890  08ED  34FF               	retlw	255
  3891  08EE  34FF               	retlw	255
  3892  08EF  34FF               	retlw	255
  3893  08F0  34FF               	retlw	255
  3894  08F1  34FF               	retlw	255
  3895  08F2  34FF               	retlw	255
  3896  08F3  34FF               	retlw	255
  3897  08F4  34FF               	retlw	255
  3898  08F5  34FF               	retlw	255
  3899  08F6  34FF               	retlw	255
  3900  08F7  34FF               	retlw	255
  3901  08F8  34FF               	retlw	255
  3902  08F9  34FF               	retlw	255
  3903  08FA  34FF               	retlw	255
  3904  08FB  34FF               	retlw	255
  3905  08FC  34FF               	retlw	255
  3906  08FD  34FF               	retlw	255
  3907  08FE  34FF               	retlw	255
  3908  08FF  34FF               	retlw	255
  3909  0900  34FF               	retlw	255
  3910  0901  34FF               	retlw	255
  3911  0902  34FF               	retlw	255
  3912  0903  34FF               	retlw	255
  3913  0904  34FF               	retlw	255
  3914  0905  34FF               	retlw	255
  3915  0906  34FF               	retlw	255
  3916  0907  34FF               	retlw	255
  3917  0908  34FF               	retlw	255
  3918  0909  34FF               	retlw	255
  3919  090A  34FF               	retlw	255
  3920  090B  34FF               	retlw	255
  3921  090C  34FF               	retlw	255
  3922  090D  34FF               	retlw	255
  3923  090E  34FF               	retlw	255
  3924  090F  34FF               	retlw	255
  3925  0910  34FF               	retlw	255
  3926  0911  34FF               	retlw	255
  3927  0912  34FF               	retlw	255
  3928  0913  34FF               	retlw	255
  3929  0914  34FF               	retlw	255
  3930  0915  34FF               	retlw	255
  3931  0916  34FF               	retlw	255
  3932  0917  34FF               	retlw	255
  3933  0918  34FF               	retlw	255
  3934  0919  34FF               	retlw	255
  3935  091A  34FF               	retlw	255
  3936  091B  34FF               	retlw	255
  3937  091C  34FF               	retlw	255
  3938  091D  34FF               	retlw	255
  3939  091E  34FF               	retlw	255
  3940  091F  34FF               	retlw	255
  3941  0920  34FF               	retlw	255
  3942  0921  34FF               	retlw	255
  3943  0922  34FF               	retlw	255
  3944  0923  34FF               	retlw	255
  3945  0924  34FF               	retlw	255
  3946  0925  34FF               	retlw	255
  3947  0926  34FF               	retlw	255
  3948  0927  34FF               	retlw	255
  3949  0928  34FF               	retlw	255
  3950  0929  34FF               	retlw	255
  3951  092A  34FF               	retlw	255
  3952  092B  34FF               	retlw	255
  3953  092C  34FF               	retlw	255
  3954  092D  34FF               	retlw	255
  3955  092E  34FF               	retlw	255
  3956  092F  34FF               	retlw	255
  3957  0930  34FF               	retlw	255
  3958  0931  34FF               	retlw	255
  3959  0932  34FF               	retlw	255
  3960  0933  34FF               	retlw	255
  3961  0934  34FF               	retlw	255
  3962  0935  34FF               	retlw	255
  3963  0936  34FF               	retlw	255
  3964  0937  34FF               	retlw	255
  3965  0938  34FF               	retlw	255
  3966  0939  34FF               	retlw	255
  3967  093A  34FF               	retlw	255
  3968  093B  34FF               	retlw	255
  3969  093C  34FF               	retlw	255
  3970  093D  34FF               	retlw	255
  3971  093E  34FF               	retlw	255
  3972  093F  34FF               	retlw	255
  3973  0940  34FF               	retlw	255
  3974  0941  34FF               	retlw	255
  3975  0942  34FF               	retlw	255
  3976  0943  34FF               	retlw	255
  3977  0944  34FF               	retlw	255
  3978  0945  34FF               	retlw	255
  3979  0946  34F8               	retlw	248
  3980  0947  34E3               	retlw	227
  3981  0948  34FF               	retlw	255
  3982  0949  34FF               	retlw	255
  3983  094A  34FF               	retlw	255
  3984  094B  34FF               	retlw	255
  3985  094C  34FF               	retlw	255
  3986  094D  34FF               	retlw	255
  3987  094E  34FF               	retlw	255
  3988  094F  34FF               	retlw	255
  3989  0950  34FF               	retlw	255
  3990  0951  34FF               	retlw	255
  3991  0952  34FF               	retlw	255
  3992  0953  34FF               	retlw	255
  3993  0954  34FF               	retlw	255
  3994  0955  34FF               	retlw	255
  3995  0956  34F8               	retlw	248
  3996  0957  34E3               	retlw	227
  3997  0958  34E1               	retlw	225
  3998  0959  34FC               	retlw	252
  3999  095A  34FF               	retlw	255
  4000  095B  34FF               	retlw	255
  4001  095C  34FF               	retlw	255
  4002  095D  34FF               	retlw	255
  4003  095E  34FF               	retlw	255
  4004  095F  34FF               	retlw	255
  4005  0960  34FF               	retlw	255
  4006  0961  34FF               	retlw	255
  4007  0962  34FF               	retlw	255
  4008  0963  34FF               	retlw	255
  4009  0964  34FF               	retlw	255
  4010  0965  34FF               	retlw	255
  4011  0966  34FC               	retlw	252
  4012  0967  3467               	retlw	103
  4013  0968  34C0               	retlw	192
  4014  0969  34F0               	retlw	240
  4015  096A  34FF               	retlw	255
  4016  096B  34FF               	retlw	255
  4017  096C  34FF               	retlw	255
  4018  096D  34FF               	retlw	255
  4019  096E  34FF               	retlw	255
  4020  096F  34FF               	retlw	255
  4021  0970  34FF               	retlw	255
  4022  0971  34FF               	retlw	255
  4023  0972  34FF               	retlw	255
  4024  0973  34FF               	retlw	255
  4025  0974  34FF               	retlw	255
  4026  0975  34FF               	retlw	255
  4027  0976  34FC               	retlw	252
  4028  0977  3447               	retlw	71
  4029  0978  34C0               	retlw	192
  4030  0979  34E0               	retlw	224
  4031  097A  34FF               	retlw	255
  4032  097B  34FF               	retlw	255
  4033  097C  34FF               	retlw	255
  4034  097D  34FF               	retlw	255
  4035  097E  34FF               	retlw	255
  4036  097F  34FF               	retlw	255
  4037  0980  34FF               	retlw	255
  4038  0981  34FF               	retlw	255
  4039  0982  34FF               	retlw	255
  4040  0983  34FF               	retlw	255
  4041  0984  34FF               	retlw	255
  4042  0985  34FF               	retlw	255
  4043  0986  34FC               	retlw	252
  4044  0987  3447               	retlw	71
  4045  0988  34C4               	retlw	196
  4046  0989  3470               	retlw	112
  4047  098A  34FF               	retlw	255
  4048  098B  34FF               	retlw	255
  4049  098C  34FF               	retlw	255
  4050  098D  34FF               	retlw	255
  4051  098E  34FF               	retlw	255
  4052  098F  34FF               	retlw	255
  4053  0990  34FF               	retlw	255
  4054  0991  34FF               	retlw	255
  4055  0992  34FF               	retlw	255
  4056  0993  34FF               	retlw	255
  4057  0994  34FF               	retlw	255
  4058  0995  34FF               	retlw	255
  4059  0996  34FE               	retlw	254
  4060  0997  344F               	retlw	79
  4061  0998  3484               	retlw	132
  4062  0999  3478               	retlw	120
  4063  099A  34FF               	retlw	255
  4064  099B  34FF               	retlw	255
  4065  099C  34FF               	retlw	255
  4066  099D  34FF               	retlw	255
  4067  099E  34FF               	retlw	255
  4068  099F  34FF               	retlw	255
  4069  09A0  34FF               	retlw	255
  4070  09A1  34FF               	retlw	255
  4071  09A2  34FF               	retlw	255
  4072  09A3  34FF               	retlw	255
  4073  09A4  34FF               	retlw	255
  4074  09A5  34FF               	retlw	255
  4075  09A6  34FE               	retlw	254
  4076  09A7  340F               	retlw	15
  4077  09A8  34C4               	retlw	196
  4078  09A9  3478               	retlw	120
  4079  09AA  34FF               	retlw	255
  4080  09AB  34FF               	retlw	255
  4081  09AC  34FF               	retlw	255
  4082  09AD  34FF               	retlw	255
  4083  09AE  34FF               	retlw	255
  4084  09AF  34FF               	retlw	255
  4085  09B0  34FF               	retlw	255
  4086  09B1  34FF               	retlw	255
  4087  09B2  34FF               	retlw	255
  4088  09B3  34FF               	retlw	255
  4089  09B4  34FF               	retlw	255
  4090  09B5  34FF               	retlw	255
  4091  09B6  34FE               	retlw	254
  4092  09B7  340F               	retlw	15
  4093  09B8  34C0               	retlw	192
  4094  09B9  34F8               	retlw	248
  4095  09BA  34FF               	retlw	255
  4096  09BB  34FF               	retlw	255
  4097  09BC  34FF               	retlw	255
  4098  09BD  34FF               	retlw	255
  4099  09BE  34FF               	retlw	255
  4100  09BF  34FF               	retlw	255
  4101  09C0  34FF               	retlw	255
  4102  09C1  34FF               	retlw	255
  4103  09C2  34FF               	retlw	255
  4104  09C3  34FF               	retlw	255
  4105  09C4  34FF               	retlw	255
  4106  09C5  34FF               	retlw	255
  4107  09C6  34FF               	retlw	255
  4108  09C7  341F               	retlw	31
  4109  09C8  34C0               	retlw	192
  4110  09C9  3498               	retlw	152
  4111  09CA  34FF               	retlw	255
  4112  09CB  34FF               	retlw	255
  4113  09CC  34FF               	retlw	255
  4114  09CD  34FF               	retlw	255
  4115  09CE  34FF               	retlw	255
  4116  09CF  34FF               	retlw	255
  4117  09D0  34FF               	retlw	255
  4118  09D1  34FF               	retlw	255
  4119  09D2  34FF               	retlw	255
  4120  09D3  34FF               	retlw	255
  4121  09D4  34FF               	retlw	255
  4122  09D5  34FF               	retlw	255
  4123  09D6  34FF               	retlw	255
  4124  09D7  341F               	retlw	31
  4125  09D8  34E0               	retlw	224
  4126  09D9  3498               	retlw	152
  4127  09DA  34FF               	retlw	255
  4128  09DB  34FF               	retlw	255
  4129  09DC  34FF               	retlw	255
  4130  09DD  34FF               	retlw	255
  4131  09DE  34FF               	retlw	255
  4132  09DF  34FF               	retlw	255
  4133  09E0  34FF               	retlw	255
  4134  09E1  34FF               	retlw	255
  4135  09E2  34FF               	retlw	255
  4136  09E3  34FF               	retlw	255
  4137  09E4  34FF               	retlw	255
  4138  09E5  34FF               	retlw	255
  4139  09E6  34FF               	retlw	255
  4140  09E7  34BF               	retlw	191
  4141  09E8  34F3               	retlw	243
  4142  09E9  34FD               	retlw	253
  4143  09EA  34FF               	retlw	255
  4144  09EB  34FF               	retlw	255
  4145  09EC  34FF               	retlw	255
  4146  09ED  34FF               	retlw	255
  4147  09EE  34FF               	retlw	255
  4148  09EF  34FF               	retlw	255
  4149  09F0  34FF               	retlw	255
  4150  09F1  34FF               	retlw	255
  4151  09F2  34FF               	retlw	255
  4152  09F3  34FF               	retlw	255
  4153  09F4  34FF               	retlw	255
  4154  09F5  34FF               	retlw	255
  4155  09F6  34FF               	retlw	255
  4156  09F7  34FF               	retlw	255
  4157  09F8  34FF               	retlw	255
  4158  09F9  34FF               	retlw	255
  4159  09FA  34FF               	retlw	255
  4160  09FB  34FF               	retlw	255
  4161  09FC  34FF               	retlw	255
  4162  09FD  34FF               	retlw	255
  4163  09FE  34FF               	retlw	255
  4164  09FF  34FF               	retlw	255
  4165  0A00  34FF               	retlw	255
  4166  0A01  34FF               	retlw	255
  4167  0A02  34FF               	retlw	255
  4168  0A03  34FF               	retlw	255
  4169  0A04  34FF               	retlw	255
  4170  0A05  34FF               	retlw	255
  4171  0A06  34FF               	retlw	255
  4172  0A07  34FF               	retlw	255
  4173  0A08  34FF               	retlw	255
  4174  0A09  34FF               	retlw	255
  4175  0A0A  34FF               	retlw	255
  4176  0A0B  34FF               	retlw	255
  4177  0A0C  34FF               	retlw	255
  4178  0A0D  34FF               	retlw	255
  4179  0A0E  34FF               	retlw	255
  4180  0A0F  34FF               	retlw	255
  4181  0A10  34FF               	retlw	255
  4182  0A11  34FF               	retlw	255
  4183  0A12  34FF               	retlw	255
  4184  0A13  34FF               	retlw	255
  4185  0A14  34FF               	retlw	255
  4186  0A15  34FF               	retlw	255
  4187  0A16  34FF               	retlw	255
  4188  0A17  34FF               	retlw	255
  4189  0A18  34FF               	retlw	255
  4190  0A19  34FF               	retlw	255
  4191  0A1A  34FF               	retlw	255
  4192  0A1B  34FF               	retlw	255
  4193  0A1C  34FF               	retlw	255
  4194  0A1D  34FF               	retlw	255
  4195  0A1E  34FF               	retlw	255
  4196  0A1F  34FF               	retlw	255
  4197  0A20  34FF               	retlw	255
  4198  0A21  34FF               	retlw	255
  4199  0A22  34FF               	retlw	255
  4200  0A23  34FF               	retlw	255
  4201  0A24  34FF               	retlw	255
  4202  0A25  34FF               	retlw	255
  4203  0A26  34FF               	retlw	255
  4204  0A27  34FF               	retlw	255
  4205  0A28  34FF               	retlw	255
  4206  0A29  34FF               	retlw	255
  4207  0A2A  34FF               	retlw	255
  4208  0A2B  34FF               	retlw	255
  4209  0A2C  34FF               	retlw	255
  4210  0A2D  34FF               	retlw	255
  4211  0A2E  34FF               	retlw	255
  4212  0A2F  34FF               	retlw	255
  4213  0A30  34FF               	retlw	255
  4214  0A31                     __end_of_des:	
  4215  000C                     _PORTAbits	set	12
  4216  000F                     _PORTDbits	set	15
  4217  005B                     _IOCIE	set	91
  4218  005F                     _GIE	set	95
  4219  008D                     _TRISB	set	141
  4220  008C                     _TRISA	set	140
  4221  008E                     _TRISC	set	142
  4222  008F                     _TRISD	set	143
  4223  0097                     _OPTION_REGbits	set	151
  4224  009D                     _BORCON	set	157
  4225  009A                     _OSCTUNE	set	154
  4226  009C                     _OSCSTAT	set	156
  4227  009B                     _OSCCON	set	155
  4228  010F                     _LATDbits	set	271
  4229  010D                     _LATBbits	set	269
  4230  018D                     _ANSELB	set	397
  4231  018C                     _ANSELA	set	396
  4232  018E                     _ANSELC	set	398
  4233  018F                     _ANSELD	set	399
  4234  020F                     _WPUD	set	527
  4235  028D                     _ODCONB	set	653
  4236  030D                     _SLRCONB	set	781
  4237  038C                     _INLVLA	set	908
  4238  1C9B                     _IOCAF3	set	7323
  4239  1C8B                     _IOCAP3	set	7307
  4240  0490                     _ADCON0bits	set	1168
  4241  0490                     _ADCON0	set	1168
  4242  048F                     _ADRESH	set	1167
  4243  048E                     _ADRESL	set	1166
  4244  0492                     _ADCON2	set	1170
  4245  0491                     _ADCON1	set	1169
  4246  0518                     _OPA3PCHS	set	1304
  4247  0517                     _OPA3NCHS	set	1303
  4248  051A                     _OPA3ORS	set	1306
  4249  0519                     _OPA3CON	set	1305
  4250  058D                     _DACLDbits	set	1421
  4251  059A                     _DAC5REFH	set	1434
  4252  0599                     _DAC5REFL	set	1433
  4253  058E                     _DAC1CON0bits	set	1422
  4254  058D                     _DACLD	set	1421
  4255  0598                     _DAC5CON0	set	1432
  4256  0A31                     STR_2:	
  4257  0A31  3443               	retlw	67	;'C'
  4258  0A32  3475               	retlw	117	;'u'
  4259  0A33  3472               	retlw	114	;'r'
  4260  0A34  3472               	retlw	114	;'r'
  4261  0A35  3465               	retlw	101	;'e'
  4262  0A36  346E               	retlw	110	;'n'
  4263  0A37  3474               	retlw	116	;'t'
  4264  0A38  3420               	retlw	32	;' '
  4265  0A39  3420               	retlw	32	;' '
  4266  0A3A  3420               	retlw	32	;' '
  4267  0A3B  3469               	retlw	105	;'i'
  4268  0A3C  346E               	retlw	110	;'n'
  4269  0A3D  3420               	retlw	32	;' '
  4270  0A3E  346D               	retlw	109	;'m'
  4271  0A3F  3441               	retlw	65	;'A'
  4272  0A40  343A               	retlw	58	;':'
  4273  0A41  3400               	retlw	0
  4274                           
  4275                           	psect	stringtext8
  4276  2076                     __pstringtext8:	
  4277  2076                     STR_4:	
  4278  2076  3444               	retlw	68	;'D'
  4279  2077  3441               	retlw	65	;'A'
  4280  2078  3443               	retlw	67	;'C'
  4281  2079  3420               	retlw	32	;' '
  4282  207A  346F               	retlw	111	;'o'
  4283  207B  3475               	retlw	117	;'u'
  4284  207C  3474               	retlw	116	;'t'
  4285  207D  3420               	retlw	32	;' '
  4286  207E  3420               	retlw	32	;' '
  4287  207F  3420               	retlw	32	;' '
  4288  2080  3469               	retlw	105	;'i'
  4289  2081  346E               	retlw	110	;'n'
  4290  2082  3420               	retlw	32	;' '
  4291  2083  346D               	retlw	109	;'m'
  4292  2084  3476               	retlw	118	;'v'
  4293  2085  343A               	retlw	58	;':'
  4294  2086  3400               	retlw	0
  4295                           
  4296                           	psect	stringtext9
  4297  2800                     __pstringtext9:	
  4298  2800                     STR_1:	
  4299  2800  3425               	retlw	37	;'%'
  4300  2801  342E               	retlw	46	;'.'
  4301  2802  3432               	retlw	50	;'2'
  4302  2803  3466               	retlw	102	;'f'
  4303  2804  3400               	retlw	0
  4304                           
  4305                           	psect	stringtext10
  4306  2805                     __pstringtext10:	
  4307  2805                     STR_3:	
  4308  2805  3425               	retlw	37	;'%'
  4309  2806  3464               	retlw	100	;'d'
  4310  2807  3400               	retlw	0
  4311                           
  4312                           	psect	stringtext11
  4313  0000                     __pstringtext11:	
  4314                           
  4315                           ; #config settings
  4316  0000                     
  4317                           	psect	cinit
  4318  0017                     start_initialization:	
  4319  0017                     __initialization:	
  4320                           
  4321                           ; Initialize objects allocated to COMMON
  4322  0017  3180  2003  3180   	fcall	__pidataCOMMON	;fetch initializer
  4323  001A  00FC               	movwf	__pdataCOMMON& (0+127)
  4324                           
  4325                           ; Initialize objects allocated to BANK0
  4326  001B  30F7               	movlw	low __pidataBANK0
  4327  001C  0084               	movwf	4
  4328  001D  30A7               	movlw	(high __pidataBANK0)| (0+128)
  4329  001E  0085               	movwf	5
  4330  001F  3069               	movlw	low __pdataBANK0
  4331  0020  0086               	movwf	6
  4332  0021  3000               	movlw	high __pdataBANK0
  4333  0022  0087               	movwf	7
  4334  0023  3003               	movlw	3
  4335  0024  3199  21E2  3180   	fcall	init_ram
  4336                           
  4337                           ; Initialize objects allocated to BANK1
  4338  0027  30D1               	movlw	low __pidataBANK1
  4339  0028  0084               	movwf	4
  4340  0029  309A               	movlw	(high __pidataBANK1)| (0+128)
  4341  002A  0085               	movwf	5
  4342  002B  30A0               	movlw	low __pdataBANK1
  4343  002C  0086               	movwf	6
  4344  002D  3000               	movlw	high __pdataBANK1
  4345  002E  0087               	movwf	7
  4346  002F  3022               	movlw	34
  4347  0030  3199  21E2  3180   	fcall	init_ram
  4348                           
  4349                           ; Initialize objects allocated to BANK2
  4350  0033  307E               	movlw	low __pidataBANK2
  4351  0034  0084               	movwf	4
  4352  0035  309A               	movlw	(high __pidataBANK2)| (0+128)
  4353  0036  0085               	movwf	5
  4354  0037  3020               	movlw	low __pdataBANK2
  4355  0038  0086               	movwf	6
  4356  0039  3001               	movlw	high __pdataBANK2
  4357  003A  0087               	movwf	7
  4358  003B  3019               	movlw	25
  4359  003C  3199  21E2         	fcall	init_ram
  4360                           
  4361                           ; Clear objects allocated to BANK1
  4362  003E  0021               	movlb	1	; select bank1
  4363  003F  01DE               	clrf	__pbssBANK1& (0+127)
  4364  0040  01DF               	clrf	(__pbssBANK1+1)& (0+127)
  4365  0041  01E0               	clrf	(__pbssBANK1+2)& (0+127)
  4366  0042  01E1               	clrf	(__pbssBANK1+3)& (0+127)
  4367  0043  01E2               	clrf	(__pbssBANK1+4)& (0+127)
  4368  0044  01E3               	clrf	(__pbssBANK1+5)& (0+127)
  4369  0045  01E4               	clrf	(__pbssBANK1+6)& (0+127)
  4370  0046  01E5               	clrf	(__pbssBANK1+7)& (0+127)
  4371  0047  01E6               	clrf	(__pbssBANK1+8)& (0+127)
  4372  0048  01E7               	clrf	(__pbssBANK1+9)& (0+127)
  4373  0049  01E8               	clrf	(__pbssBANK1+10)& (0+127)
  4374  004A                     end_of_initialization:	
  4375                           ;End of C runtime variable initialization code
  4376                           
  4377  004A                     __end_of__initialization:	
  4378  004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4379  004B  0020               	movlb	0
  4380  004C  318E  2E78         	ljmp	_main	;jump to C main() function
  4381                           
  4382                           	psect	dataCOMMON
  4383  007C                     __pdataCOMMON:	
  4384  007C                     _Key:	
  4385  007C                     	ds	1
  4386                           
  4387                           	psect	dataBANK0
  4388  0069                     __pdataBANK0:	
  4389  0069                     _count:	
  4390  0069                     	ds	2
  4391  006B                     _print_line:	
  4392  006B                     	ds	1
  4393                           
  4394                           	psect	bssBANK1
  4395  00DE                     __pbssBANK1:	
  4396  00DE                     _current:	
  4397  00DE                     	ds	3
  4398  00E1                     _ADC_InterruptHandler:	
  4399  00E1                     	ds	2
  4400  00E3                     _previousStateCLK:	
  4401  00E3                     	ds	2
  4402  00E5                     _currentStateCLK:	
  4403  00E5                     	ds	2
  4404  00E7                     _dac_out:	
  4405  00E7                     	ds	2
  4406                           
  4407                           	psect	dataBANK1
  4408  00A0                     __pdataBANK1:	
  4409  00A0                     _UPDOWN:	
  4410  00A0                     	ds	17
  4411  00B1                     _naif:	
  4412  00B1                     	ds	17
  4413                           
  4414                           	psect	dataBANK2
  4415  0120                     __pdataBANK2:	
  4416  0120                     _hello:	
  4417  0120                     	ds	25
  4418                           
  4419                           	psect	inittext
  4420  19E2                     init_ram:	
  4421  19E2  00FE               	movwf	126
  4422  19E3                     initloop:	
  4423  19E3  0012               	moviw fsr0++
  4424  19E4  001E               	movwi fsr1++
  4425  19E5  0BFE               	decfsz	126,f
  4426  19E6  29E3               	goto	initloop
  4427  19E7  3400               	retlw	0
  4428                           
  4429                           	psect	cstackBANK1
  4430  00C2                     __pcstackBANK1:	
  4431  00C2                     _sprintf$918:	
  4432                           
  4433                           ; 3 bytes @ 0x0
  4434  00C2                     	ds	3
  4435  00C5                     sprintf@ap:	
  4436                           
  4437                           ; 1 bytes @ 0x3
  4438  00C5                     	ds	1
  4439  00C6                     sprintf@flag:	
  4440                           
  4441                           ; 2 bytes @ 0x4
  4442  00C6                     	ds	2
  4443  00C8                     sprintf@exp:	
  4444                           
  4445                           ; 2 bytes @ 0x6
  4446  00C8                     	ds	2
  4447  00CA                     sprintf@tmpval:	
  4448                           
  4449                           ; 4 bytes @ 0x8
  4450  00CA                     	ds	4
  4451  00CE                     sprintf@val:	
  4452                           
  4453                           ; 4 bytes @ 0xC
  4454  00CE                     	ds	4
  4455  00D2                     sprintf@sp:	
  4456                           
  4457                           ; 1 bytes @ 0x10
  4458  00D2                     	ds	1
  4459  00D3                     sprintf@prec:	
  4460                           
  4461                           ; 2 bytes @ 0x11
  4462  00D3                     	ds	2
  4463  00D5                     sprintf@fval:	
  4464                           
  4465                           ; 3 bytes @ 0x13
  4466  00D5                     	ds	3
  4467  00D8                     sprintf@c:	
  4468                           
  4469                           ; 1 bytes @ 0x16
  4470  00D8                     	ds	1
  4471  00D9                     _main$913:	
  4472                           
  4473                           ; 3 bytes @ 0x17
  4474  00D9                     	ds	3
  4475  00DC                     _main$914:	
  4476                           
  4477                           ; 2 bytes @ 0x1A
  4478  00DC                     	ds	2
  4479                           
  4480                           	psect	cstackCOMMON
  4481  0070                     __pcstackCOMMON:	
  4482  0070                     ?_isdigit:	
  4483  0070                     ?_LCD_WriteCommand:	
  4484                           ; 1 bit 
  4485                           
  4486  0070                     ?_ADC_Initialize:	
  4487                           ; 1 bytes @ 0x0
  4488                           
  4489  0070                     ?_switch_press_scan:	
  4490                           ; 1 bytes @ 0x0
  4491                           
  4492  0070                     ?_DAC_CONFIG:	
  4493                           ; 1 bytes @ 0x0
  4494                           
  4495  0070                     ?_OSCILLATOR_Initialize:	
  4496                           ; 1 bytes @ 0x0
  4497                           
  4498  0070                     ?_LCD_Init:	
  4499                           ; 1 bytes @ 0x0
  4500                           
  4501  0070                     ?_LCD_WriteByte:	
  4502                           ; 1 bytes @ 0x0
  4503                           
  4504  0070                     ?_LCD_WriteData:	
  4505                           ; 1 bytes @ 0x0
  4506                           
  4507  0070                     ?_LCD_EnableGraphics:	
  4508                           ; 1 bytes @ 0x0
  4509                           
  4510  0070                     ?_LCD_DisableGraphics:	
  4511                           ; 1 bytes @ 0x0
  4512                           
  4513  0070                     ?_LCD_ClearGraphics:	
  4514                           ; 1 bytes @ 0x0
  4515                           
  4516  0070                     ?_keypad_scanner:	
  4517                           ; 1 bytes @ 0x0
  4518                           
  4519  0070                     ?_InitKeypad:	
  4520                           ; 1 bytes @ 0x0
  4521                           
  4522  0070                     ?_OP_AMP_init:	
  4523                           ; 1 bytes @ 0x0
  4524                           
  4525  0070                     ?_isr:	
  4526                           ; 1 bytes @ 0x0
  4527                           
  4528  0070                     ??_isr:	
  4529                           ; 1 bytes @ 0x0
  4530                           
  4531  0070                     ?_main:	
  4532                           ; 1 bytes @ 0x0
  4533                           
  4534                           
  4535                           ; 1 bytes @ 0x0
  4536  0070                     	ds	1
  4537  0071                     ?___ftge:	
  4538  0071                     ??_ADC_Initialize:	
  4539                           ; 1 bit 
  4540                           
  4541  0071                     ??_isdigit:	
  4542                           ; 1 bytes @ 0x1
  4543                           
  4544  0071                     ??_DAC_CONFIG:	
  4545                           ; 1 bytes @ 0x1
  4546                           
  4547  0071                     ?_DAC5_Load10bitInputData:	
  4548                           ; 1 bytes @ 0x1
  4549                           
  4550  0071                     ??_OSCILLATOR_Initialize:	
  4551                           ; 1 bytes @ 0x1
  4552                           
  4553  0071                     ??_LCD_WriteByte:	
  4554                           ; 1 bytes @ 0x1
  4555                           
  4556  0071                     ??_keypad_scanner:	
  4557                           ; 1 bytes @ 0x1
  4558                           
  4559  0071                     ??_InitKeypad:	
  4560                           ; 1 bytes @ 0x1
  4561                           
  4562  0071                     ??_OP_AMP_init:	
  4563                           ; 1 bytes @ 0x1
  4564                           
  4565  0071                     ?_ADC_GetConversion:	
  4566                           ; 1 bytes @ 0x1
  4567                           
  4568  0071                     ?___awmod:	
  4569                           ; 2 bytes @ 0x1
  4570                           
  4571  0071                     ?___ftpack:	
  4572                           ; 2 bytes @ 0x1
  4573                           
  4574  0071                     ?___ftneg:	
  4575                           ; 3 bytes @ 0x1
  4576                           
  4577  0071                     ?__tdiv_to_l_:	
  4578                           ; 3 bytes @ 0x1
  4579                           
  4580  0071                     ?__div_to_l_:	
  4581                           ; 4 bytes @ 0x1
  4582                           
  4583  0071                     ?___lldiv:	
  4584                           ; 4 bytes @ 0x1
  4585                           
  4586  0071                     _isdigit$693:	
  4587                           ; 4 bytes @ 0x1
  4588                           
  4589  0071                     DAC5_Load10bitInputData@input16BitData:	
  4590                           ; 1 bytes @ 0x1
  4591                           
  4592  0071                     ___awmod@divisor:	
  4593                           ; 2 bytes @ 0x1
  4594                           
  4595  0071                     __div_to_l_@f1:	
  4596                           ; 2 bytes @ 0x1
  4597                           
  4598  0071                     ___ftpack@arg:	
  4599                           ; 3 bytes @ 0x1
  4600                           
  4601  0071                     __tdiv_to_l_@f1:	
  4602                           ; 3 bytes @ 0x1
  4603                           
  4604  0071                     ___ftge@ff1:	
  4605                           ; 3 bytes @ 0x1
  4606                           
  4607  0071                     ___ftneg@f1:	
  4608                           ; 3 bytes @ 0x1
  4609                           
  4610  0071                     ___lldiv@divisor:	
  4611                           ; 3 bytes @ 0x1
  4612                           
  4613                           
  4614                           ; 4 bytes @ 0x1
  4615  0071                     	ds	1
  4616  0072                     isdigit@c:	
  4617                           
  4618                           ; 1 bytes @ 0x2
  4619  0072                     	ds	1
  4620  0073                     ??_ADC_GetConversion:	
  4621  0073                     ??_switch_press_scan:	
  4622                           ; 1 bytes @ 0x3
  4623                           
  4624  0073                     ??_DAC5_Load10bitInputData:	
  4625                           ; 1 bytes @ 0x3
  4626                           
  4627  0073                     LCD_WriteByte@command:	
  4628                           ; 1 bytes @ 0x3
  4629                           
  4630  0073                     ___awmod@dividend:	
  4631                           ; 1 bytes @ 0x3
  4632                           
  4633                           
  4634                           ; 2 bytes @ 0x3
  4635  0073                     	ds	1
  4636  0074                     ??_LCD_WriteCommand:	
  4637  0074                     ??_LCD_WriteData:	
  4638                           ; 1 bytes @ 0x4
  4639                           
  4640  0074                     ??___ftneg:	
  4641                           ; 1 bytes @ 0x4
  4642                           
  4643  0074                     LCD_WriteData@data:	
  4644                           ; 1 bytes @ 0x4
  4645                           
  4646  0074                     LCD_WriteCommand@command:	
  4647                           ; 1 bytes @ 0x4
  4648                           
  4649  0074                     switch_press_scan@key:	
  4650                           ; 1 bytes @ 0x4
  4651                           
  4652  0074                     ADC_GetConversion@channel:	
  4653                           ; 1 bytes @ 0x4
  4654                           
  4655  0074                     ___ftpack@exp:	
  4656                           ; 1 bytes @ 0x4
  4657                           
  4658  0074                     __div_to_l_@f2:	
  4659                           ; 1 bytes @ 0x4
  4660                           
  4661  0074                     __tdiv_to_l_@f2:	
  4662                           ; 3 bytes @ 0x4
  4663                           
  4664  0074                     ___ftge@ff2:	
  4665                           ; 3 bytes @ 0x4
  4666                           
  4667                           
  4668                           ; 3 bytes @ 0x4
  4669  0074                     	ds	1
  4670  0075                     ??_LCD_Init:	
  4671  0075                     ?_LCD_TextDisplayString:	
  4672                           ; 1 bytes @ 0x5
  4673                           
  4674  0075                     ??_LCD_EnableGraphics:	
  4675                           ; 1 bytes @ 0x5
  4676                           
  4677  0075                     ??_LCD_DisableGraphics:	
  4678                           ; 1 bytes @ 0x5
  4679                           
  4680  0075                     ?_LCD_FillScreenGraphics:	
  4681                           ; 1 bytes @ 0x5
  4682                           
  4683  0075                     ??_LCD_ClearGraphics:	
  4684                           ; 1 bytes @ 0x5
  4685                           
  4686  0075                     ??___awmod:	
  4687                           ; 1 bytes @ 0x5
  4688                           
  4689  0075                     ___ftpack@sign:	
  4690                           ; 1 bytes @ 0x5
  4691                           
  4692  0075                     LCD_TextDisplayString@string:	
  4693                           ; 1 bytes @ 0x5
  4694                           
  4695  0075                     LCD_FillScreenGraphics@graphic:	
  4696                           ; 2 bytes @ 0x5
  4697                           
  4698  0075                     ___lldiv@dividend:	
  4699                           ; 2 bytes @ 0x5
  4700                           
  4701                           
  4702                           ; 4 bytes @ 0x5
  4703  0075                     	ds	1
  4704  0076                     ??___ftpack:	
  4705  0076                     LCD_ClearGraphics@x:	
  4706                           ; 1 bytes @ 0x6
  4707                           
  4708  0076                     ___awmod@counter:	
  4709                           ; 1 bytes @ 0x6
  4710                           
  4711                           
  4712                           ; 1 bytes @ 0x6
  4713  0076                     	ds	1
  4714  0077                     ??__tdiv_to_l_:	
  4715  0077                     ??_LCD_TextDisplayString:	
  4716                           ; 1 bytes @ 0x7
  4717                           
  4718  0077                     ??___ftge:	
  4719                           ; 1 bytes @ 0x7
  4720                           
  4721  0077                     LCD_FillScreenGraphics@y:	
  4722                           ; 1 bytes @ 0x7
  4723                           
  4724  0077                     LCD_ClearGraphics@y:	
  4725                           ; 1 bytes @ 0x7
  4726                           
  4727  0077                     ___awmod@sign:	
  4728                           ; 1 bytes @ 0x7
  4729                           
  4730                           
  4731                           ; 1 bytes @ 0x7
  4732  0077                     	ds	1
  4733  0078                     ?___awdiv:	
  4734  0078                     LCD_TextDisplayString@addr:	
  4735                           ; 2 bytes @ 0x8
  4736                           
  4737  0078                     LCD_FillScreenGraphics@x:	
  4738                           ; 1 bytes @ 0x8
  4739                           
  4740  0078                     ___awdiv@divisor:	
  4741                           ; 1 bytes @ 0x8
  4742                           
  4743                           
  4744                           ; 2 bytes @ 0x8
  4745  0078                     	ds	1
  4746  0079                     ??___lldiv:	
  4747  0079                     ??___lltoft:	
  4748                           ; 1 bytes @ 0x9
  4749                           
  4750  0079                     ?___lwtoft:	
  4751                           ; 1 bytes @ 0x9
  4752                           
  4753  0079                     LCD_TextDisplayString@i:	
  4754                           ; 3 bytes @ 0x9
  4755                           
  4756  0079                     ___lwtoft@c:	
  4757                           ; 1 bytes @ 0x9
  4758                           
  4759                           
  4760                           ; 2 bytes @ 0x9
  4761  0079                     	ds	1
  4762  007A                     ??___llmod:	
  4763  007A                     LCD_TextDisplayString@line:	
  4764                           ; 1 bytes @ 0xA
  4765                           
  4766  007A                     ___lltoft@exp:	
  4767                           ; 1 bytes @ 0xA
  4768                           
  4769  007A                     ___awdiv@dividend:	
  4770                           ; 1 bytes @ 0xA
  4771                           
  4772                           
  4773                           ; 2 bytes @ 0xA
  4774  007A                     	ds	1
  4775  007B                     ___llmod@counter:	
  4776                           
  4777                           ; 1 bytes @ 0xB
  4778  007B                     	ds	1
  4779  007C                     ??___wmul:	
  4780  007C                     ??___ftsub:	
  4781                           ; 1 bytes @ 0xC
  4782                           
  4783                           
  4784                           	psect	cstackBANK0
  4785  0020                     __pcstackBANK0:	
  4786                           ; 1 bytes @ 0xC
  4787                           
  4788  0020                     ??__div_to_l_:	
  4789  0020                     ??_LCD_FillScreenGraphics:	
  4790                           ; 1 bytes @ 0x0
  4791                           
  4792  0020                     ??___awdiv:	
  4793                           ; 1 bytes @ 0x0
  4794                           
  4795  0020                     ??___lwtoft:	
  4796                           ; 1 bytes @ 0x0
  4797                           
  4798  0020                     ?___lltoft:	
  4799                           ; 1 bytes @ 0x0
  4800                           
  4801  0020                     __tdiv_to_l_@quot:	
  4802                           ; 3 bytes @ 0x0
  4803                           
  4804  0020                     ___lldiv@quotient:	
  4805                           ; 4 bytes @ 0x0
  4806                           
  4807  0020                     ___lltoft@c:	
  4808                           ; 4 bytes @ 0x0
  4809                           
  4810                           
  4811                           ; 4 bytes @ 0x0
  4812  0020                     	ds	1
  4813  0021                     ___awdiv@counter:	
  4814                           
  4815                           ; 1 bytes @ 0x1
  4816  0021                     	ds	1
  4817  0022                     ___awdiv@sign:	
  4818                           
  4819                           ; 1 bytes @ 0x2
  4820  0022                     	ds	1
  4821  0023                     ___awdiv@quotient:	
  4822                           
  4823                           ; 2 bytes @ 0x3
  4824  0023                     	ds	1
  4825  0024                     __tdiv_to_l_@cntr:	
  4826  0024                     ___lldiv@counter:	
  4827                           ; 1 bytes @ 0x4
  4828                           
  4829                           
  4830                           ; 1 bytes @ 0x4
  4831  0024                     	ds	1
  4832  0025                     ?___wmul:	
  4833  0025                     ?___llmod:	
  4834                           ; 2 bytes @ 0x5
  4835                           
  4836  0025                     __tdiv_to_l_@exp1:	
  4837                           ; 4 bytes @ 0x5
  4838                           
  4839  0025                     ___wmul@multiplier:	
  4840                           ; 1 bytes @ 0x5
  4841                           
  4842  0025                     ___llmod@divisor:	
  4843                           ; 2 bytes @ 0x5
  4844                           
  4845                           
  4846                           ; 4 bytes @ 0x5
  4847  0025                     	ds	2
  4848  0027                     ___wmul@multiplicand:	
  4849                           
  4850                           ; 2 bytes @ 0x7
  4851  0027                     	ds	1
  4852  0028                     __div_to_l_@quot:	
  4853                           
  4854                           ; 4 bytes @ 0x8
  4855  0028                     	ds	1
  4856  0029                     ___wmul@product:	
  4857  0029                     ___llmod@dividend:	
  4858                           ; 2 bytes @ 0x9
  4859                           
  4860                           
  4861                           ; 4 bytes @ 0x9
  4862  0029                     	ds	2
  4863  002B                     ?___ftmul:	
  4864  002B                     ___ftmul@f1:	
  4865                           ; 3 bytes @ 0xB
  4866                           
  4867                           
  4868                           ; 3 bytes @ 0xB
  4869  002B                     	ds	1
  4870  002C                     __div_to_l_@cntr:	
  4871                           
  4872                           ; 1 bytes @ 0xC
  4873  002C                     	ds	1
  4874  002D                     __div_to_l_@exp1:	
  4875                           
  4876                           ; 1 bytes @ 0xD
  4877  002D                     	ds	1
  4878  002E                     ___ftmul@f2:	
  4879                           
  4880                           ; 3 bytes @ 0xE
  4881  002E                     	ds	3
  4882  0031                     ??___ftmul:	
  4883                           
  4884                           ; 1 bytes @ 0x11
  4885  0031                     	ds	4
  4886  0035                     ___ftmul@exp:	
  4887                           
  4888                           ; 1 bytes @ 0x15
  4889  0035                     	ds	1
  4890  0036                     ___ftmul@f3_as_product:	
  4891                           
  4892                           ; 3 bytes @ 0x16
  4893  0036                     	ds	3
  4894  0039                     ___ftmul@cntr:	
  4895                           
  4896                           ; 1 bytes @ 0x19
  4897  0039                     	ds	1
  4898  003A                     ___ftmul@sign:	
  4899                           
  4900                           ; 1 bytes @ 0x1A
  4901  003A                     	ds	1
  4902  003B                     ?_fround:	
  4903  003B                     ?_scale:	
  4904                           ; 3 bytes @ 0x1B
  4905                           
  4906                           
  4907                           ; 3 bytes @ 0x1B
  4908  003B                     	ds	3
  4909  003E                     ??_fround:	
  4910  003E                     ??_scale:	
  4911                           ; 1 bytes @ 0x1E
  4912                           
  4913                           
  4914                           ; 1 bytes @ 0x1E
  4915  003E                     	ds	2
  4916  0040                     _scale$917:	
  4917                           
  4918                           ; 3 bytes @ 0x20
  4919  0040                     	ds	2
  4920  0042                     _fround$916:	
  4921                           
  4922                           ; 3 bytes @ 0x22
  4923  0042                     	ds	1
  4924  0043                     scale@scl:	
  4925                           
  4926                           ; 1 bytes @ 0x23
  4927  0043                     	ds	1
  4928  0044                     ?___fttol:	
  4929  0044                     ___fttol@f1:	
  4930                           ; 4 bytes @ 0x24
  4931                           
  4932                           
  4933                           ; 3 bytes @ 0x24
  4934  0044                     	ds	1
  4935  0045                     _fround$915:	
  4936                           
  4937                           ; 3 bytes @ 0x25
  4938  0045                     	ds	3
  4939  0048                     ??___fttol:	
  4940  0048                     fround@prec:	
  4941                           ; 1 bytes @ 0x28
  4942                           
  4943                           
  4944                           ; 1 bytes @ 0x28
  4945  0048                     	ds	1
  4946  0049                     ?___ftadd:	
  4947  0049                     ___ftadd@f1:	
  4948                           ; 3 bytes @ 0x29
  4949                           
  4950                           
  4951                           ; 3 bytes @ 0x29
  4952  0049                     	ds	3
  4953  004C                     ___fttol@sign1:	
  4954  004C                     ___ftadd@f2:	
  4955                           ; 1 bytes @ 0x2C
  4956                           
  4957                           
  4958                           ; 3 bytes @ 0x2C
  4959  004C                     	ds	1
  4960  004D                     ___fttol@lval:	
  4961                           
  4962                           ; 4 bytes @ 0x2D
  4963  004D                     	ds	2
  4964  004F                     ??___ftadd:	
  4965                           
  4966                           ; 1 bytes @ 0x2F
  4967  004F                     	ds	2
  4968  0051                     ___fttol@exp1:	
  4969                           
  4970                           ; 1 bytes @ 0x31
  4971  0051                     	ds	2
  4972  0053                     ___ftadd@sign:	
  4973                           
  4974                           ; 1 bytes @ 0x33
  4975  0053                     	ds	1
  4976  0054                     ___ftadd@exp2:	
  4977                           
  4978                           ; 1 bytes @ 0x34
  4979  0054                     	ds	1
  4980  0055                     ___ftadd@exp1:	
  4981                           
  4982                           ; 1 bytes @ 0x35
  4983  0055                     	ds	1
  4984  0056                     ?___ftsub:	
  4985  0056                     ___ftsub@f2:	
  4986                           ; 3 bytes @ 0x36
  4987                           
  4988                           
  4989                           ; 3 bytes @ 0x36
  4990  0056                     	ds	3
  4991  0059                     ___ftsub@f1:	
  4992                           
  4993                           ; 3 bytes @ 0x39
  4994  0059                     	ds	3
  4995  005C                     ?_sprintf:	
  4996  005C                     sprintf@f:	
  4997                           ; 2 bytes @ 0x3C
  4998                           
  4999                           
  5000                           ; 2 bytes @ 0x3C
  5001  005C                     	ds	5
  5002  0061                     ??_sprintf:	
  5003                           
  5004                           ; 1 bytes @ 0x41
  5005  0061                     	ds	6
  5006  0067                     ??_main:	
  5007                           
  5008                           ; 1 bytes @ 0x47
  5009  0067                     	ds	2
  5010                           
  5011                           	psect	maintext
  5012  0E78                     __pmaintext:	
  5013 ;;
  5014 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5015 ;;
  5016 ;; *************** function _main *****************
  5017 ;; Defined at:
  5018 ;;		line 126 in file "LOAD20210.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : B1F/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5033 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5034 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5035 ;;      Totals:         0       2       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5036 ;;Total ram usage:        7 bytes
  5037 ;; Hardware stack levels required when called:    5
  5038 ;; This function calls:
  5039 ;;		_ADC_GetConversion
  5040 ;;		_ADC_Initialize
  5041 ;;		_DAC5_Load10bitInputData
  5042 ;;		_DAC_CONFIG
  5043 ;;		_InitKeypad
  5044 ;;		_LCD_ClearGraphics
  5045 ;;		_LCD_DisableGraphics
  5046 ;;		_LCD_EnableGraphics
  5047 ;;		_LCD_FillScreenGraphics
  5048 ;;		_LCD_Init
  5049 ;;		_LCD_TextDisplayString
  5050 ;;		_OP_AMP_init
  5051 ;;		_OSCILLATOR_Initialize
  5052 ;;		___ftadd
  5053 ;;		___ftmul
  5054 ;;		___lwtoft
  5055 ;;		___wmul
  5056 ;;		_sprintf
  5057 ;;		_switch_press_scan
  5058 ;; This function is called by:
  5059 ;;		Startup code after reset
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           
  5064                           ;psect for function _main
  5065  0E78                     _main:	
  5066                           
  5067                           ;LOAD20210.c: 129: OSCILLATOR_Initialize();
  5068                           
  5069                           ;incstack = 0
  5070                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5071  0E78  3199  21F6  318E   	fcall	_OSCILLATOR_Initialize
  5072                           
  5073                           ;LOAD20210.c: 131: DAC_CONFIG();
  5074  0E7B  31A7  27FA  318E   	fcall	_DAC_CONFIG
  5075                           
  5076                           ;LOAD20210.c: 132: OP_AMP_init();
  5077  0E7E  319A  2205  318E   	fcall	_OP_AMP_init
  5078                           
  5079                           ;LOAD20210.c: 134: TRISC = 0xBF;
  5080  0E81  30BF               	movlw	191
  5081  0E82  0021               	movlb	1	; select bank1
  5082  0E83  008E               	movwf	14	;volatile
  5083                           
  5084                           ;LOAD20210.c: 135: ANSELC = 0xFC;
  5085  0E84  30FC               	movlw	252
  5086  0E85  0023               	movlb	3	; select bank3
  5087  0E86  008E               	movwf	14	;volatile
  5088                           
  5089                           ;LOAD20210.c: 138: TRISA=0b00001011;
  5090  0E87  300B               	movlw	11
  5091  0E88  0021               	movlb	1	; select bank1
  5092  0E89  008C               	movwf	12	;volatile
  5093                           
  5094                           ;LOAD20210.c: 139: ANSELA=0;
  5095  0E8A  0023               	movlb	3	; select bank3
  5096  0E8B  018C               	clrf	12	;volatile
  5097                           
  5098                           ;LOAD20210.c: 140: INLVLA=0;
  5099  0E8C  0027               	movlb	7	; select bank7
  5100  0E8D  018C               	clrf	12	;volatile
  5101                           
  5102                           ;LOAD20210.c: 142: ADC_Initialize();
  5103  0E8E  319A  2215  318E   	fcall	_ADC_Initialize
  5104                           
  5105                           ;LOAD20210.c: 146: TRISB=0;
  5106  0E91  0021               	movlb	1	; select bank1
  5107  0E92  018D               	clrf	13	;volatile
  5108                           
  5109                           ;LOAD20210.c: 147: ANSELB=0;
  5110  0E93  0023               	movlb	3	; select bank3
  5111  0E94  018D               	clrf	13	;volatile
  5112                           
  5113                           ;LOAD20210.c: 148: ODCONB=0;
  5114  0E95  0025               	movlb	5	; select bank5
  5115  0E96  018D               	clrf	13	;volatile
  5116                           
  5117                           ;LOAD20210.c: 149: SLRCONB=0;
  5118  0E97  0026               	movlb	6	; select bank6
  5119  0E98  018D               	clrf	13	;volatile
  5120                           
  5121                           ;LOAD20210.c: 152: InitKeypad();
  5122  0E99  319A  221E  318E   	fcall	_InitKeypad
  5123                           
  5124                           ;LOAD20210.c: 154: LCD_Init( );
  5125  0E9C  319C  24B4  318E   	fcall	_LCD_Init
  5126                           
  5127                           ;LOAD20210.c: 155: LCD_EnableGraphics();
  5128  0E9F  319A  22F3  318E   	fcall	_LCD_EnableGraphics
  5129                           
  5130                           ;LOAD20210.c: 156: LCD_ClearGraphics();
  5131  0EA2  319B  2318  318E   	fcall	_LCD_ClearGraphics
  5132                           
  5133                           ;LOAD20210.c: 157: LCD_FillScreenGraphics(des);
  5134  0EA5  3031               	movlw	low (_des| (0+32768))
  5135  0EA6  00F5               	movwf	LCD_FillScreenGraphics@graphic
  5136  0EA7  3086               	movlw	high (_des| (0+32768))
  5137  0EA8  00F6               	movwf	LCD_FillScreenGraphics@graphic+1
  5138  0EA9  3190  202B  318E   	fcall	_LCD_FillScreenGraphics
  5139                           
  5140                           ;LOAD20210.c: 158: _delay((unsigned long)((1000)*(16000000/4000.0)));
  5141  0EAC  3015               	movlw	21
  5142  0EAD  0020               	movlb	0	; select bank0
  5143  0EAE  00E8               	movwf	??_main+1
  5144  0EAF  304B               	movlw	75
  5145  0EB0  00E7               	movwf	??_main
  5146  0EB1  30BE               	movlw	190
  5147  0EB2                     u7837:	
  5148  0EB2  0B89               	decfsz	9,f
  5149  0EB3  2EB2               	goto	u7837
  5150  0EB4  0BE7               	decfsz	??_main,f
  5151  0EB5  2EB2               	goto	u7837
  5152  0EB6  0BE8               	decfsz	??_main+1,f
  5153  0EB7  2EB2               	goto	u7837
  5154  0EB8  0000               	nop
  5155                           
  5156                           ;LOAD20210.c: 159: LCD_ClearGraphics();
  5157  0EB9  319B  2318  318E   	fcall	_LCD_ClearGraphics
  5158                           
  5159                           ;LOAD20210.c: 160: LCD_DisableGraphics();
  5160  0EBC  319A  2228  318E   	fcall	_LCD_DisableGraphics
  5161                           
  5162                           ;LOAD20210.c: 163: previousStateCLK = PORTAbits.RA1;
  5163  0EBF  0020               	movlb	0	; select bank0
  5164  0EC0  0C0C               	rrf	12,w	;volatile
  5165  0EC1  3901               	andlw	1
  5166  0EC2  00E7               	movwf	??_main
  5167  0EC3  01E8               	clrf	??_main+1
  5168  0EC4  0867               	movf	??_main,w
  5169  0EC5  0021               	movlb	1	; select bank1
  5170  0EC6  00E3               	movwf	_previousStateCLK^(0+128)
  5171  0EC7  0020               	movlb	0	; select bank0
  5172  0EC8  0868               	movf	??_main+1,w
  5173  0EC9  0021               	movlb	1	; select bank1
  5174  0ECA  00E4               	movwf	(_previousStateCLK+1)^(0+128)
  5175  0ECB                     l4809:	
  5176                           ;LOAD20210.c: 167: while(1)
  5177                           
  5178                           
  5179                           ;LOAD20210.c: 168: {
  5180                           ;LOAD20210.c: 169: current= (ADC_GetConversion(channel_AN5)* 0.004882812);
  5181  0ECB  3000               	movlw	0
  5182  0ECC  0020               	movlb	0	; select bank0
  5183  0ECD  00AB               	movwf	___ftmul@f1
  5184  0ECE  30A0               	movlw	160
  5185  0ECF  00AC               	movwf	___ftmul@f1+1
  5186  0ED0  303B               	movlw	59
  5187  0ED1  00AD               	movwf	___ftmul@f1+2
  5188  0ED2  3005               	movlw	5
  5189  0ED3  319A  2265  318E   	fcall	_ADC_GetConversion
  5190  0ED6  0872               	movf	?_ADC_GetConversion+1,w
  5191  0ED7  00FA               	movwf	___lwtoft@c+1
  5192  0ED8  0871               	movf	?_ADC_GetConversion,w
  5193  0ED9  00F9               	movwf	___lwtoft@c
  5194  0EDA  319A  2251  318E   	fcall	___lwtoft
  5195  0EDD  0879               	movf	?___lwtoft,w
  5196  0EDE  0020               	movlb	0	; select bank0
  5197  0EDF  00AE               	movwf	___ftmul@f2
  5198  0EE0  087A               	movf	?___lwtoft+1,w
  5199  0EE1  00AF               	movwf	___ftmul@f2+1
  5200  0EE2  087B               	movf	?___lwtoft+2,w
  5201  0EE3  00B0               	movwf	___ftmul@f2+2
  5202  0EE4  319E  2696  318E   	fcall	___ftmul
  5203  0EE7  0020               	movlb	0	; select bank0
  5204  0EE8  082B               	movf	?___ftmul,w
  5205  0EE9  0021               	movlb	1	; select bank1
  5206  0EEA  00DE               	movwf	_current^(0+128)
  5207  0EEB  0020               	movlb	0	; select bank0
  5208  0EEC  082C               	movf	?___ftmul+1,w
  5209  0EED  0021               	movlb	1	; select bank1
  5210  0EEE  00DF               	movwf	(_current+1)^(0+128)
  5211  0EEF  0020               	movlb	0	; select bank0
  5212  0EF0  082D               	movf	?___ftmul+2,w
  5213  0EF1  0021               	movlb	1	; select bank1
  5214  0EF2  00E0               	movwf	(_current+2)^(0+128)
  5215                           
  5216                           ;LOAD20210.c: 173: naif[3]=' ';
  5217  0EF3  3020               	movlw	32
  5218  0EF4  0020               	movlb	0	; select bank0
  5219  0EF5  00E7               	movwf	??_main
  5220  0EF6  0867               	movf	??_main,w
  5221  0EF7  0021               	movlb	1	; select bank1
  5222  0EF8  00B4               	movwf	(_naif^(0+128)+3)
  5223                           
  5224                           ;LOAD20210.c: 177: sprintf(naif,"%.2f", (current-0.11));
  5225  0EF9  3048               	movlw	72
  5226  0EFA  0020               	movlb	0	; select bank0
  5227  0EFB  00C9               	movwf	___ftadd@f1
  5228  0EFC  30E1               	movlw	225
  5229  0EFD  00CA               	movwf	___ftadd@f1+1
  5230  0EFE  30BD               	movlw	189
  5231  0EFF  00CB               	movwf	___ftadd@f1+2
  5232  0F00  0021               	movlb	1	; select bank1
  5233  0F01  085E               	movf	_current^(0+128),w
  5234  0F02  0020               	movlb	0	; select bank0
  5235  0F03  00CC               	movwf	___ftadd@f2
  5236  0F04  0021               	movlb	1	; select bank1
  5237  0F05  085F               	movf	(_current+1)^(0+128),w
  5238  0F06  0020               	movlb	0	; select bank0
  5239  0F07  00CD               	movwf	___ftadd@f2+1
  5240  0F08  0021               	movlb	1	; select bank1
  5241  0F09  0860               	movf	(_current+2)^(0+128),w
  5242  0F0A  0020               	movlb	0	; select bank0
  5243  0F0B  00CE               	movwf	___ftadd@f2+2
  5244  0F0C  3190  20FC  318E   	fcall	___ftadd
  5245  0F0F  0020               	movlb	0	; select bank0
  5246  0F10  0849               	movf	?___ftadd,w
  5247  0F11  0021               	movlb	1	; select bank1
  5248  0F12  00D9               	movwf	_main$913^(0+128)
  5249  0F13  0020               	movlb	0	; select bank0
  5250  0F14  084A               	movf	?___ftadd+1,w
  5251  0F15  0021               	movlb	1	; select bank1
  5252  0F16  00DA               	movwf	(_main$913+1)^(0+128)
  5253  0F17  0020               	movlb	0	; select bank0
  5254  0F18  084B               	movf	?___ftadd+2,w
  5255  0F19  0021               	movlb	1	; select bank1
  5256  0F1A  00DB               	movwf	(_main$913+2)^(0+128)
  5257                           
  5258                           ;LOAD20210.c: 177: sprintf(naif,"%.2f", (current-0.11));
  5259  0F1B  3000               	movlw	low (STR_1| (0+32768))
  5260  0F1C  0020               	movlb	0	; select bank0
  5261  0F1D  00DC               	movwf	sprintf@f
  5262  0F1E  30A8               	movlw	high (STR_1| (0+32768))
  5263  0F1F  00DD               	movwf	sprintf@f+1
  5264  0F20  0021               	movlb	1	; select bank1
  5265  0F21  0859               	movf	_main$913^(0+128),w
  5266  0F22  0020               	movlb	0	; select bank0
  5267  0F23  00DE               	movwf	?_sprintf+2
  5268  0F24  0021               	movlb	1	; select bank1
  5269  0F25  085A               	movf	(_main$913+1)^(0+128),w
  5270  0F26  0020               	movlb	0	; select bank0
  5271  0F27  00DF               	movwf	?_sprintf+3
  5272  0F28  0021               	movlb	1	; select bank1
  5273  0F29  085B               	movf	(_main$913+2)^(0+128),w
  5274  0F2A  0020               	movlb	0	; select bank0
  5275  0F2B  00E0               	movwf	?_sprintf+4
  5276  0F2C  30B1               	movlw	(low (_naif| 0))& (0+255)
  5277  0F2D  3180  204E  318E   	fcall	_sprintf
  5278                           
  5279                           ;LOAD20210.c: 179: LCD_TextDisplayString( 3, "Current   in mA:");
  5280  0F30  3031               	movlw	low (STR_2| (0+32768))
  5281  0F31  00F5               	movwf	LCD_TextDisplayString@string
  5282  0F32  308A               	movlw	high (STR_2| (0+32768))
  5283  0F33  00F6               	movwf	LCD_TextDisplayString@string+1
  5284  0F34  3003               	movlw	3
  5285  0F35  318E  2644  318E   	fcall	_LCD_TextDisplayString
  5286                           
  5287                           ;LOAD20210.c: 180: LCD_TextDisplayString( 4, naif);
  5288  0F38  30B1               	movlw	low _naif
  5289  0F39  00F5               	movwf	LCD_TextDisplayString@string
  5290  0F3A  3000               	movlw	high _naif
  5291  0F3B  00F6               	movwf	LCD_TextDisplayString@string+1
  5292  0F3C  3004               	movlw	4
  5293  0F3D  318E  2644  318E   	fcall	_LCD_TextDisplayString
  5294                           
  5295                           ;LOAD20210.c: 184: if(PORTAbits.RA3==0)
  5296  0F40  0020               	movlb	0	; select bank0
  5297  0F41  198C               	btfsc	12,3	;volatile
  5298  0F42  2F47               	goto	l4825
  5299                           
  5300                           ;LOAD20210.c: 185: {
  5301                           ;LOAD20210.c: 186: count =520;
  5302  0F43  3008               	movlw	8
  5303  0F44  00E9               	movwf	_count
  5304  0F45  3002               	movlw	2
  5305  0F46  00EA               	movwf	_count+1
  5306  0F47                     l4825:	
  5307                           
  5308                           ;LOAD20210.c: 189: }
  5309                           ;LOAD20210.c: 191: if (PORTAbits.RA1 == 0)
  5310  0F47  188C               	btfsc	12,1	;volatile
  5311  0F48  2F8C               	goto	l290
  5312                           
  5313                           ;LOAD20210.c: 192: {
  5314                           ;LOAD20210.c: 193: _delay((unsigned long)((10)*(16000000/4000.0)));
  5315  0F49  3034               	movlw	52
  5316  0F4A  0020               	movlb	0	; select bank0
  5317  0F4B  00E7               	movwf	??_main
  5318  0F4C  30F1               	movlw	241
  5319  0F4D                     u7847:	
  5320  0F4D  0B89               	decfsz	9,f
  5321  0F4E  2F4D               	goto	u7847
  5322  0F4F  0BE7               	decfsz	??_main,f
  5323  0F50  2F4D               	goto	u7847
  5324  0F51  3200               	nop2
  5325                           
  5326                           ;LOAD20210.c: 194: currentStateCLK = PORTAbits.RA1;
  5327  0F52  0020               	movlb	0	; select bank0
  5328  0F53  0C0C               	rrf	12,w	;volatile
  5329  0F54  3901               	andlw	1
  5330  0F55  00E7               	movwf	??_main
  5331  0F56  01E8               	clrf	??_main+1
  5332  0F57  0867               	movf	??_main,w
  5333  0F58  0021               	movlb	1	; select bank1
  5334  0F59  00E5               	movwf	_currentStateCLK^(0+128)
  5335  0F5A  0020               	movlb	0	; select bank0
  5336  0F5B  0868               	movf	??_main+1,w
  5337  0F5C  0021               	movlb	1	; select bank1
  5338  0F5D  00E6               	movwf	(_currentStateCLK+1)^(0+128)
  5339                           
  5340                           ;LOAD20210.c: 199: if (PORTAbits.RA0 != currentStateCLK) {
  5341  0F5E  0020               	movlb	0	; select bank0
  5342  0F5F  080C               	movf	12,w	;volatile
  5343  0F60  3901               	andlw	1
  5344  0F61  00E7               	movwf	??_main
  5345  0F62  01E8               	clrf	??_main+1
  5346  0F63  0021               	movlb	1	; select bank1
  5347  0F64  0866               	movf	(_currentStateCLK+1)^(0+128),w
  5348  0F65  0020               	movlb	0	; select bank0
  5349  0F66  0668               	xorwf	??_main+1,w
  5350  0F67  1D03               	skipz
  5351  0F68  2F6D               	goto	u7785
  5352  0F69  0021               	movlb	1	; select bank1
  5353  0F6A  0865               	movf	_currentStateCLK^(0+128),w
  5354  0F6B  0020               	movlb	0	; select bank0
  5355  0F6C  0667               	xorwf	??_main,w
  5356  0F6D                     u7785:	
  5357  0F6D  1903               	skipnz
  5358  0F6E  2F83               	goto	l4837
  5359                           
  5360                           ;LOAD20210.c: 200: count --;
  5361  0F6F  30FF               	movlw	255
  5362  0F70  07E9               	addwf	_count,f
  5363  0F71  30FF               	movlw	255
  5364  0F72  3DEA               	addwfc	_count+1,f
  5365                           
  5366                           ;LOAD20210.c: 201: if (count <520)
  5367  0F73  086A               	movf	_count+1,w
  5368  0F74  3A80               	xorlw	128
  5369  0F75  00E7               	movwf	??_main
  5370  0F76  3082               	movlw	130
  5371  0F77  0267               	subwf	??_main,w
  5372  0F78  3008               	movlw	8
  5373  0F79  1903               	btfsc	3,2
  5374  0F7A  0269               	subwf	_count,w
  5375  0F7B  1803               	skipnc
  5376  0F7C  2F87               	goto	l293
  5377                           
  5378                           ;LOAD20210.c: 202: {
  5379                           ;LOAD20210.c: 203: count =520;
  5380  0F7D  3008               	movlw	8
  5381  0F7E  0020               	movlb	0	; select bank0
  5382  0F7F  00E9               	movwf	_count
  5383  0F80  3002               	movlw	2
  5384  0F81  00EA               	movwf	_count+1
  5385                           
  5386                           ;LOAD20210.c: 204: }
  5387                           ;LOAD20210.c: 207: } else {
  5388  0F82  2F87               	goto	l293
  5389  0F83                     l4837:	
  5390                           
  5391                           ;LOAD20210.c: 209: count ++;
  5392  0F83  3001               	movlw	1
  5393  0F84  07E9               	addwf	_count,f
  5394  0F85  3000               	movlw	0
  5395  0F86  3DEA               	addwfc	_count+1,f
  5396  0F87                     l293:	
  5397                           
  5398                           ;LOAD20210.c: 213: }
  5399                           ;LOAD20210.c: 214: previousStateCLK = currentStateCLK;
  5400  0F87  0021               	movlb	1	; select bank1
  5401  0F88  0866               	movf	(_currentStateCLK+1)^(0+128),w
  5402  0F89  00E4               	movwf	(_previousStateCLK+1)^(0+128)
  5403  0F8A  0865               	movf	_currentStateCLK^(0+128),w
  5404  0F8B  00E3               	movwf	_previousStateCLK^(0+128)
  5405  0F8C                     l290:	
  5406                           
  5407                           ;LOAD20210.c: 216: }
  5408                           ;LOAD20210.c: 219: naif[3]=' ';
  5409  0F8C  3020               	movlw	32
  5410  0F8D  0020               	movlb	0	; select bank0
  5411  0F8E  00E7               	movwf	??_main
  5412  0F8F  0867               	movf	??_main,w
  5413  0F90  0021               	movlb	1	; select bank1
  5414  0F91  00B4               	movwf	(_naif^(0+128)+3)
  5415                           
  5416                           ;LOAD20210.c: 220: sprintf(naif,"%d", (count *5)+1);
  5417  0F92  0020               	movlb	0	; select bank0
  5418  0F93  086A               	movf	_count+1,w
  5419  0F94  00A6               	movwf	___wmul@multiplier+1
  5420  0F95  0869               	movf	_count,w
  5421  0F96  00A5               	movwf	___wmul@multiplier
  5422  0F97  3005               	movlw	5
  5423  0F98  00A7               	movwf	___wmul@multiplicand
  5424  0F99  3000               	movlw	0
  5425  0F9A  00A8               	movwf	___wmul@multiplicand+1
  5426  0F9B  319A  2297  318E   	fcall	___wmul
  5427  0F9E  0020               	movlb	0	; select bank0
  5428  0F9F  0825               	movf	?___wmul,w
  5429  0FA0  3E01               	addlw	1
  5430  0FA1  0021               	movlb	1	; select bank1
  5431  0FA2  00DC               	movwf	_main$914^(0+128)
  5432  0FA3  3000               	movlw	0
  5433  0FA4  0020               	movlb	0	; select bank0
  5434  0FA5  3D26               	addwfc	?___wmul+1,w
  5435  0FA6  0021               	movlb	1	; select bank1
  5436  0FA7  00DD               	movwf	(_main$914+1)^(0+128)
  5437                           
  5438                           ;LOAD20210.c: 220: sprintf(naif,"%d", (count *5)+1);
  5439  0FA8  3005               	movlw	low (STR_3| (0+32768))
  5440  0FA9  0020               	movlb	0	; select bank0
  5441  0FAA  00DC               	movwf	sprintf@f
  5442  0FAB  30A8               	movlw	high (STR_3| (0+32768))
  5443  0FAC  00DD               	movwf	sprintf@f+1
  5444  0FAD  0021               	movlb	1	; select bank1
  5445  0FAE  085D               	movf	(_main$914+1)^(0+128),w
  5446  0FAF  0020               	movlb	0	; select bank0
  5447  0FB0  00DF               	movwf	?_sprintf+3
  5448  0FB1  0021               	movlb	1	; select bank1
  5449  0FB2  085C               	movf	_main$914^(0+128),w
  5450  0FB3  0020               	movlb	0	; select bank0
  5451  0FB4  00DE               	movwf	?_sprintf+2
  5452  0FB5  30B1               	movlw	(low (_naif| 0))& (0+255)
  5453  0FB6  3180  204E  318E   	fcall	_sprintf
  5454                           
  5455                           ;LOAD20210.c: 221: LCD_TextDisplayString( 1, "DAC out   in mv:");
  5456  0FB9  3076               	movlw	low (STR_4| (0+32768))
  5457  0FBA  00F5               	movwf	LCD_TextDisplayString@string
  5458  0FBB  30A0               	movlw	high (STR_4| (0+32768))
  5459  0FBC  00F6               	movwf	LCD_TextDisplayString@string+1
  5460  0FBD  3001               	movlw	1
  5461  0FBE  318E  2644  318E   	fcall	_LCD_TextDisplayString
  5462                           
  5463                           ;LOAD20210.c: 222: LCD_TextDisplayString( 2, naif);
  5464  0FC1  30B1               	movlw	low _naif
  5465  0FC2  00F5               	movwf	LCD_TextDisplayString@string
  5466  0FC3  3000               	movlw	high _naif
  5467  0FC4  00F6               	movwf	LCD_TextDisplayString@string+1
  5468  0FC5  3002               	movlw	2
  5469  0FC6  318E  2644  318E   	fcall	_LCD_TextDisplayString
  5470                           
  5471                           ;LOAD20210.c: 226: UPDOWN[1]=switch_press_scan();
  5472  0FC9  319A  2243  318E   	fcall	_switch_press_scan
  5473  0FCC  0020               	movlb	0	; select bank0
  5474  0FCD  00E7               	movwf	??_main
  5475  0FCE  0867               	movf	??_main,w
  5476  0FCF  0021               	movlb	1	; select bank1
  5477  0FD0  00A1               	movwf	(_UPDOWN^(0+128)+1)
  5478                           
  5479                           ;LOAD20210.c: 231: DAC5_Load10bitInputData(count*64);
  5480  0FD1  0020               	movlb	0	; select bank0
  5481  0FD2  086A               	movf	_count+1,w
  5482  0FD3  00E8               	movwf	??_main+1
  5483  0FD4  0869               	movf	_count,w
  5484  0FD5  00E7               	movwf	??_main
  5485  0FD6  3006               	movlw	6
  5486  0FD7                     u7805:	
  5487  0FD7  35E7               	lslf	??_main,f
  5488  0FD8  0DE8               	rlf	??_main+1,f
  5489  0FD9  0B89               	decfsz	9,f
  5490  0FDA  2FD7               	goto	u7805
  5491  0FDB  0867               	movf	??_main,w
  5492  0FDC  00F1               	movwf	DAC5_Load10bitInputData@input16BitData
  5493  0FDD  0868               	movf	??_main+1,w
  5494  0FDE  00F2               	movwf	DAC5_Load10bitInputData@input16BitData+1
  5495  0FDF  3199  21FD  318E   	fcall	_DAC5_Load10bitInputData
  5496                           
  5497                           ;LOAD20210.c: 236: if ( UPDOWN[1] == 'A')
  5498  0FE2  3041               	movlw	65
  5499  0FE3  0021               	movlb	1	; select bank1
  5500  0FE4  0621               	xorwf	(_UPDOWN^(0+128)+1),w
  5501  0FE5  1D03               	btfss	3,2
  5502  0FE6  2FF1               	goto	l4855
  5503                           
  5504                           ;LOAD20210.c: 237: {
  5505                           ;LOAD20210.c: 238: count++;
  5506  0FE7  3001               	movlw	1
  5507  0FE8  0020               	movlb	0	; select bank0
  5508  0FE9  07E9               	addwf	_count,f
  5509  0FEA  3000               	movlw	0
  5510  0FEB  3DEA               	addwfc	_count+1,f
  5511                           
  5512                           ;LOAD20210.c: 239: UPDOWN[1]=' ';
  5513  0FEC  3020               	movlw	32
  5514  0FED  00E7               	movwf	??_main
  5515  0FEE  0867               	movf	??_main,w
  5516  0FEF  0021               	movlb	1	; select bank1
  5517  0FF0  00A1               	movwf	(_UPDOWN^(0+128)+1)
  5518  0FF1                     l4855:	
  5519                           
  5520                           ;LOAD20210.c: 240: }
  5521                           ;LOAD20210.c: 241: if (UPDOWN[1] == 'B')
  5522  0FF1  3042               	movlw	66
  5523  0FF2  0621               	xorwf	(_UPDOWN^(0+128)+1),w
  5524  0FF3  1D03               	btfss	3,2
  5525  0FF4  2ECB               	goto	l4809
  5526                           
  5527                           ;LOAD20210.c: 242: {
  5528                           ;LOAD20210.c: 243: count--;
  5529  0FF5  30FF               	movlw	255
  5530  0FF6  0020               	movlb	0	; select bank0
  5531  0FF7  07E9               	addwf	_count,f
  5532  0FF8  30FF               	movlw	255
  5533  0FF9  3DEA               	addwfc	_count+1,f
  5534                           
  5535                           ;LOAD20210.c: 244: UPDOWN[1]=' ';
  5536  0FFA  3020               	movlw	32
  5537  0FFB  00E7               	movwf	??_main
  5538  0FFC  0867               	movf	??_main,w
  5539  0FFD  0021               	movlb	1	; select bank1
  5540  0FFE  00A1               	movwf	(_UPDOWN^(0+128)+1)
  5541  0FFF  2ECB               	goto	l4809
  5542  1000                     __end_of_main:	
  5543                           
  5544                           	psect	text1
  5545  1A43                     __ptext1:	
  5546 ;; *************** function _switch_press_scan *****************
  5547 ;; Defined at:
  5548 ;;		line 263 in file "LOAD20210.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  key             1    4[COMMON] unsigned char 
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      unsigned char 
  5555 ;; Registers used:
  5556 ;;		wreg, status,2, status,0, pclath, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5566 ;;Total ram usage:        2 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    2
  5569 ;; This function calls:
  5570 ;;		_keypad_scanner
  5571 ;; This function is called by:
  5572 ;;		_main
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           
  5577                           ;psect for function _switch_press_scan
  5578  1A43                     _switch_press_scan:	
  5579                           
  5580                           ;LOAD20210.c: 265: char key = 'n';
  5581                           
  5582                           ;incstack = 0
  5583                           ; Regs used in _switch_press_scan: [wreg+status,2+status,0+pclath+cstack]
  5584  1A43  306E               	movlw	110
  5585  1A44                     L1:	
  5586  1A44  00F3               	movwf	??_switch_press_scan
  5587  1A45  0873               	movf	??_switch_press_scan,w
  5588  1A46  00F4               	movwf	switch_press_scan@key
  5589  1A47  306E               	movlw	110
  5590  1A48  0674               	xorwf	switch_press_scan@key,w
  5591  1A49  1D03               	btfss	3,2
  5592  1A4A  2A4F               	goto	l4667
  5593                           
  5594                           ;LOAD20210.c: 267: key = keypad_scanner();
  5595                           
  5596                           ;LOAD20210.c: 266: while(key=='n')
  5597  1A4B  3193  230F  319A   	fcall	_keypad_scanner
  5598  1A4E  2A44               	goto	L1
  5599  1A4F                     l4667:	
  5600                           
  5601                           ;LOAD20210.c: 268: return key;
  5602  1A4F  0874               	movf	switch_press_scan@key,w
  5603  1A50  0008               	return
  5604  1A51                     __end_of_switch_press_scan:	
  5605                           
  5606                           	psect	text2
  5607  130F                     __ptext2:	
  5608 ;; *************** function _keypad_scanner *****************
  5609 ;; Defined at:
  5610 ;;		line 55 in file "LOAD20210.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      unsigned char 
  5617 ;; Registers used:
  5618 ;;		wreg
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5628 ;;Total ram usage:        2 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    1
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_switch_press_scan
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           
  5639                           ;psect for function _keypad_scanner
  5640  130F                     _keypad_scanner:	
  5641                           
  5642                           ;LOAD20210.c: 57: LATDbits.LATD0 = 0; LATDbits.LATD1 = 1; LATDbits.LATD2 = 1; LATDbits.L
      +                          ATD3 = 1;
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in _keypad_scanner: [wreg]
  5646  130F  0022               	movlb	2	; select bank2
  5647  1310  100F               	bcf	15,0	;volatile
  5648  1311  148F               	bsf	15,1	;volatile
  5649  1312  150F               	bsf	15,2	;volatile
  5650  1313  158F               	bsf	15,3	;volatile
  5651                           
  5652                           ;LOAD20210.c: 58: if (PORTDbits.RD4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD4==0); return '1'; }
  5653  1314  0020               	movlb	0	; select bank0
  5654  1315  1A0F               	btfsc	15,4	;volatile
  5655  1316  2B28               	goto	l204
  5656  1317  3003               	movlw	3
  5657  1318  00F2               	movwf	??_keypad_scanner+1
  5658  1319  3008               	movlw	8
  5659  131A  00F1               	movwf	??_keypad_scanner
  5660  131B  3077               	movlw	119
  5661  131C                     u7857:	
  5662  131C  0B89               	decfsz	9,f
  5663  131D  2B1C               	goto	u7857
  5664  131E  0BF1               	decfsz	??_keypad_scanner,f
  5665  131F  2B1C               	goto	u7857
  5666  1320  0BF2               	decfsz	??_keypad_scanner+1,f
  5667  1321  2B1C               	goto	u7857
  5668  1322  0000               	nop
  5669  1323                     l205:	
  5670  1323  0020               	movlb	0	; select bank0
  5671  1324  1E0F               	btfss	15,4	;volatile
  5672  1325  2B23               	goto	l205
  5673  1326  3031               	movlw	49
  5674  1327  0008               	return
  5675  1328                     l204:	
  5676                           
  5677                           ;LOAD20210.c: 59: if (PORTDbits.RD5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD5==0); return '2'; }
  5678  1328  1A8F               	btfsc	15,5	;volatile
  5679  1329  2B3B               	goto	l209
  5680  132A  3003               	movlw	3
  5681  132B  00F2               	movwf	??_keypad_scanner+1
  5682  132C  3008               	movlw	8
  5683  132D  00F1               	movwf	??_keypad_scanner
  5684  132E  3077               	movlw	119
  5685  132F                     u7867:	
  5686  132F  0B89               	decfsz	9,f
  5687  1330  2B2F               	goto	u7867
  5688  1331  0BF1               	decfsz	??_keypad_scanner,f
  5689  1332  2B2F               	goto	u7867
  5690  1333  0BF2               	decfsz	??_keypad_scanner+1,f
  5691  1334  2B2F               	goto	u7867
  5692  1335  0000               	nop
  5693  1336                     l210:	
  5694  1336  0020               	movlb	0	; select bank0
  5695  1337  1E8F               	btfss	15,5	;volatile
  5696  1338  2B36               	goto	l210
  5697  1339  3032               	movlw	50
  5698  133A  0008               	return
  5699  133B                     l209:	
  5700                           
  5701                           ;LOAD20210.c: 60: if (PORTDbits.RD6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD6==0); return '3'; }
  5702  133B  1B0F               	btfsc	15,6	;volatile
  5703  133C  2B4E               	goto	l213
  5704  133D  3003               	movlw	3
  5705  133E  00F2               	movwf	??_keypad_scanner+1
  5706  133F  3008               	movlw	8
  5707  1340  00F1               	movwf	??_keypad_scanner
  5708  1341  3077               	movlw	119
  5709  1342                     u7877:	
  5710  1342  0B89               	decfsz	9,f
  5711  1343  2B42               	goto	u7877
  5712  1344  0BF1               	decfsz	??_keypad_scanner,f
  5713  1345  2B42               	goto	u7877
  5714  1346  0BF2               	decfsz	??_keypad_scanner+1,f
  5715  1347  2B42               	goto	u7877
  5716  1348  0000               	nop
  5717  1349                     l214:	
  5718  1349  0020               	movlb	0	; select bank0
  5719  134A  1F0F               	btfss	15,6	;volatile
  5720  134B  2B49               	goto	l214
  5721  134C  3033               	movlw	51
  5722  134D  0008               	return
  5723  134E                     l213:	
  5724                           
  5725                           ;LOAD20210.c: 61: if (PORTDbits.RD7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD7==0); return 'A'; }
  5726  134E  1B8F               	btfsc	15,7	;volatile
  5727  134F  2B61               	goto	l217
  5728  1350  3003               	movlw	3
  5729  1351  00F2               	movwf	??_keypad_scanner+1
  5730  1352  3008               	movlw	8
  5731  1353  00F1               	movwf	??_keypad_scanner
  5732  1354  3077               	movlw	119
  5733  1355                     u7887:	
  5734  1355  0B89               	decfsz	9,f
  5735  1356  2B55               	goto	u7887
  5736  1357  0BF1               	decfsz	??_keypad_scanner,f
  5737  1358  2B55               	goto	u7887
  5738  1359  0BF2               	decfsz	??_keypad_scanner+1,f
  5739  135A  2B55               	goto	u7887
  5740  135B  0000               	nop
  5741  135C                     l218:	
  5742  135C  0020               	movlb	0	; select bank0
  5743  135D  1F8F               	btfss	15,7	;volatile
  5744  135E  2B5C               	goto	l218
  5745  135F  3041               	movlw	65
  5746  1360  0008               	return
  5747  1361                     l217:	
  5748                           
  5749                           ;LOAD20210.c: 63: LATDbits.LATD0 = 1; LATDbits.LATD1 = 0; LATDbits.LATD2 = 1; LATDbits.L
      +                          ATD3 = 1;
  5750  1361  0022               	movlb	2	; select bank2
  5751  1362  140F               	bsf	15,0	;volatile
  5752  1363  108F               	bcf	15,1	;volatile
  5753  1364  150F               	bsf	15,2	;volatile
  5754  1365  158F               	bsf	15,3	;volatile
  5755                           
  5756                           ;LOAD20210.c: 64: if (PORTDbits.RD4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD4==0); return '4'; }
  5757  1366  0020               	movlb	0	; select bank0
  5758  1367  1A0F               	btfsc	15,4	;volatile
  5759  1368  2B7A               	goto	l221
  5760  1369  3003               	movlw	3
  5761  136A  00F2               	movwf	??_keypad_scanner+1
  5762  136B  3008               	movlw	8
  5763  136C  00F1               	movwf	??_keypad_scanner
  5764  136D  3077               	movlw	119
  5765  136E                     u7897:	
  5766  136E  0B89               	decfsz	9,f
  5767  136F  2B6E               	goto	u7897
  5768  1370  0BF1               	decfsz	??_keypad_scanner,f
  5769  1371  2B6E               	goto	u7897
  5770  1372  0BF2               	decfsz	??_keypad_scanner+1,f
  5771  1373  2B6E               	goto	u7897
  5772  1374  0000               	nop
  5773  1375                     l222:	
  5774  1375  0020               	movlb	0	; select bank0
  5775  1376  1E0F               	btfss	15,4	;volatile
  5776  1377  2B75               	goto	l222
  5777  1378  3034               	movlw	52
  5778  1379  0008               	return
  5779  137A                     l221:	
  5780                           
  5781                           ;LOAD20210.c: 65: if (PORTDbits.RD5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD5==0); return '5'; }
  5782  137A  1A8F               	btfsc	15,5	;volatile
  5783  137B  2B8D               	goto	l225
  5784  137C  3003               	movlw	3
  5785  137D  00F2               	movwf	??_keypad_scanner+1
  5786  137E  3008               	movlw	8
  5787  137F  00F1               	movwf	??_keypad_scanner
  5788  1380  3077               	movlw	119
  5789  1381                     u7907:	
  5790  1381  0B89               	decfsz	9,f
  5791  1382  2B81               	goto	u7907
  5792  1383  0BF1               	decfsz	??_keypad_scanner,f
  5793  1384  2B81               	goto	u7907
  5794  1385  0BF2               	decfsz	??_keypad_scanner+1,f
  5795  1386  2B81               	goto	u7907
  5796  1387  0000               	nop
  5797  1388                     l226:	
  5798  1388  0020               	movlb	0	; select bank0
  5799  1389  1E8F               	btfss	15,5	;volatile
  5800  138A  2B88               	goto	l226
  5801  138B  3035               	movlw	53
  5802  138C  0008               	return
  5803  138D                     l225:	
  5804                           
  5805                           ;LOAD20210.c: 66: if (PORTDbits.RD6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD6==0); return '6'; }
  5806  138D  1B0F               	btfsc	15,6	;volatile
  5807  138E  2BA0               	goto	l229
  5808  138F  3003               	movlw	3
  5809  1390  00F2               	movwf	??_keypad_scanner+1
  5810  1391  3008               	movlw	8
  5811  1392  00F1               	movwf	??_keypad_scanner
  5812  1393  3077               	movlw	119
  5813  1394                     u7917:	
  5814  1394  0B89               	decfsz	9,f
  5815  1395  2B94               	goto	u7917
  5816  1396  0BF1               	decfsz	??_keypad_scanner,f
  5817  1397  2B94               	goto	u7917
  5818  1398  0BF2               	decfsz	??_keypad_scanner+1,f
  5819  1399  2B94               	goto	u7917
  5820  139A  0000               	nop
  5821  139B                     l230:	
  5822  139B  0020               	movlb	0	; select bank0
  5823  139C  1F0F               	btfss	15,6	;volatile
  5824  139D  2B9B               	goto	l230
  5825  139E  3036               	movlw	54
  5826  139F  0008               	return
  5827  13A0                     l229:	
  5828                           
  5829                           ;LOAD20210.c: 67: if (PORTDbits.RD7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD7==0); return 'B'; }
  5830  13A0  1B8F               	btfsc	15,7	;volatile
  5831  13A1  2BB3               	goto	l233
  5832  13A2  3003               	movlw	3
  5833  13A3  00F2               	movwf	??_keypad_scanner+1
  5834  13A4  3008               	movlw	8
  5835  13A5  00F1               	movwf	??_keypad_scanner
  5836  13A6  3077               	movlw	119
  5837  13A7                     u7927:	
  5838  13A7  0B89               	decfsz	9,f
  5839  13A8  2BA7               	goto	u7927
  5840  13A9  0BF1               	decfsz	??_keypad_scanner,f
  5841  13AA  2BA7               	goto	u7927
  5842  13AB  0BF2               	decfsz	??_keypad_scanner+1,f
  5843  13AC  2BA7               	goto	u7927
  5844  13AD  0000               	nop
  5845  13AE                     l234:	
  5846  13AE  0020               	movlb	0	; select bank0
  5847  13AF  1F8F               	btfss	15,7	;volatile
  5848  13B0  2BAE               	goto	l234
  5849  13B1  3042               	movlw	66
  5850  13B2  0008               	return
  5851  13B3                     l233:	
  5852                           
  5853                           ;LOAD20210.c: 69: LATDbits.LATD0 = 1; LATDbits.LATD1 = 1; LATDbits.LATD2 = 0; LATDbits.L
      +                          ATD3 = 1;
  5854  13B3  0022               	movlb	2	; select bank2
  5855  13B4  140F               	bsf	15,0	;volatile
  5856  13B5  148F               	bsf	15,1	;volatile
  5857  13B6  110F               	bcf	15,2	;volatile
  5858  13B7  158F               	bsf	15,3	;volatile
  5859                           
  5860                           ;LOAD20210.c: 70: if (PORTDbits.RD4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD4==0); return '7'; }
  5861  13B8  0020               	movlb	0	; select bank0
  5862  13B9  1A0F               	btfsc	15,4	;volatile
  5863  13BA  2BCC               	goto	l237
  5864  13BB  3003               	movlw	3
  5865  13BC  00F2               	movwf	??_keypad_scanner+1
  5866  13BD  3008               	movlw	8
  5867  13BE  00F1               	movwf	??_keypad_scanner
  5868  13BF  3077               	movlw	119
  5869  13C0                     u7937:	
  5870  13C0  0B89               	decfsz	9,f
  5871  13C1  2BC0               	goto	u7937
  5872  13C2  0BF1               	decfsz	??_keypad_scanner,f
  5873  13C3  2BC0               	goto	u7937
  5874  13C4  0BF2               	decfsz	??_keypad_scanner+1,f
  5875  13C5  2BC0               	goto	u7937
  5876  13C6  0000               	nop
  5877  13C7                     l238:	
  5878  13C7  0020               	movlb	0	; select bank0
  5879  13C8  1E0F               	btfss	15,4	;volatile
  5880  13C9  2BC7               	goto	l238
  5881  13CA  3037               	movlw	55
  5882  13CB  0008               	return
  5883  13CC                     l237:	
  5884                           
  5885                           ;LOAD20210.c: 71: if (PORTDbits.RD5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD5==0); return '8'; }
  5886  13CC  1A8F               	btfsc	15,5	;volatile
  5887  13CD  2BDF               	goto	l241
  5888  13CE  3003               	movlw	3
  5889  13CF  00F2               	movwf	??_keypad_scanner+1
  5890  13D0  3008               	movlw	8
  5891  13D1  00F1               	movwf	??_keypad_scanner
  5892  13D2  3077               	movlw	119
  5893  13D3                     u7947:	
  5894  13D3  0B89               	decfsz	9,f
  5895  13D4  2BD3               	goto	u7947
  5896  13D5  0BF1               	decfsz	??_keypad_scanner,f
  5897  13D6  2BD3               	goto	u7947
  5898  13D7  0BF2               	decfsz	??_keypad_scanner+1,f
  5899  13D8  2BD3               	goto	u7947
  5900  13D9  0000               	nop
  5901  13DA                     l242:	
  5902  13DA  0020               	movlb	0	; select bank0
  5903  13DB  1E8F               	btfss	15,5	;volatile
  5904  13DC  2BDA               	goto	l242
  5905  13DD  3038               	movlw	56
  5906  13DE  0008               	return
  5907  13DF                     l241:	
  5908                           
  5909                           ;LOAD20210.c: 72: if (PORTDbits.RD6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD6==0); return '9'; }
  5910  13DF  1B0F               	btfsc	15,6	;volatile
  5911  13E0  2BF2               	goto	l245
  5912  13E1  3003               	movlw	3
  5913  13E2  00F2               	movwf	??_keypad_scanner+1
  5914  13E3  3008               	movlw	8
  5915  13E4  00F1               	movwf	??_keypad_scanner
  5916  13E5  3077               	movlw	119
  5917  13E6                     u7957:	
  5918  13E6  0B89               	decfsz	9,f
  5919  13E7  2BE6               	goto	u7957
  5920  13E8  0BF1               	decfsz	??_keypad_scanner,f
  5921  13E9  2BE6               	goto	u7957
  5922  13EA  0BF2               	decfsz	??_keypad_scanner+1,f
  5923  13EB  2BE6               	goto	u7957
  5924  13EC  0000               	nop
  5925  13ED                     l246:	
  5926  13ED  0020               	movlb	0	; select bank0
  5927  13EE  1F0F               	btfss	15,6	;volatile
  5928  13EF  2BED               	goto	l246
  5929  13F0  3039               	movlw	57
  5930  13F1  0008               	return
  5931  13F2                     l245:	
  5932                           
  5933                           ;LOAD20210.c: 73: if (PORTDbits.RD7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD7==0); return 'C'; }
  5934  13F2  1B8F               	btfsc	15,7	;volatile
  5935  13F3  2C05               	goto	l249
  5936  13F4  3003               	movlw	3
  5937  13F5  00F2               	movwf	??_keypad_scanner+1
  5938  13F6  3008               	movlw	8
  5939  13F7  00F1               	movwf	??_keypad_scanner
  5940  13F8  3077               	movlw	119
  5941  13F9                     u7967:	
  5942  13F9  0B89               	decfsz	9,f
  5943  13FA  2BF9               	goto	u7967
  5944  13FB  0BF1               	decfsz	??_keypad_scanner,f
  5945  13FC  2BF9               	goto	u7967
  5946  13FD  0BF2               	decfsz	??_keypad_scanner+1,f
  5947  13FE  2BF9               	goto	u7967
  5948  13FF  0000               	nop
  5949  1400                     l250:	
  5950  1400  0020               	movlb	0	; select bank0
  5951  1401  1F8F               	btfss	15,7	;volatile
  5952  1402  2C00               	goto	l250
  5953  1403  3043               	movlw	67
  5954  1404  0008               	return
  5955  1405                     l249:	
  5956                           
  5957                           ;LOAD20210.c: 75: LATDbits.LATD0 = 1; LATDbits.LATD1 = 1; LATDbits.LATD2 = 1; LATDbits.L
      +                          ATD3 = 0;
  5958  1405  0022               	movlb	2	; select bank2
  5959  1406  140F               	bsf	15,0	;volatile
  5960  1407  148F               	bsf	15,1	;volatile
  5961  1408  150F               	bsf	15,2	;volatile
  5962  1409  118F               	bcf	15,3	;volatile
  5963                           
  5964                           ;LOAD20210.c: 76: if (PORTDbits.RD4 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD4==0); return '*'; }
  5965  140A  0020               	movlb	0	; select bank0
  5966  140B  1A0F               	btfsc	15,4	;volatile
  5967  140C  2C1E               	goto	l253
  5968  140D  3003               	movlw	3
  5969  140E  00F2               	movwf	??_keypad_scanner+1
  5970  140F  3008               	movlw	8
  5971  1410  00F1               	movwf	??_keypad_scanner
  5972  1411  3077               	movlw	119
  5973  1412                     u7977:	
  5974  1412  0B89               	decfsz	9,f
  5975  1413  2C12               	goto	u7977
  5976  1414  0BF1               	decfsz	??_keypad_scanner,f
  5977  1415  2C12               	goto	u7977
  5978  1416  0BF2               	decfsz	??_keypad_scanner+1,f
  5979  1417  2C12               	goto	u7977
  5980  1418  0000               	nop
  5981  1419                     l254:	
  5982  1419  0020               	movlb	0	; select bank0
  5983  141A  1E0F               	btfss	15,4	;volatile
  5984  141B  2C19               	goto	l254
  5985  141C  302A               	movlw	42
  5986  141D  0008               	return
  5987  141E                     l253:	
  5988                           
  5989                           ;LOAD20210.c: 77: if (PORTDbits.RD5 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD5==0); return '0'; }
  5990  141E  1A8F               	btfsc	15,5	;volatile
  5991  141F  2C31               	goto	l257
  5992  1420  3003               	movlw	3
  5993  1421  00F2               	movwf	??_keypad_scanner+1
  5994  1422  3008               	movlw	8
  5995  1423  00F1               	movwf	??_keypad_scanner
  5996  1424  3077               	movlw	119
  5997  1425                     u7987:	
  5998  1425  0B89               	decfsz	9,f
  5999  1426  2C25               	goto	u7987
  6000  1427  0BF1               	decfsz	??_keypad_scanner,f
  6001  1428  2C25               	goto	u7987
  6002  1429  0BF2               	decfsz	??_keypad_scanner+1,f
  6003  142A  2C25               	goto	u7987
  6004  142B  0000               	nop
  6005  142C                     l258:	
  6006  142C  0020               	movlb	0	; select bank0
  6007  142D  1E8F               	btfss	15,5	;volatile
  6008  142E  2C2C               	goto	l258
  6009  142F  3030               	movlw	48
  6010  1430  0008               	return
  6011  1431                     l257:	
  6012                           
  6013                           ;LOAD20210.c: 78: if (PORTDbits.RD6 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD6==0); return '#'; }
  6014  1431  1B0F               	btfsc	15,6	;volatile
  6015  1432  2C44               	goto	l261
  6016  1433  3003               	movlw	3
  6017  1434  00F2               	movwf	??_keypad_scanner+1
  6018  1435  3008               	movlw	8
  6019  1436  00F1               	movwf	??_keypad_scanner
  6020  1437  3077               	movlw	119
  6021  1438                     u7997:	
  6022  1438  0B89               	decfsz	9,f
  6023  1439  2C38               	goto	u7997
  6024  143A  0BF1               	decfsz	??_keypad_scanner,f
  6025  143B  2C38               	goto	u7997
  6026  143C  0BF2               	decfsz	??_keypad_scanner+1,f
  6027  143D  2C38               	goto	u7997
  6028  143E  0000               	nop
  6029  143F                     l262:	
  6030  143F  0020               	movlb	0	; select bank0
  6031  1440  1F0F               	btfss	15,6	;volatile
  6032  1441  2C3F               	goto	l262
  6033  1442  3023               	movlw	35
  6034  1443  0008               	return
  6035  1444                     l261:	
  6036                           
  6037                           ;LOAD20210.c: 79: if (PORTDbits.RD7 == 0) { _delay((unsigned long)((100)*(16000000/4000.
      +                          0))); while (PORTDbits.RD7==0); return 'D'; }
  6038  1444  1B8F               	btfsc	15,7	;volatile
  6039  1445  0008               	return
  6040  1446  3003               	movlw	3
  6041  1447  00F2               	movwf	??_keypad_scanner+1
  6042  1448  3008               	movlw	8
  6043  1449  00F1               	movwf	??_keypad_scanner
  6044  144A  3077               	movlw	119
  6045  144B                     u8007:	
  6046  144B  0B89               	decfsz	9,f
  6047  144C  2C4B               	goto	u8007
  6048  144D  0BF1               	decfsz	??_keypad_scanner,f
  6049  144E  2C4B               	goto	u8007
  6050  144F  0BF2               	decfsz	??_keypad_scanner+1,f
  6051  1450  2C4B               	goto	u8007
  6052  1451  0000               	nop
  6053  1452                     l266:	
  6054  1452  0020               	movlb	0	; select bank0
  6055  1453  1F8F               	btfss	15,7	;volatile
  6056  1454  2C52               	goto	l266
  6057  1455  3044               	movlw	68
  6058  1456  0008               	return
  6059  1457                     __end_of_keypad_scanner:	
  6060                           ;LOAD20210.c: 81: return ;
  6061                           
  6062                           
  6063                           	psect	text3
  6064  004E                     __ptext3:	
  6065 ;; *************** function _sprintf *****************
  6066 ;; Defined at:
  6067 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  sp              1    wreg     PTR unsigned char 
  6070 ;;		 -> naif(17), 
  6071 ;;  f               2   60[BANK0 ] PTR const unsigned char 
  6072 ;;		 -> STR_3(3), STR_1(5), 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  sp              1   16[BANK1 ] PTR unsigned char 
  6075 ;;		 -> naif(17), 
  6076 ;;  val             4   12[BANK1 ] unsigned long 
  6077 ;;  tmpval          4    8[BANK1 ] struct .
  6078 ;;  fval            3   19[BANK1 ] struct .
  6079 ;;  prec            2   17[BANK1 ] int 
  6080 ;;  exp             2    6[BANK1 ] int 
  6081 ;;  flag            2    4[BANK1 ] unsigned short 
  6082 ;;  cp              2    0        PTR const unsigned char 
  6083 ;;  len             2    0        unsigned int 
  6084 ;;  width           2    0        int 
  6085 ;;  c               1   22[BANK1 ] char 
  6086 ;;  ap              1    3[BANK1 ] PTR void [1]
  6087 ;;		 -> ?_sprintf(2), 
  6088 ;;  d               1    0        unsigned char 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  2   60[BANK0 ] int 
  6091 ;; Registers used:
  6092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6098 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6099 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6100 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6101 ;;      Totals:         0      11      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6102 ;;Total ram usage:       34 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    4
  6105 ;; This function calls:
  6106 ;;		___awdiv
  6107 ;;		___ftadd
  6108 ;;		___ftge
  6109 ;;		___ftmul
  6110 ;;		___ftneg
  6111 ;;		___ftsub
  6112 ;;		___fttol
  6113 ;;		___lldiv
  6114 ;;		___llmod
  6115 ;;		___lltoft
  6116 ;;		___wmul
  6117 ;;		__div_to_l_
  6118 ;;		__tdiv_to_l_
  6119 ;;		_fround
  6120 ;;		_isdigit
  6121 ;;		_scale
  6122 ;; This function is called by:
  6123 ;;		_main
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           
  6128                           ;psect for function _sprintf
  6129  004E                     _sprintf:	
  6130                           
  6131                           ;incstack = 0
  6132                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6133                           ;sprintf@sp stored from wreg
  6134  004E  0021               	movlb	1	; select bank1
  6135  004F  00D2               	movwf	sprintf@sp^(0+128)
  6136                           
  6137                           ;doprnt.c: 494: va_list ap;
  6138                           ;doprnt.c: 499: signed char c;
  6139                           ;doprnt.c: 501: int width;
  6140                           ;doprnt.c: 504: int prec;
  6141                           ;doprnt.c: 508: unsigned short flag;
  6142                           ;doprnt.c: 515: char d;
  6143                           ;doprnt.c: 516: double fval;
  6144                           ;doprnt.c: 517: int exp;
  6145                           ;doprnt.c: 523: union {
  6146                           ;doprnt.c: 524: unsigned long vd;
  6147                           ;doprnt.c: 525: double integ;
  6148                           ;doprnt.c: 526: } tmpval;
  6149                           ;doprnt.c: 528: unsigned long val;
  6150                           ;doprnt.c: 529: unsigned len;
  6151                           ;doprnt.c: 530: const char * cp;
  6152                           ;doprnt.c: 533: *ap = __va_start();
  6153  0050  305E               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6154  0051  0020               	movlb	0	; select bank0
  6155  0052  00E1               	movwf	??_sprintf
  6156  0053  0861               	movf	??_sprintf,w
  6157  0054  0021               	movlb	1	; select bank1
  6158  0055  00C5               	movwf	sprintf@ap^(0+128)
  6159  0056                     l4655:	
  6160                           ;doprnt.c: 536: while(c = *f++) {
  6161                           
  6162  0056  0020               	movlb	0	; select bank0
  6163  0057  085D               	movf	sprintf@f+1,w
  6164  0058  00E2               	movwf	??_sprintf+1
  6165  0059  085C               	movf	sprintf@f,w
  6166  005A  00E1               	movwf	??_sprintf
  6167  005B  0ADC               	incf	sprintf@f,f
  6168  005C  1903               	skipnz
  6169  005D  0ADD               	incf	sprintf@f+1,f
  6170  005E  0861               	movf	??_sprintf,w
  6171  005F  0084               	movwf	4
  6172  0060  0862               	movf	??_sprintf+1,w
  6173  0061  0085               	movwf	5
  6174  0062  0800               	movf	0,w	;code access
  6175  0063  00E3               	movwf	??_sprintf+2
  6176  0064  0863               	movf	??_sprintf+2,w
  6177  0065  0021               	movlb	1	; select bank1
  6178  0066  00D8               	movwf	sprintf@c^(0+128)
  6179  0067  0858               	movf	sprintf@c^(0+128),w
  6180  0068  1903               	btfsc	3,2
  6181  0069  2E2C               	goto	l4657
  6182                           
  6183                           ;doprnt.c: 538: if(c != '%')
  6184  006A  3025               	movlw	37
  6185  006B  0658               	xorwf	sprintf@c^(0+128),w
  6186  006C  1903               	btfsc	3,2
  6187  006D  287E               	goto	l4439
  6188                           
  6189                           ;doprnt.c: 540: {
  6190                           ;doprnt.c: 541: ((*sp++ = (c)));
  6191  006E  0858               	movf	sprintf@c^(0+128),w
  6192  006F  0020               	movlb	0	; select bank0
  6193  0070  00E1               	movwf	??_sprintf
  6194  0071  0021               	movlb	1	; select bank1
  6195  0072  0852               	movf	sprintf@sp^(0+128),w
  6196  0073  0086               	movwf	6
  6197  0074  0187               	clrf	7
  6198  0075  0020               	movlb	0	; select bank0
  6199  0076  0861               	movf	??_sprintf,w
  6200  0077  0081               	movwf	1
  6201  0078  3001               	movlw	1
  6202  0079  00E1               	movwf	??_sprintf
  6203  007A  0861               	movf	??_sprintf,w
  6204  007B  0021               	movlb	1	; select bank1
  6205  007C  07D2               	addwf	sprintf@sp^(0+128),f
  6206                           
  6207                           ;doprnt.c: 542: continue;
  6208  007D  2856               	goto	l4655
  6209  007E                     l4439:	
  6210                           
  6211                           ;doprnt.c: 543: }
  6212                           ;doprnt.c: 548: flag = 0;
  6213  007E  01C6               	clrf	sprintf@flag^(0+128)
  6214  007F  01C7               	clrf	(sprintf@flag+1)^(0+128)
  6215                           
  6216                           ;doprnt.c: 611: if(*f == '.') {
  6217  0080  0020               	movlb	0	; select bank0
  6218  0081  085C               	movf	sprintf@f,w
  6219  0082  0084               	movwf	4
  6220  0083  085D               	movf	sprintf@f+1,w
  6221  0084  0085               	movwf	5
  6222  0085  0012               	moviw fsr0++
  6223  0086  3A2E               	xorlw	46
  6224  0087  1D03               	btfss	3,2
  6225  0088  28CB               	goto	l4455
  6226                           
  6227                           ;doprnt.c: 612: flag |= 0x4000;
  6228  0089  0021               	movlb	1	; select bank1
  6229  008A  1747               	bsf	(sprintf@flag^(0+128)+1),6
  6230                           
  6231                           ;doprnt.c: 613: f++;
  6232  008B  3001               	movlw	1
  6233  008C  0020               	movlb	0	; select bank0
  6234  008D  07DC               	addwf	sprintf@f,f
  6235  008E  3000               	movlw	0
  6236  008F  3DDD               	addwfc	sprintf@f+1,f
  6237                           
  6238                           ;doprnt.c: 620: {
  6239                           ;doprnt.c: 621: prec = 0;
  6240  0090  0021               	movlb	1	; select bank1
  6241  0091  01D3               	clrf	sprintf@prec^(0+128)
  6242  0092  01D4               	clrf	(sprintf@prec+1)^(0+128)
  6243  0093                     l4453:	
  6244                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6245                           
  6246  0093  0020               	movlb	0	; select bank0
  6247  0094  085C               	movf	sprintf@f,w
  6248  0095  0084               	movwf	4
  6249  0096  085D               	movf	sprintf@f+1,w
  6250  0097  0085               	movwf	5
  6251  0098  0800               	movf	0,w	;code access
  6252  0099  319A  2235  3180   	fcall	_isdigit
  6253  009C  1C03               	btfss	3,0
  6254  009D  28D2               	goto	l4461
  6255                           
  6256                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6257  009E  0020               	movlb	0	; select bank0
  6258  009F  085C               	movf	sprintf@f,w
  6259  00A0  0084               	movwf	4
  6260  00A1  085D               	movf	sprintf@f+1,w
  6261  00A2  0085               	movwf	5
  6262  00A3  0800               	movf	0,w	;code access
  6263  00A4  00E1               	movwf	??_sprintf
  6264  00A5  01E2               	clrf	??_sprintf+1
  6265  00A6  0021               	movlb	1	; select bank1
  6266  00A7  0854               	movf	(sprintf@prec+1)^(0+128),w
  6267  00A8  0020               	movlb	0	; select bank0
  6268  00A9  00A6               	movwf	___wmul@multiplier+1
  6269  00AA  0021               	movlb	1	; select bank1
  6270  00AB  0853               	movf	sprintf@prec^(0+128),w
  6271  00AC  0020               	movlb	0	; select bank0
  6272  00AD  00A5               	movwf	___wmul@multiplier
  6273  00AE  300A               	movlw	10
  6274  00AF  00A7               	movwf	___wmul@multiplicand
  6275  00B0  3000               	movlw	0
  6276  00B1  00A8               	movwf	___wmul@multiplicand+1
  6277  00B2  319A  2297  3180   	fcall	___wmul
  6278  00B5  0020               	movlb	0	; select bank0
  6279  00B6  0861               	movf	??_sprintf,w
  6280  00B7  0725               	addwf	?___wmul,w
  6281  00B8  00E3               	movwf	??_sprintf+2
  6282  00B9  0862               	movf	??_sprintf+1,w
  6283  00BA  3D26               	addwfc	?___wmul+1,w
  6284  00BB  00E4               	movwf	??_sprintf+3
  6285  00BC  0863               	movf	??_sprintf+2,w
  6286  00BD  3ED0               	addlw	208
  6287  00BE  0021               	movlb	1	; select bank1
  6288  00BF  00D3               	movwf	sprintf@prec^(0+128)
  6289  00C0  30FF               	movlw	255
  6290  00C1  0020               	movlb	0	; select bank0
  6291  00C2  3D64               	addwfc	??_sprintf+3,w
  6292  00C3  0021               	movlb	1	; select bank1
  6293  00C4  00D4               	movwf	(sprintf@prec+1)^(0+128)
  6294  00C5  3001               	movlw	1
  6295  00C6  0020               	movlb	0	; select bank0
  6296  00C7  07DC               	addwf	sprintf@f,f
  6297  00C8  3000               	movlw	0
  6298  00C9  3DDD               	addwfc	sprintf@f+1,f
  6299  00CA  2893               	goto	l4453
  6300  00CB                     l4455:	
  6301                           ;doprnt.c: 624: }
  6302                           ;doprnt.c: 625: } else {
  6303                           
  6304                           
  6305                           ;doprnt.c: 626: prec = 0;
  6306  00CB  0021               	movlb	1	; select bank1
  6307  00CC  01D3               	clrf	sprintf@prec^(0+128)
  6308  00CD  01D4               	clrf	(sprintf@prec+1)^(0+128)
  6309                           
  6310                           ;doprnt.c: 628: flag |= 0x1000;
  6311  00CE  1647               	bsf	(sprintf@flag^(0+128)+1),4
  6312                           
  6313                           ;doprnt.c: 630: }
  6314                           ;doprnt.c: 635: switch(c = *f++) {
  6315  00CF  28D2               	goto	l4461
  6316  00D0                     l390:	
  6317                           ;doprnt.c: 662: case 'f':
  6318                           
  6319                           ;doprnt.c: 638: goto alldone;
  6320                           
  6321                           ;doprnt.c: 637: case 0:
  6322                           
  6323                           
  6324                           ;doprnt.c: 663: flag |= 0x400;
  6325  00D0  1547               	bsf	(sprintf@flag^(0+128)+1),2
  6326                           
  6327                           ;doprnt.c: 698: case 'i':
  6328                           ;doprnt.c: 699: break;
  6329                           
  6330                           ;doprnt.c: 697: case 'd':
  6331                           
  6332                           ;doprnt.c: 664: break;
  6333  00D1  28EE               	goto	l4463
  6334  00D2                     l4461:	
  6335                           ;doprnt.c: 822: }
  6336                           
  6337                           ;doprnt.c: 813: continue;
  6338                           
  6339                           ;doprnt.c: 802: default:
  6340                           
  6341  00D2  0020               	movlb	0	; select bank0
  6342  00D3  085D               	movf	sprintf@f+1,w
  6343  00D4  00E2               	movwf	??_sprintf+1
  6344  00D5  085C               	movf	sprintf@f,w
  6345  00D6  00E1               	movwf	??_sprintf
  6346  00D7  0ADC               	incf	sprintf@f,f
  6347  00D8  1903               	skipnz
  6348  00D9  0ADD               	incf	sprintf@f+1,f
  6349  00DA  0861               	movf	??_sprintf,w
  6350  00DB  0084               	movwf	4
  6351  00DC  0862               	movf	??_sprintf+1,w
  6352  00DD  0085               	movwf	5
  6353  00DE  0800               	movf	0,w	;code access
  6354  00DF  0021               	movlb	1	; select bank1
  6355  00E0  00D8               	movwf	sprintf@c^(0+128)
  6356                           
  6357                           ; Switch size 1, requested type "space"
  6358                           ; Number of cases is 4, Range of values is 0 to 105
  6359                           ; switch strategies available:
  6360                           ; Name         Instructions Cycles
  6361                           ; simple_byte           13     7 (average)
  6362                           ; direct_byte          218     6 (fixed)
  6363                           ; jumptable            260     6 (fixed)
  6364                           ;	Chosen strategy is simple_byte
  6365  00E1  3A00               	xorlw	0	; case 0
  6366  00E2  1903               	skipnz
  6367  00E3  2E2C               	goto	l4657
  6368  00E4  3A64               	xorlw	100	; case 100
  6369  00E5  1903               	skipnz
  6370  00E6  28EE               	goto	l4463
  6371  00E7  3A02               	xorlw	2	; case 102
  6372  00E8  1903               	skipnz
  6373  00E9  28D0               	goto	l390
  6374  00EA  3A0F               	xorlw	15	; case 105
  6375  00EB  1903               	skipnz
  6376  00EC  28EE               	goto	l4463
  6377  00ED  2856               	goto	l4655
  6378  00EE                     l4463:	
  6379                           
  6380                           ;doprnt.c: 825: if(flag & (0x700)) {
  6381  00EE  3000               	movlw	0
  6382  00EF  0546               	andwf	sprintf@flag^(0+128),w
  6383  00F0  0020               	movlb	0	; select bank0
  6384  00F1  00E1               	movwf	??_sprintf
  6385  00F2  3007               	movlw	7
  6386  00F3  0021               	movlb	1	; select bank1
  6387  00F4  0547               	andwf	(sprintf@flag+1)^(0+128),w
  6388  00F5  0020               	movlb	0	; select bank0
  6389  00F6  00E2               	movwf	??_sprintf+1
  6390  00F7  0861               	movf	??_sprintf,w
  6391  00F8  0462               	iorwf	??_sprintf+1,w
  6392  00F9  1903               	btfsc	3,2
  6393  00FA  2D16               	goto	l4607
  6394                           
  6395                           ;doprnt.c: 827: if(flag & 0x1000)
  6396  00FB  0021               	movlb	1	; select bank1
  6397  00FC  1E47               	btfss	(sprintf@flag+1)^(0+128),4
  6398  00FD  2902               	goto	l4469
  6399                           
  6400                           ;doprnt.c: 829: prec = 6;
  6401  00FE  3006               	movlw	6
  6402  00FF  00D3               	movwf	sprintf@prec^(0+128)
  6403  0100  3000               	movlw	0
  6404  0101  00D4               	movwf	(sprintf@prec^(0+128)+1)
  6405  0102                     l4469:	
  6406                           
  6407                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6408  0102  0845               	movf	sprintf@ap^(0+128),w
  6409  0103  0086               	movwf	6
  6410  0104  0187               	clrf	7
  6411  0105  3F40               	moviw [0]fsr1
  6412  0106  00D5               	movwf	sprintf@fval^(0+128)
  6413  0107  3F41               	moviw [1]fsr1
  6414  0108  00D6               	movwf	(sprintf@fval+1)^(0+128)
  6415  0109  3F42               	moviw [2]fsr1
  6416  010A  00D7               	movwf	(sprintf@fval+2)^(0+128)
  6417  010B  3003               	movlw	3
  6418  010C  0020               	movlb	0	; select bank0
  6419  010D  00E1               	movwf	??_sprintf
  6420  010E  0861               	movf	??_sprintf,w
  6421  010F  0021               	movlb	1	; select bank1
  6422  0110  07C5               	addwf	sprintf@ap^(0+128),f
  6423                           
  6424                           ;doprnt.c: 831: if(fval < 0.0) {
  6425  0111  0855               	movf	sprintf@fval^(0+128),w
  6426  0112  00F1               	movwf	___ftge@ff1
  6427  0113  0856               	movf	(sprintf@fval+1)^(0+128),w
  6428  0114  00F2               	movwf	___ftge@ff1+1
  6429  0115  0857               	movf	(sprintf@fval+2)^(0+128),w
  6430  0116  00F3               	movwf	___ftge@ff1+2
  6431  0117  3000               	movlw	0
  6432  0118  00F4               	movwf	___ftge@ff2
  6433  0119  3000               	movlw	0
  6434  011A  00F5               	movwf	___ftge@ff2+1
  6435  011B  3000               	movlw	0
  6436  011C  00F6               	movwf	___ftge@ff2+2
  6437  011D  319B  234C  3180   	fcall	___ftge
  6438  0120  1803               	btfsc	3,0
  6439  0121  2937               	goto	l4479
  6440                           
  6441                           ;doprnt.c: 832: fval = -fval;
  6442  0122  0021               	movlb	1	; select bank1
  6443  0123  0855               	movf	sprintf@fval^(0+128),w
  6444  0124  00F1               	movwf	___ftneg@f1
  6445  0125  0856               	movf	(sprintf@fval+1)^(0+128),w
  6446  0126  00F2               	movwf	___ftneg@f1+1
  6447  0127  0857               	movf	(sprintf@fval+2)^(0+128),w
  6448  0128  00F3               	movwf	___ftneg@f1+2
  6449  0129  319A  220D  3180   	fcall	___ftneg
  6450  012C  0871               	movf	?___ftneg,w
  6451  012D  0021               	movlb	1	; select bank1
  6452  012E  00D5               	movwf	sprintf@fval^(0+128)
  6453  012F  0872               	movf	?___ftneg+1,w
  6454  0130  00D6               	movwf	(sprintf@fval+1)^(0+128)
  6455  0131  0873               	movf	?___ftneg+2,w
  6456  0132  00D7               	movwf	(sprintf@fval+2)^(0+128)
  6457                           
  6458                           ;doprnt.c: 833: flag |= 0x03;
  6459  0133  3003               	movlw	3
  6460  0134  04C6               	iorwf	sprintf@flag^(0+128),f
  6461  0135  3000               	movlw	0
  6462  0136  04C7               	iorwf	(sprintf@flag+1)^(0+128),f
  6463  0137                     l4479:	
  6464                           
  6465                           ;doprnt.c: 834: }
  6466                           ;doprnt.c: 835: exp = 0;
  6467  0137  0021               	movlb	1	; select bank1
  6468  0138  01C8               	clrf	sprintf@exp^(0+128)
  6469  0139  01C9               	clrf	(sprintf@exp+1)^(0+128)
  6470                           
  6471                           ;doprnt.c: 836: if( fval!=0) {
  6472  013A  0857               	movf	(sprintf@fval+2)^(0+128),w
  6473  013B  0456               	iorwf	(sprintf@fval+1)^(0+128),w
  6474  013C  0455               	iorwf	sprintf@fval^(0+128),w
  6475  013D  1903               	skipnz
  6476  013E  29F7               	goto	l398
  6477                           
  6478                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6479  013F  30D5               	movlw	low (sprintf@fval| 0)
  6480  0140  0086               	movwf	6
  6481  0141  0187               	clrf	7
  6482  0142  3F40               	moviw [0]fsr1
  6483  0143  0020               	movlb	0	; select bank0
  6484  0144  00E1               	movwf	??_sprintf
  6485  0145  3F41               	moviw [1]fsr1
  6486  0146  00E2               	movwf	??_sprintf+1
  6487  0147  3F42               	moviw [2]fsr1
  6488  0148  00E3               	movwf	??_sprintf+2
  6489  0149  3F43               	moviw [3]fsr1
  6490  014A  00E4               	movwf	??_sprintf+3
  6491  014B  300F               	movlw	15
  6492  014C                     u7215:	
  6493  014C  36E4               	lsrf	??_sprintf+3,f
  6494  014D  0CE3               	rrf	??_sprintf+2,f
  6495  014E  0CE2               	rrf	??_sprintf+1,f
  6496  014F  0CE1               	rrf	??_sprintf,f
  6497  0150  0B89               	decfsz	9,f
  6498  0151  294C               	goto	u7215
  6499  0152  30FF               	movlw	255
  6500  0153  0561               	andwf	??_sprintf,w
  6501  0154  00E5               	movwf	??_sprintf+4
  6502  0155  3000               	movlw	0
  6503  0156  0562               	andwf	??_sprintf+1,w
  6504  0157  00E6               	movwf	??_sprintf+5
  6505  0158  0865               	movf	??_sprintf+4,w
  6506  0159  3E82               	addlw	130
  6507  015A  0021               	movlb	1	; select bank1
  6508  015B  00C8               	movwf	sprintf@exp^(0+128)
  6509  015C  30FF               	movlw	255
  6510  015D  0020               	movlb	0	; select bank0
  6511  015E  3D66               	addwfc	??_sprintf+5,w
  6512  015F  0021               	movlb	1	; select bank1
  6513  0160  00C9               	movwf	(sprintf@exp+1)^(0+128)
  6514                           
  6515                           ;doprnt.c: 838: exp--;
  6516  0161  30FF               	movlw	255
  6517  0162  07C8               	addwf	sprintf@exp^(0+128),f
  6518  0163  30FF               	movlw	255
  6519  0164  3DC9               	addwfc	(sprintf@exp+1)^(0+128),f
  6520                           
  6521                           ;doprnt.c: 839: exp *= 3;
  6522  0165  3003               	movlw	3
  6523  0166  0020               	movlb	0	; select bank0
  6524  0167  00A5               	movwf	___wmul@multiplier
  6525  0168  3000               	movlw	0
  6526  0169  00A6               	movwf	___wmul@multiplier+1
  6527  016A  0021               	movlb	1	; select bank1
  6528  016B  0849               	movf	(sprintf@exp+1)^(0+128),w
  6529  016C  0020               	movlb	0	; select bank0
  6530  016D  00A8               	movwf	___wmul@multiplicand+1
  6531  016E  0021               	movlb	1	; select bank1
  6532  016F  0848               	movf	sprintf@exp^(0+128),w
  6533  0170  0020               	movlb	0	; select bank0
  6534  0171  00A7               	movwf	___wmul@multiplicand
  6535  0172  319A  2297  3180   	fcall	___wmul
  6536  0175  0020               	movlb	0	; select bank0
  6537  0176  0826               	movf	?___wmul+1,w
  6538  0177  0021               	movlb	1	; select bank1
  6539  0178  00C9               	movwf	(sprintf@exp+1)^(0+128)
  6540  0179  0020               	movlb	0	; select bank0
  6541  017A  0825               	movf	?___wmul,w
  6542  017B  0021               	movlb	1	; select bank1
  6543  017C  00C8               	movwf	sprintf@exp^(0+128)
  6544                           
  6545                           ;doprnt.c: 840: exp /= 10;
  6546  017D  300A               	movlw	10
  6547  017E  00F8               	movwf	___awdiv@divisor
  6548  017F  3000               	movlw	0
  6549  0180  00F9               	movwf	___awdiv@divisor+1
  6550  0181  0849               	movf	(sprintf@exp+1)^(0+128),w
  6551  0182  00FB               	movwf	___awdiv@dividend+1
  6552  0183  0848               	movf	sprintf@exp^(0+128),w
  6553  0184  00FA               	movwf	___awdiv@dividend
  6554  0185  319C  240F  3180   	fcall	___awdiv
  6555  0188  0879               	movf	?___awdiv+1,w
  6556  0189  0021               	movlb	1	; select bank1
  6557  018A  00C9               	movwf	(sprintf@exp+1)^(0+128)
  6558  018B  0878               	movf	?___awdiv,w
  6559  018C  00C8               	movwf	sprintf@exp^(0+128)
  6560                           
  6561                           ;doprnt.c: 841: if(exp < 0)
  6562  018D  1FC9               	btfss	(sprintf@exp+1)^(0+128),7
  6563  018E  2993               	goto	l4495
  6564                           
  6565                           ;doprnt.c: 842: exp--;
  6566  018F  30FF               	movlw	255
  6567  0190  07C8               	addwf	sprintf@exp^(0+128),f
  6568  0191  30FF               	movlw	255
  6569  0192  3DC9               	addwfc	(sprintf@exp+1)^(0+128),f
  6570  0193                     l4495:	
  6571                           
  6572                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6573  0193  0348               	decf	sprintf@exp^(0+128),w
  6574  0194  3AFF               	xorlw	255
  6575  0195  3195  25BC  3180   	fcall	_scale
  6576  0198  0020               	movlb	0	; select bank0
  6577  0199  083B               	movf	?_scale,w
  6578  019A  0021               	movlb	1	; select bank1
  6579  019B  00CA               	movwf	sprintf@tmpval^(0+128)
  6580  019C  0020               	movlb	0	; select bank0
  6581  019D  083C               	movf	?_scale+1,w
  6582  019E  0021               	movlb	1	; select bank1
  6583  019F  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  6584  01A0  0020               	movlb	0	; select bank0
  6585  01A1  083D               	movf	?_scale+2,w
  6586  01A2  0021               	movlb	1	; select bank1
  6587  01A3  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  6588                           
  6589                           ;doprnt.c: 847: tmpval.integ *= fval;
  6590  01A4  0855               	movf	sprintf@fval^(0+128),w
  6591  01A5  0020               	movlb	0	; select bank0
  6592  01A6  00AB               	movwf	___ftmul@f1
  6593  01A7  0021               	movlb	1	; select bank1
  6594  01A8  0856               	movf	(sprintf@fval+1)^(0+128),w
  6595  01A9  0020               	movlb	0	; select bank0
  6596  01AA  00AC               	movwf	___ftmul@f1+1
  6597  01AB  0021               	movlb	1	; select bank1
  6598  01AC  0857               	movf	(sprintf@fval+2)^(0+128),w
  6599  01AD  0020               	movlb	0	; select bank0
  6600  01AE  00AD               	movwf	___ftmul@f1+2
  6601  01AF  0021               	movlb	1	; select bank1
  6602  01B0  084A               	movf	sprintf@tmpval^(0+128),w
  6603  01B1  0020               	movlb	0	; select bank0
  6604  01B2  00AE               	movwf	___ftmul@f2
  6605  01B3  0021               	movlb	1	; select bank1
  6606  01B4  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  6607  01B5  0020               	movlb	0	; select bank0
  6608  01B6  00AF               	movwf	___ftmul@f2+1
  6609  01B7  0021               	movlb	1	; select bank1
  6610  01B8  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  6611  01B9  0020               	movlb	0	; select bank0
  6612  01BA  00B0               	movwf	___ftmul@f2+2
  6613  01BB  319E  2696  3180   	fcall	___ftmul
  6614  01BE  0020               	movlb	0	; select bank0
  6615  01BF  082B               	movf	?___ftmul,w
  6616  01C0  0021               	movlb	1	; select bank1
  6617  01C1  00CA               	movwf	sprintf@tmpval^(0+128)
  6618  01C2  0020               	movlb	0	; select bank0
  6619  01C3  082C               	movf	?___ftmul+1,w
  6620  01C4  0021               	movlb	1	; select bank1
  6621  01C5  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  6622  01C6  0020               	movlb	0	; select bank0
  6623  01C7  082D               	movf	?___ftmul+2,w
  6624  01C8  0021               	movlb	1	; select bank1
  6625  01C9  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  6626                           
  6627                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6628  01CA  084A               	movf	sprintf@tmpval^(0+128),w
  6629  01CB  00F1               	movwf	___ftge@ff1
  6630  01CC  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  6631  01CD  00F2               	movwf	___ftge@ff1+1
  6632  01CE  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  6633  01CF  00F3               	movwf	___ftge@ff1+2
  6634  01D0  3000               	movlw	0
  6635  01D1  00F4               	movwf	___ftge@ff2
  6636  01D2  3080               	movlw	128
  6637  01D3  00F5               	movwf	___ftge@ff2+1
  6638  01D4  303F               	movlw	63
  6639  01D5  00F6               	movwf	___ftge@ff2+2
  6640  01D6  319B  234C  3180   	fcall	___ftge
  6641  01D9  1803               	btfsc	3,0
  6642  01DA  29E0               	goto	l4503
  6643                           
  6644                           ;doprnt.c: 849: exp--;
  6645  01DB  30FF               	movlw	255
  6646  01DC  0021               	movlb	1	; select bank1
  6647  01DD  07C8               	addwf	sprintf@exp^(0+128),f
  6648  01DE  30FF               	movlw	255
  6649  01DF  29F6               	goto	L2
  6650  01E0                     l4503:	
  6651                           
  6652                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6653  01E0  0021               	movlb	1	; select bank1
  6654  01E1  084A               	movf	sprintf@tmpval^(0+128),w
  6655  01E2  00F1               	movwf	___ftge@ff1
  6656  01E3  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  6657  01E4  00F2               	movwf	___ftge@ff1+1
  6658  01E5  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  6659  01E6  00F3               	movwf	___ftge@ff1+2
  6660  01E7  3000               	movlw	0
  6661  01E8  00F4               	movwf	___ftge@ff2
  6662  01E9  3020               	movlw	32
  6663  01EA  00F5               	movwf	___ftge@ff2+1
  6664  01EB  3041               	movlw	65
  6665  01EC  00F6               	movwf	___ftge@ff2+2
  6666  01ED  319B  234C  3180   	fcall	___ftge
  6667  01F0  1C03               	btfss	3,0
  6668  01F1  29F7               	goto	l398
  6669                           
  6670                           ;doprnt.c: 851: exp++;
  6671  01F2  3001               	movlw	1
  6672  01F3  0021               	movlb	1	; select bank1
  6673  01F4  07C8               	addwf	sprintf@exp^(0+128),f
  6674  01F5  3000               	movlw	0
  6675  01F6                     L2:	
  6676  01F6  3DC9               	addwfc	(sprintf@exp+1)^(0+128),f
  6677  01F7                     l398:	
  6678                           
  6679                           ;doprnt.c: 852: }
  6680                           ;doprnt.c: 1112: if(prec <= 12)
  6681  01F7  0021               	movlb	1	; select bank1
  6682  01F8  0854               	movf	(sprintf@prec+1)^(0+128),w
  6683  01F9  3A80               	xorlw	128
  6684  01FA  0020               	movlb	0	; select bank0
  6685  01FB  00E1               	movwf	??_sprintf
  6686  01FC  3080               	movlw	128
  6687  01FD  0261               	subwf	??_sprintf,w
  6688  01FE  1D03               	skipz
  6689  01FF  2A03               	goto	u7255
  6690  0200  300D               	movlw	13
  6691  0201  0021               	movlb	1	; select bank1
  6692  0202  0253               	subwf	sprintf@prec^(0+128),w
  6693  0203                     u7255:	
  6694  0203  1803               	skipnc
  6695  0204  2A2C               	goto	l4509
  6696                           
  6697                           ;doprnt.c: 1113: fval += fround(prec);
  6698  0205  0021               	movlb	1	; select bank1
  6699  0206  0853               	movf	sprintf@prec^(0+128),w
  6700  0207  3194  2457  3180   	fcall	_fround
  6701  020A  0020               	movlb	0	; select bank0
  6702  020B  083B               	movf	?_fround,w
  6703  020C  00C9               	movwf	___ftadd@f1
  6704  020D  083C               	movf	?_fround+1,w
  6705  020E  00CA               	movwf	___ftadd@f1+1
  6706  020F  083D               	movf	?_fround+2,w
  6707  0210  00CB               	movwf	___ftadd@f1+2
  6708  0211  0021               	movlb	1	; select bank1
  6709  0212  0855               	movf	sprintf@fval^(0+128),w
  6710  0213  0020               	movlb	0	; select bank0
  6711  0214  00CC               	movwf	___ftadd@f2
  6712  0215  0021               	movlb	1	; select bank1
  6713  0216  0856               	movf	(sprintf@fval+1)^(0+128),w
  6714  0217  0020               	movlb	0	; select bank0
  6715  0218  00CD               	movwf	___ftadd@f2+1
  6716  0219  0021               	movlb	1	; select bank1
  6717  021A  0857               	movf	(sprintf@fval+2)^(0+128),w
  6718  021B  0020               	movlb	0	; select bank0
  6719  021C  00CE               	movwf	___ftadd@f2+2
  6720  021D  3190  20FC  3180   	fcall	___ftadd
  6721  0220  0020               	movlb	0	; select bank0
  6722  0221  0849               	movf	?___ftadd,w
  6723  0222  0021               	movlb	1	; select bank1
  6724  0223  00D5               	movwf	sprintf@fval^(0+128)
  6725  0224  0020               	movlb	0	; select bank0
  6726  0225  084A               	movf	?___ftadd+1,w
  6727  0226  0021               	movlb	1	; select bank1
  6728  0227  00D6               	movwf	(sprintf@fval+1)^(0+128)
  6729  0228  0020               	movlb	0	; select bank0
  6730  0229  084B               	movf	?___ftadd+2,w
  6731  022A  0021               	movlb	1	; select bank1
  6732  022B  00D7               	movwf	(sprintf@fval+2)^(0+128)
  6733  022C                     l4509:	
  6734                           
  6735                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6736  022C  0021               	movlb	1	; select bank1
  6737  022D  0849               	movf	(sprintf@exp+1)^(0+128),w
  6738  022E  3A80               	xorlw	128
  6739  022F  0020               	movlb	0	; select bank0
  6740  0230  00E1               	movwf	??_sprintf
  6741  0231  3080               	movlw	128
  6742  0232  0261               	subwf	??_sprintf,w
  6743  0233  1D03               	skipz
  6744  0234  2A38               	goto	u7265
  6745  0235  300A               	movlw	10
  6746  0236  0021               	movlb	1	; select bank1
  6747  0237  0248               	subwf	sprintf@exp^(0+128),w
  6748  0238                     u7265:	
  6749  0238  1803               	skipnc
  6750  0239  2A63               	goto	l4517
  6751  023A  0021               	movlb	1	; select bank1
  6752  023B  0857               	movf	(sprintf@fval+2)^(0+128),w
  6753  023C  0456               	iorwf	(sprintf@fval+1)^(0+128),w
  6754  023D  0455               	iorwf	sprintf@fval^(0+128),w
  6755  023E  1903               	skipnz
  6756  023F  2AAB               	goto	l4531
  6757  0240  0855               	movf	sprintf@fval^(0+128),w
  6758  0241  0020               	movlb	0	; select bank0
  6759  0242  00C4               	movwf	___fttol@f1
  6760  0243  0021               	movlb	1	; select bank1
  6761  0244  0856               	movf	(sprintf@fval+1)^(0+128),w
  6762  0245  0020               	movlb	0	; select bank0
  6763  0246  00C5               	movwf	___fttol@f1+1
  6764  0247  0021               	movlb	1	; select bank1
  6765  0248  0857               	movf	(sprintf@fval+2)^(0+128),w
  6766  0249  0020               	movlb	0	; select bank0
  6767  024A  00C6               	movwf	___fttol@f1+2
  6768  024B  319D  257A  3180   	fcall	___fttol
  6769  024E  0020               	movlb	0	; select bank0
  6770  024F  0847               	movf	?___fttol+3,w
  6771  0250  0446               	iorwf	?___fttol+2,w
  6772  0251  0445               	iorwf	?___fttol+1,w
  6773  0252  0444               	iorwf	?___fttol,w
  6774  0253  1D03               	skipz
  6775  0254  2AAB               	goto	l4531
  6776  0255  0021               	movlb	1	; select bank1
  6777  0256  0849               	movf	(sprintf@exp+1)^(0+128),w
  6778  0257  3A80               	xorlw	128
  6779  0258  0020               	movlb	0	; select bank0
  6780  0259  00E1               	movwf	??_sprintf
  6781  025A  3080               	movlw	128
  6782  025B  0261               	subwf	??_sprintf,w
  6783  025C  1D03               	skipz
  6784  025D  2A61               	goto	u7295
  6785  025E  3002               	movlw	2
  6786  025F  0021               	movlb	1	; select bank1
  6787  0260  0248               	subwf	sprintf@exp^(0+128),w
  6788  0261                     u7295:	
  6789  0261  1C03               	skipc
  6790  0262  2AAB               	goto	l4531
  6791  0263                     l4517:	
  6792                           
  6793                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6794  0263  0021               	movlb	1	; select bank1
  6795  0264  084A               	movf	sprintf@tmpval^(0+128),w
  6796  0265  00F1               	movwf	___ftge@ff1
  6797  0266  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  6798  0267  00F2               	movwf	___ftge@ff1+1
  6799  0268  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  6800  0269  00F3               	movwf	___ftge@ff1+2
  6801  026A  3070               	movlw	112
  6802  026B  00F4               	movwf	___ftge@ff2
  6803  026C  3089               	movlw	137
  6804  026D  00F5               	movwf	___ftge@ff2+1
  6805  026E  3040               	movlw	64
  6806  026F  00F6               	movwf	___ftge@ff2+2
  6807  0270  319B  234C  3180   	fcall	___ftge
  6808  0273  1803               	btfsc	3,0
  6809  0274  2A77               	goto	l4521
  6810                           
  6811                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6812  0275  30F7               	movlw	247
  6813  0276  2A78               	goto	L3
  6814  0277                     l4521:	
  6815                           ;doprnt.c: 1122: }else{
  6816                           
  6817                           
  6818                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6819  0277  30F8               	movlw	248
  6820  0278                     L3:	
  6821  0278  0021               	movlb	1	; select bank1
  6822  0279  07C8               	addwf	sprintf@exp^(0+128),f
  6823  027A  30FF               	movlw	255
  6824  027B  3DC9               	addwfc	(sprintf@exp+1)^(0+128),f
  6825                           
  6826                           ;doprnt.c: 1124: }
  6827                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  6828  027C  0848               	movf	sprintf@exp^(0+128),w
  6829  027D  3195  25BC  3180   	fcall	_scale
  6830  0280  0020               	movlb	0	; select bank0
  6831  0281  083B               	movf	?_scale,w
  6832  0282  0021               	movlb	1	; select bank1
  6833  0283  00CA               	movwf	sprintf@tmpval^(0+128)
  6834  0284  0020               	movlb	0	; select bank0
  6835  0285  083C               	movf	?_scale+1,w
  6836  0286  0021               	movlb	1	; select bank1
  6837  0287  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  6838  0288  0020               	movlb	0	; select bank0
  6839  0289  083D               	movf	?_scale+2,w
  6840  028A  0021               	movlb	1	; select bank1
  6841  028B  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  6842                           
  6843                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6844  028C  0855               	movf	sprintf@fval^(0+128),w
  6845  028D  00F1               	movwf	__tdiv_to_l_@f1
  6846  028E  0856               	movf	(sprintf@fval+1)^(0+128),w
  6847  028F  00F2               	movwf	__tdiv_to_l_@f1+1
  6848  0290  0857               	movf	(sprintf@fval+2)^(0+128),w
  6849  0291  00F3               	movwf	__tdiv_to_l_@f1+2
  6850  0292  084A               	movf	sprintf@tmpval^(0+128),w
  6851  0293  00F4               	movwf	__tdiv_to_l_@f2
  6852  0294  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  6853  0295  00F5               	movwf	__tdiv_to_l_@f2+1
  6854  0296  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  6855  0297  00F6               	movwf	__tdiv_to_l_@f2+2
  6856  0298  319F  274A  3180   	fcall	__tdiv_to_l_
  6857  029B  0874               	movf	?__tdiv_to_l_+3,w
  6858  029C  0021               	movlb	1	; select bank1
  6859  029D  00D1               	movwf	(sprintf@val+3)^(0+128)
  6860  029E  0873               	movf	?__tdiv_to_l_+2,w
  6861  029F  00D0               	movwf	(sprintf@val+2)^(0+128)
  6862  02A0  0872               	movf	?__tdiv_to_l_+1,w
  6863  02A1  00CF               	movwf	(sprintf@val+1)^(0+128)
  6864  02A2  0871               	movf	?__tdiv_to_l_,w
  6865  02A3  00CE               	movwf	sprintf@val^(0+128)
  6866                           
  6867                           ;doprnt.c: 1129: fval = 0.0;
  6868  02A4  3000               	movlw	0
  6869  02A5  00D5               	movwf	sprintf@fval^(0+128)
  6870  02A6  3000               	movlw	0
  6871  02A7  00D6               	movwf	(sprintf@fval+1)^(0+128)
  6872  02A8  3000               	movlw	0
  6873  02A9  00D7               	movwf	(sprintf@fval+2)^(0+128)
  6874                           
  6875                           ;doprnt.c: 1130: } else {
  6876  02AA  2B00               	goto	l4535
  6877  02AB                     l4531:	
  6878                           
  6879                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6880  02AB  0021               	movlb	1	; select bank1
  6881  02AC  0855               	movf	sprintf@fval^(0+128),w
  6882  02AD  0020               	movlb	0	; select bank0
  6883  02AE  00C4               	movwf	___fttol@f1
  6884  02AF  0021               	movlb	1	; select bank1
  6885  02B0  0856               	movf	(sprintf@fval+1)^(0+128),w
  6886  02B1  0020               	movlb	0	; select bank0
  6887  02B2  00C5               	movwf	___fttol@f1+1
  6888  02B3  0021               	movlb	1	; select bank1
  6889  02B4  0857               	movf	(sprintf@fval+2)^(0+128),w
  6890  02B5  0020               	movlb	0	; select bank0
  6891  02B6  00C6               	movwf	___fttol@f1+2
  6892  02B7  319D  257A  3180   	fcall	___fttol
  6893  02BA  0020               	movlb	0	; select bank0
  6894  02BB  0847               	movf	?___fttol+3,w
  6895  02BC  0021               	movlb	1	; select bank1
  6896  02BD  00D1               	movwf	(sprintf@val+3)^(0+128)
  6897  02BE  0020               	movlb	0	; select bank0
  6898  02BF  0846               	movf	?___fttol+2,w
  6899  02C0  0021               	movlb	1	; select bank1
  6900  02C1  00D0               	movwf	(sprintf@val+2)^(0+128)
  6901  02C2  0020               	movlb	0	; select bank0
  6902  02C3  0845               	movf	?___fttol+1,w
  6903  02C4  0021               	movlb	1	; select bank1
  6904  02C5  00CF               	movwf	(sprintf@val+1)^(0+128)
  6905  02C6  0020               	movlb	0	; select bank0
  6906  02C7  0844               	movf	?___fttol,w
  6907  02C8  0021               	movlb	1	; select bank1
  6908  02C9  00CE               	movwf	sprintf@val^(0+128)
  6909                           
  6910                           ;doprnt.c: 1132: fval -= (double)val;
  6911  02CA  0851               	movf	(sprintf@val+3)^(0+128),w
  6912  02CB  0020               	movlb	0	; select bank0
  6913  02CC  00A3               	movwf	___lltoft@c+3
  6914  02CD  0021               	movlb	1	; select bank1
  6915  02CE  0850               	movf	(sprintf@val+2)^(0+128),w
  6916  02CF  0020               	movlb	0	; select bank0
  6917  02D0  00A2               	movwf	___lltoft@c+2
  6918  02D1  0021               	movlb	1	; select bank1
  6919  02D2  084F               	movf	(sprintf@val+1)^(0+128),w
  6920  02D3  0020               	movlb	0	; select bank0
  6921  02D4  00A1               	movwf	___lltoft@c+1
  6922  02D5  0021               	movlb	1	; select bank1
  6923  02D6  084E               	movf	sprintf@val^(0+128),w
  6924  02D7  0020               	movlb	0	; select bank0
  6925  02D8  00A0               	movwf	___lltoft@c
  6926  02D9  3190  2000  3180   	fcall	___lltoft
  6927  02DC  0020               	movlb	0	; select bank0
  6928  02DD  0820               	movf	?___lltoft,w
  6929  02DE  00D6               	movwf	___ftsub@f2
  6930  02DF  0821               	movf	?___lltoft+1,w
  6931  02E0  00D7               	movwf	___ftsub@f2+1
  6932  02E1  0822               	movf	?___lltoft+2,w
  6933  02E2  00D8               	movwf	___ftsub@f2+2
  6934  02E3  0021               	movlb	1	; select bank1
  6935  02E4  0855               	movf	sprintf@fval^(0+128),w
  6936  02E5  0020               	movlb	0	; select bank0
  6937  02E6  00D9               	movwf	___ftsub@f1
  6938  02E7  0021               	movlb	1	; select bank1
  6939  02E8  0856               	movf	(sprintf@fval+1)^(0+128),w
  6940  02E9  0020               	movlb	0	; select bank0
  6941  02EA  00DA               	movwf	___ftsub@f1+1
  6942  02EB  0021               	movlb	1	; select bank1
  6943  02EC  0857               	movf	(sprintf@fval+2)^(0+128),w
  6944  02ED  0020               	movlb	0	; select bank0
  6945  02EE  00DB               	movwf	___ftsub@f1+2
  6946  02EF  319A  22B3  3180   	fcall	___ftsub
  6947  02F2  0020               	movlb	0	; select bank0
  6948  02F3  0856               	movf	?___ftsub,w
  6949  02F4  0021               	movlb	1	; select bank1
  6950  02F5  00D5               	movwf	sprintf@fval^(0+128)
  6951  02F6  0020               	movlb	0	; select bank0
  6952  02F7  0857               	movf	?___ftsub+1,w
  6953  02F8  0021               	movlb	1	; select bank1
  6954  02F9  00D6               	movwf	(sprintf@fval+1)^(0+128)
  6955  02FA  0020               	movlb	0	; select bank0
  6956  02FB  0858               	movf	?___ftsub+2,w
  6957  02FC  0021               	movlb	1	; select bank1
  6958  02FD  00D7               	movwf	(sprintf@fval+2)^(0+128)
  6959                           
  6960                           ;doprnt.c: 1133: exp = 0;
  6961  02FE  01C8               	clrf	sprintf@exp^(0+128)
  6962  02FF  01C9               	clrf	(sprintf@exp+1)^(0+128)
  6963  0300                     l4535:	
  6964                           
  6965                           ;doprnt.c: 1134: }
  6966                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6967  0300  01D8               	clrf	sprintf@c^(0+128)
  6968  0301  0AD8               	incf	sprintf@c^(0+128),f
  6969  0302  300A               	movlw	10
  6970  0303  0658               	xorwf	sprintf@c^(0+128),w
  6971  0304  1903               	btfsc	3,2
  6972  0305  2B3D               	goto	l4547
  6973  0306                     l4541:	
  6974                           
  6975                           ;doprnt.c: 1137: if(val < dpowers[c])
  6976  0306  0858               	movf	sprintf@c^(0+128),w
  6977  0307  0020               	movlb	0	; select bank0
  6978  0308  00E1               	movwf	??_sprintf
  6979  0309  01E2               	clrf	??_sprintf+1
  6980  030A  35E1               	lslf	??_sprintf,f
  6981  030B  0DE2               	rlf	??_sprintf+1,f
  6982  030C  35E1               	lslf	??_sprintf,f
  6983  030D  0DE2               	rlf	??_sprintf+1,f
  6984  030E  3000               	movlw	low (_dpowers| (0+32768))
  6985  030F  0761               	addwf	??_sprintf,w
  6986  0310  0084               	movwf	4
  6987  0311  30A0               	movlw	high (_dpowers| (0+32768))
  6988  0312  3D62               	addwfc	??_sprintf+1,w
  6989  0313  0085               	movwf	5
  6990  0314  3F00               	moviw [0]fsr0
  6991  0315  00E3               	movwf	??_sprintf+2
  6992  0316  3F01               	moviw [1]fsr0
  6993  0317  00E4               	movwf	??_sprintf+3
  6994  0318  3F02               	moviw [2]fsr0
  6995  0319  00E5               	movwf	??_sprintf+4
  6996  031A  3F03               	moviw [3]fsr0
  6997  031B  00E6               	movwf	??_sprintf+5
  6998  031C  0866               	movf	??_sprintf+5,w
  6999  031D  0021               	movlb	1	; select bank1
  7000  031E  0251               	subwf	(sprintf@val+3)^(0+128),w
  7001  031F  1D03               	skipz
  7002  0320  2B31               	goto	u7325
  7003  0321  0020               	movlb	0	; select bank0
  7004  0322  0865               	movf	??_sprintf+4,w
  7005  0323  0021               	movlb	1	; select bank1
  7006  0324  0250               	subwf	(sprintf@val+2)^(0+128),w
  7007  0325  1D03               	skipz
  7008  0326  2B31               	goto	u7325
  7009  0327  0020               	movlb	0	; select bank0
  7010  0328  0864               	movf	??_sprintf+3,w
  7011  0329  0021               	movlb	1	; select bank1
  7012  032A  024F               	subwf	(sprintf@val+1)^(0+128),w
  7013  032B  1D03               	skipz
  7014  032C  2B31               	goto	u7325
  7015  032D  0020               	movlb	0	; select bank0
  7016  032E  0863               	movf	??_sprintf+2,w
  7017  032F  0021               	movlb	1	; select bank1
  7018  0330  024E               	subwf	sprintf@val^(0+128),w
  7019  0331                     u7325:	
  7020  0331  1C03               	btfss	3,0
  7021  0332  2B3D               	goto	l4547
  7022                           
  7023                           ;doprnt.c: 1138: break;
  7024  0333  3001               	movlw	1
  7025  0334  0020               	movlb	0	; select bank0
  7026  0335  00E1               	movwf	??_sprintf
  7027  0336  0861               	movf	??_sprintf,w
  7028  0337  0021               	movlb	1	; select bank1
  7029  0338  07D8               	addwf	sprintf@c^(0+128),f
  7030  0339  300A               	movlw	10
  7031  033A  0658               	xorwf	sprintf@c^(0+128),w
  7032  033B  1D03               	btfss	3,2
  7033  033C  2B06               	goto	l4541
  7034  033D                     l4547:	
  7035                           
  7036                           ;doprnt.c: 1175: {
  7037                           ;doprnt.c: 1188: if(flag & 0x03)
  7038  033D  3003               	movlw	3
  7039  033E  0546               	andwf	sprintf@flag^(0+128),w
  7040  033F  0020               	movlb	0	; select bank0
  7041  0340  00E1               	movwf	??_sprintf
  7042  0341  3000               	movlw	0
  7043  0342  0021               	movlb	1	; select bank1
  7044  0343  0547               	andwf	(sprintf@flag+1)^(0+128),w
  7045  0344  0020               	movlb	0	; select bank0
  7046  0345  00E2               	movwf	??_sprintf+1
  7047  0346  0861               	movf	??_sprintf,w
  7048  0347  0462               	iorwf	??_sprintf+1,w
  7049  0348  1903               	btfsc	3,2
  7050  0349  2B58               	goto	l4561
  7051                           
  7052                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7053  034A  302D               	movlw	45
  7054  034B                     L6:	
  7055  034B  00E1               	movwf	??_sprintf
  7056  034C  0021               	movlb	1	; select bank1
  7057  034D  0852               	movf	sprintf@sp^(0+128),w
  7058  034E  0086               	movwf	6
  7059  034F  0187               	clrf	7
  7060  0350  0020               	movlb	0	; select bank0
  7061  0351  0861               	movf	??_sprintf,w
  7062  0352  0081               	movwf	1
  7063  0353  3001               	movlw	1
  7064  0354  00E1               	movwf	??_sprintf
  7065  0355  0861               	movf	??_sprintf,w
  7066  0356  0021               	movlb	1	; select bank1
  7067  0357  07D2               	addwf	sprintf@sp^(0+128),f
  7068  0358                     l4561:	
  7069  0358  30FF               	movlw	255
  7070  0359  0020               	movlb	0	; select bank0
  7071  035A  00E1               	movwf	??_sprintf
  7072  035B  0861               	movf	??_sprintf,w
  7073  035C  0021               	movlb	1	; select bank1
  7074  035D  07D8               	addwf	sprintf@c^(0+128),f
  7075  035E  0A58               	incf	sprintf@c^(0+128),w
  7076  035F  1903               	btfsc	3,2
  7077  0360  2BCF               	goto	l4569
  7078                           
  7079                           ;doprnt.c: 1200: {
  7080                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7081                           
  7082                           ;doprnt.c: 1195: }
  7083                           ;doprnt.c: 1196: while(c--) {
  7084  0361  0858               	movf	sprintf@c^(0+128),w
  7085  0362  0020               	movlb	0	; select bank0
  7086  0363  00E1               	movwf	??_sprintf
  7087  0364  01E2               	clrf	??_sprintf+1
  7088  0365  35E1               	lslf	??_sprintf,f
  7089  0366  0DE2               	rlf	??_sprintf+1,f
  7090  0367  35E1               	lslf	??_sprintf,f
  7091  0368  0DE2               	rlf	??_sprintf+1,f
  7092  0369  3000               	movlw	low (_dpowers| (0+32768))
  7093  036A  0761               	addwf	??_sprintf,w
  7094  036B  0084               	movwf	4
  7095  036C  30A0               	movlw	high (_dpowers| (0+32768))
  7096  036D  3D62               	addwfc	??_sprintf+1,w
  7097  036E  0085               	movwf	5
  7098  036F  3F00               	moviw [0]fsr0
  7099  0370  00F1               	movwf	___lldiv@divisor
  7100  0371  3F01               	moviw [1]fsr0
  7101  0372  00F2               	movwf	___lldiv@divisor+1
  7102  0373  3F02               	moviw [2]fsr0
  7103  0374  00F3               	movwf	___lldiv@divisor+2
  7104  0375  3F03               	moviw [3]fsr0
  7105  0376  00F4               	movwf	___lldiv@divisor+3
  7106  0377  0021               	movlb	1	; select bank1
  7107  0378  0851               	movf	(sprintf@val+3)^(0+128),w
  7108  0379  00F8               	movwf	___lldiv@dividend+3
  7109  037A  0850               	movf	(sprintf@val+2)^(0+128),w
  7110  037B  00F7               	movwf	___lldiv@dividend+2
  7111  037C  084F               	movf	(sprintf@val+1)^(0+128),w
  7112  037D  00F6               	movwf	___lldiv@dividend+1
  7113  037E  084E               	movf	sprintf@val^(0+128),w
  7114  037F  00F5               	movwf	___lldiv@dividend
  7115  0380  319C  2461  3180   	fcall	___lldiv
  7116  0383  0874               	movf	?___lldiv+3,w
  7117  0384  0021               	movlb	1	; select bank1
  7118  0385  00CD               	movwf	(sprintf@tmpval+3)^(0+128)
  7119  0386  0873               	movf	?___lldiv+2,w
  7120  0387  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  7121  0388  0872               	movf	?___lldiv+1,w
  7122  0389  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  7123  038A  0871               	movf	?___lldiv,w
  7124  038B  00CA               	movwf	sprintf@tmpval^(0+128)
  7125                           
  7126                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7127  038C  3000               	movlw	0
  7128  038D  0020               	movlb	0	; select bank0
  7129  038E  00A8               	movwf	___llmod@divisor+3
  7130  038F  3000               	movlw	0
  7131  0390  00A7               	movwf	___llmod@divisor+2
  7132  0391  3000               	movlw	0
  7133  0392  00A6               	movwf	___llmod@divisor+1
  7134  0393  300A               	movlw	10
  7135  0394  00A5               	movwf	___llmod@divisor
  7136  0395  0021               	movlb	1	; select bank1
  7137  0396  084D               	movf	(sprintf@tmpval+3)^(0+128),w
  7138  0397  0020               	movlb	0	; select bank0
  7139  0398  00AC               	movwf	___llmod@dividend+3
  7140  0399  0021               	movlb	1	; select bank1
  7141  039A  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  7142  039B  0020               	movlb	0	; select bank0
  7143  039C  00AB               	movwf	___llmod@dividend+2
  7144  039D  0021               	movlb	1	; select bank1
  7145  039E  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  7146  039F  0020               	movlb	0	; select bank0
  7147  03A0  00AA               	movwf	___llmod@dividend+1
  7148  03A1  0021               	movlb	1	; select bank1
  7149  03A2  084A               	movf	sprintf@tmpval^(0+128),w
  7150  03A3  0020               	movlb	0	; select bank0
  7151  03A4  00A9               	movwf	___llmod@dividend
  7152  03A5  319B  2387  3180   	fcall	___llmod
  7153  03A8  0020               	movlb	0	; select bank0
  7154  03A9  0828               	movf	?___llmod+3,w
  7155  03AA  0021               	movlb	1	; select bank1
  7156  03AB  00CD               	movwf	(sprintf@tmpval+3)^(0+128)
  7157  03AC  0020               	movlb	0	; select bank0
  7158  03AD  0827               	movf	?___llmod+2,w
  7159  03AE  0021               	movlb	1	; select bank1
  7160  03AF  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  7161  03B0  0020               	movlb	0	; select bank0
  7162  03B1  0826               	movf	?___llmod+1,w
  7163  03B2  0021               	movlb	1	; select bank1
  7164  03B3  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  7165  03B4  0020               	movlb	0	; select bank0
  7166  03B5  0825               	movf	?___llmod,w
  7167  03B6  0021               	movlb	1	; select bank1
  7168  03B7  00CA               	movwf	sprintf@tmpval^(0+128)
  7169                           
  7170                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7171  03B8  084A               	movf	sprintf@tmpval^(0+128),w
  7172  03B9  3E30               	addlw	48
  7173  03BA  0020               	movlb	0	; select bank0
  7174  03BB  2B4B               	goto	L6
  7175  03BC                     l4563:	
  7176                           ;doprnt.c: 1204: }
  7177                           ;doprnt.c: 1206: }
  7178                           ;doprnt.c: 1207: while(exp > 0) {
  7179                           
  7180                           
  7181                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7182  03BC  3030               	movlw	48
  7183  03BD  0020               	movlb	0	; select bank0
  7184  03BE  00E1               	movwf	??_sprintf
  7185  03BF  0021               	movlb	1	; select bank1
  7186  03C0  0852               	movf	sprintf@sp^(0+128),w
  7187  03C1  0086               	movwf	6
  7188  03C2  0187               	clrf	7
  7189  03C3  0020               	movlb	0	; select bank0
  7190  03C4  0861               	movf	??_sprintf,w
  7191  03C5  0081               	movwf	1
  7192  03C6  3001               	movlw	1
  7193  03C7  00E1               	movwf	??_sprintf
  7194  03C8  0861               	movf	??_sprintf,w
  7195  03C9  0021               	movlb	1	; select bank1
  7196  03CA  07D2               	addwf	sprintf@sp^(0+128),f
  7197                           
  7198                           ;doprnt.c: 1209: exp--;
  7199  03CB  30FF               	movlw	255
  7200  03CC  07C8               	addwf	sprintf@exp^(0+128),f
  7201  03CD  30FF               	movlw	255
  7202  03CE  3DC9               	addwfc	(sprintf@exp+1)^(0+128),f
  7203  03CF                     l4569:	
  7204  03CF  0849               	movf	(sprintf@exp+1)^(0+128),w
  7205  03D0  3A80               	xorlw	128
  7206  03D1  0020               	movlb	0	; select bank0
  7207  03D2  00E1               	movwf	??_sprintf
  7208  03D3  3080               	movlw	128
  7209  03D4  0261               	subwf	??_sprintf,w
  7210  03D5  1D03               	skipz
  7211  03D6  2BDA               	goto	u7365
  7212  03D7  3001               	movlw	1
  7213  03D8  0021               	movlb	1	; select bank1
  7214  03D9  0248               	subwf	sprintf@exp^(0+128),w
  7215  03DA                     u7365:	
  7216  03DA  1803               	skipnc
  7217  03DB  2BBC               	goto	l4563
  7218                           
  7219                           ;doprnt.c: 1210: }
  7220                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7221  03DC  0021               	movlb	1	; select bank1
  7222  03DD  0854               	movf	(sprintf@prec+1)^(0+128),w
  7223  03DE  3A80               	xorlw	128
  7224  03DF  0020               	movlb	0	; select bank0
  7225  03E0  00E1               	movwf	??_sprintf
  7226  03E1  3080               	movlw	128
  7227  03E2  0261               	subwf	??_sprintf,w
  7228  03E3  1D03               	skipz
  7229  03E4  2BE8               	goto	u7375
  7230  03E5  3009               	movlw	9
  7231  03E6  0021               	movlb	1	; select bank1
  7232  03E7  0253               	subwf	sprintf@prec^(0+128),w
  7233  03E8                     u7375:	
  7234  03E8  1C03               	skipc
  7235  03E9  2BEC               	goto	l4575
  7236                           
  7237                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7238  03EA  3008               	movlw	8
  7239  03EB  2BEE               	goto	L4
  7240  03EC                     l4575:	
  7241                           
  7242                           ;doprnt.c: 1213: else
  7243                           ;doprnt.c: 1214: c = prec;
  7244  03EC  0021               	movlb	1	; select bank1
  7245  03ED  0853               	movf	sprintf@prec^(0+128),w
  7246  03EE                     L4:	
  7247  03EE  0020               	movlb	0	; select bank0
  7248  03EF  00E1               	movwf	??_sprintf
  7249  03F0  0861               	movf	??_sprintf,w
  7250  03F1  0021               	movlb	1	; select bank1
  7251  03F2  00D8               	movwf	sprintf@c^(0+128)
  7252                           
  7253                           ;doprnt.c: 1215: prec -= c;
  7254  03F3  0858               	movf	sprintf@c^(0+128),w
  7255  03F4  0020               	movlb	0	; select bank0
  7256  03F5  00E1               	movwf	??_sprintf
  7257  03F6  01E2               	clrf	??_sprintf+1
  7258  03F7  1BE1               	btfsc	??_sprintf,7
  7259  03F8  03E2               	decf	??_sprintf+1,f
  7260  03F9  0861               	movf	??_sprintf,w
  7261  03FA  0021               	movlb	1	; select bank1
  7262  03FB  02D3               	subwf	sprintf@prec^(0+128),f
  7263  03FC  0020               	movlb	0	; select bank0
  7264  03FD  0862               	movf	??_sprintf+1,w
  7265  03FE  0021               	movlb	1	; select bank1
  7266  03FF  3BD4               	subwfb	(sprintf@prec+1)^(0+128),f
  7267                           
  7268                           ;doprnt.c: 1219: if(c)
  7269  0400  0858               	movf	sprintf@c^(0+128),w
  7270  0401  1903               	btfsc	3,2
  7271  0402  2C12               	goto	l4583
  7272                           
  7273                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7274  0403  302E               	movlw	46
  7275  0404  0020               	movlb	0	; select bank0
  7276  0405  00E1               	movwf	??_sprintf
  7277  0406  0021               	movlb	1	; select bank1
  7278  0407  0852               	movf	sprintf@sp^(0+128),w
  7279  0408  0086               	movwf	6
  7280  0409  0187               	clrf	7
  7281  040A  0020               	movlb	0	; select bank0
  7282  040B  0861               	movf	??_sprintf,w
  7283  040C  0081               	movwf	1
  7284  040D  3001               	movlw	1
  7285  040E  00E1               	movwf	??_sprintf
  7286  040F  0861               	movf	??_sprintf,w
  7287  0410  0021               	movlb	1	; select bank1
  7288  0411  07D2               	addwf	sprintf@sp^(0+128),f
  7289  0412                     l4583:	
  7290                           
  7291                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7292  0412  0858               	movf	sprintf@c^(0+128),w
  7293  0413  3195  25BC  3180   	fcall	_scale
  7294  0416  0020               	movlb	0	; select bank0
  7295  0417  083B               	movf	?_scale,w
  7296  0418  0021               	movlb	1	; select bank1
  7297  0419  00C2               	movwf	_sprintf$918^(0+128)
  7298  041A  0020               	movlb	0	; select bank0
  7299  041B  083C               	movf	?_scale+1,w
  7300  041C  0021               	movlb	1	; select bank1
  7301  041D  00C3               	movwf	(_sprintf$918+1)^(0+128)
  7302  041E  0020               	movlb	0	; select bank0
  7303  041F  083D               	movf	?_scale+2,w
  7304  0420  0021               	movlb	1	; select bank1
  7305  0421  00C4               	movwf	(_sprintf$918+2)^(0+128)
  7306                           
  7307                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7308  0422  0842               	movf	_sprintf$918^(0+128),w
  7309  0423  0020               	movlb	0	; select bank0
  7310  0424  00AE               	movwf	___ftmul@f2
  7311  0425  0021               	movlb	1	; select bank1
  7312  0426  0843               	movf	(_sprintf$918+1)^(0+128),w
  7313  0427  0020               	movlb	0	; select bank0
  7314  0428  00AF               	movwf	___ftmul@f2+1
  7315  0429  0021               	movlb	1	; select bank1
  7316  042A  0844               	movf	(_sprintf$918+2)^(0+128),w
  7317  042B  0020               	movlb	0	; select bank0
  7318  042C  00B0               	movwf	___ftmul@f2+2
  7319  042D  0021               	movlb	1	; select bank1
  7320  042E  0855               	movf	sprintf@fval^(0+128),w
  7321  042F  0020               	movlb	0	; select bank0
  7322  0430  00AB               	movwf	___ftmul@f1
  7323  0431  0021               	movlb	1	; select bank1
  7324  0432  0856               	movf	(sprintf@fval+1)^(0+128),w
  7325  0433  0020               	movlb	0	; select bank0
  7326  0434  00AC               	movwf	___ftmul@f1+1
  7327  0435  0021               	movlb	1	; select bank1
  7328  0436  0857               	movf	(sprintf@fval+2)^(0+128),w
  7329  0437  0020               	movlb	0	; select bank0
  7330  0438  00AD               	movwf	___ftmul@f1+2
  7331  0439  319E  2696  3180   	fcall	___ftmul
  7332  043C  0020               	movlb	0	; select bank0
  7333  043D  082B               	movf	?___ftmul,w
  7334  043E  00C4               	movwf	___fttol@f1
  7335  043F  082C               	movf	?___ftmul+1,w
  7336  0440  00C5               	movwf	___fttol@f1+1
  7337  0441  082D               	movf	?___ftmul+2,w
  7338  0442  00C6               	movwf	___fttol@f1+2
  7339  0443  319D  257A  3180   	fcall	___fttol
  7340  0446  0020               	movlb	0	; select bank0
  7341  0447  0847               	movf	?___fttol+3,w
  7342  0448  0021               	movlb	1	; select bank1
  7343  0449  00D1               	movwf	(sprintf@val+3)^(0+128)
  7344  044A  0020               	movlb	0	; select bank0
  7345  044B  0846               	movf	?___fttol+2,w
  7346  044C  0021               	movlb	1	; select bank1
  7347  044D  00D0               	movwf	(sprintf@val+2)^(0+128)
  7348  044E  0020               	movlb	0	; select bank0
  7349  044F  0845               	movf	?___fttol+1,w
  7350  0450  0021               	movlb	1	; select bank1
  7351  0451  00CF               	movwf	(sprintf@val+1)^(0+128)
  7352  0452  0020               	movlb	0	; select bank0
  7353  0453  0844               	movf	?___fttol,w
  7354  0454                     L5:	
  7355  0454  0021               	movlb	1	; select bank1
  7356  0455  00CE               	movwf	sprintf@val^(0+128)
  7357  0456  30FF               	movlw	255
  7358  0457  0020               	movlb	0	; select bank0
  7359  0458  00E1               	movwf	??_sprintf
  7360  0459  0861               	movf	??_sprintf,w
  7361  045A  0021               	movlb	1	; select bank1
  7362  045B  07D8               	addwf	sprintf@c^(0+128),f
  7363  045C  0A58               	incf	sprintf@c^(0+128),w
  7364  045D  1903               	btfsc	3,2
  7365  045E  2D11               	goto	l4605
  7366                           
  7367                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7368                           
  7369                           ;doprnt.c: 1228: while(c--) {
  7370  045F  0858               	movf	sprintf@c^(0+128),w
  7371  0460  0020               	movlb	0	; select bank0
  7372  0461  00E1               	movwf	??_sprintf
  7373  0462  01E2               	clrf	??_sprintf+1
  7374  0463  35E1               	lslf	??_sprintf,f
  7375  0464  0DE2               	rlf	??_sprintf+1,f
  7376  0465  35E1               	lslf	??_sprintf,f
  7377  0466  0DE2               	rlf	??_sprintf+1,f
  7378  0467  3000               	movlw	low (_dpowers| (0+32768))
  7379  0468  0761               	addwf	??_sprintf,w
  7380  0469  0084               	movwf	4
  7381  046A  30A0               	movlw	high (_dpowers| (0+32768))
  7382  046B  3D62               	addwfc	??_sprintf+1,w
  7383  046C  0085               	movwf	5
  7384  046D  3F00               	moviw [0]fsr0
  7385  046E  00F1               	movwf	___lldiv@divisor
  7386  046F  3F01               	moviw [1]fsr0
  7387  0470  00F2               	movwf	___lldiv@divisor+1
  7388  0471  3F02               	moviw [2]fsr0
  7389  0472  00F3               	movwf	___lldiv@divisor+2
  7390  0473  3F03               	moviw [3]fsr0
  7391  0474  00F4               	movwf	___lldiv@divisor+3
  7392  0475  0021               	movlb	1	; select bank1
  7393  0476  0851               	movf	(sprintf@val+3)^(0+128),w
  7394  0477  00F8               	movwf	___lldiv@dividend+3
  7395  0478  0850               	movf	(sprintf@val+2)^(0+128),w
  7396  0479  00F7               	movwf	___lldiv@dividend+2
  7397  047A  084F               	movf	(sprintf@val+1)^(0+128),w
  7398  047B  00F6               	movwf	___lldiv@dividend+1
  7399  047C  084E               	movf	sprintf@val^(0+128),w
  7400  047D  00F5               	movwf	___lldiv@dividend
  7401  047E  319C  2461  3180   	fcall	___lldiv
  7402  0481  0874               	movf	?___lldiv+3,w
  7403  0482  0021               	movlb	1	; select bank1
  7404  0483  00CD               	movwf	(sprintf@tmpval+3)^(0+128)
  7405  0484  0873               	movf	?___lldiv+2,w
  7406  0485  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  7407  0486  0872               	movf	?___lldiv+1,w
  7408  0487  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  7409  0488  0871               	movf	?___lldiv,w
  7410  0489  00CA               	movwf	sprintf@tmpval^(0+128)
  7411                           
  7412                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7413  048A  3000               	movlw	0
  7414  048B  0020               	movlb	0	; select bank0
  7415  048C  00A8               	movwf	___llmod@divisor+3
  7416  048D  3000               	movlw	0
  7417  048E  00A7               	movwf	___llmod@divisor+2
  7418  048F  3000               	movlw	0
  7419  0490  00A6               	movwf	___llmod@divisor+1
  7420  0491  300A               	movlw	10
  7421  0492  00A5               	movwf	___llmod@divisor
  7422  0493  0021               	movlb	1	; select bank1
  7423  0494  084D               	movf	(sprintf@tmpval+3)^(0+128),w
  7424  0495  0020               	movlb	0	; select bank0
  7425  0496  00AC               	movwf	___llmod@dividend+3
  7426  0497  0021               	movlb	1	; select bank1
  7427  0498  084C               	movf	(sprintf@tmpval+2)^(0+128),w
  7428  0499  0020               	movlb	0	; select bank0
  7429  049A  00AB               	movwf	___llmod@dividend+2
  7430  049B  0021               	movlb	1	; select bank1
  7431  049C  084B               	movf	(sprintf@tmpval+1)^(0+128),w
  7432  049D  0020               	movlb	0	; select bank0
  7433  049E  00AA               	movwf	___llmod@dividend+1
  7434  049F  0021               	movlb	1	; select bank1
  7435  04A0  084A               	movf	sprintf@tmpval^(0+128),w
  7436  04A1  0020               	movlb	0	; select bank0
  7437  04A2  00A9               	movwf	___llmod@dividend
  7438  04A3  319B  2387  3180   	fcall	___llmod
  7439  04A6  0020               	movlb	0	; select bank0
  7440  04A7  0828               	movf	?___llmod+3,w
  7441  04A8  0021               	movlb	1	; select bank1
  7442  04A9  00CD               	movwf	(sprintf@tmpval+3)^(0+128)
  7443  04AA  0020               	movlb	0	; select bank0
  7444  04AB  0827               	movf	?___llmod+2,w
  7445  04AC  0021               	movlb	1	; select bank1
  7446  04AD  00CC               	movwf	(sprintf@tmpval+2)^(0+128)
  7447  04AE  0020               	movlb	0	; select bank0
  7448  04AF  0826               	movf	?___llmod+1,w
  7449  04B0  0021               	movlb	1	; select bank1
  7450  04B1  00CB               	movwf	(sprintf@tmpval+1)^(0+128)
  7451  04B2  0020               	movlb	0	; select bank0
  7452  04B3  0825               	movf	?___llmod,w
  7453  04B4  0021               	movlb	1	; select bank1
  7454  04B5  00CA               	movwf	sprintf@tmpval^(0+128)
  7455                           
  7456                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7457  04B6  084A               	movf	sprintf@tmpval^(0+128),w
  7458  04B7  3E30               	addlw	48
  7459  04B8  0020               	movlb	0	; select bank0
  7460  04B9  00E1               	movwf	??_sprintf
  7461  04BA  0021               	movlb	1	; select bank1
  7462  04BB  0852               	movf	sprintf@sp^(0+128),w
  7463  04BC  0086               	movwf	6
  7464  04BD  0187               	clrf	7
  7465  04BE  0020               	movlb	0	; select bank0
  7466  04BF  0861               	movf	??_sprintf,w
  7467  04C0  0081               	movwf	1
  7468  04C1  3001               	movlw	1
  7469  04C2  00E1               	movwf	??_sprintf
  7470  04C3  0861               	movf	??_sprintf,w
  7471  04C4  0021               	movlb	1	; select bank1
  7472  04C5  07D2               	addwf	sprintf@sp^(0+128),f
  7473                           
  7474                           ;doprnt.c: 1232: val %= dpowers[c];
  7475  04C6  0858               	movf	sprintf@c^(0+128),w
  7476  04C7  0020               	movlb	0	; select bank0
  7477  04C8  00E1               	movwf	??_sprintf
  7478  04C9  01E2               	clrf	??_sprintf+1
  7479  04CA  35E1               	lslf	??_sprintf,f
  7480  04CB  0DE2               	rlf	??_sprintf+1,f
  7481  04CC  35E1               	lslf	??_sprintf,f
  7482  04CD  0DE2               	rlf	??_sprintf+1,f
  7483  04CE  3000               	movlw	low (_dpowers| (0+32768))
  7484  04CF  0761               	addwf	??_sprintf,w
  7485  04D0  0084               	movwf	4
  7486  04D1  30A0               	movlw	high (_dpowers| (0+32768))
  7487  04D2  3D62               	addwfc	??_sprintf+1,w
  7488  04D3  0085               	movwf	5
  7489  04D4  3F00               	moviw [0]fsr0
  7490  04D5  00A5               	movwf	___llmod@divisor
  7491  04D6  3F01               	moviw [1]fsr0
  7492  04D7  00A6               	movwf	___llmod@divisor+1
  7493  04D8  3F02               	moviw [2]fsr0
  7494  04D9  00A7               	movwf	___llmod@divisor+2
  7495  04DA  3F03               	moviw [3]fsr0
  7496  04DB  00A8               	movwf	___llmod@divisor+3
  7497  04DC  0021               	movlb	1	; select bank1
  7498  04DD  0851               	movf	(sprintf@val+3)^(0+128),w
  7499  04DE  0020               	movlb	0	; select bank0
  7500  04DF  00AC               	movwf	___llmod@dividend+3
  7501  04E0  0021               	movlb	1	; select bank1
  7502  04E1  0850               	movf	(sprintf@val+2)^(0+128),w
  7503  04E2  0020               	movlb	0	; select bank0
  7504  04E3  00AB               	movwf	___llmod@dividend+2
  7505  04E4  0021               	movlb	1	; select bank1
  7506  04E5  084F               	movf	(sprintf@val+1)^(0+128),w
  7507  04E6  0020               	movlb	0	; select bank0
  7508  04E7  00AA               	movwf	___llmod@dividend+1
  7509  04E8  0021               	movlb	1	; select bank1
  7510  04E9  084E               	movf	sprintf@val^(0+128),w
  7511  04EA  0020               	movlb	0	; select bank0
  7512  04EB  00A9               	movwf	___llmod@dividend
  7513  04EC  319B  2387  3180   	fcall	___llmod
  7514  04EF  0020               	movlb	0	; select bank0
  7515  04F0  0828               	movf	?___llmod+3,w
  7516  04F1  0021               	movlb	1	; select bank1
  7517  04F2  00D1               	movwf	(sprintf@val+3)^(0+128)
  7518  04F3  0020               	movlb	0	; select bank0
  7519  04F4  0827               	movf	?___llmod+2,w
  7520  04F5  0021               	movlb	1	; select bank1
  7521  04F6  00D0               	movwf	(sprintf@val+2)^(0+128)
  7522  04F7  0020               	movlb	0	; select bank0
  7523  04F8  0826               	movf	?___llmod+1,w
  7524  04F9  0021               	movlb	1	; select bank1
  7525  04FA  00CF               	movwf	(sprintf@val+1)^(0+128)
  7526  04FB  0020               	movlb	0	; select bank0
  7527  04FC  0825               	movf	?___llmod,w
  7528  04FD  2C54               	goto	L5
  7529  04FE                     l4599:	
  7530                           ;doprnt.c: 1233: }
  7531                           ;doprnt.c: 1235: while(prec) {
  7532                           
  7533                           
  7534                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7535  04FE  3030               	movlw	48
  7536  04FF  0020               	movlb	0	; select bank0
  7537  0500  00E1               	movwf	??_sprintf
  7538  0501  0021               	movlb	1	; select bank1
  7539  0502  0852               	movf	sprintf@sp^(0+128),w
  7540  0503  0086               	movwf	6
  7541  0504  0187               	clrf	7
  7542  0505  0020               	movlb	0	; select bank0
  7543  0506  0861               	movf	??_sprintf,w
  7544  0507  0081               	movwf	1
  7545  0508  3001               	movlw	1
  7546  0509  00E1               	movwf	??_sprintf
  7547  050A  0861               	movf	??_sprintf,w
  7548  050B  0021               	movlb	1	; select bank1
  7549  050C  07D2               	addwf	sprintf@sp^(0+128),f
  7550                           
  7551                           ;doprnt.c: 1237: prec--;
  7552  050D  30FF               	movlw	255
  7553  050E  07D3               	addwf	sprintf@prec^(0+128),f
  7554  050F  30FF               	movlw	255
  7555  0510  3DD4               	addwfc	(sprintf@prec+1)^(0+128),f
  7556  0511                     l4605:	
  7557  0511  0853               	movf	sprintf@prec^(0+128),w
  7558  0512  0454               	iorwf	(sprintf@prec+1)^(0+128),w
  7559  0513  1903               	btfsc	3,2
  7560  0514  2856               	goto	l4655
  7561  0515  2CFE               	goto	l4599
  7562  0516                     l4607:	
  7563                           ;doprnt.c: 1238: }
  7564                           ;doprnt.c: 1245: continue;
  7565                           
  7566                           
  7567                           ;doprnt.c: 1246: }
  7568                           ;doprnt.c: 1253: {
  7569                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7570  0516  0021               	movlb	1	; select bank1
  7571  0517  0845               	movf	sprintf@ap^(0+128),w
  7572  0518  0086               	movwf	6
  7573  0519  0187               	clrf	7
  7574  051A  3F40               	moviw [0]fsr1
  7575  051B  0020               	movlb	0	; select bank0
  7576  051C  00E1               	movwf	??_sprintf
  7577  051D  3F41               	moviw [1]fsr1
  7578  051E  00E2               	movwf	??_sprintf+1
  7579  051F  0861               	movf	??_sprintf,w
  7580  0520  0021               	movlb	1	; select bank1
  7581  0521  00CE               	movwf	sprintf@val^(0+128)
  7582  0522  0020               	movlb	0	; select bank0
  7583  0523  0862               	movf	??_sprintf+1,w
  7584  0524  0021               	movlb	1	; select bank1
  7585  0525  00CF               	movwf	(sprintf@val+1)^(0+128)
  7586  0526  0D89               	rlf	9,f
  7587  0527  3B89               	subwfb	9,f
  7588  0528  0989               	comf	9,f
  7589  0529  00D0               	movwf	(sprintf@val+2)^(0+128)
  7590  052A  00D1               	movwf	(sprintf@val+3)^(0+128)
  7591  052B  3002               	movlw	2
  7592  052C  0020               	movlb	0	; select bank0
  7593  052D  00E1               	movwf	??_sprintf
  7594  052E  0861               	movf	??_sprintf,w
  7595  052F  0021               	movlb	1	; select bank1
  7596  0530  07C5               	addwf	sprintf@ap^(0+128),f
  7597                           
  7598                           ;doprnt.c: 1261: if((long)val < 0) {
  7599  0531  1FD1               	btfss	(sprintf@val+3)^(0+128),7
  7600  0532  2D42               	goto	l4617
  7601                           
  7602                           ;doprnt.c: 1262: flag |= 0x03;
  7603  0533  3003               	movlw	3
  7604  0534  04C6               	iorwf	sprintf@flag^(0+128),f
  7605  0535  3000               	movlw	0
  7606  0536  04C7               	iorwf	(sprintf@flag+1)^(0+128),f
  7607                           
  7608                           ;doprnt.c: 1263: val = -val;
  7609  0537  09CE               	comf	sprintf@val^(0+128),f
  7610  0538  09CF               	comf	(sprintf@val+1)^(0+128),f
  7611  0539  09D0               	comf	(sprintf@val+2)^(0+128),f
  7612  053A  09D1               	comf	(sprintf@val+3)^(0+128),f
  7613  053B  0ACE               	incf	sprintf@val^(0+128),f
  7614  053C  1903               	skipnz
  7615  053D  0ACF               	incf	(sprintf@val+1)^(0+128),f
  7616  053E  1903               	skipnz
  7617  053F  0AD0               	incf	(sprintf@val+2)^(0+128),f
  7618  0540  1903               	skipnz
  7619  0541  0AD1               	incf	(sprintf@val+3)^(0+128),f
  7620  0542                     l4617:	
  7621                           
  7622                           ;doprnt.c: 1264: }
  7623                           ;doprnt.c: 1266: }
  7624                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7625  0542  0853               	movf	sprintf@prec^(0+128),w
  7626  0543  0454               	iorwf	(sprintf@prec+1)^(0+128),w
  7627  0544  1D03               	btfss	3,2
  7628  0545  2D50               	goto	l4623
  7629  0546  0851               	movf	(sprintf@val+3)^(0+128),w
  7630  0547  0450               	iorwf	(sprintf@val+2)^(0+128),w
  7631  0548  044F               	iorwf	(sprintf@val+1)^(0+128),w
  7632  0549  044E               	iorwf	sprintf@val^(0+128),w
  7633  054A  1D03               	skipz
  7634  054B  2D50               	goto	l4623
  7635                           
  7636                           ;doprnt.c: 1291: prec++;
  7637  054C  3001               	movlw	1
  7638  054D  07D3               	addwf	sprintf@prec^(0+128),f
  7639  054E  3000               	movlw	0
  7640  054F  3DD4               	addwfc	(sprintf@prec+1)^(0+128),f
  7641  0550                     l4623:	
  7642                           
  7643                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7644  0550  01D8               	clrf	sprintf@c^(0+128)
  7645  0551  0AD8               	incf	sprintf@c^(0+128),f
  7646  0552  300A               	movlw	10
  7647  0553  0658               	xorwf	sprintf@c^(0+128),w
  7648  0554  1903               	btfsc	3,2
  7649  0555  2D8D               	goto	l4635
  7650  0556                     l4629:	
  7651                           
  7652                           ;doprnt.c: 1306: if(val < dpowers[c])
  7653  0556  0858               	movf	sprintf@c^(0+128),w
  7654  0557  0020               	movlb	0	; select bank0
  7655  0558  00E1               	movwf	??_sprintf
  7656  0559  01E2               	clrf	??_sprintf+1
  7657  055A  35E1               	lslf	??_sprintf,f
  7658  055B  0DE2               	rlf	??_sprintf+1,f
  7659  055C  35E1               	lslf	??_sprintf,f
  7660  055D  0DE2               	rlf	??_sprintf+1,f
  7661  055E  3000               	movlw	low (_dpowers| (0+32768))
  7662  055F  0761               	addwf	??_sprintf,w
  7663  0560  0084               	movwf	4
  7664  0561  30A0               	movlw	high (_dpowers| (0+32768))
  7665  0562  3D62               	addwfc	??_sprintf+1,w
  7666  0563  0085               	movwf	5
  7667  0564  3F00               	moviw [0]fsr0
  7668  0565  00E3               	movwf	??_sprintf+2
  7669  0566  3F01               	moviw [1]fsr0
  7670  0567  00E4               	movwf	??_sprintf+3
  7671  0568  3F02               	moviw [2]fsr0
  7672  0569  00E5               	movwf	??_sprintf+4
  7673  056A  3F03               	moviw [3]fsr0
  7674  056B  00E6               	movwf	??_sprintf+5
  7675  056C  0866               	movf	??_sprintf+5,w
  7676  056D  0021               	movlb	1	; select bank1
  7677  056E  0251               	subwf	(sprintf@val+3)^(0+128),w
  7678  056F  1D03               	skipz
  7679  0570  2D81               	goto	u7455
  7680  0571  0020               	movlb	0	; select bank0
  7681  0572  0865               	movf	??_sprintf+4,w
  7682  0573  0021               	movlb	1	; select bank1
  7683  0574  0250               	subwf	(sprintf@val+2)^(0+128),w
  7684  0575  1D03               	skipz
  7685  0576  2D81               	goto	u7455
  7686  0577  0020               	movlb	0	; select bank0
  7687  0578  0864               	movf	??_sprintf+3,w
  7688  0579  0021               	movlb	1	; select bank1
  7689  057A  024F               	subwf	(sprintf@val+1)^(0+128),w
  7690  057B  1D03               	skipz
  7691  057C  2D81               	goto	u7455
  7692  057D  0020               	movlb	0	; select bank0
  7693  057E  0863               	movf	??_sprintf+2,w
  7694  057F  0021               	movlb	1	; select bank1
  7695  0580  024E               	subwf	sprintf@val^(0+128),w
  7696  0581                     u7455:	
  7697  0581  1C03               	btfss	3,0
  7698  0582  2D8D               	goto	l4635
  7699                           
  7700                           ;doprnt.c: 1307: break;
  7701  0583  3001               	movlw	1
  7702  0584  0020               	movlb	0	; select bank0
  7703  0585  00E1               	movwf	??_sprintf
  7704  0586  0861               	movf	??_sprintf,w
  7705  0587  0021               	movlb	1	; select bank1
  7706  0588  07D8               	addwf	sprintf@c^(0+128),f
  7707  0589  300A               	movlw	10
  7708  058A  0658               	xorwf	sprintf@c^(0+128),w
  7709  058B  1D03               	btfss	3,2
  7710  058C  2D56               	goto	l4629
  7711  058D                     l4635:	
  7712                           
  7713                           ;doprnt.c: 1339: if(c < prec)
  7714  058D  0858               	movf	sprintf@c^(0+128),w
  7715  058E  0020               	movlb	0	; select bank0
  7716  058F  00E1               	movwf	??_sprintf
  7717  0590  01E2               	clrf	??_sprintf+1
  7718  0591  1BE1               	btfsc	??_sprintf,7
  7719  0592  03E2               	decf	??_sprintf+1,f
  7720  0593  0862               	movf	??_sprintf+1,w
  7721  0594  3A80               	xorlw	128
  7722  0595  00E3               	movwf	??_sprintf+2
  7723  0596  0021               	movlb	1	; select bank1
  7724  0597  0854               	movf	(sprintf@prec+1)^(0+128),w
  7725  0598  3A80               	xorlw	128
  7726  0599  0020               	movlb	0	; select bank0
  7727  059A  0263               	subwf	??_sprintf+2,w
  7728  059B  1D03               	skipz
  7729  059C  2DA1               	goto	u7475
  7730  059D  0021               	movlb	1	; select bank1
  7731  059E  0853               	movf	sprintf@prec^(0+128),w
  7732  059F  0020               	movlb	0	; select bank0
  7733  05A0  0261               	subwf	??_sprintf,w
  7734  05A1                     u7475:	
  7735  05A1  1803               	skipnc
  7736  05A2  2DAB               	goto	l4639
  7737                           
  7738                           ;doprnt.c: 1340: c = prec;
  7739  05A3  0021               	movlb	1	; select bank1
  7740  05A4  0853               	movf	sprintf@prec^(0+128),w
  7741  05A5  0020               	movlb	0	; select bank0
  7742  05A6  00E1               	movwf	??_sprintf
  7743  05A7  0861               	movf	??_sprintf,w
  7744  05A8  0021               	movlb	1	; select bank1
  7745  05A9  00D8               	movwf	sprintf@c^(0+128)
  7746  05AA  2DC7               	goto	l439
  7747  05AB                     l4639:	
  7748                           
  7749                           ;doprnt.c: 1341: else if(prec < c)
  7750  05AB  0021               	movlb	1	; select bank1
  7751  05AC  0858               	movf	sprintf@c^(0+128),w
  7752  05AD  0020               	movlb	0	; select bank0
  7753  05AE  00E1               	movwf	??_sprintf
  7754  05AF  01E2               	clrf	??_sprintf+1
  7755  05B0  1BE1               	btfsc	??_sprintf,7
  7756  05B1  03E2               	decf	??_sprintf+1,f
  7757  05B2  0021               	movlb	1	; select bank1
  7758  05B3  0854               	movf	(sprintf@prec+1)^(0+128),w
  7759  05B4  3A80               	xorlw	128
  7760  05B5  0020               	movlb	0	; select bank0
  7761  05B6  00E3               	movwf	??_sprintf+2
  7762  05B7  0862               	movf	??_sprintf+1,w
  7763  05B8  3A80               	xorlw	128
  7764  05B9  0263               	subwf	??_sprintf+2,w
  7765  05BA  1D03               	skipz
  7766  05BB  2DBF               	goto	u7485
  7767  05BC  0861               	movf	??_sprintf,w
  7768  05BD  0021               	movlb	1	; select bank1
  7769  05BE  0253               	subwf	sprintf@prec^(0+128),w
  7770  05BF                     u7485:	
  7771  05BF  1803               	skipnc
  7772  05C0  2DC7               	goto	l439
  7773                           
  7774                           ;doprnt.c: 1342: prec = c;
  7775  05C1  0021               	movlb	1	; select bank1
  7776  05C2  0858               	movf	sprintf@c^(0+128),w
  7777  05C3  00D3               	movwf	sprintf@prec^(0+128)
  7778  05C4  01D4               	clrf	(sprintf@prec+1)^(0+128)
  7779  05C5  1BD3               	btfsc	sprintf@prec^(0+128),7
  7780  05C6  03D4               	decf	(sprintf@prec+1)^(0+128),f
  7781  05C7                     l439:	
  7782                           
  7783                           ;doprnt.c: 1422: {
  7784                           ;doprnt.c: 1438: if(flag & 0x03)
  7785  05C7  3003               	movlw	3
  7786  05C8  0021               	movlb	1	; select bank1
  7787  05C9  0546               	andwf	sprintf@flag^(0+128),w
  7788  05CA  0020               	movlb	0	; select bank0
  7789  05CB  00E1               	movwf	??_sprintf
  7790  05CC  3000               	movlw	0
  7791  05CD  0021               	movlb	1	; select bank1
  7792  05CE  0547               	andwf	(sprintf@flag+1)^(0+128),w
  7793  05CF  0020               	movlb	0	; select bank0
  7794  05D0  00E2               	movwf	??_sprintf+1
  7795  05D1  0861               	movf	??_sprintf,w
  7796  05D2  0462               	iorwf	??_sprintf+1,w
  7797  05D3  1903               	btfsc	3,2
  7798  05D4  2DE3               	goto	l4653
  7799                           
  7800                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7801  05D5  302D               	movlw	45
  7802  05D6                     L7:	
  7803  05D6  00E1               	movwf	??_sprintf
  7804  05D7  0021               	movlb	1	; select bank1
  7805  05D8  0852               	movf	sprintf@sp^(0+128),w
  7806  05D9  0086               	movwf	6
  7807  05DA  0187               	clrf	7
  7808  05DB  0020               	movlb	0	; select bank0
  7809  05DC  0861               	movf	??_sprintf,w
  7810  05DD  0081               	movwf	1
  7811  05DE  3001               	movlw	1
  7812  05DF  00E1               	movwf	??_sprintf
  7813  05E0  0861               	movf	??_sprintf,w
  7814  05E1  0021               	movlb	1	; select bank1
  7815  05E2  07D2               	addwf	sprintf@sp^(0+128),f
  7816  05E3                     l4653:	
  7817  05E3  30FF               	movlw	255
  7818  05E4  0021               	movlb	1	; select bank1
  7819  05E5  07D3               	addwf	sprintf@prec^(0+128),f
  7820  05E6  30FF               	movlw	255
  7821  05E7  3DD4               	addwfc	(sprintf@prec+1)^(0+128),f
  7822  05E8  0A53               	incf	sprintf@prec^(0+128),w
  7823  05E9  1903               	btfsc	3,2
  7824  05EA  0A54               	incf	(sprintf@prec+1)^(0+128),w
  7825  05EB  1903               	btfsc	3,2
  7826  05EC  2856               	goto	l4655
  7827                           
  7828                           ;doprnt.c: 1478: {
  7829                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7830                           
  7831                           ;doprnt.c: 1469: }
  7832                           ;doprnt.c: 1474: while(prec--) {
  7833  05ED  3000               	movlw	0
  7834  05EE  0020               	movlb	0	; select bank0
  7835  05EF  00A8               	movwf	___llmod@divisor+3
  7836  05F0  3000               	movlw	0
  7837  05F1  00A7               	movwf	___llmod@divisor+2
  7838  05F2  3000               	movlw	0
  7839  05F3  00A6               	movwf	___llmod@divisor+1
  7840  05F4  300A               	movlw	10
  7841  05F5  00A5               	movwf	___llmod@divisor
  7842  05F6  0021               	movlb	1	; select bank1
  7843  05F7  0854               	movf	(sprintf@prec+1)^(0+128),w
  7844  05F8  0085               	movwf	5
  7845  05F9  0853               	movf	sprintf@prec^(0+128),w
  7846  05FA  0084               	movwf	4
  7847  05FB  3584               	lslf	4,f
  7848  05FC  0D85               	rlf	5,f
  7849  05FD  3584               	lslf	4,f
  7850  05FE  0D85               	rlf	5,f
  7851  05FF  3000               	movlw	low (_dpowers| (0+32768))
  7852  0600  0784               	addwf	4,f
  7853  0601  30A0               	movlw	high (_dpowers| (0+32768))
  7854  0602  3D85               	addwfc	5,f
  7855  0603  3F00               	moviw [0]fsr0
  7856  0604  00F1               	movwf	___lldiv@divisor
  7857  0605  3F01               	moviw [1]fsr0
  7858  0606  00F2               	movwf	___lldiv@divisor+1
  7859  0607  3F02               	moviw [2]fsr0
  7860  0608  00F3               	movwf	___lldiv@divisor+2
  7861  0609  3F03               	moviw [3]fsr0
  7862  060A  00F4               	movwf	___lldiv@divisor+3
  7863  060B  0851               	movf	(sprintf@val+3)^(0+128),w
  7864  060C  00F8               	movwf	___lldiv@dividend+3
  7865  060D  0850               	movf	(sprintf@val+2)^(0+128),w
  7866  060E  00F7               	movwf	___lldiv@dividend+2
  7867  060F  084F               	movf	(sprintf@val+1)^(0+128),w
  7868  0610  00F6               	movwf	___lldiv@dividend+1
  7869  0611  084E               	movf	sprintf@val^(0+128),w
  7870  0612  00F5               	movwf	___lldiv@dividend
  7871  0613  319C  2461  3180   	fcall	___lldiv
  7872  0616  0874               	movf	?___lldiv+3,w
  7873  0617  0020               	movlb	0	; select bank0
  7874  0618  00AC               	movwf	___llmod@dividend+3
  7875  0619  0873               	movf	?___lldiv+2,w
  7876  061A  00AB               	movwf	___llmod@dividend+2
  7877  061B  0872               	movf	?___lldiv+1,w
  7878  061C  00AA               	movwf	___llmod@dividend+1
  7879  061D  0871               	movf	?___lldiv,w
  7880  061E  00A9               	movwf	___llmod@dividend
  7881  061F  319B  2387  3180   	fcall	___llmod
  7882  0622  0020               	movlb	0	; select bank0
  7883  0623  0825               	movf	?___llmod,w
  7884  0624  3E30               	addlw	48
  7885  0625  00E1               	movwf	??_sprintf
  7886  0626  0861               	movf	??_sprintf,w
  7887  0627  0021               	movlb	1	; select bank1
  7888  0628  00D8               	movwf	sprintf@c^(0+128)
  7889                           
  7890                           ;doprnt.c: 1523: }
  7891                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7892  0629  0858               	movf	sprintf@c^(0+128),w
  7893  062A  0020               	movlb	0	; select bank0
  7894  062B  2DD6               	goto	L7
  7895  062C                     l4657:	
  7896                           ;doprnt.c: 1525: }
  7897                           ;doprnt.c: 1533: }
  7898                           ;doprnt.c: 1535: alldone:
  7899                           
  7900                           
  7901                           ;doprnt.c: 1538: *sp = 0;
  7902  062C  0852               	movf	sprintf@sp^(0+128),w
  7903  062D  0086               	movwf	6
  7904  062E  0187               	clrf	7
  7905  062F  0181               	clrf	1
  7906  0630  0008               	return
  7907  0631                     __end_of_sprintf:	
  7908                           ;doprnt.c: 1540: return 0;
  7909                           ;	Return value of _sprintf is never used
  7910                           
  7911                           
  7912                           	psect	text4
  7913  15BC                     __ptext4:	
  7914 ;; *************** function _scale *****************
  7915 ;; Defined at:
  7916 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;  scl             1    wreg     char 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;  scl             1   35[BANK0 ] char 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  3   27[BANK0 ] char 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7930 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7931 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7933 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7934 ;;Total ram usage:        9 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    3
  7937 ;; This function calls:
  7938 ;;		___awdiv
  7939 ;;		___awmod
  7940 ;;		___ftmul
  7941 ;;		___wmul
  7942 ;; This function is called by:
  7943 ;;		_sprintf
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           
  7948                           ;psect for function _scale
  7949  15BC                     _scale:	
  7950                           
  7951                           ;incstack = 0
  7952                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7953                           ;scale@scl stored from wreg
  7954  15BC  0020               	movlb	0	; select bank0
  7955  15BD  00C3               	movwf	scale@scl
  7956                           
  7957                           ;doprnt.c: 428: if(scl < 0) {
  7958  15BE  1FC3               	btfss	scale@scl,7
  7959  15BF  2EE1               	goto	l3971
  7960                           
  7961                           ;doprnt.c: 429: scl = -scl;
  7962  15C0  09C3               	comf	scale@scl,f
  7963  15C1  0AC3               	incf	scale@scl,f
  7964                           
  7965                           ;doprnt.c: 430: if(scl>=110)
  7966  15C2  0843               	movf	scale@scl,w
  7967  15C3  3A80               	xorlw	128
  7968  15C4  3E12               	addlw	-238
  7969  15C5  1C03               	skipc
  7970  15C6  2E65               	goto	l3961
  7971                           
  7972                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7973  15C7  300A               	movlw	10
  7974  15C8  00F8               	movwf	___awdiv@divisor
  7975  15C9  3000               	movlw	0
  7976  15CA  00F9               	movwf	___awdiv@divisor+1
  7977  15CB  0843               	movf	scale@scl,w
  7978  15CC  00F3               	movwf	___awmod@dividend
  7979  15CD  01F4               	clrf	___awmod@dividend+1
  7980  15CE  1BF3               	btfsc	___awmod@dividend,7
  7981  15CF  03F4               	decf	___awmod@dividend+1,f
  7982  15D0  3064               	movlw	100
  7983  15D1  00F1               	movwf	___awmod@divisor
  7984  15D2  3000               	movlw	0
  7985  15D3  00F2               	movwf	___awmod@divisor+1
  7986  15D4  319B  23CA  3195   	fcall	___awmod
  7987  15D7  0872               	movf	?___awmod+1,w
  7988  15D8  00FB               	movwf	___awdiv@dividend+1
  7989  15D9  0871               	movf	?___awmod,w
  7990  15DA  00FA               	movwf	___awdiv@dividend
  7991  15DB  319C  240F  3195   	fcall	___awdiv
  7992  15DE  0878               	movf	?___awdiv,w
  7993  15DF  3E09               	addlw	9
  7994  15E0  0020               	movlb	0	; select bank0
  7995  15E1  00A5               	movwf	___wmul@multiplier
  7996  15E2  3000               	movlw	0
  7997  15E3  3D79               	addwfc	?___awdiv+1,w
  7998  15E4  00A6               	movwf	___wmul@multiplier+1
  7999  15E5  3003               	movlw	3
  8000  15E6  00A7               	movwf	___wmul@multiplicand
  8001  15E7  3000               	movlw	0
  8002  15E8  00A8               	movwf	___wmul@multiplicand+1
  8003  15E9  319A  2297  3195   	fcall	___wmul
  8004  15EC  0020               	movlb	0	; select bank0
  8005  15ED  0826               	movf	?___wmul+1,w
  8006  15EE  0085               	movwf	5
  8007  15EF  0825               	movf	?___wmul,w
  8008  15F0  0084               	movwf	4
  8009  15F1  304F               	movlw	low (__npowers_| (0+32768))
  8010  15F2  0784               	addwf	4,f
  8011  15F3  30A0               	movlw	high (__npowers_| (0+32768))
  8012  15F4  3D85               	addwfc	5,f
  8013  15F5  3F00               	moviw [0]fsr0
  8014  15F6  00AB               	movwf	___ftmul@f1
  8015  15F7  3F01               	moviw [1]fsr0
  8016  15F8  00AC               	movwf	___ftmul@f1+1
  8017  15F9  3F02               	moviw [2]fsr0
  8018  15FA  00AD               	movwf	___ftmul@f1+2
  8019  15FB  3064               	movlw	100
  8020  15FC  00F8               	movwf	___awdiv@divisor
  8021  15FD  3000               	movlw	0
  8022  15FE  00F9               	movwf	___awdiv@divisor+1
  8023  15FF  0843               	movf	scale@scl,w
  8024  1600  00FA               	movwf	___awdiv@dividend
  8025  1601  01FB               	clrf	___awdiv@dividend+1
  8026  1602  1BFA               	btfsc	___awdiv@dividend,7
  8027  1603  03FB               	decf	___awdiv@dividend+1,f
  8028  1604  319C  240F  3195   	fcall	___awdiv
  8029  1607  0878               	movf	?___awdiv,w
  8030  1608  3E12               	addlw	18
  8031  1609  0020               	movlb	0	; select bank0
  8032  160A  00A5               	movwf	___wmul@multiplier
  8033  160B  3000               	movlw	0
  8034  160C  3D79               	addwfc	?___awdiv+1,w
  8035  160D  00A6               	movwf	___wmul@multiplier+1
  8036  160E  3003               	movlw	3
  8037  160F  00A7               	movwf	___wmul@multiplicand
  8038  1610  3000               	movlw	0
  8039  1611  00A8               	movwf	___wmul@multiplicand+1
  8040  1612  319A  2297  3195   	fcall	___wmul
  8041  1615  0020               	movlb	0	; select bank0
  8042  1616  0826               	movf	?___wmul+1,w
  8043  1617  0085               	movwf	5
  8044  1618  0825               	movf	?___wmul,w
  8045  1619  0084               	movwf	4
  8046  161A  304F               	movlw	low (__npowers_| (0+32768))
  8047  161B  0784               	addwf	4,f
  8048  161C  30A0               	movlw	high (__npowers_| (0+32768))
  8049  161D  3D85               	addwfc	5,f
  8050  161E  3F00               	moviw [0]fsr0
  8051  161F  00AE               	movwf	___ftmul@f2
  8052  1620  3F01               	moviw [1]fsr0
  8053  1621  00AF               	movwf	___ftmul@f2+1
  8054  1622  3F02               	moviw [2]fsr0
  8055  1623  00B0               	movwf	___ftmul@f2+2
  8056  1624  319E  2696  3195   	fcall	___ftmul
  8057  1627  0020               	movlb	0	; select bank0
  8058  1628  082B               	movf	?___ftmul,w
  8059  1629  00C0               	movwf	_scale$917
  8060  162A  082C               	movf	?___ftmul+1,w
  8061  162B  00C1               	movwf	_scale$917+1
  8062  162C  082D               	movf	?___ftmul+2,w
  8063  162D  00C2               	movwf	_scale$917+2
  8064                           
  8065                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8066  162E  0843               	movf	scale@scl,w
  8067  162F  00F3               	movwf	___awmod@dividend
  8068  1630  01F4               	clrf	___awmod@dividend+1
  8069  1631  1BF3               	btfsc	___awmod@dividend,7
  8070  1632  03F4               	decf	___awmod@dividend+1,f
  8071  1633  300A               	movlw	10
  8072  1634  00F1               	movwf	___awmod@divisor
  8073  1635  3000               	movlw	0
  8074  1636  00F2               	movwf	___awmod@divisor+1
  8075  1637  319B  23CA  3195   	fcall	___awmod
  8076  163A  0872               	movf	?___awmod+1,w
  8077  163B  0020               	movlb	0	; select bank0
  8078  163C  00A6               	movwf	___wmul@multiplier+1
  8079  163D  0871               	movf	?___awmod,w
  8080  163E  00A5               	movwf	___wmul@multiplier
  8081  163F  3003               	movlw	3
  8082  1640  00A7               	movwf	___wmul@multiplicand
  8083  1641  3000               	movlw	0
  8084  1642  00A8               	movwf	___wmul@multiplicand+1
  8085  1643  319A  2297  3195   	fcall	___wmul
  8086  1646  0020               	movlb	0	; select bank0
  8087  1647  0826               	movf	?___wmul+1,w
  8088  1648  0085               	movwf	5
  8089  1649  0825               	movf	?___wmul,w
  8090  164A  0084               	movwf	4
  8091  164B  304F               	movlw	low (__npowers_| (0+32768))
  8092  164C  0784               	addwf	4,f
  8093  164D  30A0               	movlw	high (__npowers_| (0+32768))
  8094  164E  3D85               	addwfc	5,f
  8095  164F  3F00               	moviw [0]fsr0
  8096  1650  00AB               	movwf	___ftmul@f1
  8097  1651  3F01               	moviw [1]fsr0
  8098  1652  00AC               	movwf	___ftmul@f1+1
  8099  1653  3F02               	moviw [2]fsr0
  8100  1654  00AD               	movwf	___ftmul@f1+2
  8101  1655  0840               	movf	_scale$917,w
  8102  1656  00AE               	movwf	___ftmul@f2
  8103  1657  0841               	movf	_scale$917+1,w
  8104  1658  00AF               	movwf	___ftmul@f2+1
  8105  1659  0842               	movf	_scale$917+2,w
  8106  165A  00B0               	movwf	___ftmul@f2+2
  8107  165B  319E  2696         	fcall	___ftmul
  8108  165D  0020               	movlb	0	; select bank0
  8109  165E  082B               	movf	?___ftmul,w
  8110  165F  00BB               	movwf	?_scale
  8111  1660  082C               	movf	?___ftmul+1,w
  8112  1661  00BC               	movwf	?_scale+1
  8113  1662  082D               	movf	?___ftmul+2,w
  8114  1663  00BD               	movwf	?_scale+2
  8115  1664  0008               	return
  8116  1665                     l3961:	
  8117                           
  8118                           ;doprnt.c: 432: else if(scl > 10)
  8119  1665  0843               	movf	scale@scl,w
  8120  1666  3A80               	xorlw	128
  8121  1667  3E75               	addlw	-139
  8122  1668  1C03               	skipc
  8123  1669  2EC4               	goto	l3967
  8124                           
  8125                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8126  166A  0843               	movf	scale@scl,w
  8127  166B  00F3               	movwf	___awmod@dividend
  8128  166C  01F4               	clrf	___awmod@dividend+1
  8129  166D  1BF3               	btfsc	___awmod@dividend,7
  8130  166E  03F4               	decf	___awmod@dividend+1,f
  8131  166F  300A               	movlw	10
  8132  1670  00F1               	movwf	___awmod@divisor
  8133  1671  3000               	movlw	0
  8134  1672  00F2               	movwf	___awmod@divisor+1
  8135  1673  319B  23CA  3195   	fcall	___awmod
  8136  1676  0872               	movf	?___awmod+1,w
  8137  1677  0020               	movlb	0	; select bank0
  8138  1678  00A6               	movwf	___wmul@multiplier+1
  8139  1679  0871               	movf	?___awmod,w
  8140  167A  00A5               	movwf	___wmul@multiplier
  8141  167B  3003               	movlw	3
  8142  167C  00A7               	movwf	___wmul@multiplicand
  8143  167D  3000               	movlw	0
  8144  167E  00A8               	movwf	___wmul@multiplicand+1
  8145  167F  319A  2297  3195   	fcall	___wmul
  8146  1682  0020               	movlb	0	; select bank0
  8147  1683  0826               	movf	?___wmul+1,w
  8148  1684  0085               	movwf	5
  8149  1685  0825               	movf	?___wmul,w
  8150  1686  0084               	movwf	4
  8151  1687  304F               	movlw	low (__npowers_| (0+32768))
  8152  1688  0784               	addwf	4,f
  8153  1689  30A0               	movlw	high (__npowers_| (0+32768))
  8154  168A  3D85               	addwfc	5,f
  8155  168B  3F00               	moviw [0]fsr0
  8156  168C  00AB               	movwf	___ftmul@f1
  8157  168D  3F01               	moviw [1]fsr0
  8158  168E  00AC               	movwf	___ftmul@f1+1
  8159  168F  3F02               	moviw [2]fsr0
  8160  1690  00AD               	movwf	___ftmul@f1+2
  8161  1691  300A               	movlw	10
  8162  1692  00F8               	movwf	___awdiv@divisor
  8163  1693  3000               	movlw	0
  8164  1694  00F9               	movwf	___awdiv@divisor+1
  8165  1695  0843               	movf	scale@scl,w
  8166  1696  00FA               	movwf	___awdiv@dividend
  8167  1697  01FB               	clrf	___awdiv@dividend+1
  8168  1698  1BFA               	btfsc	___awdiv@dividend,7
  8169  1699  03FB               	decf	___awdiv@dividend+1,f
  8170  169A  319C  240F  3195   	fcall	___awdiv
  8171  169D  0878               	movf	?___awdiv,w
  8172  169E  3E09               	addlw	9
  8173  169F  0020               	movlb	0	; select bank0
  8174  16A0  00A5               	movwf	___wmul@multiplier
  8175  16A1  3000               	movlw	0
  8176  16A2  3D79               	addwfc	?___awdiv+1,w
  8177  16A3  00A6               	movwf	___wmul@multiplier+1
  8178  16A4  3003               	movlw	3
  8179  16A5  00A7               	movwf	___wmul@multiplicand
  8180  16A6  3000               	movlw	0
  8181  16A7  00A8               	movwf	___wmul@multiplicand+1
  8182  16A8  319A  2297  3195   	fcall	___wmul
  8183  16AB  0020               	movlb	0	; select bank0
  8184  16AC  0826               	movf	?___wmul+1,w
  8185  16AD  0085               	movwf	5
  8186  16AE  0825               	movf	?___wmul,w
  8187  16AF  0084               	movwf	4
  8188  16B0  304F               	movlw	low (__npowers_| (0+32768))
  8189  16B1  0784               	addwf	4,f
  8190  16B2  30A0               	movlw	high (__npowers_| (0+32768))
  8191  16B3  3D85               	addwfc	5,f
  8192  16B4  3F00               	moviw [0]fsr0
  8193  16B5  00AE               	movwf	___ftmul@f2
  8194  16B6  3F01               	moviw [1]fsr0
  8195  16B7  00AF               	movwf	___ftmul@f2+1
  8196  16B8  3F02               	moviw [2]fsr0
  8197  16B9  00B0               	movwf	___ftmul@f2+2
  8198  16BA  319E  2696         	fcall	___ftmul
  8199  16BC  0020               	movlb	0	; select bank0
  8200  16BD  082B               	movf	?___ftmul,w
  8201  16BE  00BB               	movwf	?_scale
  8202  16BF  082C               	movf	?___ftmul+1,w
  8203  16C0  00BC               	movwf	?_scale+1
  8204  16C1  082D               	movf	?___ftmul+2,w
  8205  16C2  00BD               	movwf	?_scale+2
  8206  16C3  0008               	return
  8207  16C4                     l3967:	
  8208                           
  8209                           ;doprnt.c: 434: return _npowers_[scl];
  8210  16C4  0843               	movf	scale@scl,w
  8211  16C5  00BE               	movwf	??_scale
  8212  16C6  01BF               	clrf	??_scale+1
  8213  16C7  083E               	movf	??_scale,w
  8214  16C8  00A5               	movwf	___wmul@multiplier
  8215  16C9  083F               	movf	??_scale+1,w
  8216  16CA  00A6               	movwf	___wmul@multiplier+1
  8217  16CB  3003               	movlw	3
  8218  16CC  00A7               	movwf	___wmul@multiplicand
  8219  16CD  3000               	movlw	0
  8220  16CE  00A8               	movwf	___wmul@multiplicand+1
  8221  16CF  319A  2297         	fcall	___wmul
  8222  16D1  0020               	movlb	0	; select bank0
  8223  16D2  0826               	movf	?___wmul+1,w
  8224  16D3  0085               	movwf	5
  8225  16D4  0825               	movf	?___wmul,w
  8226  16D5  0084               	movwf	4
  8227  16D6  304F               	movlw	low (__npowers_| (0+32768))
  8228  16D7  0784               	addwf	4,f
  8229  16D8  30A0               	movlw	high (__npowers_| (0+32768))
  8230  16D9  3D85               	addwfc	5,f
  8231  16DA  3F00               	moviw [0]fsr0
  8232  16DB  00BB               	movwf	?_scale
  8233  16DC  3F01               	moviw [1]fsr0
  8234  16DD  00BC               	movwf	?_scale+1
  8235  16DE  3F02               	moviw [2]fsr0
  8236  16DF  00BD               	movwf	?_scale+2
  8237  16E0  0008               	return
  8238  16E1                     l3971:	
  8239                           
  8240                           ;doprnt.c: 435: }
  8241                           ;doprnt.c: 436: if(scl>=110)
  8242  16E1  0843               	movf	scale@scl,w
  8243  16E2  3A80               	xorlw	128
  8244  16E3  3E12               	addlw	-238
  8245  16E4  1C03               	skipc
  8246  16E5  2F84               	goto	l3979
  8247                           
  8248                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8249  16E6  300A               	movlw	10
  8250  16E7  00F8               	movwf	___awdiv@divisor
  8251  16E8  3000               	movlw	0
  8252  16E9  00F9               	movwf	___awdiv@divisor+1
  8253  16EA  0843               	movf	scale@scl,w
  8254  16EB  00F3               	movwf	___awmod@dividend
  8255  16EC  01F4               	clrf	___awmod@dividend+1
  8256  16ED  1BF3               	btfsc	___awmod@dividend,7
  8257  16EE  03F4               	decf	___awmod@dividend+1,f
  8258  16EF  3064               	movlw	100
  8259  16F0  00F1               	movwf	___awmod@divisor
  8260  16F1  3000               	movlw	0
  8261  16F2  00F2               	movwf	___awmod@divisor+1
  8262  16F3  319B  23CA  3195   	fcall	___awmod
  8263  16F6  0872               	movf	?___awmod+1,w
  8264  16F7  00FB               	movwf	___awdiv@dividend+1
  8265  16F8  0871               	movf	?___awmod,w
  8266  16F9  00FA               	movwf	___awdiv@dividend
  8267  16FA  319C  240F  3195   	fcall	___awdiv
  8268  16FD  0878               	movf	?___awdiv,w
  8269  16FE  3E09               	addlw	9
  8270  16FF  0020               	movlb	0	; select bank0
  8271  1700  00A5               	movwf	___wmul@multiplier
  8272  1701  3000               	movlw	0
  8273  1702  3D79               	addwfc	?___awdiv+1,w
  8274  1703  00A6               	movwf	___wmul@multiplier+1
  8275  1704  3003               	movlw	3
  8276  1705  00A7               	movwf	___wmul@multiplicand
  8277  1706  3000               	movlw	0
  8278  1707  00A8               	movwf	___wmul@multiplicand+1
  8279  1708  319A  2297  3195   	fcall	___wmul
  8280  170B  0020               	movlb	0	; select bank0
  8281  170C  0826               	movf	?___wmul+1,w
  8282  170D  0085               	movwf	5
  8283  170E  0825               	movf	?___wmul,w
  8284  170F  0084               	movwf	4
  8285  1710  3028               	movlw	low (__powers_| (0+32768))
  8286  1711  0784               	addwf	4,f
  8287  1712  30A0               	movlw	high (__powers_| (0+32768))
  8288  1713  3D85               	addwfc	5,f
  8289  1714  3F00               	moviw [0]fsr0
  8290  1715  00AB               	movwf	___ftmul@f1
  8291  1716  3F01               	moviw [1]fsr0
  8292  1717  00AC               	movwf	___ftmul@f1+1
  8293  1718  3F02               	moviw [2]fsr0
  8294  1719  00AD               	movwf	___ftmul@f1+2
  8295  171A  3064               	movlw	100
  8296  171B  00F8               	movwf	___awdiv@divisor
  8297  171C  3000               	movlw	0
  8298  171D  00F9               	movwf	___awdiv@divisor+1
  8299  171E  0843               	movf	scale@scl,w
  8300  171F  00FA               	movwf	___awdiv@dividend
  8301  1720  01FB               	clrf	___awdiv@dividend+1
  8302  1721  1BFA               	btfsc	___awdiv@dividend,7
  8303  1722  03FB               	decf	___awdiv@dividend+1,f
  8304  1723  319C  240F  3195   	fcall	___awdiv
  8305  1726  0878               	movf	?___awdiv,w
  8306  1727  3E12               	addlw	18
  8307  1728  0020               	movlb	0	; select bank0
  8308  1729  00A5               	movwf	___wmul@multiplier
  8309  172A  3000               	movlw	0
  8310  172B  3D79               	addwfc	?___awdiv+1,w
  8311  172C  00A6               	movwf	___wmul@multiplier+1
  8312  172D  3003               	movlw	3
  8313  172E  00A7               	movwf	___wmul@multiplicand
  8314  172F  3000               	movlw	0
  8315  1730  00A8               	movwf	___wmul@multiplicand+1
  8316  1731  319A  2297  3195   	fcall	___wmul
  8317  1734  0020               	movlb	0	; select bank0
  8318  1735  0826               	movf	?___wmul+1,w
  8319  1736  0085               	movwf	5
  8320  1737  0825               	movf	?___wmul,w
  8321  1738  0084               	movwf	4
  8322  1739  3028               	movlw	low (__powers_| (0+32768))
  8323  173A  0784               	addwf	4,f
  8324  173B  30A0               	movlw	high (__powers_| (0+32768))
  8325  173C  3D85               	addwfc	5,f
  8326  173D  3F00               	moviw [0]fsr0
  8327  173E  00AE               	movwf	___ftmul@f2
  8328  173F  3F01               	moviw [1]fsr0
  8329  1740  00AF               	movwf	___ftmul@f2+1
  8330  1741  3F02               	moviw [2]fsr0
  8331  1742  00B0               	movwf	___ftmul@f2+2
  8332  1743  319E  2696  3195   	fcall	___ftmul
  8333  1746  0020               	movlb	0	; select bank0
  8334  1747  082B               	movf	?___ftmul,w
  8335  1748  00C0               	movwf	_scale$917
  8336  1749  082C               	movf	?___ftmul+1,w
  8337  174A  00C1               	movwf	_scale$917+1
  8338  174B  082D               	movf	?___ftmul+2,w
  8339  174C  00C2               	movwf	_scale$917+2
  8340                           
  8341                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8342  174D  0843               	movf	scale@scl,w
  8343  174E  00F3               	movwf	___awmod@dividend
  8344  174F  01F4               	clrf	___awmod@dividend+1
  8345  1750  1BF3               	btfsc	___awmod@dividend,7
  8346  1751  03F4               	decf	___awmod@dividend+1,f
  8347  1752  300A               	movlw	10
  8348  1753  00F1               	movwf	___awmod@divisor
  8349  1754  3000               	movlw	0
  8350  1755  00F2               	movwf	___awmod@divisor+1
  8351  1756  319B  23CA  3195   	fcall	___awmod
  8352  1759  0872               	movf	?___awmod+1,w
  8353  175A  0020               	movlb	0	; select bank0
  8354  175B  00A6               	movwf	___wmul@multiplier+1
  8355  175C  0871               	movf	?___awmod,w
  8356  175D  00A5               	movwf	___wmul@multiplier
  8357  175E  3003               	movlw	3
  8358  175F  00A7               	movwf	___wmul@multiplicand
  8359  1760  3000               	movlw	0
  8360  1761  00A8               	movwf	___wmul@multiplicand+1
  8361  1762  319A  2297  3195   	fcall	___wmul
  8362  1765  0020               	movlb	0	; select bank0
  8363  1766  0826               	movf	?___wmul+1,w
  8364  1767  0085               	movwf	5
  8365  1768  0825               	movf	?___wmul,w
  8366  1769  0084               	movwf	4
  8367  176A  3028               	movlw	low (__powers_| (0+32768))
  8368  176B  0784               	addwf	4,f
  8369  176C  30A0               	movlw	high (__powers_| (0+32768))
  8370  176D  3D85               	addwfc	5,f
  8371  176E  3F00               	moviw [0]fsr0
  8372  176F  00AB               	movwf	___ftmul@f1
  8373  1770  3F01               	moviw [1]fsr0
  8374  1771  00AC               	movwf	___ftmul@f1+1
  8375  1772  3F02               	moviw [2]fsr0
  8376  1773  00AD               	movwf	___ftmul@f1+2
  8377  1774  0840               	movf	_scale$917,w
  8378  1775  00AE               	movwf	___ftmul@f2
  8379  1776  0841               	movf	_scale$917+1,w
  8380  1777  00AF               	movwf	___ftmul@f2+1
  8381  1778  0842               	movf	_scale$917+2,w
  8382  1779  00B0               	movwf	___ftmul@f2+2
  8383  177A  319E  2696         	fcall	___ftmul
  8384  177C  0020               	movlb	0	; select bank0
  8385  177D  082B               	movf	?___ftmul,w
  8386  177E  00BB               	movwf	?_scale
  8387  177F  082C               	movf	?___ftmul+1,w
  8388  1780  00BC               	movwf	?_scale+1
  8389  1781  082D               	movf	?___ftmul+2,w
  8390  1782  00BD               	movwf	?_scale+2
  8391  1783  0008               	return
  8392  1784                     l3979:	
  8393                           
  8394                           ;doprnt.c: 438: else if(scl > 10)
  8395  1784  0843               	movf	scale@scl,w
  8396  1785  3A80               	xorlw	128
  8397  1786  3E75               	addlw	-139
  8398  1787  1C03               	skipc
  8399  1788  2FE3               	goto	l3985
  8400                           
  8401                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8402  1789  0843               	movf	scale@scl,w
  8403  178A  00F3               	movwf	___awmod@dividend
  8404  178B  01F4               	clrf	___awmod@dividend+1
  8405  178C  1BF3               	btfsc	___awmod@dividend,7
  8406  178D  03F4               	decf	___awmod@dividend+1,f
  8407  178E  300A               	movlw	10
  8408  178F  00F1               	movwf	___awmod@divisor
  8409  1790  3000               	movlw	0
  8410  1791  00F2               	movwf	___awmod@divisor+1
  8411  1792  319B  23CA  3195   	fcall	___awmod
  8412  1795  0872               	movf	?___awmod+1,w
  8413  1796  0020               	movlb	0	; select bank0
  8414  1797  00A6               	movwf	___wmul@multiplier+1
  8415  1798  0871               	movf	?___awmod,w
  8416  1799  00A5               	movwf	___wmul@multiplier
  8417  179A  3003               	movlw	3
  8418  179B  00A7               	movwf	___wmul@multiplicand
  8419  179C  3000               	movlw	0
  8420  179D  00A8               	movwf	___wmul@multiplicand+1
  8421  179E  319A  2297  3195   	fcall	___wmul
  8422  17A1  0020               	movlb	0	; select bank0
  8423  17A2  0826               	movf	?___wmul+1,w
  8424  17A3  0085               	movwf	5
  8425  17A4  0825               	movf	?___wmul,w
  8426  17A5  0084               	movwf	4
  8427  17A6  3028               	movlw	low (__powers_| (0+32768))
  8428  17A7  0784               	addwf	4,f
  8429  17A8  30A0               	movlw	high (__powers_| (0+32768))
  8430  17A9  3D85               	addwfc	5,f
  8431  17AA  3F00               	moviw [0]fsr0
  8432  17AB  00AB               	movwf	___ftmul@f1
  8433  17AC  3F01               	moviw [1]fsr0
  8434  17AD  00AC               	movwf	___ftmul@f1+1
  8435  17AE  3F02               	moviw [2]fsr0
  8436  17AF  00AD               	movwf	___ftmul@f1+2
  8437  17B0  300A               	movlw	10
  8438  17B1  00F8               	movwf	___awdiv@divisor
  8439  17B2  3000               	movlw	0
  8440  17B3  00F9               	movwf	___awdiv@divisor+1
  8441  17B4  0843               	movf	scale@scl,w
  8442  17B5  00FA               	movwf	___awdiv@dividend
  8443  17B6  01FB               	clrf	___awdiv@dividend+1
  8444  17B7  1BFA               	btfsc	___awdiv@dividend,7
  8445  17B8  03FB               	decf	___awdiv@dividend+1,f
  8446  17B9  319C  240F  3195   	fcall	___awdiv
  8447  17BC  0878               	movf	?___awdiv,w
  8448  17BD  3E09               	addlw	9
  8449  17BE  0020               	movlb	0	; select bank0
  8450  17BF  00A5               	movwf	___wmul@multiplier
  8451  17C0  3000               	movlw	0
  8452  17C1  3D79               	addwfc	?___awdiv+1,w
  8453  17C2  00A6               	movwf	___wmul@multiplier+1
  8454  17C3  3003               	movlw	3
  8455  17C4  00A7               	movwf	___wmul@multiplicand
  8456  17C5  3000               	movlw	0
  8457  17C6  00A8               	movwf	___wmul@multiplicand+1
  8458  17C7  319A  2297  3195   	fcall	___wmul
  8459  17CA  0020               	movlb	0	; select bank0
  8460  17CB  0826               	movf	?___wmul+1,w
  8461  17CC  0085               	movwf	5
  8462  17CD  0825               	movf	?___wmul,w
  8463  17CE  0084               	movwf	4
  8464  17CF  3028               	movlw	low (__powers_| (0+32768))
  8465  17D0  0784               	addwf	4,f
  8466  17D1  30A0               	movlw	high (__powers_| (0+32768))
  8467  17D2  3D85               	addwfc	5,f
  8468  17D3  3F00               	moviw [0]fsr0
  8469  17D4  00AE               	movwf	___ftmul@f2
  8470  17D5  3F01               	moviw [1]fsr0
  8471  17D6  00AF               	movwf	___ftmul@f2+1
  8472  17D7  3F02               	moviw [2]fsr0
  8473  17D8  00B0               	movwf	___ftmul@f2+2
  8474  17D9  319E  2696         	fcall	___ftmul
  8475  17DB  0020               	movlb	0	; select bank0
  8476  17DC  082B               	movf	?___ftmul,w
  8477  17DD  00BB               	movwf	?_scale
  8478  17DE  082C               	movf	?___ftmul+1,w
  8479  17DF  00BC               	movwf	?_scale+1
  8480  17E0  082D               	movf	?___ftmul+2,w
  8481  17E1  00BD               	movwf	?_scale+2
  8482  17E2  0008               	return
  8483  17E3                     l3985:	
  8484                           
  8485                           ;doprnt.c: 440: return _powers_[scl];
  8486  17E3  0843               	movf	scale@scl,w
  8487  17E4  00BE               	movwf	??_scale
  8488  17E5  01BF               	clrf	??_scale+1
  8489  17E6  083E               	movf	??_scale,w
  8490  17E7  00A5               	movwf	___wmul@multiplier
  8491  17E8  083F               	movf	??_scale+1,w
  8492  17E9  00A6               	movwf	___wmul@multiplier+1
  8493  17EA  3003               	movlw	3
  8494  17EB  00A7               	movwf	___wmul@multiplicand
  8495  17EC  3000               	movlw	0
  8496  17ED  00A8               	movwf	___wmul@multiplicand+1
  8497  17EE  319A  2297         	fcall	___wmul
  8498  17F0  0020               	movlb	0	; select bank0
  8499  17F1  0826               	movf	?___wmul+1,w
  8500  17F2  0085               	movwf	5
  8501  17F3  0825               	movf	?___wmul,w
  8502  17F4  0084               	movwf	4
  8503  17F5  3028               	movlw	low (__powers_| (0+32768))
  8504  17F6  0784               	addwf	4,f
  8505  17F7  30A0               	movlw	high (__powers_| (0+32768))
  8506  17F8  3D85               	addwfc	5,f
  8507  17F9  3F00               	moviw [0]fsr0
  8508  17FA  00BB               	movwf	?_scale
  8509  17FB  3F01               	moviw [1]fsr0
  8510  17FC  00BC               	movwf	?_scale+1
  8511  17FD  3F02               	moviw [2]fsr0
  8512  17FE  00BD               	movwf	?_scale+2
  8513  17FF  0008               	return
  8514  1800                     __end_of_scale:	
  8515                           
  8516                           	psect	text5
  8517  1A35                     __ptext5:	
  8518 ;; *************** function _isdigit *****************
  8519 ;; Defined at:
  8520 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  c               1    wreg     unsigned char 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  c               1    2[COMMON] unsigned char 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;		None               void
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8538 ;;Total ram usage:        2 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; Hardware stack levels required when called:    1
  8541 ;; This function calls:
  8542 ;;		Nothing
  8543 ;; This function is called by:
  8544 ;;		_sprintf
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           
  8549                           ;psect for function _isdigit
  8550  1A35                     _isdigit:	
  8551                           
  8552                           ;incstack = 0
  8553                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8554                           ;isdigit@c stored from wreg
  8555  1A35  00F2               	movwf	isdigit@c
  8556  1A36  01F1               	clrf	_isdigit$693
  8557  1A37  303A               	movlw	58
  8558  1A38  0272               	subwf	isdigit@c,w
  8559  1A39  1803               	skipnc
  8560  1A3A  2A41               	goto	l3997
  8561  1A3B  3030               	movlw	48
  8562  1A3C  0272               	subwf	isdigit@c,w
  8563  1A3D  1C03               	skipc
  8564  1A3E  2A41               	goto	l3997
  8565  1A3F  01F1               	clrf	_isdigit$693
  8566  1A40  0AF1               	incf	_isdigit$693,f
  8567  1A41                     l3997:	
  8568  1A41  0C71               	rrf	_isdigit$693,w
  8569  1A42  0008               	return
  8570  1A43                     __end_of_isdigit:	
  8571                           
  8572                           	psect	text6
  8573  1457                     __ptext6:	
  8574 ;; *************** function _fround *****************
  8575 ;; Defined at:
  8576 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  prec            1    wreg     unsigned char 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  prec            1   40[BANK0 ] unsigned char 
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  3   27[BANK0 ] unsigned char 
  8583 ;; Registers used:
  8584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8590 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8591 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8592 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8593 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8594 ;;Total ram usage:       14 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:    3
  8597 ;; This function calls:
  8598 ;;		___awdiv
  8599 ;;		___awmod
  8600 ;;		___ftmul
  8601 ;;		___wmul
  8602 ;; This function is called by:
  8603 ;;		_sprintf
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           
  8608                           ;psect for function _fround
  8609  1457                     _fround:	
  8610                           
  8611                           ;incstack = 0
  8612                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8613                           ;fround@prec stored from wreg
  8614  1457  0020               	movlb	0	; select bank0
  8615  1458  00C8               	movwf	fround@prec
  8616                           
  8617                           ;doprnt.c: 413: if(prec>=110)
  8618  1459  306E               	movlw	110
  8619  145A  0248               	subwf	fround@prec,w
  8620  145B  1C03               	skipc
  8621  145C  2D17               	goto	l3937
  8622                           
  8623                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8624  145D  300A               	movlw	10
  8625  145E  00F8               	movwf	___awdiv@divisor
  8626  145F  3000               	movlw	0
  8627  1460  00F9               	movwf	___awdiv@divisor+1
  8628  1461  0848               	movf	fround@prec,w
  8629  1462  00BE               	movwf	??_fround
  8630  1463  01BF               	clrf	??_fround+1
  8631  1464  083E               	movf	??_fround,w
  8632  1465  00F3               	movwf	___awmod@dividend
  8633  1466  083F               	movf	??_fround+1,w
  8634  1467  00F4               	movwf	___awmod@dividend+1
  8635  1468  3064               	movlw	100
  8636  1469  00F1               	movwf	___awmod@divisor
  8637  146A  3000               	movlw	0
  8638  146B  00F2               	movwf	___awmod@divisor+1
  8639  146C  319B  23CA  3194   	fcall	___awmod
  8640  146F  0872               	movf	?___awmod+1,w
  8641  1470  00FB               	movwf	___awdiv@dividend+1
  8642  1471  0871               	movf	?___awmod,w
  8643  1472  00FA               	movwf	___awdiv@dividend
  8644  1473  319C  240F  3194   	fcall	___awdiv
  8645  1476  0878               	movf	?___awdiv,w
  8646  1477  3E09               	addlw	9
  8647  1478  0020               	movlb	0	; select bank0
  8648  1479  00A5               	movwf	___wmul@multiplier
  8649  147A  3000               	movlw	0
  8650  147B  3D79               	addwfc	?___awdiv+1,w
  8651  147C  00A6               	movwf	___wmul@multiplier+1
  8652  147D  3003               	movlw	3
  8653  147E  00A7               	movwf	___wmul@multiplicand
  8654  147F  3000               	movlw	0
  8655  1480  00A8               	movwf	___wmul@multiplicand+1
  8656  1481  319A  2297  3194   	fcall	___wmul
  8657  1484  0020               	movlb	0	; select bank0
  8658  1485  0826               	movf	?___wmul+1,w
  8659  1486  0085               	movwf	5
  8660  1487  0825               	movf	?___wmul,w
  8661  1488  0084               	movwf	4
  8662  1489  304F               	movlw	low (__npowers_| (0+32768))
  8663  148A  0784               	addwf	4,f
  8664  148B  30A0               	movlw	high (__npowers_| (0+32768))
  8665  148C  3D85               	addwfc	5,f
  8666  148D  3F00               	moviw [0]fsr0
  8667  148E  00AB               	movwf	___ftmul@f1
  8668  148F  3F01               	moviw [1]fsr0
  8669  1490  00AC               	movwf	___ftmul@f1+1
  8670  1491  3F02               	moviw [2]fsr0
  8671  1492  00AD               	movwf	___ftmul@f1+2
  8672  1493  3064               	movlw	100
  8673  1494  00F8               	movwf	___awdiv@divisor
  8674  1495  3000               	movlw	0
  8675  1496  00F9               	movwf	___awdiv@divisor+1
  8676  1497  0848               	movf	fround@prec,w
  8677  1498  00C0               	movwf	??_fround+2
  8678  1499  01C1               	clrf	??_fround+3
  8679  149A  0840               	movf	??_fround+2,w
  8680  149B  00FA               	movwf	___awdiv@dividend
  8681  149C  0841               	movf	??_fround+3,w
  8682  149D  00FB               	movwf	___awdiv@dividend+1
  8683  149E  319C  240F  3194   	fcall	___awdiv
  8684  14A1  0878               	movf	?___awdiv,w
  8685  14A2  3E12               	addlw	18
  8686  14A3  0020               	movlb	0	; select bank0
  8687  14A4  00A5               	movwf	___wmul@multiplier
  8688  14A5  3000               	movlw	0
  8689  14A6  3D79               	addwfc	?___awdiv+1,w
  8690  14A7  00A6               	movwf	___wmul@multiplier+1
  8691  14A8  3003               	movlw	3
  8692  14A9  00A7               	movwf	___wmul@multiplicand
  8693  14AA  3000               	movlw	0
  8694  14AB  00A8               	movwf	___wmul@multiplicand+1
  8695  14AC  319A  2297  3194   	fcall	___wmul
  8696  14AF  0020               	movlb	0	; select bank0
  8697  14B0  0826               	movf	?___wmul+1,w
  8698  14B1  0085               	movwf	5
  8699  14B2  0825               	movf	?___wmul,w
  8700  14B3  0084               	movwf	4
  8701  14B4  304F               	movlw	low (__npowers_| (0+32768))
  8702  14B5  0784               	addwf	4,f
  8703  14B6  30A0               	movlw	high (__npowers_| (0+32768))
  8704  14B7  3D85               	addwfc	5,f
  8705  14B8  3F00               	moviw [0]fsr0
  8706  14B9  00AE               	movwf	___ftmul@f2
  8707  14BA  3F01               	moviw [1]fsr0
  8708  14BB  00AF               	movwf	___ftmul@f2+1
  8709  14BC  3F02               	moviw [2]fsr0
  8710  14BD  00B0               	movwf	___ftmul@f2+2
  8711  14BE  319E  2696  3194   	fcall	___ftmul
  8712  14C1  0020               	movlb	0	; select bank0
  8713  14C2  082B               	movf	?___ftmul,w
  8714  14C3  00C5               	movwf	_fround$915
  8715  14C4  082C               	movf	?___ftmul+1,w
  8716  14C5  00C6               	movwf	_fround$915+1
  8717  14C6  082D               	movf	?___ftmul+2,w
  8718  14C7  00C7               	movwf	_fround$915+2
  8719                           
  8720                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8721  14C8  0848               	movf	fround@prec,w
  8722  14C9  00BE               	movwf	??_fround
  8723  14CA  01BF               	clrf	??_fround+1
  8724  14CB  083E               	movf	??_fround,w
  8725  14CC  00F3               	movwf	___awmod@dividend
  8726  14CD  083F               	movf	??_fround+1,w
  8727  14CE  00F4               	movwf	___awmod@dividend+1
  8728  14CF  300A               	movlw	10
  8729  14D0  00F1               	movwf	___awmod@divisor
  8730  14D1  3000               	movlw	0
  8731  14D2  00F2               	movwf	___awmod@divisor+1
  8732  14D3  319B  23CA  3194   	fcall	___awmod
  8733  14D6  0872               	movf	?___awmod+1,w
  8734  14D7  0020               	movlb	0	; select bank0
  8735  14D8  00A6               	movwf	___wmul@multiplier+1
  8736  14D9  0871               	movf	?___awmod,w
  8737  14DA  00A5               	movwf	___wmul@multiplier
  8738  14DB  3003               	movlw	3
  8739  14DC  00A7               	movwf	___wmul@multiplicand
  8740  14DD  3000               	movlw	0
  8741  14DE  00A8               	movwf	___wmul@multiplicand+1
  8742  14DF  319A  2297  3194   	fcall	___wmul
  8743  14E2  0020               	movlb	0	; select bank0
  8744  14E3  0826               	movf	?___wmul+1,w
  8745  14E4  0085               	movwf	5
  8746  14E5  0825               	movf	?___wmul,w
  8747  14E6  0084               	movwf	4
  8748  14E7  304F               	movlw	low (__npowers_| (0+32768))
  8749  14E8  0784               	addwf	4,f
  8750  14E9  30A0               	movlw	high (__npowers_| (0+32768))
  8751  14EA  3D85               	addwfc	5,f
  8752  14EB  3F00               	moviw [0]fsr0
  8753  14EC  00AB               	movwf	___ftmul@f1
  8754  14ED  3F01               	moviw [1]fsr0
  8755  14EE  00AC               	movwf	___ftmul@f1+1
  8756  14EF  3F02               	moviw [2]fsr0
  8757  14F0  00AD               	movwf	___ftmul@f1+2
  8758  14F1  0845               	movf	_fround$915,w
  8759  14F2  00AE               	movwf	___ftmul@f2
  8760  14F3  0846               	movf	_fround$915+1,w
  8761  14F4  00AF               	movwf	___ftmul@f2+1
  8762  14F5  0847               	movf	_fround$915+2,w
  8763  14F6  00B0               	movwf	___ftmul@f2+2
  8764  14F7  319E  2696  3194   	fcall	___ftmul
  8765  14FA  0020               	movlb	0	; select bank0
  8766  14FB  082B               	movf	?___ftmul,w
  8767  14FC  00C2               	movwf	_fround$916
  8768  14FD  082C               	movf	?___ftmul+1,w
  8769  14FE  00C3               	movwf	_fround$916+1
  8770  14FF  082D               	movf	?___ftmul+2,w
  8771  1500  00C4               	movwf	_fround$916+2
  8772                           
  8773                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8774  1501  3000               	movlw	0
  8775  1502  00AB               	movwf	___ftmul@f1
  8776  1503  3000               	movlw	0
  8777  1504  00AC               	movwf	___ftmul@f1+1
  8778  1505  303F               	movlw	63
  8779  1506  00AD               	movwf	___ftmul@f1+2
  8780  1507  0842               	movf	_fround$916,w
  8781  1508  00AE               	movwf	___ftmul@f2
  8782  1509  0843               	movf	_fround$916+1,w
  8783  150A  00AF               	movwf	___ftmul@f2+1
  8784  150B  0844               	movf	_fround$916+2,w
  8785  150C  00B0               	movwf	___ftmul@f2+2
  8786  150D  319E  2696         	fcall	___ftmul
  8787  150F  0020               	movlb	0	; select bank0
  8788  1510  082B               	movf	?___ftmul,w
  8789  1511  00BB               	movwf	?_fround
  8790  1512  082C               	movf	?___ftmul+1,w
  8791  1513  00BC               	movwf	?_fround+1
  8792  1514  082D               	movf	?___ftmul+2,w
  8793  1515  00BD               	movwf	?_fround+2
  8794  1516  0008               	return
  8795  1517                     l3937:	
  8796                           
  8797                           ;doprnt.c: 415: else if(prec > 10)
  8798  1517  300B               	movlw	11
  8799  1518  0248               	subwf	fround@prec,w
  8800  1519  1C03               	skipc
  8801  151A  2D8F               	goto	l3945
  8802                           
  8803                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8804  151B  0848               	movf	fround@prec,w
  8805  151C  00BE               	movwf	??_fround
  8806  151D  01BF               	clrf	??_fround+1
  8807  151E  083E               	movf	??_fround,w
  8808  151F  00F3               	movwf	___awmod@dividend
  8809  1520  083F               	movf	??_fround+1,w
  8810  1521  00F4               	movwf	___awmod@dividend+1
  8811  1522  300A               	movlw	10
  8812  1523  00F1               	movwf	___awmod@divisor
  8813  1524  3000               	movlw	0
  8814  1525  00F2               	movwf	___awmod@divisor+1
  8815  1526  319B  23CA  3194   	fcall	___awmod
  8816  1529  0872               	movf	?___awmod+1,w
  8817  152A  0020               	movlb	0	; select bank0
  8818  152B  00A6               	movwf	___wmul@multiplier+1
  8819  152C  0871               	movf	?___awmod,w
  8820  152D  00A5               	movwf	___wmul@multiplier
  8821  152E  3003               	movlw	3
  8822  152F  00A7               	movwf	___wmul@multiplicand
  8823  1530  3000               	movlw	0
  8824  1531  00A8               	movwf	___wmul@multiplicand+1
  8825  1532  319A  2297  3194   	fcall	___wmul
  8826  1535  0020               	movlb	0	; select bank0
  8827  1536  0826               	movf	?___wmul+1,w
  8828  1537  0085               	movwf	5
  8829  1538  0825               	movf	?___wmul,w
  8830  1539  0084               	movwf	4
  8831  153A  304F               	movlw	low (__npowers_| (0+32768))
  8832  153B  0784               	addwf	4,f
  8833  153C  30A0               	movlw	high (__npowers_| (0+32768))
  8834  153D  3D85               	addwfc	5,f
  8835  153E  3F00               	moviw [0]fsr0
  8836  153F  00AB               	movwf	___ftmul@f1
  8837  1540  3F01               	moviw [1]fsr0
  8838  1541  00AC               	movwf	___ftmul@f1+1
  8839  1542  3F02               	moviw [2]fsr0
  8840  1543  00AD               	movwf	___ftmul@f1+2
  8841  1544  300A               	movlw	10
  8842  1545  00F8               	movwf	___awdiv@divisor
  8843  1546  3000               	movlw	0
  8844  1547  00F9               	movwf	___awdiv@divisor+1
  8845  1548  0848               	movf	fround@prec,w
  8846  1549  00C0               	movwf	??_fround+2
  8847  154A  01C1               	clrf	??_fround+3
  8848  154B  0840               	movf	??_fround+2,w
  8849  154C  00FA               	movwf	___awdiv@dividend
  8850  154D  0841               	movf	??_fround+3,w
  8851  154E  00FB               	movwf	___awdiv@dividend+1
  8852  154F  319C  240F  3194   	fcall	___awdiv
  8853  1552  0878               	movf	?___awdiv,w
  8854  1553  3E09               	addlw	9
  8855  1554  0020               	movlb	0	; select bank0
  8856  1555  00A5               	movwf	___wmul@multiplier
  8857  1556  3000               	movlw	0
  8858  1557  3D79               	addwfc	?___awdiv+1,w
  8859  1558  00A6               	movwf	___wmul@multiplier+1
  8860  1559  3003               	movlw	3
  8861  155A  00A7               	movwf	___wmul@multiplicand
  8862  155B  3000               	movlw	0
  8863  155C  00A8               	movwf	___wmul@multiplicand+1
  8864  155D  319A  2297  3194   	fcall	___wmul
  8865  1560  0020               	movlb	0	; select bank0
  8866  1561  0826               	movf	?___wmul+1,w
  8867  1562  0085               	movwf	5
  8868  1563  0825               	movf	?___wmul,w
  8869  1564  0084               	movwf	4
  8870  1565  304F               	movlw	low (__npowers_| (0+32768))
  8871  1566  0784               	addwf	4,f
  8872  1567  30A0               	movlw	high (__npowers_| (0+32768))
  8873  1568  3D85               	addwfc	5,f
  8874  1569  3F00               	moviw [0]fsr0
  8875  156A  00AE               	movwf	___ftmul@f2
  8876  156B  3F01               	moviw [1]fsr0
  8877  156C  00AF               	movwf	___ftmul@f2+1
  8878  156D  3F02               	moviw [2]fsr0
  8879  156E  00B0               	movwf	___ftmul@f2+2
  8880  156F  319E  2696  3194   	fcall	___ftmul
  8881  1572  0020               	movlb	0	; select bank0
  8882  1573  082B               	movf	?___ftmul,w
  8883  1574  00C5               	movwf	_fround$915
  8884  1575  082C               	movf	?___ftmul+1,w
  8885  1576  00C6               	movwf	_fround$915+1
  8886  1577  082D               	movf	?___ftmul+2,w
  8887  1578  00C7               	movwf	_fround$915+2
  8888                           
  8889                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8890  1579  3000               	movlw	0
  8891  157A  00AB               	movwf	___ftmul@f1
  8892  157B  3000               	movlw	0
  8893  157C  00AC               	movwf	___ftmul@f1+1
  8894  157D  303F               	movlw	63
  8895  157E  00AD               	movwf	___ftmul@f1+2
  8896  157F  0845               	movf	_fround$915,w
  8897  1580  00AE               	movwf	___ftmul@f2
  8898  1581  0846               	movf	_fround$915+1,w
  8899  1582  00AF               	movwf	___ftmul@f2+1
  8900  1583  0847               	movf	_fround$915+2,w
  8901  1584  00B0               	movwf	___ftmul@f2+2
  8902  1585  319E  2696         	fcall	___ftmul
  8903  1587  0020               	movlb	0	; select bank0
  8904  1588  082B               	movf	?___ftmul,w
  8905  1589  00BB               	movwf	?_fround
  8906  158A  082C               	movf	?___ftmul+1,w
  8907  158B  00BC               	movwf	?_fround+1
  8908  158C  082D               	movf	?___ftmul+2,w
  8909  158D  00BD               	movwf	?_fround+2
  8910  158E  0008               	return
  8911  158F                     l3945:	
  8912                           
  8913                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8914  158F  3000               	movlw	0
  8915  1590  00AB               	movwf	___ftmul@f1
  8916  1591  3000               	movlw	0
  8917  1592  00AC               	movwf	___ftmul@f1+1
  8918  1593  303F               	movlw	63
  8919  1594  00AD               	movwf	___ftmul@f1+2
  8920  1595  0848               	movf	fround@prec,w
  8921  1596  00BE               	movwf	??_fround
  8922  1597  01BF               	clrf	??_fround+1
  8923  1598  083E               	movf	??_fround,w
  8924  1599  00A5               	movwf	___wmul@multiplier
  8925  159A  083F               	movf	??_fround+1,w
  8926  159B  00A6               	movwf	___wmul@multiplier+1
  8927  159C  3003               	movlw	3
  8928  159D  00A7               	movwf	___wmul@multiplicand
  8929  159E  3000               	movlw	0
  8930  159F  00A8               	movwf	___wmul@multiplicand+1
  8931  15A0  319A  2297  3194   	fcall	___wmul
  8932  15A3  0020               	movlb	0	; select bank0
  8933  15A4  0826               	movf	?___wmul+1,w
  8934  15A5  0085               	movwf	5
  8935  15A6  0825               	movf	?___wmul,w
  8936  15A7  0084               	movwf	4
  8937  15A8  304F               	movlw	low (__npowers_| (0+32768))
  8938  15A9  0784               	addwf	4,f
  8939  15AA  30A0               	movlw	high (__npowers_| (0+32768))
  8940  15AB  3D85               	addwfc	5,f
  8941  15AC  3F00               	moviw [0]fsr0
  8942  15AD  00AE               	movwf	___ftmul@f2
  8943  15AE  3F01               	moviw [1]fsr0
  8944  15AF  00AF               	movwf	___ftmul@f2+1
  8945  15B0  3F02               	moviw [2]fsr0
  8946  15B1  00B0               	movwf	___ftmul@f2+2
  8947  15B2  319E  2696         	fcall	___ftmul
  8948  15B4  0020               	movlb	0	; select bank0
  8949  15B5  082B               	movf	?___ftmul,w
  8950  15B6  00BB               	movwf	?_fround
  8951  15B7  082C               	movf	?___ftmul+1,w
  8952  15B8  00BC               	movwf	?_fround+1
  8953  15B9  082D               	movf	?___ftmul+2,w
  8954  15BA  00BD               	movwf	?_fround+2
  8955  15BB  0008               	return
  8956  15BC                     __end_of_fround:	
  8957                           
  8958                           	psect	text7
  8959  1A97                     __ptext7:	
  8960 ;; *************** function ___wmul *****************
  8961 ;; Defined at:
  8962 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;  multiplier      2    5[BANK0 ] unsigned int 
  8965 ;;  multiplicand    2    7[BANK0 ] unsigned int 
  8966 ;; Auto vars:     Size  Location     Type
  8967 ;;  product         2    9[BANK0 ] unsigned int 
  8968 ;; Return value:  Size  Location     Type
  8969 ;;                  2    5[BANK0 ] unsigned int 
  8970 ;; Registers used:
  8971 ;;		wreg, status,2, status,0
  8972 ;; Tracked objects:
  8973 ;;		On entry : 0/0
  8974 ;;		On exit  : 0/0
  8975 ;;		Unchanged: 0/0
  8976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8977 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8978 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8980 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8981 ;;Total ram usage:        6 bytes
  8982 ;; Hardware stack levels used:    1
  8983 ;; Hardware stack levels required when called:    1
  8984 ;; This function calls:
  8985 ;;		Nothing
  8986 ;; This function is called by:
  8987 ;;		_main
  8988 ;;		_fround
  8989 ;;		_scale
  8990 ;;		_sprintf
  8991 ;;		_LCD_GraphicsDisplayString
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           
  8995                           
  8996                           ;psect for function ___wmul
  8997  1A97                     ___wmul:	
  8998                           
  8999                           ;incstack = 0
  9000                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9001  1A97  0020               	movlb	0	; select bank0
  9002  1A98  01A9               	clrf	___wmul@product
  9003  1A99  01AA               	clrf	___wmul@product+1
  9004  1A9A                     l3607:	
  9005  1A9A  1C25               	btfss	___wmul@multiplier,0
  9006  1A9B  2AA0               	goto	l450
  9007  1A9C  0827               	movf	___wmul@multiplicand,w
  9008  1A9D  07A9               	addwf	___wmul@product,f
  9009  1A9E  0828               	movf	___wmul@multiplicand+1,w
  9010  1A9F  3DAA               	addwfc	___wmul@product+1,f
  9011  1AA0                     l450:	
  9012  1AA0  3001               	movlw	1
  9013  1AA1                     u5425:	
  9014  1AA1  35A7               	lslf	___wmul@multiplicand,f
  9015  1AA2  0DA8               	rlf	___wmul@multiplicand+1,f
  9016  1AA3  0B89               	decfsz	9,f
  9017  1AA4  2AA1               	goto	u5425
  9018  1AA5  3001               	movlw	1
  9019  1AA6                     u5435:	
  9020  1AA6  36A6               	lsrf	___wmul@multiplier+1,f
  9021  1AA7  0CA5               	rrf	___wmul@multiplier,f
  9022  1AA8  0B89               	decfsz	9,f
  9023  1AA9  2AA6               	goto	u5435
  9024  1AAA  0825               	movf	___wmul@multiplier,w
  9025  1AAB  0426               	iorwf	___wmul@multiplier+1,w
  9026  1AAC  1D03               	btfss	3,2
  9027  1AAD  2A9A               	goto	l3607
  9028  1AAE  082A               	movf	___wmul@product+1,w
  9029  1AAF  00A6               	movwf	?___wmul+1
  9030  1AB0  0829               	movf	___wmul@product,w
  9031  1AB1  00A5               	movwf	?___wmul
  9032  1AB2  0008               	return
  9033  1AB3                     __end_of___wmul:	
  9034                           
  9035                           	psect	text8
  9036  1E96                     __ptext8:	
  9037 ;; *************** function ___ftmul *****************
  9038 ;; Defined at:
  9039 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  f1              3   11[BANK0 ] float 
  9042 ;;  f2              3   14[BANK0 ] float 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  9045 ;;  sign            1   26[BANK0 ] unsigned char 
  9046 ;;  cntr            1   25[BANK0 ] unsigned char 
  9047 ;;  exp             1   21[BANK0 ] unsigned char 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  3   11[BANK0 ] float 
  9050 ;; Registers used:
  9051 ;;		wreg, status,2, status,0, pclath, cstack
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9057 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9058 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9059 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9060 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9061 ;;Total ram usage:       16 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:    2
  9064 ;; This function calls:
  9065 ;;		___ftpack
  9066 ;; This function is called by:
  9067 ;;		_main
  9068 ;;		_fround
  9069 ;;		_scale
  9070 ;;		_sprintf
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           
  9075                           ;psect for function ___ftmul
  9076  1E96                     ___ftmul:	
  9077                           
  9078                           ;incstack = 0
  9079                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9080  1E96  0020               	movlb	0	; select bank0
  9081  1E97  082B               	movf	___ftmul@f1,w
  9082  1E98  00B1               	movwf	??___ftmul
  9083  1E99  082C               	movf	___ftmul@f1+1,w
  9084  1E9A  00B2               	movwf	??___ftmul+1
  9085  1E9B  082D               	movf	___ftmul@f1+2,w
  9086  1E9C  00B3               	movwf	??___ftmul+2
  9087  1E9D  1003               	clrc
  9088  1E9E  0D32               	rlf	??___ftmul+1,w
  9089  1E9F  0D33               	rlf	??___ftmul+2,w
  9090  1EA0  00B4               	movwf	??___ftmul+3
  9091  1EA1  0834               	movf	??___ftmul+3,w
  9092  1EA2  00B5               	movwf	___ftmul@exp
  9093  1EA3  0835               	movf	___ftmul@exp,w
  9094  1EA4  1D03               	btfss	3,2
  9095  1EA5  2EAD               	goto	l3777
  9096  1EA6  3000               	movlw	0
  9097  1EA7  00AB               	movwf	?___ftmul
  9098  1EA8  3000               	movlw	0
  9099  1EA9  00AC               	movwf	?___ftmul+1
  9100  1EAA  3000               	movlw	0
  9101  1EAB  00AD               	movwf	?___ftmul+2
  9102  1EAC  0008               	return
  9103  1EAD                     l3777:	
  9104  1EAD  082E               	movf	___ftmul@f2,w
  9105  1EAE  00B1               	movwf	??___ftmul
  9106  1EAF  082F               	movf	___ftmul@f2+1,w
  9107  1EB0  00B2               	movwf	??___ftmul+1
  9108  1EB1  0830               	movf	___ftmul@f2+2,w
  9109  1EB2  00B3               	movwf	??___ftmul+2
  9110  1EB3  1003               	clrc
  9111  1EB4  0D32               	rlf	??___ftmul+1,w
  9112  1EB5  0D33               	rlf	??___ftmul+2,w
  9113  1EB6  00B4               	movwf	??___ftmul+3
  9114  1EB7  0834               	movf	??___ftmul+3,w
  9115  1EB8  00BA               	movwf	___ftmul@sign
  9116  1EB9  083A               	movf	___ftmul@sign,w
  9117  1EBA  1D03               	btfss	3,2
  9118  1EBB  2EC3               	goto	l3783
  9119  1EBC  3000               	movlw	0
  9120  1EBD  00AB               	movwf	?___ftmul
  9121  1EBE  3000               	movlw	0
  9122  1EBF  00AC               	movwf	?___ftmul+1
  9123  1EC0  3000               	movlw	0
  9124  1EC1  00AD               	movwf	?___ftmul+2
  9125  1EC2  0008               	return
  9126  1EC3                     l3783:	
  9127  1EC3  083A               	movf	___ftmul@sign,w
  9128  1EC4  3E7B               	addlw	123
  9129  1EC5  00B1               	movwf	??___ftmul
  9130  1EC6  0831               	movf	??___ftmul,w
  9131  1EC7  07B5               	addwf	___ftmul@exp,f
  9132  1EC8  082B               	movf	___ftmul@f1,w
  9133  1EC9  00B1               	movwf	??___ftmul
  9134  1ECA  082C               	movf	___ftmul@f1+1,w
  9135  1ECB  00B2               	movwf	??___ftmul+1
  9136  1ECC  082D               	movf	___ftmul@f1+2,w
  9137  1ECD  00B3               	movwf	??___ftmul+2
  9138  1ECE  3010               	movlw	16
  9139  1ECF                     u5895:	
  9140  1ECF  36B3               	lsrf	??___ftmul+2,f
  9141  1ED0  0CB2               	rrf	??___ftmul+1,f
  9142  1ED1  0CB1               	rrf	??___ftmul,f
  9143  1ED2  0B89               	decfsz	9,f
  9144  1ED3  2ECF               	goto	u5895
  9145  1ED4  0831               	movf	??___ftmul,w
  9146  1ED5  00B4               	movwf	??___ftmul+3
  9147  1ED6  0834               	movf	??___ftmul+3,w
  9148  1ED7  00BA               	movwf	___ftmul@sign
  9149  1ED8  082E               	movf	___ftmul@f2,w
  9150  1ED9  00B1               	movwf	??___ftmul
  9151  1EDA  082F               	movf	___ftmul@f2+1,w
  9152  1EDB  00B2               	movwf	??___ftmul+1
  9153  1EDC  0830               	movf	___ftmul@f2+2,w
  9154  1EDD  00B3               	movwf	??___ftmul+2
  9155  1EDE  3010               	movlw	16
  9156  1EDF                     u5905:	
  9157  1EDF  36B3               	lsrf	??___ftmul+2,f
  9158  1EE0  0CB2               	rrf	??___ftmul+1,f
  9159  1EE1  0CB1               	rrf	??___ftmul,f
  9160  1EE2  0B89               	decfsz	9,f
  9161  1EE3  2EDF               	goto	u5905
  9162  1EE4  0831               	movf	??___ftmul,w
  9163  1EE5  00B4               	movwf	??___ftmul+3
  9164  1EE6  0834               	movf	??___ftmul+3,w
  9165  1EE7  06BA               	xorwf	___ftmul@sign,f
  9166  1EE8  3080               	movlw	128
  9167  1EE9  00B1               	movwf	??___ftmul
  9168  1EEA  0831               	movf	??___ftmul,w
  9169  1EEB  05BA               	andwf	___ftmul@sign,f
  9170  1EEC  17AC               	bsf	___ftmul@f1+1,7
  9171  1EED  17AF               	bsf	___ftmul@f2+1,7
  9172  1EEE  30FF               	movlw	255
  9173  1EEF  05AE               	andwf	___ftmul@f2,f
  9174  1EF0  30FF               	movlw	255
  9175  1EF1  05AF               	andwf	___ftmul@f2+1,f
  9176  1EF2  3000               	movlw	0
  9177  1EF3  05B0               	andwf	___ftmul@f2+2,f
  9178  1EF4  3000               	movlw	0
  9179  1EF5  00B6               	movwf	___ftmul@f3_as_product
  9180  1EF6  3000               	movlw	0
  9181  1EF7  00B7               	movwf	___ftmul@f3_as_product+1
  9182  1EF8  3000               	movlw	0
  9183  1EF9  00B8               	movwf	___ftmul@f3_as_product+2
  9184  1EFA  3007               	movlw	7
  9185  1EFB  00B1               	movwf	??___ftmul
  9186  1EFC  0831               	movf	??___ftmul,w
  9187  1EFD  00B9               	movwf	___ftmul@cntr
  9188  1EFE                     l3795:	
  9189  1EFE  1C2B               	btfss	___ftmul@f1,0
  9190  1EFF  2F06               	goto	l3799
  9191  1F00  082E               	movf	___ftmul@f2,w
  9192  1F01  07B6               	addwf	___ftmul@f3_as_product,f
  9193  1F02  082F               	movf	___ftmul@f2+1,w
  9194  1F03  3DB7               	addwfc	___ftmul@f3_as_product+1,f
  9195  1F04  0830               	movf	___ftmul@f2+2,w
  9196  1F05  3DB8               	addwfc	___ftmul@f3_as_product+2,f
  9197  1F06                     l3799:	
  9198  1F06  3001               	movlw	1
  9199  1F07                     u5925:	
  9200  1F07  36AD               	lsrf	___ftmul@f1+2,f
  9201  1F08  0CAC               	rrf	___ftmul@f1+1,f
  9202  1F09  0CAB               	rrf	___ftmul@f1,f
  9203  1F0A  0B89               	decfsz	9,f
  9204  1F0B  2F07               	goto	u5925
  9205  1F0C  3001               	movlw	1
  9206  1F0D                     u5935:	
  9207  1F0D  35AE               	lslf	___ftmul@f2,f
  9208  1F0E  0DAF               	rlf	___ftmul@f2+1,f
  9209  1F0F  0DB0               	rlf	___ftmul@f2+2,f
  9210  1F10  0B89               	decfsz	9,f
  9211  1F11  2F0D               	goto	u5935
  9212  1F12  3001               	movlw	1
  9213  1F13  02B9               	subwf	___ftmul@cntr,f
  9214  1F14  1D03               	btfss	3,2
  9215  1F15  2EFE               	goto	l3795
  9216  1F16  3009               	movlw	9
  9217  1F17  00B1               	movwf	??___ftmul
  9218  1F18  0831               	movf	??___ftmul,w
  9219  1F19  00B9               	movwf	___ftmul@cntr
  9220  1F1A                     l3807:	
  9221  1F1A  1C2B               	btfss	___ftmul@f1,0
  9222  1F1B  2F22               	goto	l3811
  9223  1F1C  082E               	movf	___ftmul@f2,w
  9224  1F1D  07B6               	addwf	___ftmul@f3_as_product,f
  9225  1F1E  082F               	movf	___ftmul@f2+1,w
  9226  1F1F  3DB7               	addwfc	___ftmul@f3_as_product+1,f
  9227  1F20  0830               	movf	___ftmul@f2+2,w
  9228  1F21  3DB8               	addwfc	___ftmul@f3_as_product+2,f
  9229  1F22                     l3811:	
  9230  1F22  3001               	movlw	1
  9231  1F23                     u5965:	
  9232  1F23  36AD               	lsrf	___ftmul@f1+2,f
  9233  1F24  0CAC               	rrf	___ftmul@f1+1,f
  9234  1F25  0CAB               	rrf	___ftmul@f1,f
  9235  1F26  0B89               	decfsz	9,f
  9236  1F27  2F23               	goto	u5965
  9237  1F28  3001               	movlw	1
  9238  1F29                     u5975:	
  9239  1F29  36B8               	lsrf	___ftmul@f3_as_product+2,f
  9240  1F2A  0CB7               	rrf	___ftmul@f3_as_product+1,f
  9241  1F2B  0CB6               	rrf	___ftmul@f3_as_product,f
  9242  1F2C  0B89               	decfsz	9,f
  9243  1F2D  2F29               	goto	u5975
  9244  1F2E  3001               	movlw	1
  9245  1F2F  02B9               	subwf	___ftmul@cntr,f
  9246  1F30  1D03               	btfss	3,2
  9247  1F31  2F1A               	goto	l3807
  9248  1F32  0836               	movf	___ftmul@f3_as_product,w
  9249  1F33  00F1               	movwf	___ftpack@arg
  9250  1F34  0837               	movf	___ftmul@f3_as_product+1,w
  9251  1F35  00F2               	movwf	___ftpack@arg+1
  9252  1F36  0838               	movf	___ftmul@f3_as_product+2,w
  9253  1F37  00F3               	movwf	___ftpack@arg+2
  9254  1F38  0835               	movf	___ftmul@exp,w
  9255  1F39  00B1               	movwf	??___ftmul
  9256  1F3A  0831               	movf	??___ftmul,w
  9257  1F3B  00F4               	movwf	___ftpack@exp
  9258  1F3C  083A               	movf	___ftmul@sign,w
  9259  1F3D  00B2               	movwf	??___ftmul+1
  9260  1F3E  0832               	movf	??___ftmul+1,w
  9261  1F3F  00F5               	movwf	___ftpack@sign
  9262  1F40  319D  2516         	fcall	___ftpack
  9263  1F42  0871               	movf	?___ftpack,w
  9264  1F43  0020               	movlb	0	; select bank0
  9265  1F44  00AB               	movwf	?___ftmul
  9266  1F45  0872               	movf	?___ftpack+1,w
  9267  1F46  00AC               	movwf	?___ftmul+1
  9268  1F47  0873               	movf	?___ftpack+2,w
  9269  1F48  00AD               	movwf	?___ftmul+2
  9270  1F49  0008               	return
  9271  1F4A                     __end_of___ftmul:	
  9272                           
  9273                           	psect	text9
  9274  1BCA                     __ptext9:	
  9275 ;; *************** function ___awmod *****************
  9276 ;; Defined at:
  9277 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;  divisor         2    1[COMMON] int 
  9280 ;;  dividend        2    3[COMMON] int 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  sign            1    7[COMMON] unsigned char 
  9283 ;;  counter         1    6[COMMON] unsigned char 
  9284 ;; Return value:  Size  Location     Type
  9285 ;;                  2    1[COMMON] int 
  9286 ;; Registers used:
  9287 ;;		wreg, status,2, status,0
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9296 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9297 ;;Total ram usage:        7 bytes
  9298 ;; Hardware stack levels used:    1
  9299 ;; Hardware stack levels required when called:    1
  9300 ;; This function calls:
  9301 ;;		Nothing
  9302 ;; This function is called by:
  9303 ;;		_fround
  9304 ;;		_scale
  9305 ;; This function uses a non-reentrant model
  9306 ;;
  9307                           
  9308                           
  9309                           ;psect for function ___awmod
  9310  1BCA                     ___awmod:	
  9311                           
  9312                           ;incstack = 0
  9313                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9314  1BCA  01F7               	clrf	___awmod@sign
  9315  1BCB  1FF4               	btfss	___awmod@dividend+1,7
  9316  1BCC  2BD4               	goto	l3671
  9317  1BCD  09F3               	comf	___awmod@dividend,f
  9318  1BCE  09F4               	comf	___awmod@dividend+1,f
  9319  1BCF  0AF3               	incf	___awmod@dividend,f
  9320  1BD0  1903               	skipnz
  9321  1BD1  0AF4               	incf	___awmod@dividend+1,f
  9322  1BD2  01F7               	clrf	___awmod@sign
  9323  1BD3  0AF7               	incf	___awmod@sign,f
  9324  1BD4                     l3671:	
  9325  1BD4  1FF2               	btfss	___awmod@divisor+1,7
  9326  1BD5  2BDB               	goto	l3675
  9327  1BD6  09F1               	comf	___awmod@divisor,f
  9328  1BD7  09F2               	comf	___awmod@divisor+1,f
  9329  1BD8  0AF1               	incf	___awmod@divisor,f
  9330  1BD9  1903               	skipnz
  9331  1BDA  0AF2               	incf	___awmod@divisor+1,f
  9332  1BDB                     l3675:	
  9333  1BDB  0871               	movf	___awmod@divisor,w
  9334  1BDC  0472               	iorwf	___awmod@divisor+1,w
  9335  1BDD  1903               	btfsc	3,2
  9336  1BDE  2C02               	goto	l3693
  9337  1BDF  01F6               	clrf	___awmod@counter
  9338  1BE0  0AF6               	incf	___awmod@counter,f
  9339  1BE1                     l3683:	
  9340  1BE1  1BF2               	btfsc	___awmod@divisor+1,7
  9341  1BE2  2BED               	goto	l3685
  9342  1BE3  3001               	movlw	1
  9343  1BE4                     u5585:	
  9344  1BE4  35F1               	lslf	___awmod@divisor,f
  9345  1BE5  0DF2               	rlf	___awmod@divisor+1,f
  9346  1BE6  0B89               	decfsz	9,f
  9347  1BE7  2BE4               	goto	u5585
  9348  1BE8  3001               	movlw	1
  9349  1BE9  00F5               	movwf	??___awmod
  9350  1BEA  0875               	movf	??___awmod,w
  9351  1BEB  07F6               	addwf	___awmod@counter,f
  9352  1BEC  2BE1               	goto	l3683
  9353  1BED                     l3685:	
  9354  1BED  0872               	movf	___awmod@divisor+1,w
  9355  1BEE  0274               	subwf	___awmod@dividend+1,w
  9356  1BEF  1D03               	skipz
  9357  1BF0  2BF3               	goto	u5605
  9358  1BF1  0871               	movf	___awmod@divisor,w
  9359  1BF2  0273               	subwf	___awmod@dividend,w
  9360  1BF3                     u5605:	
  9361  1BF3  1C03               	skipc
  9362  1BF4  2BF9               	goto	l3689
  9363  1BF5  0871               	movf	___awmod@divisor,w
  9364  1BF6  02F3               	subwf	___awmod@dividend,f
  9365  1BF7  0872               	movf	___awmod@divisor+1,w
  9366  1BF8  3BF4               	subwfb	___awmod@dividend+1,f
  9367  1BF9                     l3689:	
  9368  1BF9  3001               	movlw	1
  9369  1BFA                     u5615:	
  9370  1BFA  36F2               	lsrf	___awmod@divisor+1,f
  9371  1BFB  0CF1               	rrf	___awmod@divisor,f
  9372  1BFC  0B89               	decfsz	9,f
  9373  1BFD  2BFA               	goto	u5615
  9374  1BFE  3001               	movlw	1
  9375  1BFF  02F6               	subwf	___awmod@counter,f
  9376  1C00  1D03               	btfss	3,2
  9377  1C01  2BED               	goto	l3685
  9378  1C02                     l3693:	
  9379  1C02  0877               	movf	___awmod@sign,w
  9380  1C03  1903               	btfsc	3,2
  9381  1C04  2C0A               	goto	l3697
  9382  1C05  09F3               	comf	___awmod@dividend,f
  9383  1C06  09F4               	comf	___awmod@dividend+1,f
  9384  1C07  0AF3               	incf	___awmod@dividend,f
  9385  1C08  1903               	skipnz
  9386  1C09  0AF4               	incf	___awmod@dividend+1,f
  9387  1C0A                     l3697:	
  9388  1C0A  0874               	movf	___awmod@dividend+1,w
  9389  1C0B  00F2               	movwf	?___awmod+1
  9390  1C0C  0873               	movf	___awmod@dividend,w
  9391  1C0D  00F1               	movwf	?___awmod
  9392  1C0E  0008               	return
  9393  1C0F                     __end_of___awmod:	
  9394                           
  9395                           	psect	text10
  9396  1C0F                     __ptext10:	
  9397 ;; *************** function ___awdiv *****************
  9398 ;; Defined at:
  9399 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;  divisor         2    8[COMMON] int 
  9402 ;;  dividend        2   10[COMMON] int 
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;  quotient        2    3[BANK0 ] int 
  9405 ;;  sign            1    2[BANK0 ] unsigned char 
  9406 ;;  counter         1    1[BANK0 ] unsigned char 
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  2    8[COMMON] int 
  9409 ;; Registers used:
  9410 ;;		wreg, status,2, status,0
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9417 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9418 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9419 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9420 ;;Total ram usage:        9 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; Hardware stack levels required when called:    1
  9423 ;; This function calls:
  9424 ;;		Nothing
  9425 ;; This function is called by:
  9426 ;;		_fround
  9427 ;;		_scale
  9428 ;;		_sprintf
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           
  9433                           ;psect for function ___awdiv
  9434  1C0F                     ___awdiv:	
  9435                           
  9436                           ;incstack = 0
  9437                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9438  1C0F  0020               	movlb	0	; select bank0
  9439  1C10  01A2               	clrf	___awdiv@sign
  9440  1C11  1FF9               	btfss	___awdiv@divisor+1,7
  9441  1C12  2C1A               	goto	l3627
  9442  1C13  09F8               	comf	___awdiv@divisor,f
  9443  1C14  09F9               	comf	___awdiv@divisor+1,f
  9444  1C15  0AF8               	incf	___awdiv@divisor,f
  9445  1C16  1903               	skipnz
  9446  1C17  0AF9               	incf	___awdiv@divisor+1,f
  9447  1C18  01A2               	clrf	___awdiv@sign
  9448  1C19  0AA2               	incf	___awdiv@sign,f
  9449  1C1A                     l3627:	
  9450  1C1A  1FFB               	btfss	___awdiv@dividend+1,7
  9451  1C1B  2C25               	goto	l3633
  9452  1C1C  09FA               	comf	___awdiv@dividend,f
  9453  1C1D  09FB               	comf	___awdiv@dividend+1,f
  9454  1C1E  0AFA               	incf	___awdiv@dividend,f
  9455  1C1F  1903               	skipnz
  9456  1C20  0AFB               	incf	___awdiv@dividend+1,f
  9457  1C21  3001               	movlw	1
  9458  1C22  00A0               	movwf	??___awdiv
  9459  1C23  0820               	movf	??___awdiv,w
  9460  1C24  06A2               	xorwf	___awdiv@sign,f
  9461  1C25                     l3633:	
  9462  1C25  01A3               	clrf	___awdiv@quotient
  9463  1C26  01A4               	clrf	___awdiv@quotient+1
  9464  1C27  0878               	movf	___awdiv@divisor,w
  9465  1C28  0479               	iorwf	___awdiv@divisor+1,w
  9466  1C29  1903               	btfsc	3,2
  9467  1C2A  2C54               	goto	l3655
  9468  1C2B  01A1               	clrf	___awdiv@counter
  9469  1C2C  0AA1               	incf	___awdiv@counter,f
  9470  1C2D                     l3643:	
  9471  1C2D  1BF9               	btfsc	___awdiv@divisor+1,7
  9472  1C2E  2C39               	goto	l3645
  9473  1C2F  3001               	movlw	1
  9474  1C30                     u5485:	
  9475  1C30  35F8               	lslf	___awdiv@divisor,f
  9476  1C31  0DF9               	rlf	___awdiv@divisor+1,f
  9477  1C32  0B89               	decfsz	9,f
  9478  1C33  2C30               	goto	u5485
  9479  1C34  3001               	movlw	1
  9480  1C35  00A0               	movwf	??___awdiv
  9481  1C36  0820               	movf	??___awdiv,w
  9482  1C37  07A1               	addwf	___awdiv@counter,f
  9483  1C38  2C2D               	goto	l3643
  9484  1C39                     l3645:	
  9485  1C39  3001               	movlw	1
  9486  1C3A                     u5505:	
  9487  1C3A  35A3               	lslf	___awdiv@quotient,f
  9488  1C3B  0DA4               	rlf	___awdiv@quotient+1,f
  9489  1C3C  0B89               	decfsz	9,f
  9490  1C3D  2C3A               	goto	u5505
  9491  1C3E  0879               	movf	___awdiv@divisor+1,w
  9492  1C3F  027B               	subwf	___awdiv@dividend+1,w
  9493  1C40  1D03               	skipz
  9494  1C41  2C44               	goto	u5515
  9495  1C42  0878               	movf	___awdiv@divisor,w
  9496  1C43  027A               	subwf	___awdiv@dividend,w
  9497  1C44                     u5515:	
  9498  1C44  1C03               	skipc
  9499  1C45  2C4B               	goto	l3651
  9500  1C46  0878               	movf	___awdiv@divisor,w
  9501  1C47  02FA               	subwf	___awdiv@dividend,f
  9502  1C48  0879               	movf	___awdiv@divisor+1,w
  9503  1C49  3BFB               	subwfb	___awdiv@dividend+1,f
  9504  1C4A  1423               	bsf	___awdiv@quotient,0
  9505  1C4B                     l3651:	
  9506  1C4B  3001               	movlw	1
  9507  1C4C                     u5525:	
  9508  1C4C  36F9               	lsrf	___awdiv@divisor+1,f
  9509  1C4D  0CF8               	rrf	___awdiv@divisor,f
  9510  1C4E  0B89               	decfsz	9,f
  9511  1C4F  2C4C               	goto	u5525
  9512  1C50  3001               	movlw	1
  9513  1C51  02A1               	subwf	___awdiv@counter,f
  9514  1C52  1D03               	btfss	3,2
  9515  1C53  2C39               	goto	l3645
  9516  1C54                     l3655:	
  9517  1C54  0822               	movf	___awdiv@sign,w
  9518  1C55  1903               	btfsc	3,2
  9519  1C56  2C5C               	goto	l3659
  9520  1C57  09A3               	comf	___awdiv@quotient,f
  9521  1C58  09A4               	comf	___awdiv@quotient+1,f
  9522  1C59  0AA3               	incf	___awdiv@quotient,f
  9523  1C5A  1903               	skipnz
  9524  1C5B  0AA4               	incf	___awdiv@quotient+1,f
  9525  1C5C                     l3659:	
  9526  1C5C  0824               	movf	___awdiv@quotient+1,w
  9527  1C5D  00F9               	movwf	?___awdiv+1
  9528  1C5E  0823               	movf	___awdiv@quotient,w
  9529  1C5F  00F8               	movwf	?___awdiv
  9530  1C60  0008               	return
  9531  1C61                     __end_of___awdiv:	
  9532                           
  9533                           	psect	text11
  9534  1F4A                     __ptext11:	
  9535 ;; *************** function __tdiv_to_l_ *****************
  9536 ;; Defined at:
  9537 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  f1              3    1[COMMON] float 
  9540 ;;  f2              3    4[COMMON] float 
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;  quot            4    0[BANK0 ] unsigned long 
  9543 ;;  exp1            1    5[BANK0 ] unsigned char 
  9544 ;;  cntr            1    4[BANK0 ] unsigned char 
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  4    1[COMMON] unsigned long 
  9547 ;; Registers used:
  9548 ;;		wreg, status,2, status,0
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9554 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9555 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9556 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9557 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9558 ;;Total ram usage:       16 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; Hardware stack levels required when called:    1
  9561 ;; This function calls:
  9562 ;;		Nothing
  9563 ;; This function is called by:
  9564 ;;		_sprintf
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           
  9569                           ;psect for function __tdiv_to_l_
  9570  1F4A                     __tdiv_to_l_:	
  9571                           
  9572                           ;incstack = 0
  9573                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  9574  1F4A  0871               	movf	__tdiv_to_l_@f1,w
  9575  1F4B  00F7               	movwf	??__tdiv_to_l_
  9576  1F4C  0872               	movf	__tdiv_to_l_@f1+1,w
  9577  1F4D  00F8               	movwf	??__tdiv_to_l_+1
  9578  1F4E  0873               	movf	__tdiv_to_l_@f1+2,w
  9579  1F4F  00F9               	movwf	??__tdiv_to_l_+2
  9580  1F50  1003               	clrc
  9581  1F51  0D78               	rlf	??__tdiv_to_l_+1,w
  9582  1F52  0D79               	rlf	??__tdiv_to_l_+2,w
  9583  1F53  00FA               	movwf	??__tdiv_to_l_+3
  9584  1F54  087A               	movf	??__tdiv_to_l_+3,w
  9585  1F55  0020               	movlb	0	; select bank0
  9586  1F56  00A5               	movwf	__tdiv_to_l_@exp1
  9587  1F57  0825               	movf	__tdiv_to_l_@exp1,w
  9588  1F58  1D03               	btfss	3,2
  9589  1F59  2F63               	goto	l4007
  9590  1F5A  3000               	movlw	0
  9591  1F5B  00F4               	movwf	?__tdiv_to_l_+3
  9592  1F5C  3000               	movlw	0
  9593  1F5D  00F3               	movwf	?__tdiv_to_l_+2
  9594  1F5E  3000               	movlw	0
  9595  1F5F  00F2               	movwf	?__tdiv_to_l_+1
  9596  1F60  3000               	movlw	0
  9597  1F61  00F1               	movwf	?__tdiv_to_l_
  9598  1F62  0008               	return
  9599  1F63                     l4007:	
  9600  1F63  0874               	movf	__tdiv_to_l_@f2,w
  9601  1F64  00F7               	movwf	??__tdiv_to_l_
  9602  1F65  0875               	movf	__tdiv_to_l_@f2+1,w
  9603  1F66  00F8               	movwf	??__tdiv_to_l_+1
  9604  1F67  0876               	movf	__tdiv_to_l_@f2+2,w
  9605  1F68  00F9               	movwf	??__tdiv_to_l_+2
  9606  1F69  1003               	clrc
  9607  1F6A  0D78               	rlf	??__tdiv_to_l_+1,w
  9608  1F6B  0D79               	rlf	??__tdiv_to_l_+2,w
  9609  1F6C  00FA               	movwf	??__tdiv_to_l_+3
  9610  1F6D  087A               	movf	??__tdiv_to_l_+3,w
  9611  1F6E  00A4               	movwf	__tdiv_to_l_@cntr
  9612  1F6F  0824               	movf	__tdiv_to_l_@cntr,w
  9613  1F70  1D03               	btfss	3,2
  9614  1F71  2F7B               	goto	l685
  9615  1F72  3000               	movlw	0
  9616  1F73  00F4               	movwf	?__tdiv_to_l_+3
  9617  1F74  3000               	movlw	0
  9618  1F75  00F3               	movwf	?__tdiv_to_l_+2
  9619  1F76  3000               	movlw	0
  9620  1F77  00F2               	movwf	?__tdiv_to_l_+1
  9621  1F78  3000               	movlw	0
  9622  1F79  00F1               	movwf	?__tdiv_to_l_
  9623  1F7A  0008               	return
  9624  1F7B                     l685:	
  9625  1F7B  17F2               	bsf	__tdiv_to_l_@f1+1,7
  9626  1F7C  30FF               	movlw	255
  9627  1F7D  05F1               	andwf	__tdiv_to_l_@f1,f
  9628  1F7E  30FF               	movlw	255
  9629  1F7F  05F2               	andwf	__tdiv_to_l_@f1+1,f
  9630  1F80  3000               	movlw	0
  9631  1F81  05F3               	andwf	__tdiv_to_l_@f1+2,f
  9632  1F82  17F5               	bsf	__tdiv_to_l_@f2+1,7
  9633  1F83  30FF               	movlw	255
  9634  1F84  05F4               	andwf	__tdiv_to_l_@f2,f
  9635  1F85  30FF               	movlw	255
  9636  1F86  05F5               	andwf	__tdiv_to_l_@f2+1,f
  9637  1F87  3000               	movlw	0
  9638  1F88  05F6               	andwf	__tdiv_to_l_@f2+2,f
  9639  1F89  3000               	movlw	0
  9640  1F8A  00A3               	movwf	__tdiv_to_l_@quot+3
  9641  1F8B  3000               	movlw	0
  9642  1F8C  00A2               	movwf	__tdiv_to_l_@quot+2
  9643  1F8D  3000               	movlw	0
  9644  1F8E  00A1               	movwf	__tdiv_to_l_@quot+1
  9645  1F8F  3000               	movlw	0
  9646  1F90  00A0               	movwf	__tdiv_to_l_@quot
  9647  1F91  307F               	movlw	127
  9648  1F92  02A5               	subwf	__tdiv_to_l_@exp1,f
  9649  1F93  3098               	movlw	152
  9650  1F94  0724               	addwf	__tdiv_to_l_@cntr,w
  9651  1F95  00F7               	movwf	??__tdiv_to_l_
  9652  1F96  0877               	movf	??__tdiv_to_l_,w
  9653  1F97  02A5               	subwf	__tdiv_to_l_@exp1,f
  9654  1F98  3018               	movlw	24
  9655  1F99  00F7               	movwf	??__tdiv_to_l_
  9656  1F9A  0877               	movf	??__tdiv_to_l_,w
  9657  1F9B  00A4               	movwf	__tdiv_to_l_@cntr
  9658  1F9C                     l4021:	
  9659  1F9C  3001               	movlw	1
  9660  1F9D                     u6425:	
  9661  1F9D  35A0               	lslf	__tdiv_to_l_@quot,f
  9662  1F9E  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  9663  1F9F  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  9664  1FA0  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  9665  1FA1  0B89               	decfsz	9,f
  9666  1FA2  2F9D               	goto	u6425
  9667  1FA3  0876               	movf	__tdiv_to_l_@f2+2,w
  9668  1FA4  0273               	subwf	__tdiv_to_l_@f1+2,w
  9669  1FA5  1D03               	skipz
  9670  1FA6  2FAD               	goto	u6435
  9671  1FA7  0875               	movf	__tdiv_to_l_@f2+1,w
  9672  1FA8  0272               	subwf	__tdiv_to_l_@f1+1,w
  9673  1FA9  1D03               	skipz
  9674  1FAA  2FAD               	goto	u6435
  9675  1FAB  0874               	movf	__tdiv_to_l_@f2,w
  9676  1FAC  0271               	subwf	__tdiv_to_l_@f1,w
  9677  1FAD                     u6435:	
  9678  1FAD  1C03               	skipc
  9679  1FAE  2FB6               	goto	l4029
  9680  1FAF  0874               	movf	__tdiv_to_l_@f2,w
  9681  1FB0  02F1               	subwf	__tdiv_to_l_@f1,f
  9682  1FB1  0875               	movf	__tdiv_to_l_@f2+1,w
  9683  1FB2  3BF2               	subwfb	__tdiv_to_l_@f1+1,f
  9684  1FB3  0876               	movf	__tdiv_to_l_@f2+2,w
  9685  1FB4  3BF3               	subwfb	__tdiv_to_l_@f1+2,f
  9686  1FB5  1420               	bsf	__tdiv_to_l_@quot,0
  9687  1FB6                     l4029:	
  9688  1FB6  3001               	movlw	1
  9689  1FB7                     u6445:	
  9690  1FB7  35F1               	lslf	__tdiv_to_l_@f1,f
  9691  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+1,f
  9692  1FB9  0DF3               	rlf	__tdiv_to_l_@f1+2,f
  9693  1FBA  0B89               	decfsz	9,f
  9694  1FBB  2FB7               	goto	u6445
  9695  1FBC  3001               	movlw	1
  9696  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  9697  1FBE  1D03               	btfss	3,2
  9698  1FBF  2F9C               	goto	l4021
  9699  1FC0  1FA5               	btfss	__tdiv_to_l_@exp1,7
  9700  1FC1  2FDE               	goto	l4041
  9701  1FC2  0825               	movf	__tdiv_to_l_@exp1,w
  9702  1FC3  3A80               	xorlw	128
  9703  1FC4  3E97               	addlw	151
  9704  1FC5  1803               	skipnc
  9705  1FC6  2FD0               	goto	l4039
  9706  1FC7  3000               	movlw	0
  9707  1FC8  00F4               	movwf	?__tdiv_to_l_+3
  9708  1FC9  3000               	movlw	0
  9709  1FCA  00F3               	movwf	?__tdiv_to_l_+2
  9710  1FCB  3000               	movlw	0
  9711  1FCC  00F2               	movwf	?__tdiv_to_l_+1
  9712  1FCD  3000               	movlw	0
  9713  1FCE  00F1               	movwf	?__tdiv_to_l_
  9714  1FCF  0008               	return
  9715  1FD0                     l4039:	
  9716  1FD0  3001               	movlw	1
  9717  1FD1                     u6485:	
  9718  1FD1  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  9719  1FD2  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  9720  1FD3  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  9721  1FD4  0CA0               	rrf	__tdiv_to_l_@quot,f
  9722  1FD5  0B89               	decfsz	9,f
  9723  1FD6  2FD1               	goto	u6485
  9724  1FD7  3001               	movlw	1
  9725  1FD8  00F7               	movwf	??__tdiv_to_l_
  9726  1FD9  0877               	movf	??__tdiv_to_l_,w
  9727  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  9728  1FDB  1903               	btfsc	3,2
  9729  1FDC  2FF7               	goto	l4049
  9730  1FDD  2FD0               	goto	l4039
  9731  1FDE                     l4041:	
  9732  1FDE  3018               	movlw	24
  9733  1FDF  0225               	subwf	__tdiv_to_l_@exp1,w
  9734  1FE0  1C03               	skipc
  9735  1FE1  2FF4               	goto	l695
  9736  1FE2  3000               	movlw	0
  9737  1FE3  00F4               	movwf	?__tdiv_to_l_+3
  9738  1FE4  3000               	movlw	0
  9739  1FE5  00F3               	movwf	?__tdiv_to_l_+2
  9740  1FE6  3000               	movlw	0
  9741  1FE7  00F2               	movwf	?__tdiv_to_l_+1
  9742  1FE8  3000               	movlw	0
  9743  1FE9  00F1               	movwf	?__tdiv_to_l_
  9744  1FEA  0008               	return
  9745  1FEB                     l4047:	
  9746  1FEB  3001               	movlw	1
  9747  1FEC                     u6515:	
  9748  1FEC  35A0               	lslf	__tdiv_to_l_@quot,f
  9749  1FED  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  9750  1FEE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  9751  1FEF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  9752  1FF0  0B89               	decfsz	9,f
  9753  1FF1  2FEC               	goto	u6515
  9754  1FF2  3001               	movlw	1
  9755  1FF3  02A5               	subwf	__tdiv_to_l_@exp1,f
  9756  1FF4                     l695:	
  9757  1FF4  0825               	movf	__tdiv_to_l_@exp1,w
  9758  1FF5  1D03               	btfss	3,2
  9759  1FF6  2FEB               	goto	l4047
  9760  1FF7                     l4049:	
  9761  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  9762  1FF8  00F4               	movwf	?__tdiv_to_l_+3
  9763  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  9764  1FFA  00F3               	movwf	?__tdiv_to_l_+2
  9765  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  9766  1FFC  00F2               	movwf	?__tdiv_to_l_+1
  9767  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  9768  1FFE  00F1               	movwf	?__tdiv_to_l_
  9769  1FFF  0008               	return
  9770  2000                     __end_of__tdiv_to_l_:	
  9771                           
  9772                           	psect	text12
  9773  11F2                     __ptext12:	
  9774 ;; *************** function __div_to_l_ *****************
  9775 ;; Defined at:
  9776 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;  f1              3    1[COMMON] unsigned long 
  9779 ;;  f2              3    4[COMMON] unsigned long 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;  quot            4    8[BANK0 ] unsigned long 
  9782 ;;  exp1            1   13[BANK0 ] unsigned char 
  9783 ;;  cntr            1   12[BANK0 ] unsigned char 
  9784 ;; Return value:  Size  Location     Type
  9785 ;;                  4    1[COMMON] unsigned long 
  9786 ;; Registers used:
  9787 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 0/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9793 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9794 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9795 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9796 ;;      Totals:         6      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9797 ;;Total ram usage:       20 bytes
  9798 ;; Hardware stack levels used:    1
  9799 ;; Hardware stack levels required when called:    1
  9800 ;; This function calls:
  9801 ;;		Nothing
  9802 ;; This function is called by:
  9803 ;;		_sprintf
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807                           
  9808                           ;psect for function __div_to_l_
  9809  11F2                     __div_to_l_:	
  9810                           
  9811                           ;incstack = 0
  9812                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  9813  11F2  3071               	movlw	low (__div_to_l_@f1| 0)
  9814  11F3  0086               	movwf	6
  9815  11F4  0187               	clrf	7
  9816  11F5  3F40               	moviw [0]fsr1
  9817  11F6  0020               	movlb	0	; select bank0
  9818  11F7  00A0               	movwf	??__div_to_l_
  9819  11F8  3F41               	moviw [1]fsr1
  9820  11F9  00A1               	movwf	??__div_to_l_+1
  9821  11FA  3F42               	moviw [2]fsr1
  9822  11FB  00A2               	movwf	??__div_to_l_+2
  9823  11FC  3F43               	moviw [3]fsr1
  9824  11FD  00A3               	movwf	??__div_to_l_+3
  9825  11FE  1003               	clrc
  9826  11FF  0D22               	rlf	??__div_to_l_+2,w
  9827  1200  0D23               	rlf	??__div_to_l_+3,w
  9828  1201  00A4               	movwf	??__div_to_l_+4
  9829  1202  0824               	movf	??__div_to_l_+4,w
  9830  1203  00AD               	movwf	__div_to_l_@exp1
  9831  1204  082D               	movf	__div_to_l_@exp1,w
  9832  1205  1D03               	btfss	3,2
  9833  1206  2A10               	goto	l4059
  9834  1207  3000               	movlw	0
  9835  1208  00F4               	movwf	?__div_to_l_+3
  9836  1209  3000               	movlw	0
  9837  120A  00F3               	movwf	?__div_to_l_+2
  9838  120B  3000               	movlw	0
  9839  120C  00F2               	movwf	?__div_to_l_+1
  9840  120D  3000               	movlw	0
  9841  120E  00F1               	movwf	?__div_to_l_
  9842  120F  0008               	return
  9843  1210                     l4059:	
  9844  1210  3074               	movlw	low (__div_to_l_@f2| 0)
  9845  1211  0086               	movwf	6
  9846  1212  0187               	clrf	7
  9847  1213  3F40               	moviw [0]fsr1
  9848  1214  00A0               	movwf	??__div_to_l_
  9849  1215  3F41               	moviw [1]fsr1
  9850  1216  00A1               	movwf	??__div_to_l_+1
  9851  1217  3F42               	moviw [2]fsr1
  9852  1218  00A2               	movwf	??__div_to_l_+2
  9853  1219  3F43               	moviw [3]fsr1
  9854  121A  00A3               	movwf	??__div_to_l_+3
  9855  121B  1003               	clrc
  9856  121C  0D22               	rlf	??__div_to_l_+2,w
  9857  121D  0D23               	rlf	??__div_to_l_+3,w
  9858  121E  00A4               	movwf	??__div_to_l_+4
  9859  121F  0824               	movf	??__div_to_l_+4,w
  9860  1220  00AC               	movwf	__div_to_l_@cntr
  9861  1221  082C               	movf	__div_to_l_@cntr,w
  9862  1222  1D03               	btfss	3,2
  9863  1223  2A2D               	goto	l4065
  9864  1224  3000               	movlw	0
  9865  1225  00F4               	movwf	?__div_to_l_+3
  9866  1226  3000               	movlw	0
  9867  1227  00F3               	movwf	?__div_to_l_+2
  9868  1228  3000               	movlw	0
  9869  1229  00F2               	movwf	?__div_to_l_+1
  9870  122A  3000               	movlw	0
  9871  122B  00F1               	movwf	?__div_to_l_
  9872  122C  0008               	return
  9873  122D                     l4065:	
  9874  122D  3071               	movlw	low (__div_to_l_@f1| 0)
  9875  122E  0086               	movwf	6
  9876  122F  0187               	clrf	7
  9877  1230  3000               	movlw	0
  9878  1231  0481               	iorwf	1,f
  9879  1232  3141               	addfsr 1,1
  9880  1233  3000               	movlw	0
  9881  1234  0481               	iorwf	1,f
  9882  1235  3141               	addfsr 1,1
  9883  1236  3080               	movlw	128
  9884  1237  0481               	iorwf	1,f
  9885  1238  3141               	addfsr 1,1
  9886  1239  3000               	movlw	0
  9887  123A  0481               	iorwf	1,f
  9888  123B  3071               	movlw	low (__div_to_l_@f1| 0)
  9889  123C  0086               	movwf	6
  9890  123D  0187               	clrf	7
  9891  123E  30FF               	movlw	255
  9892  123F  0581               	andwf	1,f
  9893  1240  3141               	addfsr 1,1
  9894  1241  30FF               	movlw	255
  9895  1242  0581               	andwf	1,f
  9896  1243  3141               	addfsr 1,1
  9897  1244  30FF               	movlw	255
  9898  1245  0581               	andwf	1,f
  9899  1246  3141               	addfsr 1,1
  9900  1247  3000               	movlw	0
  9901  1248  0581               	andwf	1,f
  9902  1249  3074               	movlw	low (__div_to_l_@f2| 0)
  9903  124A  0086               	movwf	6
  9904  124B  0187               	clrf	7
  9905  124C  3000               	movlw	0
  9906  124D  0481               	iorwf	1,f
  9907  124E  3141               	addfsr 1,1
  9908  124F  3000               	movlw	0
  9909  1250  0481               	iorwf	1,f
  9910  1251  3141               	addfsr 1,1
  9911  1252  3080               	movlw	128
  9912  1253  0481               	iorwf	1,f
  9913  1254  3141               	addfsr 1,1
  9914  1255  3000               	movlw	0
  9915  1256  0481               	iorwf	1,f
  9916  1257  3074               	movlw	low (__div_to_l_@f2| 0)
  9917  1258  0086               	movwf	6
  9918  1259  0187               	clrf	7
  9919  125A  30FF               	movlw	255
  9920  125B  0581               	andwf	1,f
  9921  125C  3141               	addfsr 1,1
  9922  125D  30FF               	movlw	255
  9923  125E  0581               	andwf	1,f
  9924  125F  3141               	addfsr 1,1
  9925  1260  30FF               	movlw	255
  9926  1261  0581               	andwf	1,f
  9927  1262  3141               	addfsr 1,1
  9928  1263  3000               	movlw	0
  9929  1264  0581               	andwf	1,f
  9930  1265  3000               	movlw	0
  9931  1266  00AB               	movwf	__div_to_l_@quot+3
  9932  1267  3000               	movlw	0
  9933  1268  00AA               	movwf	__div_to_l_@quot+2
  9934  1269  3000               	movlw	0
  9935  126A  00A9               	movwf	__div_to_l_@quot+1
  9936  126B  3000               	movlw	0
  9937  126C  00A8               	movwf	__div_to_l_@quot
  9938  126D  307F               	movlw	127
  9939  126E  02AD               	subwf	__div_to_l_@exp1,f
  9940  126F  30A0               	movlw	160
  9941  1270  072C               	addwf	__div_to_l_@cntr,w
  9942  1271  00A0               	movwf	??__div_to_l_
  9943  1272  0820               	movf	??__div_to_l_,w
  9944  1273  02AD               	subwf	__div_to_l_@exp1,f
  9945  1274  3020               	movlw	32
  9946  1275  00A0               	movwf	??__div_to_l_
  9947  1276  0820               	movf	??__div_to_l_,w
  9948  1277  00AC               	movwf	__div_to_l_@cntr
  9949  1278                     l4075:	
  9950  1278  3001               	movlw	1
  9951  1279                     u6555:	
  9952  1279  35A8               	lslf	__div_to_l_@quot,f
  9953  127A  0DA9               	rlf	__div_to_l_@quot+1,f
  9954  127B  0DAA               	rlf	__div_to_l_@quot+2,f
  9955  127C  0DAB               	rlf	__div_to_l_@quot+3,f
  9956  127D  0B89               	decfsz	9,f
  9957  127E  2A79               	goto	u6555
  9958  127F  3074               	movlw	low (__div_to_l_@f2| 0)
  9959  1280  0086               	movwf	6
  9960  1281  0187               	clrf	7
  9961  1282  3F40               	moviw [0]fsr1
  9962  1283  00A0               	movwf	??__div_to_l_
  9963  1284  3F41               	moviw [1]fsr1
  9964  1285  00A1               	movwf	??__div_to_l_+1
  9965  1286  3F42               	moviw [2]fsr1
  9966  1287  00A2               	movwf	??__div_to_l_+2
  9967  1288  3F43               	moviw [3]fsr1
  9968  1289  00A3               	movwf	??__div_to_l_+3
  9969  128A  3071               	movlw	low (__div_to_l_@f1| 0)
  9970  128B  0086               	movwf	6
  9971  128C  0187               	clrf	7
  9972  128D  3F40               	moviw [0]fsr1
  9973  128E  00A4               	movwf	??__div_to_l_+4
  9974  128F  3F41               	moviw [1]fsr1
  9975  1290  00A5               	movwf	??__div_to_l_+5
  9976  1291  3F42               	moviw [2]fsr1
  9977  1292  00A6               	movwf	??__div_to_l_+6
  9978  1293  3F43               	moviw [3]fsr1
  9979  1294  00A7               	movwf	??__div_to_l_+7
  9980  1295  0823               	movf	??__div_to_l_+3,w
  9981  1296  0227               	subwf	??__div_to_l_+7,w
  9982  1297  1D03               	skipz
  9983  1298  2AA3               	goto	u6565
  9984  1299  0822               	movf	??__div_to_l_+2,w
  9985  129A  0226               	subwf	??__div_to_l_+6,w
  9986  129B  1D03               	skipz
  9987  129C  2AA3               	goto	u6565
  9988  129D  0821               	movf	??__div_to_l_+1,w
  9989  129E  0225               	subwf	??__div_to_l_+5,w
  9990  129F  1D03               	skipz
  9991  12A0  2AA3               	goto	u6565
  9992  12A1  0820               	movf	??__div_to_l_,w
  9993  12A2  0224               	subwf	??__div_to_l_+4,w
  9994  12A3                     u6565:	
  9995  12A3  1C03               	skipc
  9996  12A4  2AC0               	goto	l4083
  9997  12A5  3074               	movlw	low (__div_to_l_@f2| 0)
  9998  12A6  0086               	movwf	6
  9999  12A7  0187               	clrf	7
 10000  12A8  3F40               	moviw [0]fsr1
 10001  12A9  00A0               	movwf	??__div_to_l_
 10002  12AA  3F41               	moviw [1]fsr1
 10003  12AB  00A1               	movwf	??__div_to_l_+1
 10004  12AC  3F42               	moviw [2]fsr1
 10005  12AD  00A2               	movwf	??__div_to_l_+2
 10006  12AE  3F43               	moviw [3]fsr1
 10007  12AF  00A3               	movwf	??__div_to_l_+3
 10008  12B0  3071               	movlw	low (__div_to_l_@f1| 0)
 10009  12B1  0086               	movwf	6
 10010  12B2  0187               	clrf	7
 10011  12B3  0820               	movf	??__div_to_l_,w
 10012  12B4  0281               	subwf	1,f
 10013  12B5  3141               	addfsr 1,1
 10014  12B6  0821               	movf	??__div_to_l_+1,w
 10015  12B7  3B81               	subwfb	1,f
 10016  12B8  3141               	addfsr 1,1
 10017  12B9  0822               	movf	??__div_to_l_+2,w
 10018  12BA  3B81               	subwfb	1,f
 10019  12BB  3141               	addfsr 1,1
 10020  12BC  0823               	movf	??__div_to_l_+3,w
 10021  12BD  3B81               	subwfb	1,f
 10022  12BE  317D               	addfsr 1,-3
 10023  12BF  1428               	bsf	__div_to_l_@quot,0
 10024  12C0                     l4083:	
 10025  12C0  3071               	movlw	low (__div_to_l_@f1| 0)
 10026  12C1  0086               	movwf	6
 10027  12C2  0187               	clrf	7
 10028  12C3  3581               	lslf	1,f
 10029  12C4  3141               	addfsr 1,1
 10030  12C5  0D81               	rlf	1,f
 10031  12C6  3141               	addfsr 1,1
 10032  12C7  0D81               	rlf	1,f
 10033  12C8  3141               	addfsr 1,1
 10034  12C9  0D81               	rlf	1,f
 10035  12CA  317D               	addfsr 1,-3
 10036  12CB  3001               	movlw	1
 10037  12CC  02AC               	subwf	__div_to_l_@cntr,f
 10038  12CD  1D03               	btfss	3,2
 10039  12CE  2A78               	goto	l4075
 10040  12CF  1FAD               	btfss	__div_to_l_@exp1,7
 10041  12D0  2AED               	goto	l4095
 10042  12D1  082D               	movf	__div_to_l_@exp1,w
 10043  12D2  3A80               	xorlw	128
 10044  12D3  3E9F               	addlw	159
 10045  12D4  1803               	skipnc
 10046  12D5  2ADF               	goto	l4093
 10047  12D6  3000               	movlw	0
 10048  12D7  00F4               	movwf	?__div_to_l_+3
 10049  12D8  3000               	movlw	0
 10050  12D9  00F3               	movwf	?__div_to_l_+2
 10051  12DA  3000               	movlw	0
 10052  12DB  00F2               	movwf	?__div_to_l_+1
 10053  12DC  3000               	movlw	0
 10054  12DD  00F1               	movwf	?__div_to_l_
 10055  12DE  0008               	return
 10056  12DF                     l4093:	
 10057  12DF  3001               	movlw	1
 10058  12E0                     u6605:	
 10059  12E0  36AB               	lsrf	__div_to_l_@quot+3,f
 10060  12E1  0CAA               	rrf	__div_to_l_@quot+2,f
 10061  12E2  0CA9               	rrf	__div_to_l_@quot+1,f
 10062  12E3  0CA8               	rrf	__div_to_l_@quot,f
 10063  12E4  0B89               	decfsz	9,f
 10064  12E5  2AE0               	goto	u6605
 10065  12E6  3001               	movlw	1
 10066  12E7  00A0               	movwf	??__div_to_l_
 10067  12E8  0820               	movf	??__div_to_l_,w
 10068  12E9  07AD               	addwf	__div_to_l_@exp1,f
 10069  12EA  1903               	btfsc	3,2
 10070  12EB  2B06               	goto	l4103
 10071  12EC  2ADF               	goto	l4093
 10072  12ED                     l4095:	
 10073  12ED  3020               	movlw	32
 10074  12EE  022D               	subwf	__div_to_l_@exp1,w
 10075  12EF  1C03               	skipc
 10076  12F0  2B03               	goto	l616
 10077  12F1  3000               	movlw	0
 10078  12F2  00F4               	movwf	?__div_to_l_+3
 10079  12F3  3000               	movlw	0
 10080  12F4  00F3               	movwf	?__div_to_l_+2
 10081  12F5  3000               	movlw	0
 10082  12F6  00F2               	movwf	?__div_to_l_+1
 10083  12F7  3000               	movlw	0
 10084  12F8  00F1               	movwf	?__div_to_l_
 10085  12F9  0008               	return
 10086  12FA                     l4101:	
 10087  12FA  3001               	movlw	1
 10088  12FB                     u6635:	
 10089  12FB  35A8               	lslf	__div_to_l_@quot,f
 10090  12FC  0DA9               	rlf	__div_to_l_@quot+1,f
 10091  12FD  0DAA               	rlf	__div_to_l_@quot+2,f
 10092  12FE  0DAB               	rlf	__div_to_l_@quot+3,f
 10093  12FF  0B89               	decfsz	9,f
 10094  1300  2AFB               	goto	u6635
 10095  1301  3001               	movlw	1
 10096  1302  02AD               	subwf	__div_to_l_@exp1,f
 10097  1303                     l616:	
 10098  1303  082D               	movf	__div_to_l_@exp1,w
 10099  1304  1D03               	btfss	3,2
 10100  1305  2AFA               	goto	l4101
 10101  1306                     l4103:	
 10102  1306  082B               	movf	__div_to_l_@quot+3,w
 10103  1307  00F4               	movwf	?__div_to_l_+3
 10104  1308  082A               	movf	__div_to_l_@quot+2,w
 10105  1309  00F3               	movwf	?__div_to_l_+2
 10106  130A  0829               	movf	__div_to_l_@quot+1,w
 10107  130B  00F2               	movwf	?__div_to_l_+1
 10108  130C  0828               	movf	__div_to_l_@quot,w
 10109  130D  00F1               	movwf	?__div_to_l_
 10110  130E  0008               	return
 10111  130F                     __end_of__div_to_l_:	
 10112                           
 10113                           	psect	text13
 10114  1000                     __ptext13:	
 10115 ;; *************** function ___lltoft *****************
 10116 ;; Defined at:
 10117 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 10118 ;; Parameters:    Size  Location     Type
 10119 ;;  c               4    0[BANK0 ] unsigned long 
 10120 ;; Auto vars:     Size  Location     Type
 10121 ;;  exp             1   10[COMMON] unsigned char 
 10122 ;; Return value:  Size  Location     Type
 10123 ;;                  3    0[BANK0 ] float 
 10124 ;; Registers used:
 10125 ;;		wreg, status,2, status,0, pclath, cstack
 10126 ;; Tracked objects:
 10127 ;;		On entry : 0/0
 10128 ;;		On exit  : 0/0
 10129 ;;		Unchanged: 0/0
 10130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10131 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10134 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10135 ;;Total ram usage:        6 bytes
 10136 ;; Hardware stack levels used:    1
 10137 ;; Hardware stack levels required when called:    2
 10138 ;; This function calls:
 10139 ;;		___ftpack
 10140 ;; This function is called by:
 10141 ;;		_sprintf
 10142 ;; This function uses a non-reentrant model
 10143 ;;
 10144                           
 10145                           
 10146                           ;psect for function ___lltoft
 10147  1000                     ___lltoft:	
 10148                           
 10149                           ;incstack = 0
 10150                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
 10151  1000  308E               	movlw	142
 10152  1001  00F9               	movwf	??___lltoft
 10153  1002  0879               	movf	??___lltoft,w
 10154  1003  00FA               	movwf	___lltoft@exp
 10155  1004                     l4233:	
 10156  1004  30FF               	movlw	255
 10157  1005  0020               	movlb	0	; select bank0
 10158  1006  0523               	andwf	___lltoft@c+3,w
 10159  1007  1903               	btfsc	3,2
 10160  1008  2816               	goto	l4235
 10161  1009  3001               	movlw	1
 10162  100A                     u6935:	
 10163  100A  0020               	movlb	0	; select bank0
 10164  100B  36A3               	lsrf	___lltoft@c+3,f
 10165  100C  0CA2               	rrf	___lltoft@c+2,f
 10166  100D  0CA1               	rrf	___lltoft@c+1,f
 10167  100E  0CA0               	rrf	___lltoft@c,f
 10168  100F  0B89               	decfsz	9,f
 10169  1010  280A               	goto	u6935
 10170  1011  3001               	movlw	1
 10171  1012  00F9               	movwf	??___lltoft
 10172  1013  0879               	movf	??___lltoft,w
 10173  1014  07FA               	addwf	___lltoft@exp,f
 10174  1015  2804               	goto	l4233
 10175  1016                     l4235:	
 10176  1016  0820               	movf	___lltoft@c,w
 10177  1017  00F1               	movwf	___ftpack@arg
 10178  1018  0821               	movf	___lltoft@c+1,w
 10179  1019  00F2               	movwf	___ftpack@arg+1
 10180  101A  0822               	movf	___lltoft@c+2,w
 10181  101B  00F3               	movwf	___ftpack@arg+2
 10182  101C  087A               	movf	___lltoft@exp,w
 10183  101D  00F9               	movwf	??___lltoft
 10184  101E  0879               	movf	??___lltoft,w
 10185  101F  00F4               	movwf	___ftpack@exp
 10186  1020  01F5               	clrf	___ftpack@sign
 10187  1021  319D  2516         	fcall	___ftpack
 10188  1023  0871               	movf	?___ftpack,w
 10189  1024  0020               	movlb	0	; select bank0
 10190  1025  00A0               	movwf	?___lltoft
 10191  1026  0872               	movf	?___ftpack+1,w
 10192  1027  00A1               	movwf	?___lltoft+1
 10193  1028  0873               	movf	?___ftpack+2,w
 10194  1029  00A2               	movwf	?___lltoft+2
 10195  102A  0008               	return
 10196  102B                     __end_of___lltoft:	
 10197                           
 10198                           	psect	text14
 10199  1B87                     __ptext14:	
 10200 ;; *************** function ___llmod *****************
 10201 ;; Defined at:
 10202 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;  divisor         4    5[BANK0 ] unsigned long 
 10205 ;;  dividend        4    9[BANK0 ] unsigned long 
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;  counter         1   11[COMMON] unsigned char 
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  4    5[BANK0 ] unsigned long 
 10210 ;; Registers used:
 10211 ;;		wreg, status,2, status,0
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10217 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10220 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10221 ;;Total ram usage:       10 bytes
 10222 ;; Hardware stack levels used:    1
 10223 ;; Hardware stack levels required when called:    1
 10224 ;; This function calls:
 10225 ;;		Nothing
 10226 ;; This function is called by:
 10227 ;;		_sprintf
 10228 ;; This function uses a non-reentrant model
 10229 ;;
 10230                           
 10231                           
 10232                           ;psect for function ___llmod
 10233  1B87                     ___llmod:	
 10234                           
 10235                           ;incstack = 0
 10236                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 10237  1B87  0020               	movlb	0	; select bank0
 10238  1B88  0828               	movf	___llmod@divisor+3,w
 10239  1B89  0427               	iorwf	___llmod@divisor+2,w
 10240  1B8A  0426               	iorwf	___llmod@divisor+1,w
 10241  1B8B  0425               	iorwf	___llmod@divisor,w
 10242  1B8C  1903               	skipnz
 10243  1B8D  2BC1               	goto	l4225
 10244  1B8E  01FB               	clrf	___llmod@counter
 10245  1B8F  0AFB               	incf	___llmod@counter,f
 10246  1B90                     l4215:	
 10247  1B90  1BA8               	btfsc	___llmod@divisor+3,7
 10248  1B91  2B9E               	goto	l4217
 10249  1B92  3001               	movlw	1
 10250  1B93                     u6885:	
 10251  1B93  35A5               	lslf	___llmod@divisor,f
 10252  1B94  0DA6               	rlf	___llmod@divisor+1,f
 10253  1B95  0DA7               	rlf	___llmod@divisor+2,f
 10254  1B96  0DA8               	rlf	___llmod@divisor+3,f
 10255  1B97  0B89               	decfsz	9,f
 10256  1B98  2B93               	goto	u6885
 10257  1B99  3001               	movlw	1
 10258  1B9A  00FA               	movwf	??___llmod
 10259  1B9B  087A               	movf	??___llmod,w
 10260  1B9C  07FB               	addwf	___llmod@counter,f
 10261  1B9D  2B90               	goto	l4215
 10262  1B9E                     l4217:	
 10263  1B9E  0828               	movf	___llmod@divisor+3,w
 10264  1B9F  022C               	subwf	___llmod@dividend+3,w
 10265  1BA0  1D03               	skipz
 10266  1BA1  2BAC               	goto	u6905
 10267  1BA2  0827               	movf	___llmod@divisor+2,w
 10268  1BA3  022B               	subwf	___llmod@dividend+2,w
 10269  1BA4  1D03               	skipz
 10270  1BA5  2BAC               	goto	u6905
 10271  1BA6  0826               	movf	___llmod@divisor+1,w
 10272  1BA7  022A               	subwf	___llmod@dividend+1,w
 10273  1BA8  1D03               	skipz
 10274  1BA9  2BAC               	goto	u6905
 10275  1BAA  0825               	movf	___llmod@divisor,w
 10276  1BAB  0229               	subwf	___llmod@dividend,w
 10277  1BAC                     u6905:	
 10278  1BAC  1C03               	skipc
 10279  1BAD  2BB6               	goto	l4221
 10280  1BAE  0825               	movf	___llmod@divisor,w
 10281  1BAF  02A9               	subwf	___llmod@dividend,f
 10282  1BB0  0826               	movf	___llmod@divisor+1,w
 10283  1BB1  3BAA               	subwfb	___llmod@dividend+1,f
 10284  1BB2  0827               	movf	___llmod@divisor+2,w
 10285  1BB3  3BAB               	subwfb	___llmod@dividend+2,f
 10286  1BB4  0828               	movf	___llmod@divisor+3,w
 10287  1BB5  3BAC               	subwfb	___llmod@dividend+3,f
 10288  1BB6                     l4221:	
 10289  1BB6  3001               	movlw	1
 10290  1BB7                     u6915:	
 10291  1BB7  36A8               	lsrf	___llmod@divisor+3,f
 10292  1BB8  0CA7               	rrf	___llmod@divisor+2,f
 10293  1BB9  0CA6               	rrf	___llmod@divisor+1,f
 10294  1BBA  0CA5               	rrf	___llmod@divisor,f
 10295  1BBB  0B89               	decfsz	9,f
 10296  1BBC  2BB7               	goto	u6915
 10297  1BBD  3001               	movlw	1
 10298  1BBE  02FB               	subwf	___llmod@counter,f
 10299  1BBF  1D03               	btfss	3,2
 10300  1BC0  2B9E               	goto	l4217
 10301  1BC1                     l4225:	
 10302  1BC1  082C               	movf	___llmod@dividend+3,w
 10303  1BC2  00A8               	movwf	?___llmod+3
 10304  1BC3  082B               	movf	___llmod@dividend+2,w
 10305  1BC4  00A7               	movwf	?___llmod+2
 10306  1BC5  082A               	movf	___llmod@dividend+1,w
 10307  1BC6  00A6               	movwf	?___llmod+1
 10308  1BC7  0829               	movf	___llmod@dividend,w
 10309  1BC8  00A5               	movwf	?___llmod
 10310  1BC9  0008               	return
 10311  1BCA                     __end_of___llmod:	
 10312                           
 10313                           	psect	text15
 10314  1C61                     __ptext15:	
 10315 ;; *************** function ___lldiv *****************
 10316 ;; Defined at:
 10317 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 10318 ;; Parameters:    Size  Location     Type
 10319 ;;  divisor         4    1[COMMON] unsigned long 
 10320 ;;  dividend        4    5[COMMON] unsigned long 
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;  quotient        4    0[BANK0 ] unsigned long 
 10323 ;;  counter         1    4[BANK0 ] unsigned char 
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  4    1[COMMON] unsigned long 
 10326 ;; Registers used:
 10327 ;;		wreg, status,2, status,0
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10333 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10334 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10336 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10337 ;;Total ram usage:       14 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; Hardware stack levels required when called:    1
 10340 ;; This function calls:
 10341 ;;		Nothing
 10342 ;; This function is called by:
 10343 ;;		_sprintf
 10344 ;; This function uses a non-reentrant model
 10345 ;;
 10346                           
 10347                           
 10348                           ;psect for function ___lldiv
 10349  1C61                     ___lldiv:	
 10350                           
 10351                           ;incstack = 0
 10352                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10353  1C61  3000               	movlw	0
 10354  1C62  0020               	movlb	0	; select bank0
 10355  1C63  00A3               	movwf	___lldiv@quotient+3
 10356  1C64  3000               	movlw	0
 10357  1C65  00A2               	movwf	___lldiv@quotient+2
 10358  1C66  3000               	movlw	0
 10359  1C67  00A1               	movwf	___lldiv@quotient+1
 10360  1C68  3000               	movlw	0
 10361  1C69  00A0               	movwf	___lldiv@quotient
 10362  1C6A  0874               	movf	___lldiv@divisor+3,w
 10363  1C6B  0473               	iorwf	___lldiv@divisor+2,w
 10364  1C6C  0472               	iorwf	___lldiv@divisor+1,w
 10365  1C6D  0471               	iorwf	___lldiv@divisor,w
 10366  1C6E  1903               	skipnz
 10367  1C6F  2CAB               	goto	l4205
 10368  1C70  01A4               	clrf	___lldiv@counter
 10369  1C71  0AA4               	incf	___lldiv@counter,f
 10370  1C72                     l4191:	
 10371  1C72  1BF4               	btfsc	___lldiv@divisor+3,7
 10372  1C73  2C80               	goto	l4193
 10373  1C74  3001               	movlw	1
 10374  1C75                     u6815:	
 10375  1C75  35F1               	lslf	___lldiv@divisor,f
 10376  1C76  0DF2               	rlf	___lldiv@divisor+1,f
 10377  1C77  0DF3               	rlf	___lldiv@divisor+2,f
 10378  1C78  0DF4               	rlf	___lldiv@divisor+3,f
 10379  1C79  0B89               	decfsz	9,f
 10380  1C7A  2C75               	goto	u6815
 10381  1C7B  3001               	movlw	1
 10382  1C7C  00F9               	movwf	??___lldiv
 10383  1C7D  0879               	movf	??___lldiv,w
 10384  1C7E  07A4               	addwf	___lldiv@counter,f
 10385  1C7F  2C72               	goto	l4191
 10386  1C80                     l4193:	
 10387  1C80  3001               	movlw	1
 10388  1C81                     u6835:	
 10389  1C81  35A0               	lslf	___lldiv@quotient,f
 10390  1C82  0DA1               	rlf	___lldiv@quotient+1,f
 10391  1C83  0DA2               	rlf	___lldiv@quotient+2,f
 10392  1C84  0DA3               	rlf	___lldiv@quotient+3,f
 10393  1C85  0B89               	decfsz	9,f
 10394  1C86  2C81               	goto	u6835
 10395  1C87  0874               	movf	___lldiv@divisor+3,w
 10396  1C88  0278               	subwf	___lldiv@dividend+3,w
 10397  1C89  1D03               	skipz
 10398  1C8A  2C95               	goto	u6845
 10399  1C8B  0873               	movf	___lldiv@divisor+2,w
 10400  1C8C  0277               	subwf	___lldiv@dividend+2,w
 10401  1C8D  1D03               	skipz
 10402  1C8E  2C95               	goto	u6845
 10403  1C8F  0872               	movf	___lldiv@divisor+1,w
 10404  1C90  0276               	subwf	___lldiv@dividend+1,w
 10405  1C91  1D03               	skipz
 10406  1C92  2C95               	goto	u6845
 10407  1C93  0871               	movf	___lldiv@divisor,w
 10408  1C94  0275               	subwf	___lldiv@dividend,w
 10409  1C95                     u6845:	
 10410  1C95  1C03               	skipc
 10411  1C96  2CA0               	goto	l4201
 10412  1C97  0871               	movf	___lldiv@divisor,w
 10413  1C98  02F5               	subwf	___lldiv@dividend,f
 10414  1C99  0872               	movf	___lldiv@divisor+1,w
 10415  1C9A  3BF6               	subwfb	___lldiv@dividend+1,f
 10416  1C9B  0873               	movf	___lldiv@divisor+2,w
 10417  1C9C  3BF7               	subwfb	___lldiv@dividend+2,f
 10418  1C9D  0874               	movf	___lldiv@divisor+3,w
 10419  1C9E  3BF8               	subwfb	___lldiv@dividend+3,f
 10420  1C9F  1420               	bsf	___lldiv@quotient,0
 10421  1CA0                     l4201:	
 10422  1CA0  3001               	movlw	1
 10423  1CA1                     u6855:	
 10424  1CA1  36F4               	lsrf	___lldiv@divisor+3,f
 10425  1CA2  0CF3               	rrf	___lldiv@divisor+2,f
 10426  1CA3  0CF2               	rrf	___lldiv@divisor+1,f
 10427  1CA4  0CF1               	rrf	___lldiv@divisor,f
 10428  1CA5  0B89               	decfsz	9,f
 10429  1CA6  2CA1               	goto	u6855
 10430  1CA7  3001               	movlw	1
 10431  1CA8  02A4               	subwf	___lldiv@counter,f
 10432  1CA9  1D03               	btfss	3,2
 10433  1CAA  2C80               	goto	l4193
 10434  1CAB                     l4205:	
 10435  1CAB  0823               	movf	___lldiv@quotient+3,w
 10436  1CAC  00F4               	movwf	?___lldiv+3
 10437  1CAD  0822               	movf	___lldiv@quotient+2,w
 10438  1CAE  00F3               	movwf	?___lldiv+2
 10439  1CAF  0821               	movf	___lldiv@quotient+1,w
 10440  1CB0  00F2               	movwf	?___lldiv+1
 10441  1CB1  0820               	movf	___lldiv@quotient,w
 10442  1CB2  00F1               	movwf	?___lldiv
 10443  1CB3  0008               	return
 10444  1CB4                     __end_of___lldiv:	
 10445                           
 10446                           	psect	text16
 10447  1D7A                     __ptext16:	
 10448 ;; *************** function ___fttol *****************
 10449 ;; Defined at:
 10450 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;  f1              3   36[BANK0 ] float 
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;  lval            4   45[BANK0 ] unsigned long 
 10455 ;;  exp1            1   49[BANK0 ] unsigned char 
 10456 ;;  sign1           1   44[BANK0 ] unsigned char 
 10457 ;; Return value:  Size  Location     Type
 10458 ;;                  4   36[BANK0 ] long 
 10459 ;; Registers used:
 10460 ;;		wreg, status,2, status,0
 10461 ;; Tracked objects:
 10462 ;;		On entry : 0/0
 10463 ;;		On exit  : 0/0
 10464 ;;		Unchanged: 0/0
 10465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10466 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10467 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10468 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10469 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10470 ;;Total ram usage:       14 bytes
 10471 ;; Hardware stack levels used:    1
 10472 ;; Hardware stack levels required when called:    1
 10473 ;; This function calls:
 10474 ;;		Nothing
 10475 ;; This function is called by:
 10476 ;;		_sprintf
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           
 10481                           ;psect for function ___fttol
 10482  1D7A                     ___fttol:	
 10483                           
 10484                           ;incstack = 0
 10485                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10486  1D7A  0020               	movlb	0	; select bank0
 10487  1D7B  0844               	movf	___fttol@f1,w
 10488  1D7C  00C8               	movwf	??___fttol
 10489  1D7D  0845               	movf	___fttol@f1+1,w
 10490  1D7E  00C9               	movwf	??___fttol+1
 10491  1D7F  0846               	movf	___fttol@f1+2,w
 10492  1D80  00CA               	movwf	??___fttol+2
 10493  1D81  1003               	clrc
 10494  1D82  0D49               	rlf	??___fttol+1,w
 10495  1D83  0D4A               	rlf	??___fttol+2,w
 10496  1D84  00CB               	movwf	??___fttol+3
 10497  1D85  084B               	movf	??___fttol+3,w
 10498  1D86  00D1               	movwf	___fttol@exp1
 10499  1D87  0851               	movf	___fttol@exp1,w
 10500  1D88  1D03               	btfss	3,2
 10501  1D89  2D93               	goto	l4149
 10502  1D8A  3000               	movlw	0
 10503  1D8B  00C7               	movwf	?___fttol+3
 10504  1D8C  3000               	movlw	0
 10505  1D8D  00C6               	movwf	?___fttol+2
 10506  1D8E  3000               	movlw	0
 10507  1D8F  00C5               	movwf	?___fttol+1
 10508  1D90  3000               	movlw	0
 10509  1D91  00C4               	movwf	?___fttol
 10510  1D92  0008               	return
 10511  1D93                     l4149:	
 10512  1D93  0844               	movf	___fttol@f1,w
 10513  1D94  00C8               	movwf	??___fttol
 10514  1D95  0845               	movf	___fttol@f1+1,w
 10515  1D96  00C9               	movwf	??___fttol+1
 10516  1D97  0846               	movf	___fttol@f1+2,w
 10517  1D98  00CA               	movwf	??___fttol+2
 10518  1D99  3017               	movlw	23
 10519  1D9A                     u6715:	
 10520  1D9A  36CA               	lsrf	??___fttol+2,f
 10521  1D9B  0CC9               	rrf	??___fttol+1,f
 10522  1D9C  0CC8               	rrf	??___fttol,f
 10523  1D9D  0B89               	decfsz	9,f
 10524  1D9E  2D9A               	goto	u6715
 10525  1D9F  0848               	movf	??___fttol,w
 10526  1DA0  00CB               	movwf	??___fttol+3
 10527  1DA1  084B               	movf	??___fttol+3,w
 10528  1DA2  00CC               	movwf	___fttol@sign1
 10529  1DA3  17C5               	bsf	___fttol@f1+1,7
 10530  1DA4  30FF               	movlw	255
 10531  1DA5  05C4               	andwf	___fttol@f1,f
 10532  1DA6  30FF               	movlw	255
 10533  1DA7  05C5               	andwf	___fttol@f1+1,f
 10534  1DA8  3000               	movlw	0
 10535  1DA9  05C6               	andwf	___fttol@f1+2,f
 10536  1DAA  0844               	movf	___fttol@f1,w
 10537  1DAB  00CD               	movwf	___fttol@lval
 10538  1DAC  0845               	movf	___fttol@f1+1,w
 10539  1DAD  00CE               	movwf	___fttol@lval+1
 10540  1DAE  0846               	movf	___fttol@f1+2,w
 10541  1DAF  00CF               	movwf	___fttol@lval+2
 10542  1DB0  01D0               	clrf	___fttol@lval+3
 10543  1DB1  308E               	movlw	142
 10544  1DB2  02D1               	subwf	___fttol@exp1,f
 10545  1DB3  1FD1               	btfss	___fttol@exp1,7
 10546  1DB4  2DD1               	goto	l4169
 10547  1DB5  0851               	movf	___fttol@exp1,w
 10548  1DB6  3A80               	xorlw	128
 10549  1DB7  3E8F               	addlw	143
 10550  1DB8  1803               	skipnc
 10551  1DB9  2DC3               	goto	l4167
 10552  1DBA  3000               	movlw	0
 10553  1DBB  00C7               	movwf	?___fttol+3
 10554  1DBC  3000               	movlw	0
 10555  1DBD  00C6               	movwf	?___fttol+2
 10556  1DBE  3000               	movlw	0
 10557  1DBF  00C5               	movwf	?___fttol+1
 10558  1DC0  3000               	movlw	0
 10559  1DC1  00C4               	movwf	?___fttol
 10560  1DC2  0008               	return
 10561  1DC3                     l4167:	
 10562  1DC3  3001               	movlw	1
 10563  1DC4                     u6745:	
 10564  1DC4  36D0               	lsrf	___fttol@lval+3,f
 10565  1DC5  0CCF               	rrf	___fttol@lval+2,f
 10566  1DC6  0CCE               	rrf	___fttol@lval+1,f
 10567  1DC7  0CCD               	rrf	___fttol@lval,f
 10568  1DC8  0B89               	decfsz	9,f
 10569  1DC9  2DC4               	goto	u6745
 10570  1DCA  3001               	movlw	1
 10571  1DCB  00C8               	movwf	??___fttol
 10572  1DCC  0848               	movf	??___fttol,w
 10573  1DCD  07D1               	addwf	___fttol@exp1,f
 10574  1DCE  1903               	btfsc	3,2
 10575  1DCF  2DEA               	goto	l4177
 10576  1DD0  2DC3               	goto	l4167
 10577  1DD1                     l4169:	
 10578  1DD1  3018               	movlw	24
 10579  1DD2  0251               	subwf	___fttol@exp1,w
 10580  1DD3  1C03               	skipc
 10581  1DD4  2DE7               	goto	l736
 10582  1DD5  3000               	movlw	0
 10583  1DD6  00C7               	movwf	?___fttol+3
 10584  1DD7  3000               	movlw	0
 10585  1DD8  00C6               	movwf	?___fttol+2
 10586  1DD9  3000               	movlw	0
 10587  1DDA  00C5               	movwf	?___fttol+1
 10588  1DDB  3000               	movlw	0
 10589  1DDC  00C4               	movwf	?___fttol
 10590  1DDD  0008               	return
 10591  1DDE                     l4175:	
 10592  1DDE  3001               	movlw	1
 10593  1DDF                     u6775:	
 10594  1DDF  35CD               	lslf	___fttol@lval,f
 10595  1DE0  0DCE               	rlf	___fttol@lval+1,f
 10596  1DE1  0DCF               	rlf	___fttol@lval+2,f
 10597  1DE2  0DD0               	rlf	___fttol@lval+3,f
 10598  1DE3  0B89               	decfsz	9,f
 10599  1DE4  2DDF               	goto	u6775
 10600  1DE5  3001               	movlw	1
 10601  1DE6  02D1               	subwf	___fttol@exp1,f
 10602  1DE7                     l736:	
 10603  1DE7  0851               	movf	___fttol@exp1,w
 10604  1DE8  1D03               	btfss	3,2
 10605  1DE9  2DDE               	goto	l4175
 10606  1DEA                     l4177:	
 10607  1DEA  084C               	movf	___fttol@sign1,w
 10608  1DEB  1903               	btfsc	3,2
 10609  1DEC  2DF8               	goto	l4181
 10610  1DED  09CD               	comf	___fttol@lval,f
 10611  1DEE  09CE               	comf	___fttol@lval+1,f
 10612  1DEF  09CF               	comf	___fttol@lval+2,f
 10613  1DF0  09D0               	comf	___fttol@lval+3,f
 10614  1DF1  0ACD               	incf	___fttol@lval,f
 10615  1DF2  1903               	skipnz
 10616  1DF3  0ACE               	incf	___fttol@lval+1,f
 10617  1DF4  1903               	skipnz
 10618  1DF5  0ACF               	incf	___fttol@lval+2,f
 10619  1DF6  1903               	skipnz
 10620  1DF7  0AD0               	incf	___fttol@lval+3,f
 10621  1DF8                     l4181:	
 10622  1DF8  0850               	movf	___fttol@lval+3,w
 10623  1DF9  00C7               	movwf	?___fttol+3
 10624  1DFA  084F               	movf	___fttol@lval+2,w
 10625  1DFB  00C6               	movwf	?___fttol+2
 10626  1DFC  084E               	movf	___fttol@lval+1,w
 10627  1DFD  00C5               	movwf	?___fttol+1
 10628  1DFE  084D               	movf	___fttol@lval,w
 10629  1DFF  00C4               	movwf	?___fttol
 10630  1E00  0008               	return
 10631  1E01                     __end_of___fttol:	
 10632                           
 10633                           	psect	text17
 10634  1AB3                     __ptext17:	
 10635 ;; *************** function ___ftsub *****************
 10636 ;; Defined at:
 10637 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 10638 ;; Parameters:    Size  Location     Type
 10639 ;;  f2              3   54[BANK0 ] float 
 10640 ;;  f1              3   57[BANK0 ] float 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  3   54[BANK0 ] float 
 10645 ;; Registers used:
 10646 ;;		wreg, status,2, status,0, pclath, cstack
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10652 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10655 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10656 ;;Total ram usage:        6 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    3
 10659 ;; This function calls:
 10660 ;;		___ftadd
 10661 ;; This function is called by:
 10662 ;;		_sprintf
 10663 ;; This function uses a non-reentrant model
 10664 ;;
 10665                           
 10666                           
 10667                           ;psect for function ___ftsub
 10668  1AB3                     ___ftsub:	
 10669                           
 10670                           ;incstack = 0
 10671                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
 10672  1AB3  0020               	movlb	0	; select bank0
 10673  1AB4  0858               	movf	___ftsub@f2+2,w
 10674  1AB5  0457               	iorwf	___ftsub@f2+1,w
 10675  1AB6  0456               	iorwf	___ftsub@f2,w
 10676  1AB7  1903               	skipnz
 10677  1AB8  2ABB               	goto	l4139
 10678  1AB9  3080               	movlw	128
 10679  1ABA  06D8               	xorwf	___ftsub@f2+2,f
 10680  1ABB                     l4139:	
 10681  1ABB  0859               	movf	___ftsub@f1,w
 10682  1ABC  00C9               	movwf	___ftadd@f1
 10683  1ABD  085A               	movf	___ftsub@f1+1,w
 10684  1ABE  00CA               	movwf	___ftadd@f1+1
 10685  1ABF  085B               	movf	___ftsub@f1+2,w
 10686  1AC0  00CB               	movwf	___ftadd@f1+2
 10687  1AC1  0856               	movf	___ftsub@f2,w
 10688  1AC2  00CC               	movwf	___ftadd@f2
 10689  1AC3  0857               	movf	___ftsub@f2+1,w
 10690  1AC4  00CD               	movwf	___ftadd@f2+1
 10691  1AC5  0858               	movf	___ftsub@f2+2,w
 10692  1AC6  00CE               	movwf	___ftadd@f2+2
 10693  1AC7  3190  20FC         	fcall	___ftadd
 10694  1AC9  0020               	movlb	0	; select bank0
 10695  1ACA  0849               	movf	?___ftadd,w
 10696  1ACB  00D6               	movwf	?___ftsub
 10697  1ACC  084A               	movf	?___ftadd+1,w
 10698  1ACD  00D7               	movwf	?___ftsub+1
 10699  1ACE  084B               	movf	?___ftadd+2,w
 10700  1ACF  00D8               	movwf	?___ftsub+2
 10701  1AD0  0008               	return
 10702  1AD1                     __end_of___ftsub:	
 10703                           
 10704                           	psect	text18
 10705  10FC                     __ptext18:	
 10706 ;; *************** function ___ftadd *****************
 10707 ;; Defined at:
 10708 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 10709 ;; Parameters:    Size  Location     Type
 10710 ;;  f1              3   41[BANK0 ] float 
 10711 ;;  f2              3   44[BANK0 ] float 
 10712 ;; Auto vars:     Size  Location     Type
 10713 ;;  exp1            1   53[BANK0 ] unsigned char 
 10714 ;;  exp2            1   52[BANK0 ] unsigned char 
 10715 ;;  sign            1   51[BANK0 ] unsigned char 
 10716 ;; Return value:  Size  Location     Type
 10717 ;;                  3   41[BANK0 ] float 
 10718 ;; Registers used:
 10719 ;;		wreg, status,2, status,0, pclath, cstack
 10720 ;; Tracked objects:
 10721 ;;		On entry : 0/0
 10722 ;;		On exit  : 0/0
 10723 ;;		Unchanged: 0/0
 10724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10725 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10726 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10727 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10728 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10729 ;;Total ram usage:       13 bytes
 10730 ;; Hardware stack levels used:    1
 10731 ;; Hardware stack levels required when called:    2
 10732 ;; This function calls:
 10733 ;;		___ftpack
 10734 ;; This function is called by:
 10735 ;;		_main
 10736 ;;		_sprintf
 10737 ;;		___ftsub
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           
 10742                           ;psect for function ___ftadd
 10743  10FC                     ___ftadd:	
 10744                           
 10745                           ;incstack = 0
 10746                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 10747  10FC  0020               	movlb	0	; select bank0
 10748  10FD  0849               	movf	___ftadd@f1,w
 10749  10FE  00CF               	movwf	??___ftadd
 10750  10FF  084A               	movf	___ftadd@f1+1,w
 10751  1100  00D0               	movwf	??___ftadd+1
 10752  1101  084B               	movf	___ftadd@f1+2,w
 10753  1102  00D1               	movwf	??___ftadd+2
 10754  1103  1003               	clrc
 10755  1104  0D50               	rlf	??___ftadd+1,w
 10756  1105  0D51               	rlf	??___ftadd+2,w
 10757  1106  00D2               	movwf	??___ftadd+3
 10758  1107  0852               	movf	??___ftadd+3,w
 10759  1108  00D5               	movwf	___ftadd@exp1
 10760  1109  084C               	movf	___ftadd@f2,w
 10761  110A  00CF               	movwf	??___ftadd
 10762  110B  084D               	movf	___ftadd@f2+1,w
 10763  110C  00D0               	movwf	??___ftadd+1
 10764  110D  084E               	movf	___ftadd@f2+2,w
 10765  110E  00D1               	movwf	??___ftadd+2
 10766  110F  1003               	clrc
 10767  1110  0D50               	rlf	??___ftadd+1,w
 10768  1111  0D51               	rlf	??___ftadd+2,w
 10769  1112  00D2               	movwf	??___ftadd+3
 10770  1113  0852               	movf	??___ftadd+3,w
 10771  1114  00D4               	movwf	___ftadd@exp2
 10772  1115  0855               	movf	___ftadd@exp1,w
 10773  1116  1903               	btfsc	3,2
 10774  1117  2924               	goto	l3707
 10775  1118  0854               	movf	___ftadd@exp2,w
 10776  1119  0255               	subwf	___ftadd@exp1,w
 10777  111A  1803               	skipnc
 10778  111B  292B               	goto	l3711
 10779  111C  0355               	decf	___ftadd@exp1,w
 10780  111D  3AFF               	xorlw	255
 10781  111E  0754               	addwf	___ftadd@exp2,w
 10782  111F  00CF               	movwf	??___ftadd
 10783  1120  3019               	movlw	25
 10784  1121  024F               	subwf	??___ftadd,w
 10785  1122  1C03               	skipc
 10786  1123  292B               	goto	l3711
 10787  1124                     l3707:	
 10788  1124  084C               	movf	___ftadd@f2,w
 10789  1125  00C9               	movwf	?___ftadd
 10790  1126  084D               	movf	___ftadd@f2+1,w
 10791  1127  00CA               	movwf	?___ftadd+1
 10792  1128  084E               	movf	___ftadd@f2+2,w
 10793  1129  00CB               	movwf	?___ftadd+2
 10794  112A  0008               	return
 10795  112B                     l3711:	
 10796  112B  0854               	movf	___ftadd@exp2,w
 10797  112C  1903               	btfsc	3,2
 10798  112D  0008               	return
 10799  112E  0855               	movf	___ftadd@exp1,w
 10800  112F  0254               	subwf	___ftadd@exp2,w
 10801  1130  1803               	skipnc
 10802  1131  293A               	goto	l3717
 10803  1132  0354               	decf	___ftadd@exp2,w
 10804  1133  3AFF               	xorlw	255
 10805  1134  0755               	addwf	___ftadd@exp1,w
 10806  1135  00CF               	movwf	??___ftadd
 10807  1136  3019               	movlw	25
 10808  1137  024F               	subwf	??___ftadd,w
 10809  1138  1803               	btfsc	3,0
 10810  1139  0008               	return
 10811  113A                     l3717:	
 10812  113A  3006               	movlw	6
 10813  113B  00CF               	movwf	??___ftadd
 10814  113C  084F               	movf	??___ftadd,w
 10815  113D  00D3               	movwf	___ftadd@sign
 10816  113E  1BCB               	btfsc	___ftadd@f1+2,7
 10817  113F  17D3               	bsf	___ftadd@sign,7
 10818  1140  1BCE               	btfsc	___ftadd@f2+2,7
 10819  1141  1753               	bsf	___ftadd@sign,6
 10820  1142  17CA               	bsf	___ftadd@f1+1,7
 10821  1143  30FF               	movlw	255
 10822  1144  05C9               	andwf	___ftadd@f1,f
 10823  1145  30FF               	movlw	255
 10824  1146  05CA               	andwf	___ftadd@f1+1,f
 10825  1147  3000               	movlw	0
 10826  1148  05CB               	andwf	___ftadd@f1+2,f
 10827  1149  17CD               	bsf	___ftadd@f2+1,7
 10828  114A  30FF               	movlw	255
 10829  114B  05CC               	andwf	___ftadd@f2,f
 10830  114C  30FF               	movlw	255
 10831  114D  05CD               	andwf	___ftadd@f2+1,f
 10832  114E  3000               	movlw	0
 10833  114F  05CE               	andwf	___ftadd@f2+2,f
 10834  1150  0854               	movf	___ftadd@exp2,w
 10835  1151  0255               	subwf	___ftadd@exp1,w
 10836  1152  1803               	skipnc
 10837  1153  2976               	goto	l3739
 10838  1154                     l3729:	
 10839  1154  3001               	movlw	1
 10840  1155                     u5735:	
 10841  1155  35CC               	lslf	___ftadd@f2,f
 10842  1156  0DCD               	rlf	___ftadd@f2+1,f
 10843  1157  0DCE               	rlf	___ftadd@f2+2,f
 10844  1158  0B89               	decfsz	9,f
 10845  1159  2955               	goto	u5735
 10846  115A  3001               	movlw	1
 10847  115B  02D4               	subwf	___ftadd@exp2,f
 10848  115C  0854               	movf	___ftadd@exp2,w
 10849  115D  0655               	xorwf	___ftadd@exp1,w
 10850  115E  1903               	skipnz
 10851  115F  2971               	goto	l3737
 10852  1160  3001               	movlw	1
 10853  1161  02D3               	subwf	___ftadd@sign,f
 10854  1162  0853               	movf	___ftadd@sign,w
 10855  1163  3907               	andlw	7
 10856  1164  1903               	btfsc	3,2
 10857  1165  2971               	goto	l3737
 10858  1166  2954               	goto	l3729
 10859  1167                     l3735:	
 10860  1167  3001               	movlw	1
 10861  1168                     u5765:	
 10862  1168  36CB               	lsrf	___ftadd@f1+2,f
 10863  1169  0CCA               	rrf	___ftadd@f1+1,f
 10864  116A  0CC9               	rrf	___ftadd@f1,f
 10865  116B  0B89               	decfsz	9,f
 10866  116C  2968               	goto	u5765
 10867  116D  3001               	movlw	1
 10868  116E  00CF               	movwf	??___ftadd
 10869  116F  084F               	movf	??___ftadd,w
 10870  1170  07D5               	addwf	___ftadd@exp1,f
 10871  1171                     l3737:	
 10872  1171  0855               	movf	___ftadd@exp1,w
 10873  1172  0654               	xorwf	___ftadd@exp2,w
 10874  1173  1903               	btfsc	3,2
 10875  1174  299B               	goto	l659
 10876  1175  2967               	goto	l3735
 10877  1176                     l3739:	
 10878  1176  0855               	movf	___ftadd@exp1,w
 10879  1177  0254               	subwf	___ftadd@exp2,w
 10880  1178  1803               	skipnc
 10881  1179  299B               	goto	l659
 10882  117A                     l3741:	
 10883  117A  3001               	movlw	1
 10884  117B                     u5795:	
 10885  117B  35C9               	lslf	___ftadd@f1,f
 10886  117C  0DCA               	rlf	___ftadd@f1+1,f
 10887  117D  0DCB               	rlf	___ftadd@f1+2,f
 10888  117E  0B89               	decfsz	9,f
 10889  117F  297B               	goto	u5795
 10890  1180  3001               	movlw	1
 10891  1181  02D5               	subwf	___ftadd@exp1,f
 10892  1182  0854               	movf	___ftadd@exp2,w
 10893  1183  0655               	xorwf	___ftadd@exp1,w
 10894  1184  1903               	skipnz
 10895  1185  2997               	goto	l3749
 10896  1186  3001               	movlw	1
 10897  1187  02D3               	subwf	___ftadd@sign,f
 10898  1188  0853               	movf	___ftadd@sign,w
 10899  1189  3907               	andlw	7
 10900  118A  1903               	btfsc	3,2
 10901  118B  2997               	goto	l3749
 10902  118C  297A               	goto	l3741
 10903  118D                     l3747:	
 10904  118D  3001               	movlw	1
 10905  118E                     u5825:	
 10906  118E  36CE               	lsrf	___ftadd@f2+2,f
 10907  118F  0CCD               	rrf	___ftadd@f2+1,f
 10908  1190  0CCC               	rrf	___ftadd@f2,f
 10909  1191  0B89               	decfsz	9,f
 10910  1192  298E               	goto	u5825
 10911  1193  3001               	movlw	1
 10912  1194  00CF               	movwf	??___ftadd
 10913  1195  084F               	movf	??___ftadd,w
 10914  1196  07D4               	addwf	___ftadd@exp2,f
 10915  1197                     l3749:	
 10916  1197  0855               	movf	___ftadd@exp1,w
 10917  1198  0654               	xorwf	___ftadd@exp2,w
 10918  1199  1D03               	skipz
 10919  119A  298D               	goto	l3747
 10920  119B                     l659:	
 10921  119B  1FD3               	btfss	___ftadd@sign,7
 10922  119C  29AD               	goto	l3753
 10923  119D  30FF               	movlw	255
 10924  119E  06C9               	xorwf	___ftadd@f1,f
 10925  119F  30FF               	movlw	255
 10926  11A0  06CA               	xorwf	___ftadd@f1+1,f
 10927  11A1  30FF               	movlw	255
 10928  11A2  06CB               	xorwf	___ftadd@f1+2,f
 10929  11A3  3001               	movlw	1
 10930  11A4  07C9               	addwf	___ftadd@f1,f
 10931  11A5  3000               	movlw	0
 10932  11A6  1803               	skipnc
 10933  11A7  3001               	movlw	1
 10934  11A8  07CA               	addwf	___ftadd@f1+1,f
 10935  11A9  3000               	movlw	0
 10936  11AA  1803               	skipnc
 10937  11AB  3001               	movlw	1
 10938  11AC  07CB               	addwf	___ftadd@f1+2,f
 10939  11AD                     l3753:	
 10940  11AD  1F53               	btfss	___ftadd@sign,6
 10941  11AE  29BF               	goto	l3757
 10942  11AF  30FF               	movlw	255
 10943  11B0  06CC               	xorwf	___ftadd@f2,f
 10944  11B1  30FF               	movlw	255
 10945  11B2  06CD               	xorwf	___ftadd@f2+1,f
 10946  11B3  30FF               	movlw	255
 10947  11B4  06CE               	xorwf	___ftadd@f2+2,f
 10948  11B5  3001               	movlw	1
 10949  11B6  07CC               	addwf	___ftadd@f2,f
 10950  11B7  3000               	movlw	0
 10951  11B8  1803               	skipnc
 10952  11B9  3001               	movlw	1
 10953  11BA  07CD               	addwf	___ftadd@f2+1,f
 10954  11BB  3000               	movlw	0
 10955  11BC  1803               	skipnc
 10956  11BD  3001               	movlw	1
 10957  11BE  07CE               	addwf	___ftadd@f2+2,f
 10958  11BF                     l3757:	
 10959  11BF  01D3               	clrf	___ftadd@sign
 10960  11C0  0849               	movf	___ftadd@f1,w
 10961  11C1  07CC               	addwf	___ftadd@f2,f
 10962  11C2  084A               	movf	___ftadd@f1+1,w
 10963  11C3  3DCD               	addwfc	___ftadd@f2+1,f
 10964  11C4  084B               	movf	___ftadd@f1+2,w
 10965  11C5  3DCE               	addwfc	___ftadd@f2+2,f
 10966  11C6  1FCE               	btfss	___ftadd@f2+2,7
 10967  11C7  29DA               	goto	l3767
 10968  11C8  30FF               	movlw	255
 10969  11C9  06CC               	xorwf	___ftadd@f2,f
 10970  11CA  30FF               	movlw	255
 10971  11CB  06CD               	xorwf	___ftadd@f2+1,f
 10972  11CC  30FF               	movlw	255
 10973  11CD  06CE               	xorwf	___ftadd@f2+2,f
 10974  11CE  3001               	movlw	1
 10975  11CF  07CC               	addwf	___ftadd@f2,f
 10976  11D0  3000               	movlw	0
 10977  11D1  1803               	skipnc
 10978  11D2  3001               	movlw	1
 10979  11D3  07CD               	addwf	___ftadd@f2+1,f
 10980  11D4  3000               	movlw	0
 10981  11D5  1803               	skipnc
 10982  11D6  3001               	movlw	1
 10983  11D7  07CE               	addwf	___ftadd@f2+2,f
 10984  11D8  01D3               	clrf	___ftadd@sign
 10985  11D9  0AD3               	incf	___ftadd@sign,f
 10986  11DA                     l3767:	
 10987  11DA  084C               	movf	___ftadd@f2,w
 10988  11DB  00F1               	movwf	___ftpack@arg
 10989  11DC  084D               	movf	___ftadd@f2+1,w
 10990  11DD  00F2               	movwf	___ftpack@arg+1
 10991  11DE  084E               	movf	___ftadd@f2+2,w
 10992  11DF  00F3               	movwf	___ftpack@arg+2
 10993  11E0  0855               	movf	___ftadd@exp1,w
 10994  11E1  00CF               	movwf	??___ftadd
 10995  11E2  084F               	movf	??___ftadd,w
 10996  11E3  00F4               	movwf	___ftpack@exp
 10997  11E4  0853               	movf	___ftadd@sign,w
 10998  11E5  00D0               	movwf	??___ftadd+1
 10999  11E6  0850               	movf	??___ftadd+1,w
 11000  11E7  00F5               	movwf	___ftpack@sign
 11001  11E8  319D  2516         	fcall	___ftpack
 11002  11EA  0871               	movf	?___ftpack,w
 11003  11EB  0020               	movlb	0	; select bank0
 11004  11EC  00C9               	movwf	?___ftadd
 11005  11ED  0872               	movf	?___ftpack+1,w
 11006  11EE  00CA               	movwf	?___ftadd+1
 11007  11EF  0873               	movf	?___ftpack+2,w
 11008  11F0  00CB               	movwf	?___ftadd+2
 11009  11F1  0008               	return
 11010  11F2                     __end_of___ftadd:	
 11011                           
 11012                           	psect	text19
 11013  1A0D                     __ptext19:	
 11014 ;; *************** function ___ftneg *****************
 11015 ;; Defined at:
 11016 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;  f1              3    1[COMMON] float 
 11019 ;; Auto vars:     Size  Location     Type
 11020 ;;		None
 11021 ;; Return value:  Size  Location     Type
 11022 ;;                  3    1[COMMON] float 
 11023 ;; Registers used:
 11024 ;;		wreg
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 0/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11030 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11033 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11034 ;;Total ram usage:        3 bytes
 11035 ;; Hardware stack levels used:    1
 11036 ;; Hardware stack levels required when called:    1
 11037 ;; This function calls:
 11038 ;;		Nothing
 11039 ;; This function is called by:
 11040 ;;		_sprintf
 11041 ;; This function uses a non-reentrant model
 11042 ;;
 11043                           
 11044                           
 11045                           ;psect for function ___ftneg
 11046  1A0D                     ___ftneg:	
 11047                           
 11048                           ;incstack = 0
 11049                           ; Regs used in ___ftneg: [wreg]
 11050  1A0D  0873               	movf	___ftneg@f1+2,w
 11051  1A0E  0472               	iorwf	___ftneg@f1+1,w
 11052  1A0F  0471               	iorwf	___ftneg@f1,w
 11053  1A10  1903               	skipnz
 11054  1A11  0008               	return
 11055  1A12  3080               	movlw	128
 11056  1A13  06F3               	xorwf	___ftneg@f1+2,f
 11057  1A14  0008               	return
 11058  1A15                     __end_of___ftneg:	
 11059                           
 11060                           	psect	text20
 11061  1B4C                     __ptext20:	
 11062 ;; *************** function ___ftge *****************
 11063 ;; Defined at:
 11064 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;  ff1             3    1[COMMON] float 
 11067 ;;  ff2             3    4[COMMON] float 
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;		None
 11070 ;; Return value:  Size  Location     Type
 11071 ;;		None               void
 11072 ;; Registers used:
 11073 ;;		wreg, status,2, status,0
 11074 ;; Tracked objects:
 11075 ;;		On entry : 0/0
 11076 ;;		On exit  : 0/0
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11079 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11081 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11082 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11083 ;;Total ram usage:        9 bytes
 11084 ;; Hardware stack levels used:    1
 11085 ;; Hardware stack levels required when called:    1
 11086 ;; This function calls:
 11087 ;;		Nothing
 11088 ;; This function is called by:
 11089 ;;		_sprintf
 11090 ;; This function uses a non-reentrant model
 11091 ;;
 11092                           
 11093                           
 11094                           ;psect for function ___ftge
 11095  1B4C                     ___ftge:	
 11096                           
 11097                           ;incstack = 0
 11098                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 11099  1B4C  1FF3               	btfss	___ftge@ff1+2,7
 11100  1B4D  2B62               	goto	l4111
 11101  1B4E  0971               	comf	___ftge@ff1,w
 11102  1B4F  00F7               	movwf	??___ftge
 11103  1B50  0972               	comf	___ftge@ff1+1,w
 11104  1B51  00F8               	movwf	??___ftge+1
 11105  1B52  0973               	comf	___ftge@ff1+2,w
 11106  1B53  00F9               	movwf	??___ftge+2
 11107  1B54  0AF7               	incf	??___ftge,f
 11108  1B55  1903               	skipnz
 11109  1B56  0AF8               	incf	??___ftge+1,f
 11110  1B57  1903               	skipnz
 11111  1B58  0AF9               	incf	??___ftge+2,f
 11112  1B59  3000               	movlw	0
 11113  1B5A  0777               	addwf	??___ftge,w
 11114  1B5B  00F1               	movwf	___ftge@ff1
 11115  1B5C  3000               	movlw	0
 11116  1B5D  3D78               	addwfc	??___ftge+1,w
 11117  1B5E  00F2               	movwf	___ftge@ff1+1
 11118  1B5F  3080               	movlw	128
 11119  1B60  3D79               	addwfc	??___ftge+2,w
 11120  1B61  00F3               	movwf	___ftge@ff1+2
 11121  1B62                     l4111:	
 11122  1B62  1FF6               	btfss	___ftge@ff2+2,7
 11123  1B63  2B78               	goto	l4115
 11124  1B64  0974               	comf	___ftge@ff2,w
 11125  1B65  00F7               	movwf	??___ftge
 11126  1B66  0975               	comf	___ftge@ff2+1,w
 11127  1B67  00F8               	movwf	??___ftge+1
 11128  1B68  0976               	comf	___ftge@ff2+2,w
 11129  1B69  00F9               	movwf	??___ftge+2
 11130  1B6A  0AF7               	incf	??___ftge,f
 11131  1B6B  1903               	skipnz
 11132  1B6C  0AF8               	incf	??___ftge+1,f
 11133  1B6D  1903               	skipnz
 11134  1B6E  0AF9               	incf	??___ftge+2,f
 11135  1B6F  3000               	movlw	0
 11136  1B70  0777               	addwf	??___ftge,w
 11137  1B71  00F4               	movwf	___ftge@ff2
 11138  1B72  3000               	movlw	0
 11139  1B73  3D78               	addwfc	??___ftge+1,w
 11140  1B74  00F5               	movwf	___ftge@ff2+1
 11141  1B75  3080               	movlw	128
 11142  1B76  3D79               	addwfc	??___ftge+2,w
 11143  1B77  00F6               	movwf	___ftge@ff2+2
 11144  1B78                     l4115:	
 11145  1B78  3080               	movlw	128
 11146  1B79  06F3               	xorwf	___ftge@ff1+2,f
 11147  1B7A  3080               	movlw	128
 11148  1B7B  06F6               	xorwf	___ftge@ff2+2,f
 11149  1B7C  0876               	movf	___ftge@ff2+2,w
 11150  1B7D  0273               	subwf	___ftge@ff1+2,w
 11151  1B7E  1D03               	skipz
 11152  1B7F  0008               	return
 11153  1B80  0875               	movf	___ftge@ff2+1,w
 11154  1B81  0272               	subwf	___ftge@ff1+1,w
 11155  1B82  1D03               	skipz
 11156  1B83  0008               	return
 11157  1B84  0874               	movf	___ftge@ff2,w
 11158  1B85  0271               	subwf	___ftge@ff1,w
 11159  1B86  0008               	return
 11160  1B87                     __end_of___ftge:	
 11161                           
 11162                           	psect	text21
 11163  1A51                     __ptext21:	
 11164 ;; *************** function ___lwtoft *****************
 11165 ;; Defined at:
 11166 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;  c               2    9[COMMON] unsigned int 
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;		None
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  3    9[COMMON] float 
 11173 ;; Registers used:
 11174 ;;		wreg, status,2, status,0, pclath, cstack
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11180 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11183 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11184 ;;Total ram usage:        4 bytes
 11185 ;; Hardware stack levels used:    1
 11186 ;; Hardware stack levels required when called:    2
 11187 ;; This function calls:
 11188 ;;		___ftpack
 11189 ;; This function is called by:
 11190 ;;		_main
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           
 11195                           ;psect for function ___lwtoft
 11196  1A51                     ___lwtoft:	
 11197                           
 11198                           ;incstack = 0
 11199                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 11200  1A51  0879               	movf	___lwtoft@c,w
 11201  1A52  00F1               	movwf	___ftpack@arg
 11202  1A53  087A               	movf	___lwtoft@c+1,w
 11203  1A54  00F2               	movwf	___ftpack@arg+1
 11204  1A55  01F3               	clrf	___ftpack@arg+2
 11205  1A56  308E               	movlw	142
 11206  1A57  0020               	movlb	0	; select bank0
 11207  1A58  00A0               	movwf	??___lwtoft
 11208  1A59  0820               	movf	??___lwtoft,w
 11209  1A5A  00F4               	movwf	___ftpack@exp
 11210  1A5B  01F5               	clrf	___ftpack@sign
 11211  1A5C  319D  2516         	fcall	___ftpack
 11212  1A5E  0871               	movf	?___ftpack,w
 11213  1A5F  00F9               	movwf	?___lwtoft
 11214  1A60  0872               	movf	?___ftpack+1,w
 11215  1A61  00FA               	movwf	?___lwtoft+1
 11216  1A62  0873               	movf	?___ftpack+2,w
 11217  1A63  00FB               	movwf	?___lwtoft+2
 11218  1A64  0008               	return
 11219  1A65                     __end_of___lwtoft:	
 11220                           
 11221                           	psect	text22
 11222  1D16                     __ptext22:	
 11223 ;; *************** function ___ftpack *****************
 11224 ;; Defined at:
 11225 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11226 ;; Parameters:    Size  Location     Type
 11227 ;;  arg             3    1[COMMON] unsigned um
 11228 ;;  exp             1    4[COMMON] unsigned char 
 11229 ;;  sign            1    5[COMMON] unsigned char 
 11230 ;; Auto vars:     Size  Location     Type
 11231 ;;		None
 11232 ;; Return value:  Size  Location     Type
 11233 ;;                  3    1[COMMON] float 
 11234 ;; Registers used:
 11235 ;;		wreg, status,2, status,0
 11236 ;; Tracked objects:
 11237 ;;		On entry : 0/0
 11238 ;;		On exit  : 0/0
 11239 ;;		Unchanged: 0/0
 11240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11241 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11243 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11244 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11245 ;;Total ram usage:        8 bytes
 11246 ;; Hardware stack levels used:    1
 11247 ;; Hardware stack levels required when called:    1
 11248 ;; This function calls:
 11249 ;;		Nothing
 11250 ;; This function is called by:
 11251 ;;		___ftadd
 11252 ;;		___ftmul
 11253 ;;		___lltoft
 11254 ;;		___lwtoft
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258                           
 11259                           ;psect for function ___ftpack
 11260  1D16                     ___ftpack:	
 11261                           
 11262                           ;incstack = 0
 11263                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11264  1D16  0874               	movf	___ftpack@exp,w
 11265  1D17  1903               	btfsc	3,2
 11266  1D18  2D1E               	goto	l3551
 11267  1D19  0873               	movf	___ftpack@arg+2,w
 11268  1D1A  0472               	iorwf	___ftpack@arg+1,w
 11269  1D1B  0471               	iorwf	___ftpack@arg,w
 11270  1D1C  1D03               	skipz
 11271  1D1D  2D2F               	goto	l3557
 11272  1D1E                     l3551:	
 11273  1D1E  3000               	movlw	0
 11274  1D1F  00F1               	movwf	?___ftpack
 11275  1D20  3000               	movlw	0
 11276  1D21  00F2               	movwf	?___ftpack+1
 11277  1D22  3000               	movlw	0
 11278  1D23  00F3               	movwf	?___ftpack+2
 11279  1D24  0008               	return
 11280  1D25                     l3555:	
 11281  1D25  3001               	movlw	1
 11282  1D26  00F6               	movwf	??___ftpack
 11283  1D27  0876               	movf	??___ftpack,w
 11284  1D28  07F4               	addwf	___ftpack@exp,f
 11285  1D29  3001               	movlw	1
 11286  1D2A                     u5255:	
 11287  1D2A  36F3               	lsrf	___ftpack@arg+2,f
 11288  1D2B  0CF2               	rrf	___ftpack@arg+1,f
 11289  1D2C  0CF1               	rrf	___ftpack@arg,f
 11290  1D2D  0B89               	decfsz	9,f
 11291  1D2E  2D2A               	goto	u5255
 11292  1D2F                     l3557:	
 11293  1D2F  30FE               	movlw	254
 11294  1D30  0573               	andwf	___ftpack@arg+2,w
 11295  1D31  1903               	btfsc	3,2
 11296  1D32  2D48               	goto	l628
 11297  1D33  2D25               	goto	l3555
 11298  1D34                     l3559:	
 11299  1D34  3001               	movlw	1
 11300  1D35  00F6               	movwf	??___ftpack
 11301  1D36  0876               	movf	??___ftpack,w
 11302  1D37  07F4               	addwf	___ftpack@exp,f
 11303  1D38  3001               	movlw	1
 11304  1D39  07F1               	addwf	___ftpack@arg,f
 11305  1D3A  3000               	movlw	0
 11306  1D3B  1803               	skipnc
 11307  1D3C  3001               	movlw	1
 11308  1D3D  07F2               	addwf	___ftpack@arg+1,f
 11309  1D3E  3000               	movlw	0
 11310  1D3F  1803               	skipnc
 11311  1D40  3001               	movlw	1
 11312  1D41  07F3               	addwf	___ftpack@arg+2,f
 11313  1D42  3001               	movlw	1
 11314  1D43                     u5275:	
 11315  1D43  36F3               	lsrf	___ftpack@arg+2,f
 11316  1D44  0CF2               	rrf	___ftpack@arg+1,f
 11317  1D45  0CF1               	rrf	___ftpack@arg,f
 11318  1D46  0B89               	decfsz	9,f
 11319  1D47  2D43               	goto	u5275
 11320  1D48                     l628:	
 11321  1D48  30FF               	movlw	255
 11322  1D49  0573               	andwf	___ftpack@arg+2,w
 11323  1D4A  1903               	btfsc	3,2
 11324  1D4B  2D55               	goto	l3567
 11325  1D4C  2D34               	goto	l3559
 11326  1D4D                     l3565:	
 11327  1D4D  3001               	movlw	1
 11328  1D4E  02F4               	subwf	___ftpack@exp,f
 11329  1D4F  3001               	movlw	1
 11330  1D50                     u5295:	
 11331  1D50  35F1               	lslf	___ftpack@arg,f
 11332  1D51  0DF2               	rlf	___ftpack@arg+1,f
 11333  1D52  0DF3               	rlf	___ftpack@arg+2,f
 11334  1D53  0B89               	decfsz	9,f
 11335  1D54  2D50               	goto	u5295
 11336  1D55                     l3567:	
 11337  1D55  1BF2               	btfsc	___ftpack@arg+1,7
 11338  1D56  2D5B               	goto	l635
 11339  1D57  3002               	movlw	2
 11340  1D58  0274               	subwf	___ftpack@exp,w
 11341  1D59  1803               	skipnc
 11342  1D5A  2D4D               	goto	l3565
 11343  1D5B                     l635:	
 11344  1D5B  1874               	btfsc	___ftpack@exp,0
 11345  1D5C  2D63               	goto	l636
 11346  1D5D  30FF               	movlw	255
 11347  1D5E  05F1               	andwf	___ftpack@arg,f
 11348  1D5F  307F               	movlw	127
 11349  1D60  05F2               	andwf	___ftpack@arg+1,f
 11350  1D61  30FF               	movlw	255
 11351  1D62  05F3               	andwf	___ftpack@arg+2,f
 11352  1D63                     l636:	
 11353  1D63  1003               	clrc
 11354  1D64  0CF4               	rrf	___ftpack@exp,f
 11355  1D65  0874               	movf	___ftpack@exp,w
 11356  1D66  00F6               	movwf	??___ftpack
 11357  1D67  01F7               	clrf	??___ftpack+1
 11358  1D68  01F8               	clrf	??___ftpack+2
 11359  1D69  3010               	movlw	16
 11360  1D6A                     u5335:	
 11361  1D6A  35F6               	lslf	??___ftpack,f
 11362  1D6B  0DF7               	rlf	??___ftpack+1,f
 11363  1D6C  0DF8               	rlf	??___ftpack+2,f
 11364  1D6D  0B89               	decfsz	9,f
 11365  1D6E  2D6A               	goto	u5335
 11366  1D6F  0876               	movf	??___ftpack,w
 11367  1D70  04F1               	iorwf	___ftpack@arg,f
 11368  1D71  0877               	movf	??___ftpack+1,w
 11369  1D72  04F2               	iorwf	___ftpack@arg+1,f
 11370  1D73  0878               	movf	??___ftpack+2,w
 11371  1D74  04F3               	iorwf	___ftpack@arg+2,f
 11372  1D75  0875               	movf	___ftpack@sign,w
 11373  1D76  1903               	btfsc	3,2
 11374  1D77  0008               	return
 11375  1D78  17F3               	bsf	___ftpack@arg+2,7
 11376  1D79  0008               	return
 11377  1D7A                     __end_of___ftpack:	
 11378                           
 11379                           	psect	text23
 11380  19F6                     __ptext23:	
 11381 ;; *************** function _OSCILLATOR_Initialize *****************
 11382 ;; Defined at:
 11383 ;;		line 277 in file "LDC_ROT.h"
 11384 ;; Parameters:    Size  Location     Type
 11385 ;;		None
 11386 ;; Auto vars:     Size  Location     Type
 11387 ;;		None
 11388 ;; Return value:  Size  Location     Type
 11389 ;;                  1    wreg      void 
 11390 ;; Registers used:
 11391 ;;		wreg, status,2
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11401 ;;Total ram usage:        0 bytes
 11402 ;; Hardware stack levels used:    1
 11403 ;; Hardware stack levels required when called:    1
 11404 ;; This function calls:
 11405 ;;		Nothing
 11406 ;; This function is called by:
 11407 ;;		_main
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           
 11412                           ;psect for function _OSCILLATOR_Initialize
 11413  19F6                     _OSCILLATOR_Initialize:	
 11414                           
 11415                           ;LDC_ROT.h: 281: OSCCON = 0b01111011;
 11416                           
 11417                           ;incstack = 0
 11418                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11419  19F6  307B               	movlw	123
 11420  19F7  0021               	movlb	1	; select bank1
 11421  19F8  009B               	movwf	27	;volatile
 11422                           
 11423                           ;LDC_ROT.h: 283: OSCSTAT = 0b100000000;
 11424  19F9  019C               	clrf	28	;volatile
 11425                           
 11426                           ;LDC_ROT.h: 285: OSCTUNE = 0x00;
 11427  19FA  019A               	clrf	26	;volatile
 11428                           
 11429                           ;LDC_ROT.h: 287: BORCON = 0x00;
 11430  19FB  019D               	clrf	29	;volatile
 11431  19FC  0008               	return
 11432  19FD                     __end_of_OSCILLATOR_Initialize:	
 11433                           
 11434                           	psect	text24
 11435  1A05                     __ptext24:	
 11436 ;; *************** function _OP_AMP_init *****************
 11437 ;; Defined at:
 11438 ;;		line 92 in file "LOAD20210.c"
 11439 ;; Parameters:    Size  Location     Type
 11440 ;;		None
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;		None
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  1    wreg      void 
 11445 ;; Registers used:
 11446 ;;		wreg, status,2
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11456 ;;Total ram usage:        0 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:    1
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_main
 11463 ;; This function uses a non-reentrant model
 11464 ;;
 11465                           
 11466                           
 11467                           ;psect for function _OP_AMP_init
 11468  1A05                     _OP_AMP_init:	
 11469                           
 11470                           ;LOAD20210.c: 95: OPA3CON = 0x90;
 11471                           
 11472                           ;incstack = 0
 11473                           ; Regs used in _OP_AMP_init: [wreg+status,2]
 11474  1A05  3090               	movlw	144
 11475  1A06  002A               	movlb	10	; select bank10
 11476  1A07  0099               	movwf	25	;volatile
 11477                           
 11478                           ;LOAD20210.c: 97: OPA3ORS = 0x00;
 11479  1A08  019A               	clrf	26	;volatile
 11480                           
 11481                           ;LOAD20210.c: 99: OPA3NCHS = 0x00;
 11482  1A09  0197               	clrf	23	;volatile
 11483                           
 11484                           ;LOAD20210.c: 101: OPA3PCHS = 0x02;
 11485  1A0A  3002               	movlw	2
 11486  1A0B  0098               	movwf	24	;volatile
 11487  1A0C  0008               	return
 11488  1A0D                     __end_of_OP_AMP_init:	
 11489                           
 11490                           	psect	text25
 11491  0E44                     __ptext25:	
 11492 ;; *************** function _LCD_TextDisplayString *****************
 11493 ;; Defined at:
 11494 ;;		line 361 in file "LDC_ROT.h"
 11495 ;; Parameters:    Size  Location     Type
 11496 ;;  line            1    wreg     unsigned char 
 11497 ;;  string          2    5[COMMON] PTR unsigned char 
 11498 ;;		 -> STR_4(17), STR_2(17), naif(17), 
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;  line            1   10[COMMON] unsigned char 
 11501 ;;  i               1    9[COMMON] unsigned char 
 11502 ;;  addr            1    8[COMMON] unsigned char 
 11503 ;; Return value:  Size  Location     Type
 11504 ;;                  1    wreg      void 
 11505 ;; Registers used:
 11506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11513 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11515 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11516 ;;Total ram usage:        6 bytes
 11517 ;; Hardware stack levels used:    1
 11518 ;; Hardware stack levels required when called:    3
 11519 ;; This function calls:
 11520 ;;		_LCD_WriteCommand
 11521 ;;		_LCD_WriteData
 11522 ;; This function is called by:
 11523 ;;		_main
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           
 11528                           ;psect for function _LCD_TextDisplayString
 11529  0E44                     _LCD_TextDisplayString:	
 11530                           
 11531                           ;incstack = 0
 11532                           ; Regs used in _LCD_TextDisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11533                           ;LCD_TextDisplayString@line stored from wreg
 11534  0E44  00FA               	movwf	LCD_TextDisplayString@line
 11535                           
 11536                           ;LDC_ROT.h: 363: unsigned char addr,i;
 11537                           ;LDC_ROT.h: 364: if(line==1)
 11538  0E45  037A               	decf	LCD_TextDisplayString@line,w
 11539  0E46  1D03               	btfss	3,2
 11540  0E47  2E4A               	goto	l4283
 11541                           
 11542                           ;LDC_ROT.h: 365: addr=0x80;
 11543  0E48  3080               	movlw	128
 11544  0E49  2E5B               	goto	L11
 11545  0E4A                     l4283:	
 11546                           
 11547                           ;LDC_ROT.h: 366: else if(line==2)
 11548  0E4A  3002               	movlw	2
 11549  0E4B  067A               	xorwf	LCD_TextDisplayString@line,w
 11550  0E4C  1D03               	btfss	3,2
 11551  0E4D  2E50               	goto	l4287
 11552                           
 11553                           ;LDC_ROT.h: 367: addr=0x90;
 11554  0E4E  3090               	movlw	144
 11555  0E4F  2E5B               	goto	L11
 11556  0E50                     l4287:	
 11557                           
 11558                           ;LDC_ROT.h: 368: else if(line==3)
 11559  0E50  3003               	movlw	3
 11560  0E51  067A               	xorwf	LCD_TextDisplayString@line,w
 11561  0E52  1D03               	btfss	3,2
 11562  0E53  2E56               	goto	l4291
 11563                           
 11564                           ;LDC_ROT.h: 369: addr=0x88;
 11565  0E54  3088               	movlw	136
 11566  0E55  2E5B               	goto	L11
 11567  0E56                     l4291:	
 11568                           
 11569                           ;LDC_ROT.h: 370: else if(line==4)
 11570  0E56  3004               	movlw	4
 11571  0E57  067A               	xorwf	LCD_TextDisplayString@line,w
 11572  0E58  1D03               	btfss	3,2
 11573  0E59  2E5E               	goto	l4295
 11574                           
 11575                           ;LDC_ROT.h: 371: addr=0x98;
 11576  0E5A  3098               	movlw	152
 11577  0E5B                     L11:	
 11578  0E5B  00F7               	movwf	??_LCD_TextDisplayString
 11579  0E5C  0877               	movf	??_LCD_TextDisplayString,w
 11580  0E5D  00F8               	movwf	LCD_TextDisplayString@addr
 11581  0E5E                     l4295:	
 11582                           
 11583                           ;LDC_ROT.h: 373: LCD_WriteCommand(addr);
 11584  0E5E  0878               	movf	LCD_TextDisplayString@addr,w
 11585  0E5F  3199  21E8  318E   	fcall	_LCD_WriteCommand
 11586                           
 11587                           ;LDC_ROT.h: 375: for(i=0;i<16;i++)
 11588  0E62  01F9               	clrf	LCD_TextDisplayString@i
 11589  0E63                     L12:	
 11590  0E63  3010               	movlw	16
 11591  0E64  0279               	subwf	LCD_TextDisplayString@i,w
 11592  0E65  1803               	btfsc	3,0
 11593  0E66  0008               	return
 11594                           
 11595                           ;LDC_ROT.h: 376: LCD_WriteData(*string++);
 11596  0E67  0875               	movf	LCD_TextDisplayString@string,w
 11597  0E68  0084               	movwf	4
 11598  0E69  0876               	movf	LCD_TextDisplayString@string+1,w
 11599  0E6A  0085               	movwf	5
 11600  0E6B  0800               	movf	0,w	;code access
 11601  0E6C  3199  21EF  318E   	fcall	_LCD_WriteData
 11602  0E6F  3001               	movlw	1
 11603  0E70  07F5               	addwf	LCD_TextDisplayString@string,f
 11604  0E71  3000               	movlw	0
 11605  0E72  3DF6               	addwfc	LCD_TextDisplayString@string+1,f
 11606  0E73  3001               	movlw	1
 11607  0E74  00F7               	movwf	??_LCD_TextDisplayString
 11608  0E75  0877               	movf	??_LCD_TextDisplayString,w
 11609  0E76  07F9               	addwf	LCD_TextDisplayString@i,f
 11610  0E77  2E63               	goto	L12
 11611  0E78                     __end_of_LCD_TextDisplayString:	
 11612                           
 11613                           	psect	text26
 11614  1CB4                     __ptext26:	
 11615 ;; *************** function _LCD_Init *****************
 11616 ;; Defined at:
 11617 ;;		line 297 in file "LDC_ROT.h"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;		None
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;		None
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		wreg, status,2, status,0, pclath, cstack
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11635 ;;Total ram usage:        2 bytes
 11636 ;; Hardware stack levels used:    1
 11637 ;; Hardware stack levels required when called:    3
 11638 ;; This function calls:
 11639 ;;		_LCD_WriteCommand
 11640 ;; This function is called by:
 11641 ;;		_main
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645                           
 11646                           ;psect for function _LCD_Init
 11647  1CB4                     _LCD_Init:	
 11648                           
 11649                           ;LDC_ROT.h: 299: LATBbits.LATB2=1;
 11650                           
 11651                           ;incstack = 0
 11652                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 11653  1CB4  0022               	movlb	2	; select bank2
 11654  1CB5  150D               	bsf	13,2	;volatile
 11655                           
 11656                           ;LDC_ROT.h: 300: LATBbits.LATB2=0;
 11657  1CB6  110D               	bcf	13,2	;volatile
 11658                           
 11659                           ;LDC_ROT.h: 301: _delay((unsigned long)((5)*(16000000/4000.0)));
 11660  1CB7  301A               	movlw	26
 11661  1CB8  00F5               	movwf	??_LCD_Init
 11662  1CB9  30F8               	movlw	248
 11663  1CBA                     u8017:	
 11664  1CBA  0B89               	decfsz	9,f
 11665  1CBB  2CBA               	goto	u8017
 11666  1CBC  0BF5               	decfsz	??_LCD_Init,f
 11667  1CBD  2CBA               	goto	u8017
 11668  1CBE  3200               	nop2
 11669                           
 11670                           ;LDC_ROT.h: 302: LATBbits.LATB2=1;
 11671  1CBF  0022               	movlb	2	; select bank2
 11672  1CC0  150D               	bsf	13,2	;volatile
 11673                           
 11674                           ;LDC_ROT.h: 304: _delay((unsigned long)((50)*(16000000/4000.0)));
 11675  1CC1  3002               	movlw	2
 11676  1CC2  00F6               	movwf	??_LCD_Init+1
 11677  1CC3  3004               	movlw	4
 11678  1CC4  00F5               	movwf	??_LCD_Init
 11679  1CC5  30BA               	movlw	186
 11680  1CC6                     u8027:	
 11681  1CC6  0B89               	decfsz	9,f
 11682  1CC7  2CC6               	goto	u8027
 11683  1CC8  0BF5               	decfsz	??_LCD_Init,f
 11684  1CC9  2CC6               	goto	u8027
 11685  1CCA  0BF6               	decfsz	??_LCD_Init+1,f
 11686  1CCB  2CC6               	goto	u8027
 11687  1CCC  3200               	nop2
 11688                           
 11689                           ;LDC_ROT.h: 306: LCD_WriteCommand(0b00100000);
 11690  1CCD  3020               	movlw	32
 11691  1CCE  3199  21E8  319C   	fcall	_LCD_WriteCommand
 11692                           
 11693                           ;LDC_ROT.h: 307: _delay((unsigned long)((5)*(16000000/4000.0)));
 11694  1CD1  301A               	movlw	26
 11695  1CD2  00F5               	movwf	??_LCD_Init
 11696  1CD3  30F8               	movlw	248
 11697  1CD4                     u8037:	
 11698  1CD4  0B89               	decfsz	9,f
 11699  1CD5  2CD4               	goto	u8037
 11700  1CD6  0BF5               	decfsz	??_LCD_Init,f
 11701  1CD7  2CD4               	goto	u8037
 11702  1CD8  3200               	nop2
 11703                           
 11704                           ;LDC_ROT.h: 309: LCD_WriteCommand(0b00100000);
 11705  1CD9  3020               	movlw	32
 11706  1CDA  3199  21E8  319C   	fcall	_LCD_WriteCommand
 11707                           
 11708                           ;LDC_ROT.h: 310: _delay((unsigned long)((5)*(16000000/4000.0)));
 11709  1CDD  301A               	movlw	26
 11710  1CDE  00F5               	movwf	??_LCD_Init
 11711  1CDF  30F8               	movlw	248
 11712  1CE0                     u8047:	
 11713  1CE0  0B89               	decfsz	9,f
 11714  1CE1  2CE0               	goto	u8047
 11715  1CE2  0BF5               	decfsz	??_LCD_Init,f
 11716  1CE3  2CE0               	goto	u8047
 11717  1CE4  3200               	nop2
 11718                           
 11719                           ;LDC_ROT.h: 312: LCD_WriteCommand(0b00001100);
 11720  1CE5  300C               	movlw	12
 11721  1CE6  3199  21E8  319C   	fcall	_LCD_WriteCommand
 11722                           
 11723                           ;LDC_ROT.h: 313: _delay((unsigned long)((5)*(16000000/4000.0)));
 11724  1CE9  301A               	movlw	26
 11725  1CEA  00F5               	movwf	??_LCD_Init
 11726  1CEB  30F8               	movlw	248
 11727  1CEC                     u8057:	
 11728  1CEC  0B89               	decfsz	9,f
 11729  1CED  2CEC               	goto	u8057
 11730  1CEE  0BF5               	decfsz	??_LCD_Init,f
 11731  1CEF  2CEC               	goto	u8057
 11732  1CF0  3200               	nop2
 11733                           
 11734                           ;LDC_ROT.h: 315: LCD_WriteCommand(0x01);
 11735  1CF1  3001               	movlw	1
 11736  1CF2  3199  21E8  319C   	fcall	_LCD_WriteCommand
 11737                           
 11738                           ;LDC_ROT.h: 316: _delay((unsigned long)((5)*(16000000/4000.0)));
 11739  1CF5  301A               	movlw	26
 11740  1CF6  00F5               	movwf	??_LCD_Init
 11741  1CF7  30F8               	movlw	248
 11742  1CF8                     u8067:	
 11743  1CF8  0B89               	decfsz	9,f
 11744  1CF9  2CF8               	goto	u8067
 11745  1CFA  0BF5               	decfsz	??_LCD_Init,f
 11746  1CFB  2CF8               	goto	u8067
 11747  1CFC  3200               	nop2
 11748                           
 11749                           ;LDC_ROT.h: 318: LCD_WriteCommand(0x06);
 11750  1CFD  3006               	movlw	6
 11751  1CFE  3199  21E8  319C   	fcall	_LCD_WriteCommand
 11752                           
 11753                           ;LDC_ROT.h: 319: _delay((unsigned long)((5)*(16000000/4000.0)));
 11754  1D01  301A               	movlw	26
 11755  1D02  00F5               	movwf	??_LCD_Init
 11756  1D03  30F8               	movlw	248
 11757  1D04                     u8077:	
 11758  1D04  0B89               	decfsz	9,f
 11759  1D05  2D04               	goto	u8077
 11760  1D06  0BF5               	decfsz	??_LCD_Init,f
 11761  1D07  2D04               	goto	u8077
 11762  1D08  3200               	nop2
 11763                           
 11764                           ;LDC_ROT.h: 321: LCD_WriteCommand(0b00000010);
 11765  1D09  3002               	movlw	2
 11766  1D0A  3199  21E8  319C   	fcall	_LCD_WriteCommand
 11767                           
 11768                           ;LDC_ROT.h: 322: _delay((unsigned long)((5)*(16000000/4000.0)));
 11769  1D0D  301A               	movlw	26
 11770  1D0E  00F5               	movwf	??_LCD_Init
 11771  1D0F  30F8               	movlw	248
 11772  1D10                     u8087:	
 11773  1D10  0B89               	decfsz	9,f
 11774  1D11  2D10               	goto	u8087
 11775  1D12  0BF5               	decfsz	??_LCD_Init,f
 11776  1D13  2D10               	goto	u8087
 11777  1D14  3200               	nop2
 11778  1D15  0008               	return
 11779  1D16                     __end_of_LCD_Init:	
 11780                           
 11781                           	psect	text27
 11782  102B                     __ptext27:	
 11783 ;; *************** function _LCD_FillScreenGraphics *****************
 11784 ;; Defined at:
 11785 ;;		line 395 in file "LDC_ROT.h"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;  graphic         2    5[COMMON] PTR const unsigned char 
 11788 ;;		 -> des(1024), 
 11789 ;; Auto vars:     Size  Location     Type
 11790 ;;  x               1    8[COMMON] unsigned char 
 11791 ;;  y               1    7[COMMON] unsigned char 
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  1    wreg      void 
 11794 ;; Registers used:
 11795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11803 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11804 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11805 ;;Total ram usage:       12 bytes
 11806 ;; Hardware stack levels used:    1
 11807 ;; Hardware stack levels required when called:    3
 11808 ;; This function calls:
 11809 ;;		_LCD_WriteCommand
 11810 ;;		_LCD_WriteData
 11811 ;; This function is called by:
 11812 ;;		_main
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816                           
 11817                           ;psect for function _LCD_FillScreenGraphics
 11818  102B                     _LCD_FillScreenGraphics:	
 11819                           
 11820                           ;LDC_ROT.h: 397: unsigned char x, y;
 11821                           ;LDC_ROT.h: 398: for(y = 0; y < 64; y++)
 11822                           
 11823                           ;incstack = 0
 11824                           ; Regs used in _LCD_FillScreenGraphics: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11825  102B  01F7               	clrf	LCD_FillScreenGraphics@y
 11826  102C                     L14:	
 11827  102C  3040               	movlw	64
 11828  102D  0277               	subwf	LCD_FillScreenGraphics@y,w
 11829  102E  1803               	btfsc	3,0
 11830  102F  0008               	return
 11831                           
 11832                           ;LDC_ROT.h: 399: {
 11833                           ;LDC_ROT.h: 400: if(y < 32)
 11834  1030  3020               	movlw	32
 11835  1031  0277               	subwf	LCD_FillScreenGraphics@y,w
 11836  1032  1803               	skipnc
 11837  1033  2893               	goto	l4349
 11838                           
 11839                           ;LDC_ROT.h: 401: {
 11840                           ;LDC_ROT.h: 402: for(x = 0; x < 8; x++)
 11841  1034  01F8               	clrf	LCD_FillScreenGraphics@x
 11842  1035                     L13:	
 11843  1035  3008               	movlw	8
 11844  1036  0278               	subwf	LCD_FillScreenGraphics@x,w
 11845  1037  1803               	btfsc	3,0
 11846  1038  28F6               	goto	l4365
 11847                           
 11848                           ;LDC_ROT.h: 403: {
 11849                           ;LDC_ROT.h: 404: LCD_WriteCommand(0x80 | y);
 11850  1039  0877               	movf	LCD_FillScreenGraphics@y,w
 11851  103A  3880               	iorlw	128
 11852  103B  3199  21E8  3190   	fcall	_LCD_WriteCommand
 11853                           
 11854                           ;LDC_ROT.h: 405: LCD_WriteCommand(0x80 | x);
 11855  103E  0878               	movf	LCD_FillScreenGraphics@x,w
 11856  103F  3880               	iorlw	128
 11857  1040  3199  21E8  3190   	fcall	_LCD_WriteCommand
 11858                           
 11859                           ;LDC_ROT.h: 406: LCD_WriteData(graphic[2*x + 16*y]);
 11860  1043  0877               	movf	LCD_FillScreenGraphics@y,w
 11861  1044  0020               	movlb	0	; select bank0
 11862  1045  00A0               	movwf	??_LCD_FillScreenGraphics
 11863  1046  01A1               	clrf	??_LCD_FillScreenGraphics+1
 11864  1047  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 11865  1048  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 11866  1049  30F0               	movlw	240
 11867  104A  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 11868  104B  0820               	movf	??_LCD_FillScreenGraphics,w
 11869  104C  390F               	andlw	15
 11870  104D  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 11871  104E  30F0               	movlw	240
 11872  104F  05A0               	andwf	??_LCD_FillScreenGraphics,f
 11873  1050  0878               	movf	LCD_FillScreenGraphics@x,w
 11874  1051  00A2               	movwf	??_LCD_FillScreenGraphics+2
 11875  1052  01A3               	clrf	??_LCD_FillScreenGraphics+3
 11876  1053  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 11877  1054  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 11878  1055  0820               	movf	??_LCD_FillScreenGraphics,w
 11879  1056  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 11880  1057  00A4               	movwf	??_LCD_FillScreenGraphics+4
 11881  1058  0821               	movf	??_LCD_FillScreenGraphics+1,w
 11882  1059  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 11883  105A  00A5               	movwf	??_LCD_FillScreenGraphics+5
 11884  105B  0875               	movf	LCD_FillScreenGraphics@graphic,w
 11885  105C  0724               	addwf	??_LCD_FillScreenGraphics+4,w
 11886  105D  0084               	movwf	4
 11887  105E  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 11888  105F  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 11889  1060  0085               	movwf	5
 11890  1061  0800               	movf	0,w	;code access
 11891  1062  3199  21EF  3190   	fcall	_LCD_WriteData
 11892                           
 11893                           ;LDC_ROT.h: 407: LCD_WriteData(graphic[2*x+1 + 16*y]);
 11894  1065  0877               	movf	LCD_FillScreenGraphics@y,w
 11895  1066  0020               	movlb	0	; select bank0
 11896  1067  00A0               	movwf	??_LCD_FillScreenGraphics
 11897  1068  01A1               	clrf	??_LCD_FillScreenGraphics+1
 11898  1069  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 11899  106A  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 11900  106B  30F0               	movlw	240
 11901  106C  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 11902  106D  0820               	movf	??_LCD_FillScreenGraphics,w
 11903  106E  390F               	andlw	15
 11904  106F  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 11905  1070  30F0               	movlw	240
 11906  1071  05A0               	andwf	??_LCD_FillScreenGraphics,f
 11907  1072  0878               	movf	LCD_FillScreenGraphics@x,w
 11908  1073  00A2               	movwf	??_LCD_FillScreenGraphics+2
 11909  1074  01A3               	clrf	??_LCD_FillScreenGraphics+3
 11910  1075  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 11911  1076  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 11912  1077  0820               	movf	??_LCD_FillScreenGraphics,w
 11913  1078  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 11914  1079  00A4               	movwf	??_LCD_FillScreenGraphics+4
 11915  107A  0821               	movf	??_LCD_FillScreenGraphics+1,w
 11916  107B  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 11917  107C  00A5               	movwf	??_LCD_FillScreenGraphics+5
 11918  107D  0824               	movf	??_LCD_FillScreenGraphics+4,w
 11919  107E  3E01               	addlw	1
 11920  107F  00A6               	movwf	??_LCD_FillScreenGraphics+6
 11921  1080  3000               	movlw	0
 11922  1081  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 11923  1082  00A7               	movwf	??_LCD_FillScreenGraphics+7
 11924  1083  0875               	movf	LCD_FillScreenGraphics@graphic,w
 11925  1084  0726               	addwf	??_LCD_FillScreenGraphics+6,w
 11926  1085  0084               	movwf	4
 11927  1086  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 11928  1087  3D27               	addwfc	??_LCD_FillScreenGraphics+7,w
 11929  1088  0085               	movwf	5
 11930  1089  0800               	movf	0,w	;code access
 11931  108A  3199  21EF  3190   	fcall	_LCD_WriteData
 11932  108D  3001               	movlw	1
 11933  108E  0020               	movlb	0	; select bank0
 11934  108F  00A0               	movwf	??_LCD_FillScreenGraphics
 11935  1090  0820               	movf	??_LCD_FillScreenGraphics,w
 11936  1091  07F8               	addwf	LCD_FillScreenGraphics@x,f
 11937  1092  2835               	goto	L13
 11938  1093                     l4349:	
 11939                           ;LDC_ROT.h: 408: }
 11940                           ;LDC_ROT.h: 409: }
 11941                           
 11942                           
 11943                           ;LDC_ROT.h: 410: else
 11944                           ;LDC_ROT.h: 411: {
 11945                           ;LDC_ROT.h: 412: for(x = 0; x < 8; x++)
 11946  1093  01F8               	clrf	LCD_FillScreenGraphics@x
 11947  1094  3008               	movlw	8
 11948  1095  0278               	subwf	LCD_FillScreenGraphics@x,w
 11949  1096  1803               	btfsc	3,0
 11950  1097  28F6               	goto	l4365
 11951  1098                     l4355:	
 11952                           
 11953                           ;LDC_ROT.h: 413: {
 11954                           ;LDC_ROT.h: 414: LCD_WriteCommand(0x80 | (y-32));
 11955  1098  0877               	movf	LCD_FillScreenGraphics@y,w
 11956  1099  3EE0               	addlw	224
 11957  109A  3880               	iorlw	128
 11958  109B  3199  21E8  3190   	fcall	_LCD_WriteCommand
 11959                           
 11960                           ;LDC_ROT.h: 415: LCD_WriteCommand(0x88 | x);
 11961  109E  0878               	movf	LCD_FillScreenGraphics@x,w
 11962  109F  3888               	iorlw	136
 11963  10A0  3199  21E8  3190   	fcall	_LCD_WriteCommand
 11964                           
 11965                           ;LDC_ROT.h: 416: LCD_WriteData(graphic[2*x + 16*y]);
 11966  10A3  0877               	movf	LCD_FillScreenGraphics@y,w
 11967  10A4  0020               	movlb	0	; select bank0
 11968  10A5  00A0               	movwf	??_LCD_FillScreenGraphics
 11969  10A6  01A1               	clrf	??_LCD_FillScreenGraphics+1
 11970  10A7  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 11971  10A8  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 11972  10A9  30F0               	movlw	240
 11973  10AA  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 11974  10AB  0820               	movf	??_LCD_FillScreenGraphics,w
 11975  10AC  390F               	andlw	15
 11976  10AD  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 11977  10AE  30F0               	movlw	240
 11978  10AF  05A0               	andwf	??_LCD_FillScreenGraphics,f
 11979  10B0  0878               	movf	LCD_FillScreenGraphics@x,w
 11980  10B1  00A2               	movwf	??_LCD_FillScreenGraphics+2
 11981  10B2  01A3               	clrf	??_LCD_FillScreenGraphics+3
 11982  10B3  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 11983  10B4  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 11984  10B5  0820               	movf	??_LCD_FillScreenGraphics,w
 11985  10B6  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 11986  10B7  00A4               	movwf	??_LCD_FillScreenGraphics+4
 11987  10B8  0821               	movf	??_LCD_FillScreenGraphics+1,w
 11988  10B9  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 11989  10BA  00A5               	movwf	??_LCD_FillScreenGraphics+5
 11990  10BB  0875               	movf	LCD_FillScreenGraphics@graphic,w
 11991  10BC  0724               	addwf	??_LCD_FillScreenGraphics+4,w
 11992  10BD  0084               	movwf	4
 11993  10BE  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 11994  10BF  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 11995  10C0  0085               	movwf	5
 11996  10C1  0800               	movf	0,w	;code access
 11997  10C2  3199  21EF  3190   	fcall	_LCD_WriteData
 11998                           
 11999                           ;LDC_ROT.h: 417: LCD_WriteData(graphic[2*x+1 + 16*y]);
 12000  10C5  0877               	movf	LCD_FillScreenGraphics@y,w
 12001  10C6  0020               	movlb	0	; select bank0
 12002  10C7  00A0               	movwf	??_LCD_FillScreenGraphics
 12003  10C8  01A1               	clrf	??_LCD_FillScreenGraphics+1
 12004  10C9  0EA0               	swapf	??_LCD_FillScreenGraphics,f
 12005  10CA  0EA1               	swapf	??_LCD_FillScreenGraphics+1,f
 12006  10CB  30F0               	movlw	240
 12007  10CC  05A1               	andwf	??_LCD_FillScreenGraphics+1,f
 12008  10CD  0820               	movf	??_LCD_FillScreenGraphics,w
 12009  10CE  390F               	andlw	15
 12010  10CF  04A1               	iorwf	??_LCD_FillScreenGraphics+1,f
 12011  10D0  30F0               	movlw	240
 12012  10D1  05A0               	andwf	??_LCD_FillScreenGraphics,f
 12013  10D2  0878               	movf	LCD_FillScreenGraphics@x,w
 12014  10D3  00A2               	movwf	??_LCD_FillScreenGraphics+2
 12015  10D4  01A3               	clrf	??_LCD_FillScreenGraphics+3
 12016  10D5  35A2               	lslf	??_LCD_FillScreenGraphics+2,f
 12017  10D6  0DA3               	rlf	??_LCD_FillScreenGraphics+3,f
 12018  10D7  0820               	movf	??_LCD_FillScreenGraphics,w
 12019  10D8  0722               	addwf	??_LCD_FillScreenGraphics+2,w
 12020  10D9  00A4               	movwf	??_LCD_FillScreenGraphics+4
 12021  10DA  0821               	movf	??_LCD_FillScreenGraphics+1,w
 12022  10DB  3D23               	addwfc	??_LCD_FillScreenGraphics+3,w
 12023  10DC  00A5               	movwf	??_LCD_FillScreenGraphics+5
 12024  10DD  0824               	movf	??_LCD_FillScreenGraphics+4,w
 12025  10DE  3E01               	addlw	1
 12026  10DF  00A6               	movwf	??_LCD_FillScreenGraphics+6
 12027  10E0  3000               	movlw	0
 12028  10E1  3D25               	addwfc	??_LCD_FillScreenGraphics+5,w
 12029  10E2  00A7               	movwf	??_LCD_FillScreenGraphics+7
 12030  10E3  0875               	movf	LCD_FillScreenGraphics@graphic,w
 12031  10E4  0726               	addwf	??_LCD_FillScreenGraphics+6,w
 12032  10E5  0084               	movwf	4
 12033  10E6  0876               	movf	LCD_FillScreenGraphics@graphic+1,w
 12034  10E7  3D27               	addwfc	??_LCD_FillScreenGraphics+7,w
 12035  10E8  0085               	movwf	5
 12036  10E9  0800               	movf	0,w	;code access
 12037  10EA  3199  21EF  3190   	fcall	_LCD_WriteData
 12038  10ED  3001               	movlw	1
 12039  10EE  0020               	movlb	0	; select bank0
 12040  10EF  00A0               	movwf	??_LCD_FillScreenGraphics
 12041  10F0  0820               	movf	??_LCD_FillScreenGraphics,w
 12042  10F1  07F8               	addwf	LCD_FillScreenGraphics@x,f
 12043  10F2  3008               	movlw	8
 12044  10F3  0278               	subwf	LCD_FillScreenGraphics@x,w
 12045  10F4  1C03               	skipc
 12046  10F5  2898               	goto	l4355
 12047  10F6                     l4365:	
 12048  10F6  3001               	movlw	1
 12049  10F7  0020               	movlb	0	; select bank0
 12050  10F8  00A0               	movwf	??_LCD_FillScreenGraphics
 12051  10F9  0820               	movf	??_LCD_FillScreenGraphics,w
 12052  10FA  07F7               	addwf	LCD_FillScreenGraphics@y,f
 12053  10FB  282C               	goto	L14
 12054  10FC                     __end_of_LCD_FillScreenGraphics:	
 12055                           
 12056                           	psect	text28
 12057  1AF3                     __ptext28:	
 12058 ;; *************** function _LCD_EnableGraphics *****************
 12059 ;; Defined at:
 12060 ;;		line 379 in file "LDC_ROT.h"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;		None
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;		None
 12065 ;; Return value:  Size  Location     Type
 12066 ;;                  1    wreg      void 
 12067 ;; Registers used:
 12068 ;;		wreg, status,2, status,0, pclath, cstack
 12069 ;; Tracked objects:
 12070 ;;		On entry : 0/0
 12071 ;;		On exit  : 0/0
 12072 ;;		Unchanged: 0/0
 12073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12078 ;;Total ram usage:        1 bytes
 12079 ;; Hardware stack levels used:    1
 12080 ;; Hardware stack levels required when called:    3
 12081 ;; This function calls:
 12082 ;;		_LCD_WriteCommand
 12083 ;; This function is called by:
 12084 ;;		_main
 12085 ;; This function uses a non-reentrant model
 12086 ;;
 12087                           
 12088                           
 12089                           ;psect for function _LCD_EnableGraphics
 12090  1AF3                     _LCD_EnableGraphics:	
 12091                           
 12092                           ;LDC_ROT.h: 381: LCD_WriteCommand(0x20);
 12093                           
 12094                           ;incstack = 0
 12095                           ; Regs used in _LCD_EnableGraphics: [wreg+status,2+status,0+pclath+cstack]
 12096  1AF3  3020               	movlw	32
 12097  1AF4  3199  21E8  319A   	fcall	_LCD_WriteCommand
 12098                           
 12099                           ;LDC_ROT.h: 382: _delay((unsigned long)((1)*(16000000/4000.0)));
 12100  1AF7  3006               	movlw	6
 12101  1AF8  00F5               	movwf	??_LCD_EnableGraphics
 12102  1AF9  3030               	movlw	48
 12103  1AFA                     u8097:	
 12104  1AFA  0B89               	decfsz	9,f
 12105  1AFB  2AFA               	goto	u8097
 12106  1AFC  0BF5               	decfsz	??_LCD_EnableGraphics,f
 12107  1AFD  2AFA               	goto	u8097
 12108  1AFE  3200               	nop2
 12109                           
 12110                           ;LDC_ROT.h: 383: LCD_WriteCommand(0x24);
 12111  1AFF  3024               	movlw	36
 12112  1B00  3199  21E8  319A   	fcall	_LCD_WriteCommand
 12113                           
 12114                           ;LDC_ROT.h: 384: _delay((unsigned long)((1)*(16000000/4000.0)));
 12115  1B03  3006               	movlw	6
 12116  1B04  00F5               	movwf	??_LCD_EnableGraphics
 12117  1B05  3030               	movlw	48
 12118  1B06                     u8107:	
 12119  1B06  0B89               	decfsz	9,f
 12120  1B07  2B06               	goto	u8107
 12121  1B08  0BF5               	decfsz	??_LCD_EnableGraphics,f
 12122  1B09  2B06               	goto	u8107
 12123  1B0A  3200               	nop2
 12124                           
 12125                           ;LDC_ROT.h: 385: LCD_WriteCommand(0x26);
 12126  1B0B  3026               	movlw	38
 12127  1B0C  3199  21E8  319A   	fcall	_LCD_WriteCommand
 12128                           
 12129                           ;LDC_ROT.h: 386: _delay((unsigned long)((1)*(16000000/4000.0)));
 12130  1B0F  3006               	movlw	6
 12131  1B10  00F5               	movwf	??_LCD_EnableGraphics
 12132  1B11  3030               	movlw	48
 12133  1B12                     u8117:	
 12134  1B12  0B89               	decfsz	9,f
 12135  1B13  2B12               	goto	u8117
 12136  1B14  0BF5               	decfsz	??_LCD_EnableGraphics,f
 12137  1B15  2B12               	goto	u8117
 12138  1B16  3200               	nop2
 12139  1B17  0008               	return
 12140  1B18                     __end_of_LCD_EnableGraphics:	
 12141                           
 12142                           	psect	text29
 12143  1A28                     __ptext29:	
 12144 ;; *************** function _LCD_DisableGraphics *****************
 12145 ;; Defined at:
 12146 ;;		line 389 in file "LDC_ROT.h"
 12147 ;; Parameters:    Size  Location     Type
 12148 ;;		None
 12149 ;; Auto vars:     Size  Location     Type
 12150 ;;		None
 12151 ;; Return value:  Size  Location     Type
 12152 ;;                  1    wreg      void 
 12153 ;; Registers used:
 12154 ;;		wreg, status,2, status,0, pclath, cstack
 12155 ;; Tracked objects:
 12156 ;;		On entry : 0/0
 12157 ;;		On exit  : 0/0
 12158 ;;		Unchanged: 0/0
 12159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12163 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12164 ;;Total ram usage:        1 bytes
 12165 ;; Hardware stack levels used:    1
 12166 ;; Hardware stack levels required when called:    3
 12167 ;; This function calls:
 12168 ;;		_LCD_WriteCommand
 12169 ;; This function is called by:
 12170 ;;		_main
 12171 ;; This function uses a non-reentrant model
 12172 ;;
 12173                           
 12174                           
 12175                           ;psect for function _LCD_DisableGraphics
 12176  1A28                     _LCD_DisableGraphics:	
 12177                           
 12178                           ;LDC_ROT.h: 391: LCD_WriteCommand(0x20);
 12179                           
 12180                           ;incstack = 0
 12181                           ; Regs used in _LCD_DisableGraphics: [wreg+status,2+status,0+pclath+cstack]
 12182  1A28  3020               	movlw	32
 12183  1A29  3199  21E8  319A   	fcall	_LCD_WriteCommand
 12184                           
 12185                           ;LDC_ROT.h: 392: _delay((unsigned long)((1)*(16000000/4000.0)));
 12186  1A2C  3006               	movlw	6
 12187  1A2D  00F5               	movwf	??_LCD_DisableGraphics
 12188  1A2E  3030               	movlw	48
 12189  1A2F                     u8127:	
 12190  1A2F  0B89               	decfsz	9,f
 12191  1A30  2A2F               	goto	u8127
 12192  1A31  0BF5               	decfsz	??_LCD_DisableGraphics,f
 12193  1A32  2A2F               	goto	u8127
 12194  1A33  3200               	nop2
 12195  1A34  0008               	return
 12196  1A35                     __end_of_LCD_DisableGraphics:	
 12197                           
 12198                           	psect	text30
 12199  1B18                     __ptext30:	
 12200 ;; *************** function _LCD_ClearGraphics *****************
 12201 ;; Defined at:
 12202 ;;		line 526 in file "LDC_ROT.h"
 12203 ;; Parameters:    Size  Location     Type
 12204 ;;		None
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;  y               1    7[COMMON] unsigned char 
 12207 ;;  x               1    6[COMMON] unsigned char 
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  1    wreg      void 
 12210 ;; Registers used:
 12211 ;;		wreg, status,2, status,0, pclath, cstack
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12218 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12221 ;;Total ram usage:        3 bytes
 12222 ;; Hardware stack levels used:    1
 12223 ;; Hardware stack levels required when called:    3
 12224 ;; This function calls:
 12225 ;;		_LCD_WriteCommand
 12226 ;;		_LCD_WriteData
 12227 ;; This function is called by:
 12228 ;;		_main
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232                           
 12233                           ;psect for function _LCD_ClearGraphics
 12234  1B18                     _LCD_ClearGraphics:	
 12235                           
 12236                           ;LDC_ROT.h: 530: unsigned char x, y;
 12237                           ;LDC_ROT.h: 531: for(y = 0; y < 64; y++)
 12238                           
 12239                           ;incstack = 0
 12240                           ; Regs used in _LCD_ClearGraphics: [wreg+status,2+status,0+pclath+cstack]
 12241  1B18  01F7               	clrf	LCD_ClearGraphics@y
 12242  1B19                     L16:	
 12243  1B19  3040               	movlw	64
 12244  1B1A  0277               	subwf	LCD_ClearGraphics@y,w
 12245  1B1B  1803               	btfsc	3,0
 12246  1B1C  0008               	return
 12247                           
 12248                           ;LDC_ROT.h: 532: {
 12249                           ;LDC_ROT.h: 533: if(y < 32)
 12250  1B1D  3020               	movlw	32
 12251  1B1E  0277               	subwf	LCD_ClearGraphics@y,w
 12252  1B1F  1803               	skipnc
 12253  1B20  2B28               	goto	l4379
 12254                           
 12255                           ;LDC_ROT.h: 534: {
 12256                           ;LDC_ROT.h: 535: LCD_WriteCommand(0x80 | y);
 12257  1B21  0877               	movf	LCD_ClearGraphics@y,w
 12258  1B22  3880               	iorlw	128
 12259  1B23  3199  21E8  319B   	fcall	_LCD_WriteCommand
 12260                           
 12261                           ;LDC_ROT.h: 536: LCD_WriteCommand(0x80);
 12262  1B26  3080               	movlw	128
 12263  1B27  2B2F               	goto	L15
 12264  1B28                     l4379:	
 12265                           ;LDC_ROT.h: 537: }
 12266                           
 12267                           
 12268                           ;LDC_ROT.h: 538: else
 12269                           ;LDC_ROT.h: 539: {
 12270                           ;LDC_ROT.h: 540: LCD_WriteCommand(0x80 | (y-32));
 12271  1B28  0877               	movf	LCD_ClearGraphics@y,w
 12272  1B29  3EE0               	addlw	224
 12273  1B2A  3880               	iorlw	128
 12274  1B2B  3199  21E8  319B   	fcall	_LCD_WriteCommand
 12275                           
 12276                           ;LDC_ROT.h: 541: LCD_WriteCommand(0x88);
 12277  1B2E  3088               	movlw	136
 12278  1B2F                     L15:	
 12279  1B2F  3199  21E8  319B   	fcall	_LCD_WriteCommand
 12280                           
 12281                           ;LDC_ROT.h: 542: }
 12282                           ;LDC_ROT.h: 543: for(x = 0; x < 8; x++)
 12283  1B32  01F6               	clrf	LCD_ClearGraphics@x
 12284  1B33  3008               	movlw	8
 12285  1B34  0276               	subwf	LCD_ClearGraphics@x,w
 12286  1B35  1803               	btfsc	3,0
 12287  1B36  2B47               	goto	l4393
 12288  1B37                     l4387:	
 12289                           
 12290                           ;LDC_ROT.h: 544: {
 12291                           ;LDC_ROT.h: 545: LCD_WriteData(0x00);
 12292  1B37  3000               	movlw	0
 12293  1B38  3199  21EF  319B   	fcall	_LCD_WriteData
 12294                           
 12295                           ;LDC_ROT.h: 546: LCD_WriteData(0x00);
 12296  1B3B  3000               	movlw	0
 12297  1B3C  3199  21EF  319B   	fcall	_LCD_WriteData
 12298  1B3F  3001               	movlw	1
 12299  1B40  00F5               	movwf	??_LCD_ClearGraphics
 12300  1B41  0875               	movf	??_LCD_ClearGraphics,w
 12301  1B42  07F6               	addwf	LCD_ClearGraphics@x,f
 12302  1B43  3008               	movlw	8
 12303  1B44  0276               	subwf	LCD_ClearGraphics@x,w
 12304  1B45  1C03               	skipc
 12305  1B46  2B37               	goto	l4387
 12306  1B47                     l4393:	
 12307  1B47  3001               	movlw	1
 12308  1B48  00F5               	movwf	??_LCD_ClearGraphics
 12309  1B49  0875               	movf	??_LCD_ClearGraphics,w
 12310  1B4A  07F7               	addwf	LCD_ClearGraphics@y,f
 12311  1B4B  2B19               	goto	L16
 12312  1B4C                     __end_of_LCD_ClearGraphics:	
 12313                           
 12314                           	psect	text31
 12315  19EF                     __ptext31:	
 12316 ;; *************** function _LCD_WriteData *****************
 12317 ;; Defined at:
 12318 ;;		line 349 in file "LDC_ROT.h"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;  data            1    wreg     unsigned char 
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;  data            1    4[COMMON] unsigned char 
 12323 ;; Return value:  Size  Location     Type
 12324 ;;                  1    wreg      void 
 12325 ;; Registers used:
 12326 ;;		wreg, status,2, status,0, pclath, cstack
 12327 ;; Tracked objects:
 12328 ;;		On entry : 0/0
 12329 ;;		On exit  : 0/0
 12330 ;;		Unchanged: 0/0
 12331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12336 ;;Total ram usage:        1 bytes
 12337 ;; Hardware stack levels used:    1
 12338 ;; Hardware stack levels required when called:    2
 12339 ;; This function calls:
 12340 ;;		_LCD_WriteByte
 12341 ;; This function is called by:
 12342 ;;		_LCD_TextDisplayString
 12343 ;;		_LCD_FillScreenGraphics
 12344 ;;		_LCD_ClearGraphics
 12345 ;;		_LCD_GraphicsDisplayString
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           
 12350                           ;psect for function _LCD_WriteData
 12351  19EF                     _LCD_WriteData:	
 12352                           
 12353                           ;incstack = 0
 12354                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0+pclath+cstack]
 12355                           ;LCD_WriteData@data stored from wreg
 12356  19EF  00F4               	movwf	LCD_WriteData@data
 12357                           
 12358                           ;LDC_ROT.h: 351: LATBbits.LATB0=1;
 12359  19F0  0022               	movlb	2	; select bank2
 12360  19F1  140D               	bsf	13,0	;volatile
 12361                           
 12362                           ;LDC_ROT.h: 352: LCD_WriteByte(data);
 12363  19F2  0874               	movf	LCD_WriteData@data,w
 12364  19F3  319E  2601         	fcall	_LCD_WriteByte
 12365  19F5  0008               	return
 12366  19F6                     __end_of_LCD_WriteData:	
 12367                           
 12368                           	psect	text32
 12369  19E8                     __ptext32:	
 12370 ;; *************** function _LCD_WriteCommand *****************
 12371 ;; Defined at:
 12372 ;;		line 355 in file "LDC_ROT.h"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;  command         1    wreg     unsigned char 
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;  command         1    4[COMMON] unsigned char 
 12377 ;; Return value:  Size  Location     Type
 12378 ;;                  1    wreg      void 
 12379 ;; Registers used:
 12380 ;;		wreg, status,2, status,0, pclath, cstack
 12381 ;; Tracked objects:
 12382 ;;		On entry : 0/0
 12383 ;;		On exit  : 0/0
 12384 ;;		Unchanged: 0/0
 12385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12390 ;;Total ram usage:        1 bytes
 12391 ;; Hardware stack levels used:    1
 12392 ;; Hardware stack levels required when called:    2
 12393 ;; This function calls:
 12394 ;;		_LCD_WriteByte
 12395 ;; This function is called by:
 12396 ;;		_LCD_Init
 12397 ;;		_LCD_TextDisplayString
 12398 ;;		_LCD_EnableGraphics
 12399 ;;		_LCD_DisableGraphics
 12400 ;;		_LCD_FillScreenGraphics
 12401 ;;		_LCD_ClearGraphics
 12402 ;;		_LCD_GraphicsDisplayString
 12403 ;; This function uses a non-reentrant model
 12404 ;;
 12405                           
 12406                           
 12407                           ;psect for function _LCD_WriteCommand
 12408  19E8                     _LCD_WriteCommand:	
 12409                           
 12410                           ;incstack = 0
 12411                           ; Regs used in _LCD_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 12412                           ;LCD_WriteCommand@command stored from wreg
 12413  19E8  00F4               	movwf	LCD_WriteCommand@command
 12414                           
 12415                           ;LDC_ROT.h: 357: LATBbits.LATB0=0;
 12416  19E9  0022               	movlb	2	; select bank2
 12417  19EA  100D               	bcf	13,0	;volatile
 12418                           
 12419                           ;LDC_ROT.h: 358: LCD_WriteByte(command);
 12420  19EB  0874               	movf	LCD_WriteCommand@command,w
 12421  19EC  319E  2601         	fcall	_LCD_WriteByte
 12422  19EE  0008               	return
 12423  19EF                     __end_of_LCD_WriteCommand:	
 12424                           
 12425                           	psect	text33
 12426  1E01                     __ptext33:	
 12427 ;; *************** function _LCD_WriteByte *****************
 12428 ;; Defined at:
 12429 ;;		line 324 in file "LDC_ROT.h"
 12430 ;; Parameters:    Size  Location     Type
 12431 ;;  command         1    wreg     unsigned char 
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;  command         1    3[COMMON] unsigned char 
 12434 ;; Return value:  Size  Location     Type
 12435 ;;                  1    wreg      void 
 12436 ;; Registers used:
 12437 ;;		wreg, status,2, status,0
 12438 ;; Tracked objects:
 12439 ;;		On entry : 0/0
 12440 ;;		On exit  : 0/0
 12441 ;;		Unchanged: 0/0
 12442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12446 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12447 ;;Total ram usage:        3 bytes
 12448 ;; Hardware stack levels used:    1
 12449 ;; Hardware stack levels required when called:    1
 12450 ;; This function calls:
 12451 ;;		Nothing
 12452 ;; This function is called by:
 12453 ;;		_LCD_WriteData
 12454 ;;		_LCD_WriteCommand
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           
 12458                           
 12459                           ;psect for function _LCD_WriteByte
 12460  1E01                     _LCD_WriteByte:	
 12461                           
 12462                           ;incstack = 0
 12463                           ; Regs used in _LCD_WriteByte: [wreg+status,2+status,0]
 12464                           ;LCD_WriteByte@command stored from wreg
 12465  1E01  00F3               	movwf	LCD_WriteByte@command
 12466                           
 12467                           ;LDC_ROT.h: 326: LATBbits.LATB1 = 1;
 12468  1E02  0022               	movlb	2	; select bank2
 12469  1E03  148D               	bsf	13,1	;volatile
 12470                           
 12471                           ;LDC_ROT.h: 327: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12472  1E04  301A               	movlw	26
 12473  1E05                     u8137:	
 12474  1E05  0B89               	decfsz	9,f
 12475  1E06  2E05               	goto	u8137
 12476  1E07  3200               	nop2
 12477                           
 12478                           ;LDC_ROT.h: 329: LATBbits.LATB3 = (command & (1 << 4)) >> 4;
 12479  1E08  0873               	movf	LCD_WriteByte@command,w
 12480  1E09  00F1               	movwf	??_LCD_WriteByte
 12481  1E0A  3004               	movlw	4
 12482  1E0B                     u5355:	
 12483  1E0B  36F1               	lsrf	??_LCD_WriteByte,f
 12484  1E0C  0B89               	decfsz	9,f
 12485  1E0D  2E0B               	goto	u5355
 12486  1E0E  0871               	movf	??_LCD_WriteByte,w
 12487  1E0F  3901               	andlw	1
 12488  1E10  00F2               	movwf	??_LCD_WriteByte+1
 12489  1E11  0DF2               	rlf	??_LCD_WriteByte+1,f
 12490  1E12  0DF2               	rlf	??_LCD_WriteByte+1,f
 12491  1E13  0DF2               	rlf	??_LCD_WriteByte+1,f
 12492  1E14  0022               	movlb	2	; select bank2
 12493  1E15  080D               	movf	13,w	;volatile
 12494  1E16  0672               	xorwf	??_LCD_WriteByte+1,w
 12495  1E17  39F7               	andlw	-9
 12496  1E18  0672               	xorwf	??_LCD_WriteByte+1,w
 12497  1E19  008D               	movwf	13	;volatile
 12498                           
 12499                           ;LDC_ROT.h: 330: LATBbits.LATB4 = (command & (1 << 5)) >> 5;
 12500  1E1A  0873               	movf	LCD_WriteByte@command,w
 12501  1E1B  00F1               	movwf	??_LCD_WriteByte
 12502  1E1C  3005               	movlw	5
 12503  1E1D                     u5365:	
 12504  1E1D  36F1               	lsrf	??_LCD_WriteByte,f
 12505  1E1E  0B89               	decfsz	9,f
 12506  1E1F  2E1D               	goto	u5365
 12507  1E20  0871               	movf	??_LCD_WriteByte,w
 12508  1E21  3901               	andlw	1
 12509  1E22  00F2               	movwf	??_LCD_WriteByte+1
 12510  1E23  0EF2               	swapf	??_LCD_WriteByte+1,f
 12511  1E24  080D               	movf	13,w	;volatile
 12512  1E25  0672               	xorwf	??_LCD_WriteByte+1,w
 12513  1E26  39EF               	andlw	-17
 12514  1E27  0672               	xorwf	??_LCD_WriteByte+1,w
 12515  1E28  008D               	movwf	13	;volatile
 12516                           
 12517                           ;LDC_ROT.h: 331: LATBbits.LATB5 = (command & (1 << 6)) >> 6;
 12518  1E29  0873               	movf	LCD_WriteByte@command,w
 12519  1E2A  00F1               	movwf	??_LCD_WriteByte
 12520  1E2B  3006               	movlw	6
 12521  1E2C                     u5375:	
 12522  1E2C  36F1               	lsrf	??_LCD_WriteByte,f
 12523  1E2D  0B89               	decfsz	9,f
 12524  1E2E  2E2C               	goto	u5375
 12525  1E2F  0871               	movf	??_LCD_WriteByte,w
 12526  1E30  3901               	andlw	1
 12527  1E31  00F2               	movwf	??_LCD_WriteByte+1
 12528  1E32  0EF2               	swapf	??_LCD_WriteByte+1,f
 12529  1E33  0DF2               	rlf	??_LCD_WriteByte+1,f
 12530  1E34  080D               	movf	13,w	;volatile
 12531  1E35  0672               	xorwf	??_LCD_WriteByte+1,w
 12532  1E36  39DF               	andlw	-33
 12533  1E37  0672               	xorwf	??_LCD_WriteByte+1,w
 12534  1E38  008D               	movwf	13	;volatile
 12535                           
 12536                           ;LDC_ROT.h: 332: LATBbits.LATB6 = (command & (1 << 7)) >> 7;
 12537  1E39  0873               	movf	LCD_WriteByte@command,w
 12538  1E3A  00F1               	movwf	??_LCD_WriteByte
 12539  1E3B  3007               	movlw	7
 12540  1E3C                     u5385:	
 12541  1E3C  36F1               	lsrf	??_LCD_WriteByte,f
 12542  1E3D  0B89               	decfsz	9,f
 12543  1E3E  2E3C               	goto	u5385
 12544  1E3F  0871               	movf	??_LCD_WriteByte,w
 12545  1E40  3901               	andlw	1
 12546  1E41  00F2               	movwf	??_LCD_WriteByte+1
 12547  1E42  0EF2               	swapf	??_LCD_WriteByte+1,f
 12548  1E43  0DF2               	rlf	??_LCD_WriteByte+1,f
 12549  1E44  0DF2               	rlf	??_LCD_WriteByte+1,f
 12550  1E45  080D               	movf	13,w	;volatile
 12551  1E46  0672               	xorwf	??_LCD_WriteByte+1,w
 12552  1E47  39BF               	andlw	-65
 12553  1E48  0672               	xorwf	??_LCD_WriteByte+1,w
 12554  1E49  008D               	movwf	13	;volatile
 12555                           
 12556                           ;LDC_ROT.h: 333: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12557  1E4A  301A               	movlw	26
 12558  1E4B                     u8147:	
 12559  1E4B  0B89               	decfsz	9,f
 12560  1E4C  2E4B               	goto	u8147
 12561  1E4D  3200               	nop2
 12562                           
 12563                           ;LDC_ROT.h: 334: LATBbits.LATB1 = 0;
 12564  1E4E  0022               	movlb	2	; select bank2
 12565  1E4F  108D               	bcf	13,1	;volatile
 12566                           
 12567                           ;LDC_ROT.h: 336: LATBbits.LATB1 = 1;
 12568  1E50  148D               	bsf	13,1	;volatile
 12569                           
 12570                           ;LDC_ROT.h: 337: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12571  1E51  301A               	movlw	26
 12572  1E52                     u8157:	
 12573  1E52  0B89               	decfsz	9,f
 12574  1E53  2E52               	goto	u8157
 12575  1E54  3200               	nop2
 12576                           
 12577                           ;LDC_ROT.h: 339: LATBbits.LATB3 = (command & (1 << 0)) >> 0;
 12578  1E55  0873               	movf	LCD_WriteByte@command,w
 12579  1E56  3901               	andlw	1
 12580  1E57  00F1               	movwf	??_LCD_WriteByte
 12581  1E58  0DF1               	rlf	??_LCD_WriteByte,f
 12582  1E59  0DF1               	rlf	??_LCD_WriteByte,f
 12583  1E5A  0DF1               	rlf	??_LCD_WriteByte,f
 12584  1E5B  0022               	movlb	2	; select bank2
 12585  1E5C  080D               	movf	13,w	;volatile
 12586  1E5D  0671               	xorwf	??_LCD_WriteByte,w
 12587  1E5E  39F7               	andlw	-9
 12588  1E5F  0671               	xorwf	??_LCD_WriteByte,w
 12589  1E60  008D               	movwf	13	;volatile
 12590                           
 12591                           ;LDC_ROT.h: 340: LATBbits.LATB4 = (command & (1 << 1)) >> 1;
 12592  1E61  3673               	lsrf	LCD_WriteByte@command,w
 12593  1E62  3901               	andlw	1
 12594  1E63  00F1               	movwf	??_LCD_WriteByte
 12595  1E64  0EF1               	swapf	??_LCD_WriteByte,f
 12596  1E65  080D               	movf	13,w	;volatile
 12597  1E66  0671               	xorwf	??_LCD_WriteByte,w
 12598  1E67  39EF               	andlw	-17
 12599  1E68  0671               	xorwf	??_LCD_WriteByte,w
 12600  1E69  008D               	movwf	13	;volatile
 12601                           
 12602                           ;LDC_ROT.h: 341: LATBbits.LATB5 = (command & (1 << 2)) >> 2;
 12603  1E6A  0873               	movf	LCD_WriteByte@command,w
 12604  1E6B  00F1               	movwf	??_LCD_WriteByte
 12605  1E6C  3002               	movlw	2
 12606  1E6D                     u5395:	
 12607  1E6D  36F1               	lsrf	??_LCD_WriteByte,f
 12608  1E6E  0B89               	decfsz	9,f
 12609  1E6F  2E6D               	goto	u5395
 12610  1E70  0871               	movf	??_LCD_WriteByte,w
 12611  1E71  3901               	andlw	1
 12612  1E72  00F2               	movwf	??_LCD_WriteByte+1
 12613  1E73  0EF2               	swapf	??_LCD_WriteByte+1,f
 12614  1E74  0DF2               	rlf	??_LCD_WriteByte+1,f
 12615  1E75  080D               	movf	13,w	;volatile
 12616  1E76  0672               	xorwf	??_LCD_WriteByte+1,w
 12617  1E77  39DF               	andlw	-33
 12618  1E78  0672               	xorwf	??_LCD_WriteByte+1,w
 12619  1E79  008D               	movwf	13	;volatile
 12620                           
 12621                           ;LDC_ROT.h: 342: LATBbits.LATB6 = (command & (1 << 3)) >> 3;
 12622  1E7A  0873               	movf	LCD_WriteByte@command,w
 12623  1E7B  00F1               	movwf	??_LCD_WriteByte
 12624  1E7C  3003               	movlw	3
 12625  1E7D                     u5405:	
 12626  1E7D  36F1               	lsrf	??_LCD_WriteByte,f
 12627  1E7E  0B89               	decfsz	9,f
 12628  1E7F  2E7D               	goto	u5405
 12629  1E80  0871               	movf	??_LCD_WriteByte,w
 12630  1E81  3901               	andlw	1
 12631  1E82  00F2               	movwf	??_LCD_WriteByte+1
 12632  1E83  0EF2               	swapf	??_LCD_WriteByte+1,f
 12633  1E84  0DF2               	rlf	??_LCD_WriteByte+1,f
 12634  1E85  0DF2               	rlf	??_LCD_WriteByte+1,f
 12635  1E86  080D               	movf	13,w	;volatile
 12636  1E87  0672               	xorwf	??_LCD_WriteByte+1,w
 12637  1E88  39BF               	andlw	-65
 12638  1E89  0672               	xorwf	??_LCD_WriteByte+1,w
 12639  1E8A  008D               	movwf	13	;volatile
 12640                           
 12641                           ;LDC_ROT.h: 343: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12642  1E8B  301A               	movlw	26
 12643  1E8C                     u8167:	
 12644  1E8C  0B89               	decfsz	9,f
 12645  1E8D  2E8C               	goto	u8167
 12646  1E8E  3200               	nop2
 12647                           
 12648                           ;LDC_ROT.h: 344: LATBbits.LATB1 = 0;
 12649  1E8F  0022               	movlb	2	; select bank2
 12650  1E90  108D               	bcf	13,1	;volatile
 12651                           
 12652                           ;LDC_ROT.h: 346: _delay((unsigned long)((20)*(16000000/4000000.0)));
 12653  1E91  301A               	movlw	26
 12654  1E92                     u8177:	
 12655  1E92  0B89               	decfsz	9,f
 12656  1E93  2E92               	goto	u8177
 12657  1E94  3200               	nop2
 12658  1E95  0008               	return
 12659  1E96                     __end_of_LCD_WriteByte:	
 12660                           
 12661                           	psect	text34
 12662  1A1E                     __ptext34:	
 12663 ;; *************** function _InitKeypad *****************
 12664 ;; Defined at:
 12665 ;;		line 83 in file "LOAD20210.c"
 12666 ;; Parameters:    Size  Location     Type
 12667 ;;		None
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;		None
 12670 ;; Return value:  Size  Location     Type
 12671 ;;                  1    wreg      void 
 12672 ;; Registers used:
 12673 ;;		wreg, status,2
 12674 ;; Tracked objects:
 12675 ;;		On entry : 0/0
 12676 ;;		On exit  : 0/0
 12677 ;;		Unchanged: 0/0
 12678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12683 ;;Total ram usage:        0 bytes
 12684 ;; Hardware stack levels used:    1
 12685 ;; Hardware stack levels required when called:    1
 12686 ;; This function calls:
 12687 ;;		Nothing
 12688 ;; This function is called by:
 12689 ;;		_main
 12690 ;; This function uses a non-reentrant model
 12691 ;;
 12692                           
 12693                           
 12694                           ;psect for function _InitKeypad
 12695  1A1E                     _InitKeypad:	
 12696                           
 12697                           ;LOAD20210.c: 86: OPTION_REGbits.nWPUEN =0;
 12698                           
 12699                           ;incstack = 0
 12700                           ; Regs used in _InitKeypad: [wreg+status,2]
 12701  1A1E  0021               	movlb	1	; select bank1
 12702  1A1F  1397               	bcf	23,7	;volatile
 12703                           
 12704                           ;LOAD20210.c: 87: TRISD = 0b11110000;
 12705  1A20  30F0               	movlw	240
 12706  1A21  008F               	movwf	15	;volatile
 12707                           
 12708                           ;LOAD20210.c: 88: WPUD = 0b11110000;
 12709  1A22  30F0               	movlw	240
 12710  1A23  0024               	movlb	4	; select bank4
 12711  1A24  008F               	movwf	15	;volatile
 12712                           
 12713                           ;LOAD20210.c: 89: ANSELD=0;
 12714  1A25  0023               	movlb	3	; select bank3
 12715  1A26  018F               	clrf	15	;volatile
 12716  1A27  0008               	return
 12717  1A28                     __end_of_InitKeypad:	
 12718                           
 12719                           	psect	text35
 12720  27FA                     __ptext35:	
 12721 ;; *************** function _DAC_CONFIG *****************
 12722 ;; Defined at:
 12723 ;;		line 259 in file "LDC_ROT.h"
 12724 ;; Parameters:    Size  Location     Type
 12725 ;;		None
 12726 ;; Auto vars:     Size  Location     Type
 12727 ;;		None
 12728 ;; Return value:  Size  Location     Type
 12729 ;;                  1    wreg      void 
 12730 ;; Registers used:
 12731 ;;		wreg
 12732 ;; Tracked objects:
 12733 ;;		On entry : 0/0
 12734 ;;		On exit  : 0/0
 12735 ;;		Unchanged: 0/0
 12736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12741 ;;Total ram usage:        0 bytes
 12742 ;; Hardware stack levels used:    1
 12743 ;; Hardware stack levels required when called:    1
 12744 ;; This function calls:
 12745 ;;		Nothing
 12746 ;; This function is called by:
 12747 ;;		_main
 12748 ;; This function uses a non-reentrant model
 12749 ;;
 12750                           
 12751                           
 12752                           ;psect for function _DAC_CONFIG
 12753  27FA                     _DAC_CONFIG:	
 12754                           
 12755                           ;LDC_ROT.h: 261: DAC5CON0 = 0b10100000;
 12756                           
 12757                           ;incstack = 0
 12758                           ; Regs used in _DAC_CONFIG: [wreg]
 12759  27FA  30A0               	movlw	160
 12760  27FB  002B               	movlb	11	; select bank11
 12761  27FC  0098               	movwf	24	;volatile
 12762                           
 12763                           ;LDC_ROT.h: 262: DACLD = 0xff;
 12764  27FD  30FF               	movlw	255
 12765  27FE  008D               	movwf	13	;volatile
 12766  27FF  0008               	return
 12767  2800                     __end_of_DAC_CONFIG:	
 12768                           
 12769                           	psect	text36
 12770  19FD                     __ptext36:	
 12771 ;; *************** function _DAC5_Load10bitInputData *****************
 12772 ;; Defined at:
 12773 ;;		line 265 in file "LDC_ROT.h"
 12774 ;; Parameters:    Size  Location     Type
 12775 ;;  input16BitDa    2    1[COMMON] unsigned int 
 12776 ;; Auto vars:     Size  Location     Type
 12777 ;;		None
 12778 ;; Return value:  Size  Location     Type
 12779 ;;                  1    wreg      void 
 12780 ;; Registers used:
 12781 ;;		wreg, status,2
 12782 ;; Tracked objects:
 12783 ;;		On entry : 0/0
 12784 ;;		On exit  : 0/0
 12785 ;;		Unchanged: 0/0
 12786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12791 ;;Total ram usage:        2 bytes
 12792 ;; Hardware stack levels used:    1
 12793 ;; Hardware stack levels required when called:    1
 12794 ;; This function calls:
 12795 ;;		Nothing
 12796 ;; This function is called by:
 12797 ;;		_main
 12798 ;; This function uses a non-reentrant model
 12799 ;;
 12800                           
 12801                           
 12802                           ;psect for function _DAC5_Load10bitInputData
 12803  19FD                     _DAC5_Load10bitInputData:	
 12804                           
 12805                           ;LDC_ROT.h: 269: DAC1CON0bits.DAC1FM = 1;
 12806                           
 12807                           ;incstack = 0
 12808                           ; Regs used in _DAC5_Load10bitInputData: [wreg+status,2]
 12809  19FD  002B               	movlb	11	; select bank11
 12810  19FE  170E               	bsf	14,6	;volatile
 12811                           
 12812                           ;LDC_ROT.h: 272: DAC5REFL = (uint8_t) input16BitData;
 12813  19FF  0871               	movf	DAC5_Load10bitInputData@input16BitData,w
 12814  1A00  0099               	movwf	25	;volatile
 12815                           
 12816                           ;LDC_ROT.h: 273: DAC5REFH = (uint8_t)(input16BitData >> 8);
 12817  1A01  0872               	movf	DAC5_Load10bitInputData@input16BitData+1,w
 12818  1A02  009A               	movwf	26	;volatile
 12819                           
 12820                           ;LDC_ROT.h: 275: (DACLDbits.DAC1LD = 1);
 12821  1A03  140D               	bsf	13,0	;volatile
 12822  1A04  0008               	return
 12823  1A05                     __end_of_DAC5_Load10bitInputData:	
 12824                           
 12825                           	psect	text37
 12826  1A15                     __ptext37:	
 12827 ;; *************** function _ADC_Initialize *****************
 12828 ;; Defined at:
 12829 ;;		line 67 in file "ADC_INIT.c"
 12830 ;; Parameters:    Size  Location     Type
 12831 ;;		None
 12832 ;; Auto vars:     Size  Location     Type
 12833 ;;		None
 12834 ;; Return value:  Size  Location     Type
 12835 ;;                  1    wreg      void 
 12836 ;; Registers used:
 12837 ;;		wreg, status,2
 12838 ;; Tracked objects:
 12839 ;;		On entry : 0/0
 12840 ;;		On exit  : 0/0
 12841 ;;		Unchanged: 0/0
 12842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12847 ;;Total ram usage:        0 bytes
 12848 ;; Hardware stack levels used:    1
 12849 ;; Hardware stack levels required when called:    1
 12850 ;; This function calls:
 12851 ;;		Nothing
 12852 ;; This function is called by:
 12853 ;;		_main
 12854 ;; This function uses a non-reentrant model
 12855 ;;
 12856                           
 12857                           
 12858                           ;psect for function _ADC_Initialize
 12859  1A15                     _ADC_Initialize:	
 12860                           
 12861                           ;ADC_INIT.c: 72: ADCON1 = 11010001 ;
 12862                           
 12863                           ;incstack = 0
 12864                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12865  1A15  30D1               	movlw	209
 12866  1A16  0029               	movlb	9	; select bank9
 12867  1A17  0091               	movwf	17	;volatile
 12868                           
 12869                           ;ADC_INIT.c: 75: ADCON2 = 0x00;
 12870  1A18  0192               	clrf	18	;volatile
 12871                           
 12872                           ;ADC_INIT.c: 78: ADRESL = 0x00;
 12873  1A19  018E               	clrf	14	;volatile
 12874                           
 12875                           ;ADC_INIT.c: 81: ADRESH = 0x00;
 12876  1A1A  018F               	clrf	15	;volatile
 12877                           
 12878                           ;ADC_INIT.c: 84: ADCON0 = 0x1F;
 12879  1A1B  301F               	movlw	31
 12880  1A1C  0090               	movwf	16	;volatile
 12881  1A1D  0008               	return
 12882  1A1E                     __end_of_ADC_Initialize:	
 12883                           
 12884                           	psect	text38
 12885  1A65                     __ptext38:	
 12886 ;; *************** function _ADC_GetConversion *****************
 12887 ;; Defined at:
 12888 ;;		line 115 in file "ADC_INIT.c"
 12889 ;; Parameters:    Size  Location     Type
 12890 ;;  channel         1    wreg     enum E17242
 12891 ;; Auto vars:     Size  Location     Type
 12892 ;;  channel         1    4[COMMON] enum E17242
 12893 ;; Return value:  Size  Location     Type
 12894 ;;                  2    1[COMMON] unsigned int 
 12895 ;; Registers used:
 12896 ;;		wreg, status,2, status,0
 12897 ;; Tracked objects:
 12898 ;;		On entry : 0/0
 12899 ;;		On exit  : 0/0
 12900 ;;		Unchanged: 0/0
 12901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12904 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12905 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12906 ;;Total ram usage:        4 bytes
 12907 ;; Hardware stack levels used:    1
 12908 ;; Hardware stack levels required when called:    1
 12909 ;; This function calls:
 12910 ;;		Nothing
 12911 ;; This function is called by:
 12912 ;;		_main
 12913 ;; This function uses a non-reentrant model
 12914 ;;
 12915                           
 12916                           
 12917                           ;psect for function _ADC_GetConversion
 12918  1A65                     _ADC_GetConversion:	
 12919                           
 12920                           ;incstack = 0
 12921                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 12922                           ;ADC_GetConversion@channel stored from wreg
 12923  1A65  00F4               	movwf	ADC_GetConversion@channel
 12924                           
 12925                           ;ADC_INIT.c: 118: ADCON0bits.CHS = channel;
 12926  1A66  0874               	movf	ADC_GetConversion@channel,w
 12927  1A67  00F3               	movwf	??_ADC_GetConversion
 12928  1A68  0DF3               	rlf	??_ADC_GetConversion,f
 12929  1A69  0DF3               	rlf	??_ADC_GetConversion,f
 12930  1A6A  0029               	movlb	9	; select bank9
 12931  1A6B  0810               	movf	16,w	;volatile
 12932  1A6C  0673               	xorwf	??_ADC_GetConversion,w
 12933  1A6D  3903               	andlw	-253
 12934  1A6E  0673               	xorwf	??_ADC_GetConversion,w
 12935  1A6F  0090               	movwf	16	;volatile
 12936                           
 12937                           ;ADC_INIT.c: 121: ADCON0bits.ADON = 1;
 12938  1A70  1410               	bsf	16,0	;volatile
 12939                           
 12940                           ;ADC_INIT.c: 124: _delay((unsigned long)((5)*(16000000/4000000.0)));
 12941  1A71  3006               	movlw	6
 12942  1A72                     u8187:	
 12943  1A72  0B89               	decfsz	9,f
 12944  1A73  2A72               	goto	u8187
 12945  1A74  3200               	nop2
 12946                           
 12947                           ;ADC_INIT.c: 127: ADCON0bits.GO = 1;
 12948  1A75  0029               	movlb	9	; select bank9
 12949  1A76  1490               	bsf	16,1	;volatile
 12950  1A77                     l338:	
 12951                           ;ADC_INIT.c: 131: {
 12952                           
 12953                           ;ADC_INIT.c: 130: while (ADCON0bits.GO)
 12954                           
 12955  1A77  1890               	btfsc	16,1	;volatile
 12956  1A78  2A77               	goto	l338
 12957                           
 12958                           ;ADC_INIT.c: 132: }
 12959                           ;ADC_INIT.c: 135: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12960  1A79  080F               	movf	15,w	;volatile
 12961  1A7A  00F2               	movwf	?_ADC_GetConversion+1
 12962  1A7B  080E               	movf	14,w	;volatile
 12963  1A7C  00F1               	movwf	?_ADC_GetConversion
 12964  1A7D  0008               	return
 12965  1A7E                     __end_of_ADC_GetConversion:	
 12966                           
 12967                           	psect	intentry
 12968  0004                     __pintentry:	
 12969 ;; *************** function _isr *****************
 12970 ;; Defined at:
 12971 ;;		line 111 in file "LOAD20210.c"
 12972 ;; Parameters:    Size  Location     Type
 12973 ;;		None
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;		None
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  1    wreg      void 
 12978 ;; Registers used:
 12979 ;;		status,2
 12980 ;; Tracked objects:
 12981 ;;		On entry : 0/0
 12982 ;;		On exit  : 0/0
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12989 ;;Total ram usage:        1 bytes
 12990 ;; Hardware stack levels used:    1
 12991 ;; This function calls:
 12992 ;;		Nothing
 12993 ;; This function is called by:
 12994 ;;		Interrupt level 1
 12995 ;; This function uses a non-reentrant model
 12996 ;;
 12997                           
 12998  0004                     _isr:	
 12999                           
 13000                           ;incstack = 0
 13001  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13002                           
 13003                           ; Regs used in _isr: [status,2]
 13004  0005  3180               	pagesel	$
 13005  0006  0020               	movlb	0	; select bank0
 13006  0007  087F               	movf	127,w
 13007  0008  00F0               	movwf	??_isr
 13008                           
 13009                           ;LOAD20210.c: 114: if (IOCAF3 == 1)
 13010  0009  0027               	movlb	7	; select bank7
 13011  000A  1D93               	btfss	19,3	;volatile
 13012  000B  2810               	goto	i1l283
 13013                           
 13014                           ;LOAD20210.c: 115: {
 13015                           ;LOAD20210.c: 116: IOCAF3 =0;
 13016  000C  1193               	bcf	19,3	;volatile
 13017                           
 13018                           ;LOAD20210.c: 118: count=0;
 13019  000D  0020               	movlb	0	; select bank0
 13020  000E  01E9               	clrf	_count
 13021  000F  01EA               	clrf	_count+1
 13022  0010                     i1l283:	
 13023  0010  0870               	movf	??_isr,w
 13024  0011  0020               	movlb	0	; select bank0
 13025  0012  00FF               	movwf	127
 13026  0013  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13027  0014  0009               	retfie
 13028  0015                     __end_of_isr:	
 13029  007E                     btemp	set	126	;btemp
 13030  007E                     int$flags	set	126
 13031  007E                     wtemp0	set	126


Data Sizes:
    Strings     42
    Constant    2646
    Data        63
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     73      76
    BANK1            80     28      73
    BANK2            80      0      25
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[3]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> naif(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_FillScreenGraphics@graphic	PTR const unsigned char  size(2) Largest target is 1024
		 -> des(CODE[1024]), 

    LCD_TextDisplayString@string	PTR unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_2(CODE[17]), naif(BANK1[17]), 


Critical Paths under _main in COMMON

    _main->___lwtoft
    _switch_press_scan->_keypad_scanner
    _sprintf->___awdiv
    _sprintf->___llmod
    _scale->___awdiv
    _fround->___awdiv
    ___wmul->___awdiv
    ___ftmul->___awdiv
    ___ftmul->___lwtoft
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___lwtoft->___ftpack
    _LCD_TextDisplayString->_LCD_WriteCommand
    _LCD_TextDisplayString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCommand
    _LCD_FillScreenGraphics->_LCD_WriteCommand
    _LCD_FillScreenGraphics->_LCD_WriteData
    _LCD_EnableGraphics->_LCD_WriteCommand
    _LCD_DisableGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteCommand
    _LCD_ClearGraphics->_LCD_WriteData
    _LCD_WriteData->_LCD_WriteByte
    _LCD_WriteCommand->_LCD_WriteByte

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   87790
                                             71 BANK0      2     2      0
                                             23 BANK1      5     5      0
                  _ADC_GetConversion
                     _ADC_Initialize
            _DAC5_Load10bitInputData
                         _DAC_CONFIG
                         _InitKeypad
                  _LCD_ClearGraphics
                _LCD_DisableGraphics
                 _LCD_EnableGraphics
             _LCD_FillScreenGraphics
                           _LCD_Init
              _LCD_TextDisplayString
                        _OP_AMP_init
              _OSCILLATOR_Initialize
                            ___ftadd
                            ___ftmul
                           ___lwtoft
                             ___wmul
                            _sprintf
                  _switch_press_scan
 ---------------------------------------------------------------------------------
 (1) _switch_press_scan                                    2     2      0      68
                                              3 COMMON     2     2      0
                     _keypad_scanner
 ---------------------------------------------------------------------------------
 (2) _keypad_scanner                                       2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             41    36      5   64924
                                             60 BANK0     11     6      5
                                              0 BANK1     23    23      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3   16145
                                             27 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              14    11      3   15866
                                             27 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    6450
                                              5 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    5262
                                             11 BANK0     16    10      6
                  _ADC_GetConversion (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1819
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1985
                                              8 COMMON     4     0      4
                                              0 BANK0      5     5      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     608
                                              1 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     827
                                              1 COMMON     6     0      6
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2643
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     848
                                             10 COMMON     2     2      0
                                              5 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     703
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     602
                                             36 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4401
                                             54 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    4151
                                             41 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     142
                                              1 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     814
                                              1 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2572
                                              9 COMMON     3     0      3
                                              0 BANK0      1     1      0
                  _ADC_GetConversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2464
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OP_AMP_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_TextDisplayString                                6     4      2    1135
                                              5 COMMON     6     4      2
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     279
                                              5 COMMON     2     2      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_FillScreenGraphics                              12    10      2    1366
                                              5 COMMON     4     2      2
                                              0 BANK0      8     8      0
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_EnableGraphics                                   1     1      0     279
                                              5 COMMON     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_DisableGraphics                                  1     1      0     279
                                              5 COMMON     1     1      0
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_ClearGraphics                                    3     3      0     787
                                              5 COMMON     3     3      0
                   _LCD_WriteCommand
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        1     1      0     279
                                              4 COMMON     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCommand                                     1     1      0     279
                                              4 COMMON     1     1      0
                      _LCD_WriteByte
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteByte                                        3     3      0     248
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitKeypad                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DAC_CONFIG                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DAC5_Load10bitInputData                              2     0      2     139
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _DAC5_Load10bitInputData
   _DAC_CONFIG
   _InitKeypad
   _LCD_ClearGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _LCD_DisableGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
   _LCD_EnableGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
   _LCD_FillScreenGraphics
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _LCD_Init
     _LCD_WriteCommand
       _LCD_WriteByte
   _LCD_TextDisplayString
     _LCD_WriteCommand
       _LCD_WriteByte
     _LCD_WriteData
       _LCD_WriteByte
   _OP_AMP_init
   _OSCILLATOR_Initialize
   ___ftadd
     ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftmul
     _ADC_GetConversion (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwtoft
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           _ADC_GetConversion (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       _ADC_GetConversion (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             _ADC_GetConversion (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_GetConversion (ARG)
               ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           _ADC_GetConversion (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _switch_press_scan
     _keypad_scanner

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      49       7       91.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      19       9       31.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      BB      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      BB      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 05 11:10:33 2021

                 ??_LCD_EnableGraphics 0075                            __CFG_CP$OFF 0000  
                         ___awdiv@sign 0022                    ___wmul@multiplicand 0027  
                  __size_of_DAC_CONFIG 0006                           ___ftadd@exp1 0055  
                         ___ftadd@exp2 0054                            __CFG_LVP$ON 0000  
                         ___ftadd@sign 0053                                    l210 1336  
                                  l204 1328                                    l221 137A  
                                  l213 134E                                    l205 1323  
                                  l230 139B                                    l222 1375  
                                  l214 1349                                    l241 13DF  
                                  l233 13B3                                    l225 138D  
                                  l217 1361                                    l209 133B  
                                  l250 1400                                    l242 13DA  
                                  l234 13AE                                    l226 1388  
                                  l218 135C                                    l261 1444  
                                  l253 141E                                    l245 13F2  
                                  l237 13CC                                    l229 13A0  
                                  l262 143F                                    l254 1419  
                                  l246 13ED                                    l238 13C7  
                                  l257 1431                                    l249 1405  
                                  l338 1A77                                    l450 1AA0  
                                  l266 1452                                    l258 142C  
                                  l290 0F8C                                    l293 0F87  
                                  l390 00D0                                    l439 05C7  
                                  l616 1303                                    l635 1D5B  
                                  l636 1D63                                    l628 1D48  
                                  l398 01F7                                    l736 1DE7  
                                  l659 119B                                    l685 1F7B  
                                  l695 1FF4                                    _GIE 005F  
                                  _Key 007C                                    _des 0631  
                                  _isr 0004                           ___awmod@sign 0077  
                         __CFG_BORV$LO 0000                                    wreg 0009  
                          _sprintf$918 00C2                      ?_LCD_WriteCommand 0070  
                         __CFG_ZCD$OFF 0000                     ??_LCD_WriteCommand 0074  
                                 l4101 12FA                                   l4021 1F9C  
                                 l4111 1B62                                   l4103 1306  
                                 l4007 1F63                                   l4201 1CA0  
                                 l4041 1FDE                                   l4115 1B78  
                                 l4205 1CAB                                   l4221 1BB6  
                                 l4029 1FB6                                   l4215 1B90  
                                 l4047 1FEB                                   l4039 1FD0  
                                 l4217 1B9E                                   l4225 1BC1  
                                 l4233 1004                                   l4065 122D  
                                 l4049 1FF7                                   l4139 1ABB  
                                 l4235 1016                                   l4083 12C0  
                                 l4075 1278                                   l4059 1210  
                                 l4181 1DF8                                   l4149 1D93  
                                 l4093 12DF                                   l3551 1D1E  
                                 l3711 112B                                   l4175 1DDE  
                                 l4167 1DC3                                   l4191 1C72  
                                 l4095 12ED                                   l3607 1A9A  
                                 l4503 01E0                                   l4177 1DEA  
                                 l4169 1DD1                                   l4193 1C80  
                                 l3633 1C25                                   l4521 0277  
                                 l4355 1098                                   l4291 0E56  
                                 l4283 0E4A                                   l3555 1D25  
                                 l3707 1124                                   l3651 1C4B  
                                 l3643 1C2D                                   l3627 1C1A  
                                 l3811 1F22                                   l4531 02AB  
                                 l4365 10F6                                   l4349 1093  
                                 l3565 1D4D                                   l3557 1D2F  
                                 l3741 117A                                   l3717 113A  
                                 l3645 1C39                                   l4605 0511  
                                 l4541 0306                                   l4517 0263  
                                 l4509 022C                                   l4461 00D2  
                                 l4453 0093                                   l4287 0E50  
                                 l4295 0E5E                                   l3567 1D55  
                                 l3559 1D34                                   l3735 1167  
                                 l3655 1C54                                   l3671 1BD4  
                                 l3807 1F1A                                   l4623 0550  
                                 l4535 0300                                   l4607 0516  
                                 l4463 00EE                                   l4455 00CB  
                                 l4439 007E                                   l4393 1B47  
                                 l3753 11AD                                   l3737 1171  
                                 l3729 1154                                   l4617 0542  
                                 l4561 0358                                   l4387 1B37  
                                 l4379 1B28                                   l3747 118D  
                                 l3739 1176                                   l3659 1C5C  
                                 l3683 1BE1                                   l3675 1BDB  
                                 l4635 058D                                   l4563 03BC  
                                 l4547 033D                                   l3757 11BF  
                                 l3749 1197                                   l3685 1BED  
                                 l3693 1C02                                   l4653 05E3  
                                 l4629 0556                                   l4469 0102  
                                 l3767 11DA                                   l3783 1EC3  
                                 l4639 05AB                                   l4583 0412  
                                 l4575 03EC                                   l4495 0193  
                                 l4479 0137                                   l4655 0056  
                                 l3697 1C0A                                   l3689 1BF9  
                                 l3777 1EAD                                   l3945 158F  
                                 l3937 1517                                   l3961 1665  
                                 l4569 03CF                                   l4657 062C  
                                 l4825 0F47                                   l4809 0ECB  
                                 l3795 1EFE                                   l3971 16E1  
                                 l4667 1A4F                                   l4837 0F83  
                                 l3799 1F06                                   l3967 16C4  
                                 l4599 04FE                                   l4855 0FF1  
                                 l3985 17E3                                   l3979 1784  
                                 ?_isr 0070                                   l3997 1A41  
                                 STR_1 2800                                   STR_2 0A31  
                                 STR_3 2805                                   STR_4 2076  
                                 u5405 1E7D                                   u5335 1D6A  
                                 u5255 1D2A                                   u5505 1C3A  
                                 u5425 1AA1                                   u5355 1E0B  
                                 u5275 1D43                                   u5515 1C44  
                                 u5435 1AA6                                   u5365 1E1D  
                                 u5525 1C4C                                   u5605 1BF3  
                                 u5375 1E2C                                   u5295 1D50  
                                 u5615 1BFA                                   u7215 014C  
                                 u8007 144B                                   u5385 1E3C  
                                 u8017 1CBA                                   u6425 1F9D  
                                 u5395 1E6D                                   u8107 1B06  
                                 u8027 1CC6                                   u6515 1FEC  
                                 u6435 1FAD                                   u8117 1B12  
                                 u8037 1CD4                                   u6605 12E0  
                                 u6445 1FB7                                   u5485 1C30  
                                 u7325 0331                                   u8127 1A2F  
                                 u8047 1CE0                                   u5735 1155  
                                 u7255 0203                                   u8137 1E05  
                                 u8057 1CEC                                   u5825 118E  
                                 u5585 1BE4                                   u5905 1EDF  
                                 u7265 0238                                   u8147 1E4B  
                                 u8067 1CF8                                   u6715 1D9A  
                                 u6635 12FB                                   u6555 1279  
                                 u8157 1E52                                   u8077 1D04  
                                 u5765 1168                                   u6565 12A3  
                                 u6485 1FD1                                   u5925 1F07  
                                 u7365 03DA                                   u8167 1E8C  
                                 u8087 1D10                                   u6815 1C75  
                                 u5935 1F0D                                   u7455 0581  
                                 u7375 03E8                                   u7295 0261  
                                 u8177 1E92                                   u8097 1AFA  
                                 u6745 1DC4                                   u6905 1BAC  
                                 u8187 1A72                                   u5795 117B  
                                 u6835 1C81                                   u6915 1BB7  
                                 u7475 05A1                                   u6845 1C95  
                                 u5965 1F23                                   u7485 05BF  
                                 u7805 0FD7                                   u6775 1DDF  
                                 u6855 1CA1                                   u6935 100A  
                                 u5975 1F29                                   u5895 1ECF  
                                 u7907 1381                                   u6885 1B93  
                                 u7917 1394                                   u7837 0EB2  
                                 u7927 13A7                                   u7847 0F4D  
                                 u7937 13C0                                   u7857 131C  
                                 u7785 0F6D                                   u7947 13D3  
                                 u7867 132F                                   u7957 13E6  
                                 u7877 1342                                   u7967 13F9  
                                 u7887 1355                                   u7977 1412  
                                 u7897 136E                                   u7987 1425  
                                 u7997 1438                                   _WPUD 020F  
                         __CFG_WRT$OFF 0000                                   _naif 00B1  
                                 _main 0E78                           ___ftpack@arg 0071  
                         ___ftpack@exp 0074                                   fsr0h 0005  
                                 fsr1h 0007                                   indf0 0000  
                                 fsr0l 0004                                   indf1 0001  
                                 fsr1l 0006                                   btemp 007E  
                                 start 0015                          __CFG_IESO$OFF 0000  
                        _LCD_WriteData 19EF                          __CFG_MCLRE$ON 0000  
                        _LCD_WriteByte 1E01                           ___ftmul@cntr 0039  
                         ___ftmul@sign 003A          LCD_FillScreenGraphics@graphic 0075  
                         ___fttol@exp1 0051                           ___fttol@lval 004D  
                                ??_isr 0070                       __end_of_LCD_Init 1D16  
       __size_of_OSCILLATOR_Initialize 0007          __end_of_OSCILLATOR_Initialize 19FD  
              LCD_WriteCommand@command 0074                                  ?_main 0070  
                                _DACLD 058D                    _LCD_DisableGraphics 1A28  
                      __end_of___awdiv 1C61                        __end_of___ftadd 11F2  
                        __CFG_WDTE$OFF 0000                        __end_of___awmod 1C0F  
                      __end_of___ftneg 1A15                        __end_of___lldiv 1CB4  
                      __end_of___ftmul 1F4A                        ___awdiv@divisor 0078  
                      __end_of___llmod 1BCA                        __end_of___ftsub 1AD1  
                      __end_of___fttol 1E01                                  _IOCIE 005B  
                                i1l283 0010                        ___awdiv@counter 0021  
                                _TRISA 008C                                  _TRISB 008D  
                                _TRISC 008E                                  _TRISD 008F  
                         ___lltoft@exp 007A                         __CFG_FCMEN$OFF 0000  
                     ??_keypad_scanner 0071                                  _black 0A42  
                      __end_of_dpowers 2028                                  _hello 0120  
                                _count 0069                                  _scale 15BC  
                      __end_of_isdigit 1A43                          ___ftpack@sign 0075  
                       __CFG_BOREN$OFF 0000               ?_DAC5_Load10bitInputData 0071  
              LCD_FillScreenGraphics@x 0078                LCD_FillScreenGraphics@y 0077  
                 ?_LCD_DisableGraphics 0070                                  status 0003  
                                wtemp0 007E                        __end_of_sprintf 0631  
                       ?_LCD_WriteData 0070                         ?_LCD_WriteByte 0070  
                           _InitKeypad 1A1E                        __initialization 0017  
                         __end_of_main 1000                         __CFG_LPBOR$OFF 0000  
                               ??_main 0067                          ___fttol@sign1 004C  
             ??_LCD_FillScreenGraphics 0020                         __CFG_PLLEN$OFF 0000  
                 __size_of__tdiv_to_l_ 00B6                                 _ADCON0 0490  
                               _ADCON1 0491                                 _ADCON2 0492  
                     ___llmod@dividend 0029                                 ?_scale 003B  
                               _ADRESH 048F                                 _ADRESL 048E  
                     ___awdiv@dividend 007A                           ??_DAC_CONFIG 0071  
                               _ANSELA 018C                                 _ANSELB 018D  
                               _ANSELC 018E                                 _ANSELD 018F  
                     __end_of___ftpack 1D7A                                 _BORCON 009D  
                               _IOCAF3 1C9B                                 _IOCAP3 1C8B  
                     __end_of___lltoft 102B                                 _ODCONB 028D  
                               _INLVLA 038C                       __end_of___lwtoft 1A65  
                ??_LCD_DisableGraphics 0075                                 _OSCCON 009B  
                               _UPDOWN 00A0                                 _Alpha1 1800  
                               _Alpha2 18FA                         __CFG_PWRTE$OFF 0000  
                     __end_of__powers_ 204F                                 ___ftge 1B4C  
                               ___wmul 1A97                              ??___awdiv 0020  
                            ??___ftadd 004F                              ??___awmod 0075  
                            ??___ftneg 0074                              ??___lldiv 0079  
                            ??___ftmul 0031                              ??___llmod 007A  
                            ??___ftsub 007C                              ??___fttol 0048  
                         ?_OP_AMP_init 0070                                 _fround 1457  
                     ___awdiv@quotient 0023                        ___awmod@divisor 0071  
                      ___awmod@counter 0076                     __end_of_DAC_CONFIG 2800  
                ___ftmul@f3_as_product 0036                           __pdataCOMMON 007C  
                            ??_isdigit 0071                        _currentStateCLK 00E5  
             ADC_GetConversion@channel 0074        __end_of_DAC5_Load10bitInputData 1A05  
                            ??_sprintf 0061                __end_of__initialization 004A  
                            ?_LCD_Init 0070                ??_LCD_TextDisplayString 0077  
                           ___ftadd@f1 0049                             ___ftadd@f2 004C  
                      ??_LCD_WriteData 0074                             ___ftge@ff1 0071  
                           ___ftge@ff2 0074                        ??_LCD_WriteByte 0071  
                           ___ftneg@f1 0071                            ?_InitKeypad 0070  
                           ___ftmul@f1 002B                             ___ftmul@f2 002E  
                           ___ftsub@f1 0059                             ___ftsub@f2 0056  
                           ___fttol@f1 0044                         __pcstackCOMMON 0070  
                         __pidataBANK0 27F7                           __pidataBANK1 1AD1  
                         __pidataBANK2 1A7E                          __end_of_black 0E42  
                           ___lltoft@c 0020                          __end_of_scale 1800  
                           ___lwtoft@c 0079                             __div_to_l_ 11F2  
      __size_of_LCD_FillScreenGraphics 00D1                         _OPTION_REGbits 0097  
                      __div_to_l_@exp1 002D                        __div_to_l_@cntr 002C  
                              ??_scale 003E                        __div_to_l_@quot 0028  
                           __pbssBANK1 00DE                             ??_LCD_Init 0075  
DAC5_Load10bitInputData@input16BitData 0071                          __div_to_l_@f1 0071  
                        __div_to_l_@f2 0074              __size_of_LCD_WriteCommand 0007  
                           __pmaintext 0E78                      _LCD_ClearGraphics 1B18  
                              ?___ftge 0071            __size_of_LCD_EnableGraphics 0025  
                              ?___wmul 0025                        __CFG_PPS1WAY$ON 0000  
                           __pintentry 0004                     ?_LCD_ClearGraphics 0070  
                              ?_fround 003B                              ?___ftpack 0071  
                            ?___lltoft 0020                __size_of_ADC_Initialize 0009  
                            ?___lwtoft 0079                    ??_LCD_ClearGraphics 0075  
                              _OPA3CON 0519                                _OPA3ORS 051A  
                              _OSCSTAT 009C                                _OSCTUNE 009A  
                              _SLRCONB 030D                    __size_of_InitKeypad 000A  
                            _DACLDbits 058D                 _LCD_FillScreenGraphics 102B  
            __end_of_LCD_ClearGraphics 1B4C                      __end_of__npowers_ 2076  
                 _ADC_InterruptHandler 00E1                      LCD_WriteData@data 0074  
                      __size_of___ftge 003B                                ___awdiv 1C0F  
                              ___ftadd 10FC                                ___awmod 1BCA  
                              ___ftneg 1A0D                                ___lldiv 1C61  
                      __size_of___wmul 001C                                ___ftmul 1E96  
                              ___llmod 1B87                                ___ftsub 1AB3  
                              ___fttol 1D7A                             _fround$915 0045  
                           _fround$916 0042       __size_of_DAC5_Load10bitInputData 0008  
                              _dac_out 00E7                        __CFG_STVREN$OFF 0000  
                           ??___ftpack 0076                        __size_of_fround 0165  
                           ??___lltoft 0079                                __ptext1 1A43  
                              __ptext2 130F                                __ptext3 004E  
                              __ptext4 15BC                                __ptext5 1A35  
                              __ptext6 1457                                __ptext7 1A97  
                              __ptext8 1E96                                __ptext9 1BCA  
                           ??___lwtoft 0020                   __size_of_OP_AMP_init 0008  
                          ?__div_to_l_ 0071                                _dpowers 2000  
                _OSCILLATOR_Initialize 19F6                                _current 00DE  
                              _isdigit 1A35                           __size_of_isr 0011  
                     ___awmod@dividend 0073                                _sprintf 004E  
                 end_of_initialization 004A                       _previousStateCLK 00E3  
                              init_ram 19E2                                initloop 19E3  
                      ___lldiv@divisor 0071                        ___lldiv@counter 0024  
                       __tdiv_to_l_@f1 0071                         __tdiv_to_l_@f2 0074  
                        ??__tdiv_to_l_ 0077                              _PORTAbits 000C  
                            _PORTDbits 000F                             _print_line 006B  
                     __CFG_FOSC$INTOSC 0000            __end_of_LCD_DisableGraphics 1A35  
                 switch_press_scan@key 0074         __size_of_LCD_TextDisplayString 0034  
           __size_of_LCD_ClearGraphics 0034                __size_of_keypad_scanner 0148  
        __end_of_LCD_TextDisplayString 0E78                      __size_of_LCD_Init 0062  
                  __size_of__div_to_l_ 011D                       _LCD_WriteCommand 19E8  
                       __end_of_Alpha1 18FA                         __end_of_Alpha2 19E0  
                         ??_InitKeypad 0071                            ___ftmul@exp 0035  
                       __end_of___ftge 1B87                         __end_of___wmul 1AB3  
                        __pidataCOMMON 0003                         _ADC_Initialize 1A15  
               ?_OSCILLATOR_Initialize 0070                         __end_of_fround 15BC  
                  start_initialization 0017                    __end_of__tdiv_to_l_ 2000  
                          __end_of_des 0A31                            __end_of_isr 0015  
                   __end_of_InitKeypad 1A28                        ___llmod@divisor 0025  
                      ___llmod@counter 007B                  __end_of_LCD_WriteData 19F6  
                __end_of_LCD_WriteByte 1E96                               ??___ftge 0077  
              _DAC5_Load10bitInputData 19FD                               ??___wmul 007C  
                 LCD_WriteByte@command 0073                 __end_of_ADC_Initialize 1A1E  
                          __pdataBANK0 0069                            __pdataBANK1 00A0  
                          __pdataBANK2 0120                               ??_fround 003E  
                        sprintf@tmpval 00CA                             fround@prec 0048  
                    __size_of___ftpack 0064                      __size_of___lltoft 002B  
                            ___latbits 0003                      __size_of___lwtoft 0014  
                        __pcstackBANK0 0020                          __pcstackBANK1 00C2  
              ?_LCD_FillScreenGraphics 0075                            sprintf@flag 00C6  
                          sprintf@fval 00D5                            sprintf@prec 00D3  
           __end_of_LCD_EnableGraphics 1B18              LCD_TextDisplayString@addr 0078  
            LCD_TextDisplayString@line 007A            LCD_TextDisplayString@string 0075  
                             ?___awdiv 0078                               ?___ftadd 0049  
                             ?___awmod 0071                               ?___ftneg 0071  
                             ?___lldiv 0071                               ?___ftmul 002B  
                             ?___llmod 0025                               ?___ftsub 0056  
                            __npowers_ 204F                               ?___fttol 0044  
                      ?_ADC_Initialize 0070                               _DAC5CON0 0598  
                             _DAC5REFH 059A                               _DAC5REFL 0599  
                          __tdiv_to_l_ 1F4A                           ??__div_to_l_ 0020  
                             ?_isdigit 0070                              _scale$917 0040  
       __end_of_LCD_FillScreenGraphics 10FC                               ?_sprintf 005C  
                       __size_of_scale 0244                               _LCD_Init 1CB4  
                       ___wmul@product 0029                               _LATBbits 010D  
                             _LATDbits 010F                               _OPA3NCHS 0517  
                             _OPA3PCHS 0518                         _keypad_scanner 130F  
            ??_DAC5_Load10bitInputData 0073                     __end_of__div_to_l_ 130F  
                        ??_OP_AMP_init 0071                      _switch_press_scan 1A43  
                           _ADCON0bits 0490                      ___wmul@multiplier 0025  
                   ?_switch_press_scan 0070                 LCD_TextDisplayString@i 0079  
             __end_of_LCD_WriteCommand 19EF                    ??_switch_press_scan 0073  
                           _DAC_CONFIG 27FA                 __end_of_keypad_scanner 1457  
                    _ADC_GetConversion 1A65              __end_of_switch_press_scan 1A51  
              ??_OSCILLATOR_Initialize 0071                     ?_ADC_GetConversion 0071  
                     __size_of___awdiv 0052                       __size_of___ftadd 00F6  
                     __size_of___awmod 0045                       __size_of___ftneg 0008  
                     __size_of___lldiv 0053                       __size_of___ftmul 00B4  
                     __size_of___llmod 0043                       __size_of___ftsub 001E  
                     __size_of___fttol 0087                               ___ftpack 1D16  
                             ___lltoft 1000                            _isdigit$693 0071  
                             ___lwtoft 1A51                    ??_ADC_GetConversion 0073  
                           sprintf@exp 00C8                             sprintf@val 00CE  
                  __end_of_OP_AMP_init 1A0D                       __size_of_isdigit 000E  
                             _main$913 00D9                               _main$914 00DC  
                             __ptext10 1C0F                               __ptext11 1F4A  
                             __ptext20 1B4C                               __ptext12 11F2  
                             __ptext21 1A51                               __ptext13 1000  
                             __ptext30 1B18                               __ptext22 1D16  
                             __ptext14 1B87                               __ptext31 19EF  
                             __ptext23 19F6                               __ptext15 1C61  
                             __ptext32 19E8                               __ptext24 1A05  
                             __ptext16 1D7A                               __ptext33 1E01  
                             __ptext25 0E44                               __ptext17 1AB3  
                             __ptext34 1A1E                               __ptext26 1CB4  
                             __ptext18 10FC                               __ptext35 27FA  
                             __ptext27 102B                               __ptext19 1A0D  
                             __ptext36 19FD                               __ptext28 1AF3  
                             __ptext37 1A15                               __ptext29 1A28  
                             __ptext38 1A65                               __powers_ 2028  
                     __size_of_sprintf 05E3                        ?_keypad_scanner 0070  
         __size_of_LCD_DisableGraphics 000D                          __size_of_main 0188  
            __end_of_ADC_GetConversion 1A7E                  _LCD_TextDisplayString 0E44  
                             int$flags 007E                         __pstringtext10 2805  
                       __pstringtext11 0000                               isdigit@c 0072  
                             scale@scl 0043                            ?_DAC_CONFIG 0070  
                             intlevel1 0000                              sprintf@ap 00C5  
                     __tdiv_to_l_@exp1 0025                       __tdiv_to_l_@cntr 0024  
                            sprintf@sp 00D2                       __tdiv_to_l_@quot 0020  
                         _DAC1CON0bits 058E                       ___lldiv@dividend 0075  
                    __CFG_CLKOUTEN$OFF 0000                       ??_ADC_Initialize 0071  
           __size_of_switch_press_scan 000E                            _OP_AMP_init 1A05  
                         ?__tdiv_to_l_ 0071                          __pstringtext1 0A42  
                        __pstringtext2 1800                          __pstringtext3 18FA  
                        __pstringtext4 2000                          __pstringtext5 2028  
                        __pstringtext6 204F                          __pstringtext7 0631  
                        __pstringtext8 2076                          __pstringtext9 2800  
                   _LCD_EnableGraphics 1AF3                               sprintf@c 00D8  
                             sprintf@f 005C                       ___lldiv@quotient 0020  
               __size_of_LCD_WriteData 0007                 __size_of_LCD_WriteByte 0095  
                  ?_LCD_EnableGraphics 0070                     LCD_ClearGraphics@x 0076  
                   LCD_ClearGraphics@y 0077             __size_of_ADC_GetConversion 0019  
               ?_LCD_TextDisplayString 0075  
